var $jscomp = $jscomp || {};
$jscomp.scope = {};
$jscomp.ASSUME_ES5 = !1;
$jscomp.ASSUME_NO_NATIVE_MAP = !1;
$jscomp.ASSUME_NO_NATIVE_SET = !1;
$jscomp.defineProperty = $jscomp.ASSUME_ES5 || "function" == typeof Object.defineProperties ? Object.defineProperty : function(target, property, descriptor) {
  target != Array.prototype && target != Object.prototype && (target[property] = descriptor.value);
};
$jscomp.getGlobal = function(maybeGlobal) {
  return "undefined" != typeof window && window === maybeGlobal ? maybeGlobal : "undefined" != typeof global && null != global ? global : maybeGlobal;
};
$jscomp.global = $jscomp.getGlobal(this);
$jscomp.SYMBOL_PREFIX = "jscomp_symbol_";
$jscomp.initSymbol = function() {
  $jscomp.initSymbol = function() {
  };
  $jscomp.global.Symbol || ($jscomp.global.Symbol = $jscomp.Symbol);
};
$jscomp.Symbol = function() {
  function Symbol(opt_description) {
    return $jscomp.SYMBOL_PREFIX + (opt_description || "") + counter++;
  }
  var counter = 0;
  return Symbol;
}();
$jscomp.initSymbolIterator = function() {
  $jscomp.initSymbol();
  var symbolIterator = $jscomp.global.Symbol.iterator;
  symbolIterator || (symbolIterator = $jscomp.global.Symbol.iterator = $jscomp.global.Symbol("iterator"));
  "function" != typeof Array.prototype[symbolIterator] && $jscomp.defineProperty(Array.prototype, symbolIterator, {configurable:!0, writable:!0, value:function() {
    return $jscomp.arrayIterator(this);
  }});
  $jscomp.initSymbolIterator = function() {
  };
};
$jscomp.arrayIterator = function(array) {
  var index = 0;
  return $jscomp.iteratorPrototype(function() {
    return index < array.length ? {done:!1, value:array[index++]} : {done:!0};
  });
};
$jscomp.iteratorPrototype = function(next) {
  $jscomp.initSymbolIterator();
  var iterator = {next:next};
  iterator[$jscomp.global.Symbol.iterator] = function() {
    return this;
  };
  return iterator;
};
$jscomp.makeIterator = function(iterable) {
  $jscomp.initSymbolIterator();
  var iteratorFunction = iterable[Symbol.iterator];
  return iteratorFunction ? iteratorFunction.call(iterable) : $jscomp.arrayIterator(iterable);
};
$jscomp.checkStringArgs = function(thisArg, arg, func) {
  if (null == thisArg) {
    throw new TypeError("The 'this' value for String.prototype." + func + " must not be null or undefined");
  }
  if (arg instanceof RegExp) {
    throw new TypeError("First argument to String.prototype." + func + " must not be a regular expression");
  }
  return thisArg + "";
};
$jscomp.polyfill = function(target, polyfill) {
  if (polyfill) {
    var obj = $jscomp.global;
    var split = target.split(".");
    for (var i = 0; i < split.length - 1; i++) {
      var key = split[i];
      key in obj || (obj[key] = {});
      obj = obj[key];
    }
    var property = split[split.length - 1];
    var orig = obj[property];
    var impl = polyfill(orig);
    impl != orig && null != impl && $jscomp.defineProperty(obj, property, {configurable:!0, writable:!0, value:impl});
  }
};
$jscomp.findInternal = function(array, callback, thisArg) {
  array instanceof String && (array = String(array));
  var len = array.length;
  for (var i = 0; i < len; i++) {
    var value = array[i];
    if (callback.call(thisArg, value, i, array)) {
      return {i:i, v:value};
    }
  }
  return {i:-1, v:void 0};
};
$jscomp.owns = function(obj, prop) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
};
$jscomp.polyfill("WeakMap", function(NativeWeakMap) {
  function isConformant() {
    if (!NativeWeakMap || !Object.seal) {
      return !1;
    }
    try {
      var x = Object.seal({});
      var y = Object.seal({});
      var map = new NativeWeakMap([[x, 2], [y, 3]]);
      if (2 != map.get(x) || 3 != map.get(y)) {
        return !1;
      }
      map["delete"](x);
      map.set(y, 4);
      return !map.has(x) && 4 == map.get(y);
    } catch (err) {
      return !1;
    }
  }
  function insert(target) {
    if (!$jscomp.owns(target, prop)) {
      var obj = {};
      $jscomp.defineProperty(target, prop, {value:obj});
    }
  }
  function patch(name) {
    var prev = Object[name];
    prev && (Object[name] = function(target) {
      insert(target);
      return prev(target);
    });
  }
  if (isConformant()) {
    return NativeWeakMap;
  }
  var prop = "$jscomp_hidden_" + Math.random().toString().substring(2);
  patch("freeze");
  patch("preventExtensions");
  patch("seal");
  var index = 0;
  var PolyfillWeakMap = function(opt_iterable) {
    this.id_ = (index += Math.random() + 1).toString();
    if (opt_iterable) {
      $jscomp.initSymbol();
      $jscomp.initSymbolIterator();
      var iter = $jscomp.makeIterator(opt_iterable);
      for (var entry; !(entry = iter.next()).done;) {
        var item = entry.value;
        this.set(item[0], item[1]);
      }
    }
  };
  PolyfillWeakMap.prototype.set = function(key, value) {
    insert(key);
    if (!$jscomp.owns(key, prop)) {
      throw Error("WeakMap key fail: " + key);
    }
    key[prop][this.id_] = value;
    return this;
  };
  PolyfillWeakMap.prototype.get = function(key) {
    return $jscomp.owns(key, prop) ? key[prop][this.id_] : void 0;
  };
  PolyfillWeakMap.prototype.has = function(key) {
    return $jscomp.owns(key, prop) && $jscomp.owns(key[prop], this.id_);
  };
  PolyfillWeakMap.prototype["delete"] = function(key) {
    return $jscomp.owns(key, prop) && $jscomp.owns(key[prop], this.id_) ? delete key[prop][this.id_] : !1;
  };
  return PolyfillWeakMap;
}, "es6", "es3");
$jscomp.MapEntry = function() {
};
$jscomp.polyfill("Map", function(NativeMap) {
  var isConformant = !$jscomp.ASSUME_NO_NATIVE_MAP && function() {
    if (!NativeMap || !NativeMap.prototype.entries || "function" != typeof Object.seal) {
      return !1;
    }
    try {
      var key = Object.seal({x:4});
      var map = new NativeMap($jscomp.makeIterator([[key, "s"]]));
      if ("s" != map.get(key) || 1 != map.size || map.get({x:4}) || map.set({x:4}, "t") != map || 2 != map.size) {
        return !1;
      }
      var iter = map.entries();
      var item = iter.next();
      if (item.done || item.value[0] != key || "s" != item.value[1]) {
        return !1;
      }
      item = iter.next();
      return item.done || 4 != item.value[0].x || "t" != item.value[1] || !iter.next().done ? !1 : !0;
    } catch (err) {
      return !1;
    }
  }();
  if (isConformant) {
    return NativeMap;
  }
  $jscomp.initSymbol();
  $jscomp.initSymbolIterator();
  var idMap = new WeakMap;
  var PolyfillMap = function(opt_iterable) {
    this.data_ = {};
    this.head_ = createHead();
    this.size = 0;
    if (opt_iterable) {
      var iter = $jscomp.makeIterator(opt_iterable);
      for (var entry; !(entry = iter.next()).done;) {
        var item = entry.value;
        this.set(item[0], item[1]);
      }
    }
  };
  PolyfillMap.prototype.set = function(key, value) {
    var r = maybeGetEntry(this, key);
    r.list || (r.list = this.data_[r.id] = []);
    r.entry ? r.entry.value = value : (r.entry = {next:this.head_, previous:this.head_.previous, head:this.head_, key:key, value:value}, r.list.push(r.entry), this.head_.previous.next = r.entry, this.head_.previous = r.entry, this.size++);
    return this;
  };
  PolyfillMap.prototype["delete"] = function(key) {
    var r = maybeGetEntry(this, key);
    return r.entry && r.list ? (r.list.splice(r.index, 1), r.list.length || delete this.data_[r.id], r.entry.previous.next = r.entry.next, r.entry.next.previous = r.entry.previous, r.entry.head = null, this.size--, !0) : !1;
  };
  PolyfillMap.prototype.clear = function() {
    this.data_ = {};
    this.head_ = this.head_.previous = createHead();
    this.size = 0;
  };
  PolyfillMap.prototype.has = function(key) {
    return !!maybeGetEntry(this, key).entry;
  };
  PolyfillMap.prototype.get = function(key) {
    var entry = maybeGetEntry(this, key).entry;
    return entry && entry.value;
  };
  PolyfillMap.prototype.entries = function() {
    return makeIterator(this, function(entry) {
      return [entry.key, entry.value];
    });
  };
  PolyfillMap.prototype.keys = function() {
    return makeIterator(this, function(entry) {
      return entry.key;
    });
  };
  PolyfillMap.prototype.values = function() {
    return makeIterator(this, function(entry) {
      return entry.value;
    });
  };
  PolyfillMap.prototype.forEach = function(callback, opt_thisArg) {
    var iter = this.entries();
    for (var item; !(item = iter.next()).done;) {
      var entry = item.value;
      callback.call(opt_thisArg, entry[1], entry[0], this);
    }
  };
  PolyfillMap.prototype[Symbol.iterator] = PolyfillMap.prototype.entries;
  var maybeGetEntry = function(map, key) {
    var id = getId(key);
    var list = map.data_[id];
    if (list && $jscomp.owns(map.data_, id)) {
      for (var index = 0; index < list.length; index++) {
        var entry = list[index];
        if (key !== key && entry.key !== entry.key || key === entry.key) {
          return {id:id, list:list, index:index, entry:entry};
        }
      }
    }
    return {id:id, list:list, index:-1, entry:void 0};
  };
  var makeIterator = function(map, func) {
    var entry = map.head_;
    return $jscomp.iteratorPrototype(function() {
      if (entry) {
        for (; entry.head != map.head_;) {
          entry = entry.previous;
        }
        for (; entry.next != entry.head;) {
          return entry = entry.next, {done:!1, value:func(entry)};
        }
        entry = null;
      }
      return {done:!0, value:void 0};
    });
  };
  var createHead = function() {
    var head = {};
    head.previous = head.next = head.head = head;
    return head;
  };
  var mapIndex = 0;
  var getId = function(obj) {
    var type = obj && typeof obj;
    if ("object" == type || "function" == type) {
      if (!idMap.has(obj)) {
        var id = "" + ++mapIndex;
        idMap.set(obj, id);
        return id;
      }
      return idMap.get(obj);
    }
    return "p_" + obj;
  };
  return PolyfillMap;
}, "es6", "es3");
$jscomp.iteratorFromArray = function(array, transform) {
  $jscomp.initSymbolIterator();
  array instanceof String && (array += "");
  var i = 0;
  var iter = {next:function() {
    if (i < array.length) {
      var index = i++;
      return {value:transform(index, array[index]), done:!1};
    }
    iter.next = function() {
      return {done:!0, value:void 0};
    };
    return iter.next();
  }};
  iter[Symbol.iterator] = function() {
    return iter;
  };
  return iter;
};
$jscomp.FORCE_POLYFILL_PROMISE = !1;
$jscomp.polyfill("Promise", function(NativePromise) {
  function AsyncExecutor() {
    this.batch_ = null;
  }
  function isObject(value) {
    switch(typeof value) {
      case "object":
        return null != value;
      case "function":
        return !0;
      default:
        return !1;
    }
  }
  function resolvingPromise(opt_value) {
    return opt_value instanceof PolyfillPromise ? opt_value : new PolyfillPromise(function(resolve) {
      resolve(opt_value);
    });
  }
  if (NativePromise && !$jscomp.FORCE_POLYFILL_PROMISE) {
    return NativePromise;
  }
  AsyncExecutor.prototype.asyncExecute = function(f) {
    null == this.batch_ && (this.batch_ = [], this.asyncExecuteBatch_());
    this.batch_.push(f);
    return this;
  };
  AsyncExecutor.prototype.asyncExecuteBatch_ = function() {
    var self = this;
    this.asyncExecuteFunction(function() {
      self.executeBatch_();
    });
  };
  var nativeSetTimeout = $jscomp.global.setTimeout;
  AsyncExecutor.prototype.asyncExecuteFunction = function(f) {
    nativeSetTimeout(f, 0);
  };
  AsyncExecutor.prototype.executeBatch_ = function() {
    for (; this.batch_ && this.batch_.length;) {
      var executingBatch = this.batch_;
      this.batch_ = [];
      for (var i = 0; i < executingBatch.length; ++i) {
        var f = executingBatch[i];
        delete executingBatch[i];
        try {
          f();
        } catch (error) {
          this.asyncThrow_(error);
        }
      }
    }
    this.batch_ = null;
  };
  AsyncExecutor.prototype.asyncThrow_ = function(exception) {
    this.asyncExecuteFunction(function() {
      throw exception;
    });
  };
  var PromiseState = {PENDING:0, FULFILLED:1, REJECTED:2};
  var PolyfillPromise = function(executor) {
    this.state_ = PromiseState.PENDING;
    this.result_ = void 0;
    this.onSettledCallbacks_ = [];
    var resolveAndReject = this.createResolveAndReject_();
    try {
      executor(resolveAndReject.resolve, resolveAndReject.reject);
    } catch (e) {
      resolveAndReject.reject(e);
    }
  };
  PolyfillPromise.prototype.createResolveAndReject_ = function() {
    function firstCallWins(method) {
      return function(x) {
        alreadyCalled || (alreadyCalled = !0, method.call(thisPromise, x));
      };
    }
    var thisPromise = this;
    var alreadyCalled = !1;
    return {resolve:firstCallWins(this.resolveTo_), reject:firstCallWins(this.reject_)};
  };
  PolyfillPromise.prototype.resolveTo_ = function(value) {
    value === this ? this.reject_(new TypeError("A Promise cannot resolve to itself")) : value instanceof PolyfillPromise ? this.settleSameAsPromise_(value) : isObject(value) ? this.resolveToNonPromiseObj_(value) : this.fulfill_(value);
  };
  PolyfillPromise.prototype.resolveToNonPromiseObj_ = function(obj) {
    var thenMethod = void 0;
    try {
      thenMethod = obj.then;
    } catch (error) {
      this.reject_(error);
      return;
    }
    "function" == typeof thenMethod ? this.settleSameAsThenable_(thenMethod, obj) : this.fulfill_(obj);
  };
  PolyfillPromise.prototype.reject_ = function(reason) {
    this.settle_(PromiseState.REJECTED, reason);
  };
  PolyfillPromise.prototype.fulfill_ = function(value) {
    this.settle_(PromiseState.FULFILLED, value);
  };
  PolyfillPromise.prototype.settle_ = function(settledState, valueOrReason) {
    if (this.state_ != PromiseState.PENDING) {
      throw Error("Cannot settle(" + settledState + ", " + valueOrReason | "): Promise already settled in state" + this.state_);
    }
    this.state_ = settledState;
    this.result_ = valueOrReason;
    this.executeOnSettledCallbacks_();
  };
  PolyfillPromise.prototype.executeOnSettledCallbacks_ = function() {
    if (null != this.onSettledCallbacks_) {
      var callbacks = this.onSettledCallbacks_;
      for (var i = 0; i < callbacks.length; ++i) {
        callbacks[i].call(), callbacks[i] = null;
      }
      this.onSettledCallbacks_ = null;
    }
  };
  var asyncExecutor = new AsyncExecutor;
  PolyfillPromise.prototype.settleSameAsPromise_ = function(promise) {
    var methods = this.createResolveAndReject_();
    promise.callWhenSettled_(methods.resolve, methods.reject);
  };
  PolyfillPromise.prototype.settleSameAsThenable_ = function(thenMethod, thenable) {
    var methods = this.createResolveAndReject_();
    try {
      thenMethod.call(thenable, methods.resolve, methods.reject);
    } catch (error) {
      methods.reject(error);
    }
  };
  PolyfillPromise.prototype.then = function(onFulfilled, onRejected) {
    function createCallback(paramF, defaultF) {
      return "function" == typeof paramF ? function(x) {
        try {
          resolveChild(paramF(x));
        } catch (error) {
          rejectChild(error);
        }
      } : defaultF;
    }
    var resolveChild;
    var rejectChild;
    var childPromise = new PolyfillPromise(function(resolve, reject) {
      resolveChild = resolve;
      rejectChild = reject;
    });
    this.callWhenSettled_(createCallback(onFulfilled, resolveChild), createCallback(onRejected, rejectChild));
    return childPromise;
  };
  PolyfillPromise.prototype["catch"] = function(onRejected) {
    return this.then(void 0, onRejected);
  };
  PolyfillPromise.prototype.callWhenSettled_ = function(onFulfilled, onRejected) {
    function callback() {
      switch(thisPromise.state_) {
        case PromiseState.FULFILLED:
          onFulfilled(thisPromise.result_);
          break;
        case PromiseState.REJECTED:
          onRejected(thisPromise.result_);
          break;
        default:
          throw Error("Unexpected state: " + thisPromise.state_);
      }
    }
    var thisPromise = this;
    null == this.onSettledCallbacks_ ? asyncExecutor.asyncExecute(callback) : this.onSettledCallbacks_.push(function() {
      asyncExecutor.asyncExecute(callback);
    });
  };
  PolyfillPromise.resolve = resolvingPromise;
  PolyfillPromise.reject = function(opt_reason) {
    return new PolyfillPromise(function(resolve, reject) {
      reject(opt_reason);
    });
  };
  PolyfillPromise.race = function(thenablesOrValues) {
    return new PolyfillPromise(function(resolve, reject) {
      var iterator = $jscomp.makeIterator(thenablesOrValues);
      for (var iterRec = iterator.next(); !iterRec.done; iterRec = iterator.next()) {
        resolvingPromise(iterRec.value).callWhenSettled_(resolve, reject);
      }
    });
  };
  PolyfillPromise.all = function(thenablesOrValues) {
    var iterator = $jscomp.makeIterator(thenablesOrValues);
    var iterRec = iterator.next();
    return iterRec.done ? resolvingPromise([]) : new PolyfillPromise(function(resolveAll, rejectAll) {
      function onFulfilled(i) {
        return function(ithResult) {
          resultsArray[i] = ithResult;
          unresolvedCount--;
          0 == unresolvedCount && resolveAll(resultsArray);
        };
      }
      var resultsArray = [];
      var unresolvedCount = 0;
      do {
        resultsArray.push(void 0), unresolvedCount++, resolvingPromise(iterRec.value).callWhenSettled_(onFulfilled(resultsArray.length - 1), rejectAll), iterRec = iterator.next();
      } while (!iterRec.done);
    });
  };
  return PolyfillPromise;
}, "es6", "es3");
$jscomp.polyfill("Object.is", function(orig) {
  if (orig) {
    return orig;
  }
  var polyfill = function(left, right) {
    return left === right ? 0 !== left || 1 / left === 1 / right : left !== left && right !== right;
  };
  return polyfill;
}, "es6", "es3");
$jscomp.polyfill("String.prototype.includes", function(orig) {
  if (orig) {
    return orig;
  }
  var polyfill = function(searchString, opt_position) {
    var string = $jscomp.checkStringArgs(this, searchString, "includes");
    return -1 !== string.indexOf(searchString, opt_position || 0);
  };
  return polyfill;
}, "es6", "es3");
$jscomp.polyfill("Array.prototype.fill", function(orig) {
  if (orig) {
    return orig;
  }
  var polyfill = function(value, opt_start, opt_end) {
    var length = this.length || 0;
    0 > opt_start && (opt_start = Math.max(0, length + opt_start));
    if (null == opt_end || opt_end > length) {
      opt_end = length;
    }
    opt_end = Number(opt_end);
    0 > opt_end && (opt_end = Math.max(0, length + opt_end));
    for (var i = Number(opt_start || 0); i < opt_end; i++) {
      this[i] = value;
    }
    return this;
  };
  return polyfill;
}, "es6", "es3");
$jscomp.polyfill("Set", function(NativeSet) {
  var isConformant = !$jscomp.ASSUME_NO_NATIVE_SET && function() {
    if (!NativeSet || !NativeSet.prototype.entries || "function" != typeof Object.seal) {
      return !1;
    }
    try {
      var value = Object.seal({x:4});
      var set = new NativeSet($jscomp.makeIterator([value]));
      if (!set.has(value) || 1 != set.size || set.add(value) != set || 1 != set.size || set.add({x:4}) != set || 2 != set.size) {
        return !1;
      }
      var iter = set.entries();
      var item = iter.next();
      if (item.done || item.value[0] != value || item.value[1] != value) {
        return !1;
      }
      item = iter.next();
      return item.done || item.value[0] == value || 4 != item.value[0].x || item.value[1] != item.value[0] ? !1 : iter.next().done;
    } catch (err) {
      return !1;
    }
  }();
  if (isConformant) {
    return NativeSet;
  }
  $jscomp.initSymbol();
  $jscomp.initSymbolIterator();
  var PolyfillSet = function(opt_iterable) {
    this.map_ = new Map;
    if (opt_iterable) {
      var iter = $jscomp.makeIterator(opt_iterable);
      for (var entry; !(entry = iter.next()).done;) {
        var item = entry.value;
        this.add(item);
      }
    }
    this.size = this.map_.size;
  };
  PolyfillSet.prototype.add = function(value) {
    this.map_.set(value, value);
    this.size = this.map_.size;
    return this;
  };
  PolyfillSet.prototype["delete"] = function(value) {
    var result = this.map_["delete"](value);
    this.size = this.map_.size;
    return result;
  };
  PolyfillSet.prototype.clear = function() {
    this.map_.clear();
    this.size = 0;
  };
  PolyfillSet.prototype.has = function(value) {
    return this.map_.has(value);
  };
  PolyfillSet.prototype.entries = function() {
    return this.map_.entries();
  };
  PolyfillSet.prototype.values = function() {
    return this.map_.values();
  };
  PolyfillSet.prototype.keys = PolyfillSet.prototype.values;
  PolyfillSet.prototype[Symbol.iterator] = PolyfillSet.prototype.values;
  PolyfillSet.prototype.forEach = function(callback, opt_thisArg) {
    var set = this;
    this.map_.forEach(function(value) {
      return callback.call(opt_thisArg, value, value, set);
    });
  };
  return PolyfillSet;
}, "es6", "es3");
var goog = goog || {};
goog.global = this;
goog.isDef = function(val) {
  return void 0 !== val;
};
goog.isString = function(val) {
  return "string" == typeof val;
};
goog.isBoolean = function(val) {
  return "boolean" == typeof val;
};
goog.isNumber = function(val) {
  return "number" == typeof val;
};
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  parts[0] in cur || !cur.execScript || cur.execScript("var " + parts[0]);
  for (var part; parts.length && (part = parts.shift());) {
    !parts.length && goog.isDef(opt_object) ? cur[part] = opt_object : cur = cur[part] && cur[part] !== Object.prototype[part] ? cur[part] : cur[part] = {};
  }
};
goog.define = function(name, defaultValue) {
  var value = defaultValue;
  goog.exportPath_(name, value);
};
goog.DEBUG = !0;
goog.LOCALE = "en";
goog.TRUSTED_SITE = !0;
goog.STRICT_MODE_COMPATIBLE = !1;
goog.DISALLOW_TEST_ONLY_CODE = !goog.DEBUG;
goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING = !1;
goog.provide = function(name) {
  if (goog.isInModuleLoader_()) {
    throw Error("goog.provide can not be used within a goog.module.");
  }
  goog.constructNamespace_(name);
};
goog.constructNamespace_ = function(name, opt_obj) {
  goog.exportPath_(name, opt_obj);
};
goog.VALID_MODULE_RE_ = /^[a-zA-Z_$][a-zA-Z0-9._$]*$/;
goog.module = function(name) {
  if (!goog.isString(name) || !name || -1 == name.search(goog.VALID_MODULE_RE_)) {
    throw Error("Invalid module identifier");
  }
  if (!goog.isInModuleLoader_()) {
    throw Error("Module " + name + " has been loaded incorrectly. Note, modules cannot be loaded as normal scripts. They require some kind of pre-processing step. You're likely trying to load a module via a script tag or as a part of a concatenated bundle without rewriting the module. For more info see: https://github.com/google/closure-library/wiki/goog.module:-an-ES6-module-like-alternative-to-goog.provide.");
  }
  if (goog.moduleLoaderState_.moduleName) {
    throw Error("goog.module may only be called once per module.");
  }
  goog.moduleLoaderState_.moduleName = name;
};
goog.module.get = function() {
  return null;
};
goog.module.getInternal_ = function() {
  return null;
};
goog.moduleLoaderState_ = null;
goog.isInModuleLoader_ = function() {
  return null != goog.moduleLoaderState_;
};
goog.module.declareLegacyNamespace = function() {
  goog.moduleLoaderState_.declareLegacyNamespace = !0;
};
goog.setTestOnly = function(opt_message) {
  if (goog.DISALLOW_TEST_ONLY_CODE) {
    throw opt_message = opt_message || "", Error("Importing test-only code into non-debug environment" + (opt_message ? ": " + opt_message : "."));
  }
};
goog.forwardDeclare = function() {
};
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for (var i = 0; i < parts.length; i++) {
    if (cur = cur[parts[i]], !goog.isDefAndNotNull(cur)) {
      return null;
    }
  }
  return cur;
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for (var x in obj) {
    global[x] = obj[x];
  }
};
goog.addDependency = function(relPath, provides, requires, opt_loadFlags) {
  if (goog.DEPENDENCIES_ENABLED) {
    var provide;
    var require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    opt_loadFlags && "boolean" !== typeof opt_loadFlags || (opt_loadFlags = opt_loadFlags ? {module:"goog"} : {});
    for (var i = 0; provide = provides[i]; i++) {
      deps.nameToPath[provide] = path, deps.loadFlags[path] = opt_loadFlags;
    }
    for (var j = 0; require = requires[j]; j++) {
      path in deps.requires || (deps.requires[path] = {}), deps.requires[path][require] = !0;
    }
  }
};
goog.useStrictRequires = !1;
goog.ENABLE_DEBUG_LOADER = !0;
goog.logToConsole_ = function(msg) {
  goog.global.console && goog.global.console.error(msg);
};
goog.require = function() {
};
goog.basePath = "";
goog.nullFunction = function() {
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.instance_ = void 0;
  ctor.getInstance = function() {
    if (ctor.instance_) {
      return ctor.instance_;
    }
    goog.DEBUG && (goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor);
    return ctor.instance_ = new ctor;
  };
};
goog.instantiatedSingletons_ = [];
goog.LOAD_MODULE_USING_EVAL = !0;
goog.SEAL_MODULE_EXPORTS = goog.DEBUG;
goog.loadedModules_ = {};
goog.DEPENDENCIES_ENABLED = !1;
goog.TRANSPILE = "detect";
goog.TRANSPILER = "transpile.js";
goog.DEPENDENCIES_ENABLED && (goog.dependencies_ = {loadFlags:{}, nameToPath:{}, requires:{}, visited:{}, written:{}, deferred:{}}, goog.inHtmlDocument_ = function() {
  var doc = goog.global.document;
  return null != doc && "write" in doc;
}, goog.findBasePath_ = function() {
  if (goog.isDef(goog.global.CLOSURE_BASE_PATH) && goog.isString(goog.global.CLOSURE_BASE_PATH)) {
    goog.basePath = goog.global.CLOSURE_BASE_PATH;
  } else {
    if (goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      var currentScript = doc.currentScript;
      var scripts = currentScript ? [currentScript] : doc.getElementsByTagName("SCRIPT");
      for (var i = scripts.length - 1; 0 <= i; --i) {
        var script = scripts[i];
        var src = script.src;
        var qmark = src.lastIndexOf("?");
        var l = -1 == qmark ? src.length : qmark;
        if ("base.js" == src.substr(l - 7, 7)) {
          goog.basePath = src.substr(0, l - 7);
          break;
        }
      }
    }
  }
}, goog.importScript_ = function(src, opt_sourceText) {
  var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
  importScript(src, opt_sourceText) && (goog.dependencies_.written[src] = !0);
}, goog.IS_OLD_IE_ = !(goog.global.atob || !goog.global.document || !goog.global.document.all), goog.oldIeWaiting_ = !1, goog.importProcessedScript_ = function(src, isModule, needsTranspile) {
  var bootstrap = 'goog.retrieveAndExec_("' + src + '", ' + isModule + ", " + needsTranspile + ");";
  goog.importScript_("", bootstrap);
}, goog.queuedModules_ = [], goog.wrapModule_ = function(srcUrl, scriptText) {
  return goog.LOAD_MODULE_USING_EVAL && goog.isDef(goog.global.JSON) ? "goog.loadModule(" + goog.global.JSON.stringify(scriptText + "\n//# sourceURL=" + srcUrl + "\n") + ");" : 'goog.loadModule(function(exports) {"use strict";' + scriptText + "\n;return exports});\n//# sourceURL=" + srcUrl + "\n";
}, goog.loadQueuedModules_ = function() {
  var count = goog.queuedModules_.length;
  if (0 < count) {
    var queue = goog.queuedModules_;
    goog.queuedModules_ = [];
    for (var i = 0; i < count; i++) {
      var path = queue[i];
      goog.maybeProcessDeferredPath_(path);
    }
  }
  goog.oldIeWaiting_ = !1;
}, goog.maybeProcessDeferredDep_ = function(name) {
  if (goog.isDeferredModule_(name) && goog.allDepsAreAvailable_(name)) {
    var path = goog.getPathFromDeps_(name);
    goog.maybeProcessDeferredPath_(goog.basePath + path);
  }
}, goog.isDeferredModule_ = function(name) {
  var path = goog.getPathFromDeps_(name);
  var loadFlags = path && goog.dependencies_.loadFlags[path] || {};
  var languageLevel = loadFlags.lang || "es3";
  if (path && ("goog" == loadFlags.module || goog.needsTranspile_(languageLevel))) {
    var abspath = goog.basePath + path;
    return abspath in goog.dependencies_.deferred;
  }
  return !1;
}, goog.allDepsAreAvailable_ = function(name) {
  var path = goog.getPathFromDeps_(name);
  if (path && path in goog.dependencies_.requires) {
    for (var requireName in goog.dependencies_.requires[path]) {
      if (!goog.isProvided_(requireName) && !goog.isDeferredModule_(requireName)) {
        return !1;
      }
    }
  }
  return !0;
}, goog.maybeProcessDeferredPath_ = function(abspath) {
  if (abspath in goog.dependencies_.deferred) {
    var src = goog.dependencies_.deferred[abspath];
    delete goog.dependencies_.deferred[abspath];
    goog.globalEval(src);
  }
}, goog.loadModuleFromUrl = function() {
}, goog.writeScriptSrcNode_ = function(src) {
  goog.global.document.write('<script type="text/javascript" src="' + src + '">\x3c/script>');
}, goog.appendScriptSrcNode_ = function(src) {
  var doc = goog.global.document;
  var scriptEl = doc.createElement("script");
  scriptEl.type = "text/javascript";
  scriptEl.src = src;
  scriptEl.defer = !1;
  scriptEl.async = !1;
  doc.head.appendChild(scriptEl);
}, goog.writeScriptTag_ = function(src, opt_sourceText) {
  if (goog.inHtmlDocument_()) {
    var doc = goog.global.document;
    if (!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING && "complete" == doc.readyState) {
      var isDeps = /\bdeps.js$/.test(src);
      if (isDeps) {
        return !1;
      }
      throw Error('Cannot write "' + src + '" after document load');
    }
    if (void 0 === opt_sourceText) {
      if (goog.IS_OLD_IE_) {
        goog.oldIeWaiting_ = !0;
        var state = " onreadystatechange='goog.onScriptLoad_(this, " + ++goog.lastNonModuleScriptIndex_ + ")' ";
        doc.write('<script type="text/javascript" src="' + src + '"' + state + ">\x3c/script>");
      } else {
        goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING ? goog.appendScriptSrcNode_(src) : goog.writeScriptSrcNode_(src);
      }
    } else {
      doc.write('<script type="text/javascript">' + goog.protectScriptTag_(opt_sourceText) + "\x3c/script>");
    }
    return !0;
  }
  return !1;
}, goog.protectScriptTag_ = function(str) {
  return str.replace(/<\/(SCRIPT)/ig, "\\x3c/$1");
}, goog.needsTranspile_ = function(lang) {
  if ("always" == goog.TRANSPILE) {
    return !0;
  }
  if ("never" == goog.TRANSPILE) {
    return !1;
  }
  goog.requiresTranspilation_ || (goog.requiresTranspilation_ = goog.createRequiresTranspilation_());
  if (lang in goog.requiresTranspilation_) {
    return goog.requiresTranspilation_[lang];
  }
  throw Error("Unknown language mode: " + lang);
}, goog.requiresTranspilation_ = null, goog.lastNonModuleScriptIndex_ = 0, goog.onScriptLoad_ = function(script, scriptIndex) {
  "complete" == script.readyState && goog.lastNonModuleScriptIndex_ == scriptIndex && goog.loadQueuedModules_();
  return !0;
}, goog.writeScripts_ = function(pathToLoad) {
  function visitNode(path) {
    if (!(path in deps.written || path in deps.visited)) {
      deps.visited[path] = !0;
      if (path in deps.requires) {
        for (var requireName in deps.requires[path]) {
          if (!goog.isProvided_(requireName)) {
            if (requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName]);
            } else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      path in seenScript || (seenScript[path] = !0, scripts.push(path));
    }
  }
  var scripts = [];
  var seenScript = {};
  var deps = goog.dependencies_;
  visitNode(pathToLoad);
  for (var i = 0; i < scripts.length; i++) {
    var path$jscomp$0 = scripts[i];
    goog.dependencies_.written[path$jscomp$0] = !0;
  }
  var moduleState = goog.moduleLoaderState_;
  goog.moduleLoaderState_ = null;
  for (i = 0; i < scripts.length; i++) {
    if (path$jscomp$0 = scripts[i], path$jscomp$0) {
      var loadFlags = deps.loadFlags[path$jscomp$0] || {};
      var languageLevel = loadFlags.lang || "es3";
      var needsTranspile = goog.needsTranspile_(languageLevel);
      "goog" == loadFlags.module || needsTranspile ? goog.importProcessedScript_(goog.basePath + path$jscomp$0, "goog" == loadFlags.module, needsTranspile) : goog.importScript_(goog.basePath + path$jscomp$0);
    } else {
      throw goog.moduleLoaderState_ = moduleState, Error("Undefined script input");
    }
  }
  goog.moduleLoaderState_ = moduleState;
}, goog.getPathFromDeps_ = function(rule) {
  return rule in goog.dependencies_.nameToPath ? goog.dependencies_.nameToPath[rule] : null;
}, goog.findBasePath_(), goog.global.CLOSURE_NO_DEPS || goog.importScript_(goog.basePath + "deps.js"));
goog.hasBadLetScoping = null;
goog.useSafari10Workaround = function() {
  if (null == goog.hasBadLetScoping) {
    try {
      var hasBadLetScoping = !eval('"use strict";let x = 1; function f() { return typeof x; };f() == "number";');
    } catch (e) {
      hasBadLetScoping = !1;
    }
    goog.hasBadLetScoping = hasBadLetScoping;
  }
  return goog.hasBadLetScoping;
};
goog.workaroundSafari10EvalBug = function(moduleDef) {
  return "(function(){" + moduleDef + "\n;})();\n";
};
goog.loadModule = function(moduleDef) {
  var previousState = goog.moduleLoaderState_;
  try {
    goog.moduleLoaderState_ = {moduleName:void 0, declareLegacyNamespace:!1};
    if (goog.isFunction(moduleDef)) {
      var exports = moduleDef.call(void 0, {});
    } else {
      if (goog.isString(moduleDef)) {
        goog.useSafari10Workaround() && (moduleDef = goog.workaroundSafari10EvalBug(moduleDef)), exports = goog.loadModuleFromSource_.call(void 0, moduleDef);
      } else {
        throw Error("Invalid module definition");
      }
    }
    var moduleName = goog.moduleLoaderState_.moduleName;
    if (!goog.isString(moduleName) || !moduleName) {
      throw Error('Invalid module name "' + moduleName + '"');
    }
    goog.moduleLoaderState_.declareLegacyNamespace ? goog.constructNamespace_(moduleName, exports) : goog.SEAL_MODULE_EXPORTS && Object.seal && "object" == typeof exports && null != exports && Object.seal(exports);
    goog.loadedModules_[moduleName] = exports;
  } finally {
    goog.moduleLoaderState_ = previousState;
  }
};
goog.loadModuleFromSource_ = function(JSCompiler_OptimizeArgumentsArray_p0) {
  var exports = {};
  eval(JSCompiler_OptimizeArgumentsArray_p0);
  return exports;
};
goog.normalizePath_ = function(path) {
  var components = path.split("/");
  for (var i = 0; i < components.length;) {
    "." == components[i] ? components.splice(i, 1) : i && ".." == components[i] && components[i - 1] && ".." != components[i - 1] ? components.splice(--i, 2) : i++;
  }
  return components.join("/");
};
goog.loadFileSync_ = function(src) {
  if (goog.global.CLOSURE_LOAD_FILE_SYNC) {
    return goog.global.CLOSURE_LOAD_FILE_SYNC(src);
  }
  try {
    var xhr = new goog.global.XMLHttpRequest;
    xhr.open("get", src, !1);
    xhr.send();
    return 0 == xhr.status || 200 == xhr.status ? xhr.responseText : null;
  } catch (err) {
    return null;
  }
};
goog.retrieveAndExec_ = function() {
};
goog.transpile_ = function(code$jscomp$0, path$jscomp$0) {
  var jscomp = goog.global.$jscomp;
  jscomp || (goog.global.$jscomp = jscomp = {});
  var transpile = jscomp.transpile;
  if (!transpile) {
    var transpilerPath = goog.basePath + goog.TRANSPILER;
    var transpilerCode = goog.loadFileSync_(transpilerPath);
    if (transpilerCode) {
      eval(transpilerCode + "\n//# sourceURL=" + transpilerPath);
      if (goog.global.$gwtExport && goog.global.$gwtExport.$jscomp && !goog.global.$gwtExport.$jscomp.transpile) {
        throw Error('The transpiler did not properly export the "transpile" method. $gwtExport: ' + JSON.stringify(goog.global.$gwtExport));
      }
      goog.global.$jscomp.transpile = goog.global.$gwtExport.$jscomp.transpile;
      jscomp = goog.global.$jscomp;
      transpile = jscomp.transpile;
    }
  }
  if (!transpile) {
    var suffix = " requires transpilation but no transpiler was found.";
    suffix += ' Please add "//javascript/closure:transpiler" as a data dependency to ensure it is included.';
    transpile = jscomp.transpile = function(code, path) {
      goog.logToConsole_(path + suffix);
      return code;
    };
  }
  return transpile(code$jscomp$0, path$jscomp$0);
};
goog.typeOf = function(value) {
  var s = typeof value;
  if ("object" == s) {
    if (value) {
      if (value instanceof Array) {
        return "array";
      }
      if (value instanceof Object) {
        return s;
      }
      var className = Object.prototype.toString.call(value);
      if ("[object Window]" == className) {
        return "object";
      }
      if ("[object Array]" == className || "number" == typeof value.length && "undefined" != typeof value.splice && "undefined" != typeof value.propertyIsEnumerable && !value.propertyIsEnumerable("splice")) {
        return "array";
      }
      if ("[object Function]" == className || "undefined" != typeof value.call && "undefined" != typeof value.propertyIsEnumerable && !value.propertyIsEnumerable("call")) {
        return "function";
      }
    } else {
      return "null";
    }
  } else {
    if ("function" == s && "undefined" == typeof value.call) {
      return "object";
    }
  }
  return s;
};
goog.isNull = function(val) {
  return null === val;
};
goog.isDefAndNotNull = function(val) {
  return null != val;
};
goog.isArray = function(val) {
  return "array" == goog.typeOf(val);
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return "array" == type || "object" == type && "number" == typeof val.length;
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && "function" == typeof val.getFullYear;
};
goog.isFunction = function(val) {
  return "function" == goog.typeOf(val);
};
goog.isObject = function(val) {
  var type = typeof val;
  return "object" == type && null != val || "function" == type;
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);
};
goog.hasUid = function(obj) {
  return !!obj[goog.UID_PROPERTY_];
};
goog.removeUid = function(obj) {
  null !== obj && "removeAttribute" in obj && obj.removeAttribute(goog.UID_PROPERTY_);
  try {
    delete obj[goog.UID_PROPERTY_];
  } catch (ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (1e9 * Math.random() >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if ("object" == type || "array" == type) {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = "array" == type ? [] : {};
    for (var key in obj) {
      clone[key] = goog.cloneObject(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return fn.call.apply(fn.bind, arguments);
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if (!fn) {
    throw Error();
  }
  if (2 < arguments.length) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs);
    };
  }
  return function() {
    return fn.apply(selfObj, arguments);
  };
};
goog.bind = function(fn, selfObj, var_args) {
  Function.prototype.bind && -1 != Function.prototype.bind.toString().indexOf("native code") ? goog.bind = goog.bindNative_ : goog.bind = goog.bindJs_;
  return goog.bind.apply(null, arguments);
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = args.slice();
    newArgs.push.apply(newArgs, arguments);
    return fn.apply(this, newArgs);
  };
};
goog.mixin = function(target, source) {
  for (var x in source) {
    target[x] = source[x];
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return +new Date;
};
goog.globalEval = function(script) {
  if (goog.global.execScript) {
    goog.global.execScript(script, "JavaScript");
  } else {
    if (goog.global.eval) {
      if (null == goog.evalWorksForGlobals_) {
        if (goog.global.eval("var _evalTest_ = 1;"), "undefined" != typeof goog.global._evalTest_) {
          try {
            delete goog.global._evalTest_;
          } catch (ignore) {
          }
          goog.evalWorksForGlobals_ = !0;
        } else {
          goog.evalWorksForGlobals_ = !1;
        }
      }
      if (goog.evalWorksForGlobals_) {
        goog.global.eval(script);
      } else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("SCRIPT");
        scriptElt.type = "text/javascript";
        scriptElt.defer = !1;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt);
      }
    } else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.getCssName = function(className, opt_modifier) {
  if ("." == String(className).charAt(0)) {
    throw Error('className passed in goog.getCssName must not start with ".". You passed: ' + className);
  }
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName;
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for (var i = 0; i < parts.length; i++) {
      mapped.push(getMapping(parts[i]));
    }
    return mapped.join("-");
  };
  var rename = goog.cssNameMapping_ ? "BY_WHOLE" == goog.cssNameMappingStyle_ ? getMapping : renameByParts : function(a) {
    return a;
  };
  var result = opt_modifier ? className + "-" + rename(opt_modifier) : rename(className);
  return goog.global.CLOSURE_CSS_NAME_MAP_FN ? goog.global.CLOSURE_CSS_NAME_MAP_FN(result) : result;
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style;
};
goog.getMsg = function(str, opt_values) {
  opt_values && (str = str.replace(/\{\$([^}]+)}/g, function(match, key) {
    return null != opt_values && key in opt_values ? opt_values[key] : match;
  }));
  return str;
};
goog.getMsgWithFallback = function(a) {
  return a;
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo);
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol;
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor;
  childCtor.base = function(me, methodName, var_args) {
    var args = Array(arguments.length - 2);
    for (var i = 2; i < arguments.length; i++) {
      args[i - 2] = arguments[i];
    }
    return parentCtor.prototype[methodName].apply(me, args);
  };
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if (goog.STRICT_MODE_COMPATIBLE || goog.DEBUG && !caller) {
    throw Error("arguments.caller not defined.  goog.base() cannot be used with strict mode code. See http://www.ecma-international.org/ecma-262/5.1/#sec-C");
  }
  if (caller.superClass_) {
    var ctorArgs = Array(arguments.length - 1);
    for (var i = 1; i < arguments.length; i++) {
      ctorArgs[i - 1] = arguments[i];
    }
    return caller.superClass_.constructor.apply(me, ctorArgs);
  }
  var args = Array(arguments.length - 2);
  for (i = 2; i < arguments.length; i++) {
    args[i - 2] = arguments[i];
  }
  var foundCaller = !1;
  for (var ctor = me.constructor; ctor; ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if (ctor.prototype[opt_methodName] === caller) {
      foundCaller = !0;
    } else {
      if (foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args);
      }
    }
  }
  if (me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args);
  }
  throw Error("goog.base called from a method of one name to a method of a different name");
};
goog.scope = function(fn) {
  if (goog.isInModuleLoader_()) {
    throw Error("goog.scope is not supported within a goog.module.");
  }
  fn.call(goog.global);
};
goog.defineClass = function(superClass, def) {
  var constructor = def.constructor;
  var statics = def.statics;
  constructor && constructor != Object.prototype.constructor || (constructor = function() {
    throw Error("cannot instantiate an interface (no constructor defined).");
  });
  var cls = goog.defineClass.createSealingConstructor_(constructor, superClass);
  superClass && goog.inherits(cls, superClass);
  delete def.constructor;
  delete def.statics;
  goog.defineClass.applyProperties_(cls.prototype, def);
  null != statics && (statics instanceof Function ? statics(cls) : goog.defineClass.applyProperties_(cls, statics));
  return cls;
};
goog.defineClass.SEAL_CLASS_INSTANCES = goog.DEBUG;
goog.defineClass.createSealingConstructor_ = function(ctr, superClass) {
  if (!goog.defineClass.SEAL_CLASS_INSTANCES) {
    return ctr;
  }
  var superclassSealable = !goog.defineClass.isUnsealable_(superClass);
  var wrappedCtr = function() {
    var instance = ctr.apply(this, arguments) || this;
    instance[goog.UID_PROPERTY_] = instance[goog.UID_PROPERTY_];
    this.constructor === wrappedCtr && superclassSealable && Object.seal instanceof Function && Object.seal(instance);
    return instance;
  };
  return wrappedCtr;
};
goog.defineClass.isUnsealable_ = function(ctr) {
  return ctr && ctr.prototype && ctr.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_];
};
goog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = "constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" ");
goog.defineClass.applyProperties_ = function(target, source) {
  for (var key in source) {
    Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
  }
  for (var i = 0; i < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length; i++) {
    key = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[i], Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
  }
};
goog.tagUnsealableClass = function() {
};
goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_ = "goog_defineClass_legacy_unsealable";
goog.createRequiresTranspilation_ = function() {
  function addNewerLanguageTranspilationCheck(modeName, isSupported) {
    transpilationRequiredForAllLaterModes ? requiresTranspilation[modeName] = !0 : isSupported() ? requiresTranspilation[modeName] = !1 : (requiresTranspilation[modeName] = !0, transpilationRequiredForAllLaterModes = !0);
  }
  function evalCheck(code) {
    try {
      return !!eval(code);
    } catch (ignored) {
      return !1;
    }
  }
  var requiresTranspilation = {es3:!1};
  var transpilationRequiredForAllLaterModes = !1;
  var userAgent = goog.global.navigator && goog.global.navigator.userAgent ? goog.global.navigator.userAgent : "";
  addNewerLanguageTranspilationCheck("es5", function() {
    return evalCheck("[1,].length==1");
  });
  addNewerLanguageTranspilationCheck("es6", function() {
    var re = /Edge\/(\d+)(\.\d)*/i;
    var edgeUserAgent = userAgent.match(re);
    return edgeUserAgent && 15 > Number(edgeUserAgent[1]) ? !1 : evalCheck('(()=>{"use strict";class X{constructor(){if(new.target!=String)throw 1;this.x=42}}let q=Reflect.construct(X,[],String);if(q.x!=42||!(q instanceof String))throw 1;for(const a of[2,3]){if(a==2)continue;function f(z={a}){let a=0;return z.a}{function f(){return 0;}}return f()==3}})()');
  });
  addNewerLanguageTranspilationCheck("es6-impl", function() {
    return !0;
  });
  addNewerLanguageTranspilationCheck("es7", function() {
    return evalCheck("2 ** 2 == 4");
  });
  addNewerLanguageTranspilationCheck("es8", function() {
    return evalCheck("async () => 1, true");
  });
  return requiresTranspilation;
};
var jspb = {arith:{}};
jspb.arith.UInt64 = function(lo, hi) {
  this.lo = lo;
  this.hi = hi;
};
jspb.arith.UInt64.prototype.cmp = function(other) {
  return this.hi < other.hi || this.hi == other.hi && this.lo < other.lo ? -1 : this.hi == other.hi && this.lo == other.lo ? 0 : 1;
};
jspb.arith.UInt64.prototype.rightShift = function() {
  var hi = this.hi >>> 1;
  var lo = this.lo >>> 1 | (this.hi & 1) << 31;
  return new jspb.arith.UInt64(lo >>> 0, hi >>> 0);
};
jspb.arith.UInt64.prototype.leftShift = function() {
  var lo = this.lo << 1;
  var hi = this.hi << 1 | this.lo >>> 31;
  return new jspb.arith.UInt64(lo >>> 0, hi >>> 0);
};
jspb.arith.UInt64.prototype.msb = function() {
  return !!(this.hi & 2147483648);
};
jspb.arith.UInt64.prototype.zero = function() {
  return 0 == this.lo && 0 == this.hi;
};
jspb.arith.UInt64.prototype.add = function(other) {
  var lo = (this.lo + other.lo & 4294967295) >>> 0;
  var hi = ((this.hi + other.hi & 4294967295) >>> 0) + (4294967296 <= this.lo + other.lo ? 1 : 0);
  return new jspb.arith.UInt64(lo >>> 0, hi >>> 0);
};
jspb.arith.UInt64.prototype.sub = function(other) {
  var lo = (this.lo - other.lo & 4294967295) >>> 0;
  var hi = ((this.hi - other.hi & 4294967295) >>> 0) - (0 > this.lo - other.lo ? 1 : 0);
  return new jspb.arith.UInt64(lo >>> 0, hi >>> 0);
};
jspb.arith.UInt64.mul32x32 = function(a, b) {
  var aLow = a & 65535;
  var aHigh = a >>> 16;
  var bLow = b & 65535;
  var bHigh = b >>> 16;
  var productLow = aLow * bLow + 65536 * (aLow * bHigh & 65535) + 65536 * (aHigh * bLow & 65535);
  for (var productHigh = aHigh * bHigh + (aLow * bHigh >>> 16) + (aHigh * bLow >>> 16); 4294967296 <= productLow;) {
    productLow -= 4294967296, productHigh += 1;
  }
  return new jspb.arith.UInt64(productLow >>> 0, productHigh >>> 0);
};
jspb.arith.UInt64.prototype.mul = function(a) {
  var lo = jspb.arith.UInt64.mul32x32(this.lo, a);
  var hi = jspb.arith.UInt64.mul32x32(this.hi, a);
  hi.hi = hi.lo;
  hi.lo = 0;
  return lo.add(hi);
};
jspb.arith.UInt64.prototype.div = function(_divisor) {
  if (0 == _divisor) {
    return [];
  }
  var quotient = new jspb.arith.UInt64(0, 0);
  var remainder = new jspb.arith.UInt64(this.lo, this.hi);
  var divisor = new jspb.arith.UInt64(_divisor, 0);
  for (var unit = new jspb.arith.UInt64(1, 0); !divisor.msb();) {
    divisor = divisor.leftShift(), unit = unit.leftShift();
  }
  for (; !unit.zero();) {
    0 >= divisor.cmp(remainder) && (quotient = quotient.add(unit), remainder = remainder.sub(divisor)), divisor = divisor.rightShift(), unit = unit.rightShift();
  }
  return [quotient, remainder];
};
jspb.arith.UInt64.prototype.toString = function() {
  var result = "";
  for (var num = this; !num.zero();) {
    var divResult = num.div(10);
    var quotient = divResult[0];
    var remainder = divResult[1];
    result = remainder.lo + result;
    num = quotient;
  }
  "" == result && (result = "0");
  return result;
};
jspb.arith.UInt64.fromString = function(s) {
  var result = new jspb.arith.UInt64(0, 0);
  var digit64 = new jspb.arith.UInt64(0, 0);
  for (var i = 0; i < s.length; i++) {
    if ("0" > s[i] || "9" < s[i]) {
      return null;
    }
    var digit = parseInt(s[i], 10);
    digit64.lo = digit;
    result = result.mul(10).add(digit64);
  }
  return result;
};
jspb.arith.UInt64.prototype.clone = function() {
  return new jspb.arith.UInt64(this.lo, this.hi);
};
jspb.arith.Int64 = function(lo, hi) {
  this.lo = lo;
  this.hi = hi;
};
jspb.arith.Int64.prototype.add = function(other) {
  var lo = (this.lo + other.lo & 4294967295) >>> 0;
  var hi = ((this.hi + other.hi & 4294967295) >>> 0) + (4294967296 <= this.lo + other.lo ? 1 : 0);
  return new jspb.arith.Int64(lo >>> 0, hi >>> 0);
};
jspb.arith.Int64.prototype.sub = function(other) {
  var lo = (this.lo - other.lo & 4294967295) >>> 0;
  var hi = ((this.hi - other.hi & 4294967295) >>> 0) - (0 > this.lo - other.lo ? 1 : 0);
  return new jspb.arith.Int64(lo >>> 0, hi >>> 0);
};
jspb.arith.Int64.prototype.clone = function() {
  return new jspb.arith.Int64(this.lo, this.hi);
};
jspb.arith.Int64.prototype.toString = function() {
  var sign = 0 != (this.hi & 2147483648);
  var num = new jspb.arith.UInt64(this.lo, this.hi);
  sign && (num = (new jspb.arith.UInt64(0, 0)).sub(num));
  return (sign ? "-" : "") + num.toString();
};
jspb.arith.Int64.fromString = function(s) {
  var hasNegative = 0 < s.length && "-" == s[0];
  hasNegative && (s = s.substring(1));
  var num = jspb.arith.UInt64.fromString(s);
  if (null === num) {
    return null;
  }
  hasNegative && (num = (new jspb.arith.UInt64(0, 0)).sub(num));
  return new jspb.arith.Int64(num.lo, num.hi);
};
jspb.BinaryConstants = {};
jspb.ConstBinaryMessage = function() {
};
jspb.BinaryMessage = function() {
};
jspb.BinaryConstants.FieldType = {INVALID:-1, DOUBLE:1, FLOAT:2, INT64:3, UINT64:4, INT32:5, FIXED64:6, FIXED32:7, BOOL:8, STRING:9, GROUP:10, MESSAGE:11, BYTES:12, UINT32:13, ENUM:14, SFIXED32:15, SFIXED64:16, SINT32:17, SINT64:18, FHASH64:30, VHASH64:31};
jspb.BinaryConstants.WireType = {INVALID:-1, VARINT:0, FIXED64:1, DELIMITED:2, START_GROUP:3, END_GROUP:4, FIXED32:5};
jspb.BinaryConstants.FieldTypeToWireType = function(fieldType) {
  var fieldTypes = jspb.BinaryConstants.FieldType;
  var wireTypes = jspb.BinaryConstants.WireType;
  switch(fieldType) {
    case fieldTypes.INT32:
    case fieldTypes.INT64:
    case fieldTypes.UINT32:
    case fieldTypes.UINT64:
    case fieldTypes.SINT32:
    case fieldTypes.SINT64:
    case fieldTypes.BOOL:
    case fieldTypes.ENUM:
    case fieldTypes.VHASH64:
      return wireTypes.VARINT;
    case fieldTypes.DOUBLE:
    case fieldTypes.FIXED64:
    case fieldTypes.SFIXED64:
    case fieldTypes.FHASH64:
      return wireTypes.FIXED64;
    case fieldTypes.STRING:
    case fieldTypes.MESSAGE:
    case fieldTypes.BYTES:
      return wireTypes.DELIMITED;
    case fieldTypes.FLOAT:
    case fieldTypes.FIXED32:
    case fieldTypes.SFIXED32:
      return wireTypes.FIXED32;
    default:
      return wireTypes.INVALID;
  }
};
jspb.BinaryConstants.INVALID_FIELD_NUMBER = -1;
jspb.BinaryConstants.FLOAT32_EPS = 1.401298464324817e-45;
jspb.BinaryConstants.FLOAT32_MIN = 1.1754943508222875e-38;
jspb.BinaryConstants.FLOAT32_MAX = 3.4028234663852886e+38;
jspb.BinaryConstants.FLOAT64_EPS = 5e-324;
jspb.BinaryConstants.FLOAT64_MIN = 2.2250738585072014e-308;
jspb.BinaryConstants.FLOAT64_MAX = 1.7976931348623157e+308;
jspb.BinaryConstants.TWO_TO_20 = 1048576;
jspb.BinaryConstants.TWO_TO_23 = 8388608;
jspb.BinaryConstants.TWO_TO_31 = 2147483648;
jspb.BinaryConstants.TWO_TO_32 = 4294967296;
jspb.BinaryConstants.TWO_TO_52 = 4503599627370496;
jspb.BinaryConstants.TWO_TO_63 = 9223372036854775808;
jspb.BinaryConstants.TWO_TO_64 = 18446744073709551616;
jspb.BinaryConstants.ZERO_HASH = "\x00\x00\x00\x00\x00\x00\x00\x00";
goog.debug = {};
goog.debug.Error = function(opt_msg) {
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error);
  } else {
    var stack = Error().stack;
    stack && (this.stack = stack);
  }
  opt_msg && (this.message = String(opt_msg));
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.dom = {};
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.string = {};
goog.string.DETECT_DOUBLE_ESCAPING = !1;
goog.string.FORCE_NON_DOM_HTML_UNESCAPING = !1;
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return 0 == str.lastIndexOf(prefix, 0);
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return 0 <= l && str.indexOf(suffix, l) == l;
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return 0 == goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length));
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return 0 == goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length));
};
goog.string.caseInsensitiveEquals = function(str1, str2) {
  return str1.toLowerCase() == str2.toLowerCase();
};
goog.string.subs = function(str, var_args) {
  var splitParts = str.split("%s");
  var returnString = "";
  for (var subsArguments = Array.prototype.slice.call(arguments, 1); subsArguments.length && 1 < splitParts.length;) {
    returnString += splitParts.shift() + subsArguments.shift();
  }
  return returnString + splitParts.join("%s");
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
};
goog.string.isEmptyOrWhitespace = function(str) {
  return /^[\s\xa0]*$/.test(str);
};
goog.string.isEmptyString = function(str) {
  return 0 == str.length;
};
goog.string.isEmpty = goog.string.isEmptyOrWhitespace;
goog.string.isEmptyOrWhitespaceSafe = function(str) {
  return goog.string.isEmptyOrWhitespace(goog.string.makeSafe(str));
};
goog.string.isEmptySafe = goog.string.isEmptyOrWhitespaceSafe;
goog.string.isBreakingWhitespace = function(str) {
  return !/[^\t\n\r ]/.test(str);
};
goog.string.isAlpha = function(str) {
  return !/[^a-zA-Z]/.test(str);
};
goog.string.isNumeric = function(str) {
  return !/[^0-9]/.test(str);
};
goog.string.isAlphaNumeric = function(str) {
  return !/[^a-zA-Z0-9]/.test(str);
};
goog.string.isSpace = function(ch) {
  return " " == ch;
};
goog.string.isUnicodeChar = function(ch) {
  return 1 == ch.length && " " <= ch && "~" >= ch || "\u0080" <= ch && "\ufffd" >= ch;
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ");
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n");
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ");
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ");
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
};
goog.string.trim = goog.TRUSTED_SITE && String.prototype.trim ? function(str) {
  return str.trim();
} : function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "");
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "");
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "");
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  return test1 < test2 ? -1 : test1 == test2 ? 0 : 1;
};
goog.string.numberAwareCompare_ = function(str1, str2, tokenizerRegExp) {
  if (str1 == str2) {
    return 0;
  }
  if (!str1) {
    return -1;
  }
  if (!str2) {
    return 1;
  }
  var tokens1 = str1.toLowerCase().match(tokenizerRegExp);
  var tokens2 = str2.toLowerCase().match(tokenizerRegExp);
  var count = Math.min(tokens1.length, tokens2.length);
  for (var i = 0; i < count; i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if (a != b) {
      var num1 = parseInt(a, 10);
      if (!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if (!isNaN(num2) && num1 - num2) {
          return num1 - num2;
        }
      }
      return a < b ? -1 : 1;
    }
  }
  return tokens1.length != tokens2.length ? tokens1.length - tokens2.length : str1 < str2 ? -1 : 1;
};
goog.string.intAwareCompare = function(str1, str2) {
  return goog.string.numberAwareCompare_(str1, str2, /\d+|\D+/g);
};
goog.string.floatAwareCompare = function(str1, str2) {
  return goog.string.numberAwareCompare_(str1, str2, /\d+|\.\d+|\D+/g);
};
goog.string.numerateCompare = goog.string.floatAwareCompare;
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str));
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "));
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "<br />" : "<br>");
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if (opt_isLikelyToContainHtmlChars) {
    str = str.replace(goog.string.AMP_RE_, "&amp;").replace(goog.string.LT_RE_, "&lt;").replace(goog.string.GT_RE_, "&gt;").replace(goog.string.QUOT_RE_, "&quot;").replace(goog.string.SINGLE_QUOTE_RE_, "&#39;").replace(goog.string.NULL_RE_, "&#0;"), goog.string.DETECT_DOUBLE_ESCAPING && (str = str.replace(goog.string.E_RE_, "&#101;"));
  } else {
    if (!goog.string.ALL_RE_.test(str)) {
      return str;
    }
    -1 != str.indexOf("&") && (str = str.replace(goog.string.AMP_RE_, "&amp;"));
    -1 != str.indexOf("<") && (str = str.replace(goog.string.LT_RE_, "&lt;"));
    -1 != str.indexOf(">") && (str = str.replace(goog.string.GT_RE_, "&gt;"));
    -1 != str.indexOf('"') && (str = str.replace(goog.string.QUOT_RE_, "&quot;"));
    -1 != str.indexOf("'") && (str = str.replace(goog.string.SINGLE_QUOTE_RE_, "&#39;"));
    -1 != str.indexOf("\x00") && (str = str.replace(goog.string.NULL_RE_, "&#0;"));
    goog.string.DETECT_DOUBLE_ESCAPING && -1 != str.indexOf("e") && (str = str.replace(goog.string.E_RE_, "&#101;"));
  }
  return str;
};
goog.string.AMP_RE_ = /&/g;
goog.string.LT_RE_ = /</g;
goog.string.GT_RE_ = />/g;
goog.string.QUOT_RE_ = /"/g;
goog.string.SINGLE_QUOTE_RE_ = /'/g;
goog.string.NULL_RE_ = /\x00/g;
goog.string.E_RE_ = /e/g;
goog.string.ALL_RE_ = goog.string.DETECT_DOUBLE_ESCAPING ? /[\x00&<>"'e]/ : /[\x00&<>"']/;
goog.string.unescapeEntities = function(str) {
  return goog.string.contains(str, "&") ? !goog.string.FORCE_NON_DOM_HTML_UNESCAPING && "document" in goog.global ? goog.string.unescapeEntitiesUsingDom_(str) : goog.string.unescapePureXmlEntities_(str) : str;
};
goog.string.unescapeEntitiesWithDocument = function(str, document) {
  return goog.string.contains(str, "&") ? goog.string.unescapeEntitiesUsingDom_(str, document) : str;
};
goog.string.unescapeEntitiesUsingDom_ = function(str, opt_document) {
  var seen = {"&amp;":"&", "&lt;":"<", "&gt;":">", "&quot;":'"'};
  var div = opt_document ? opt_document.createElement("div") : goog.global.document.createElement("div");
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if (value) {
      return value;
    }
    if ("#" == entity.charAt(0)) {
      var n = Number("0" + entity.substr(1));
      isNaN(n) || (value = String.fromCharCode(n));
    }
    value || (div.innerHTML = s + " ", value = div.firstChild.nodeValue.slice(0, -1));
    return seen[s] = value;
  });
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return "&";
      case "lt":
        return "<";
      case "gt":
        return ">";
      case "quot":
        return '"';
      default:
        if ("#" == entity.charAt(0)) {
          var n = Number("0" + entity.substr(1));
          if (!isNaN(n)) {
            return String.fromCharCode(n);
          }
        }
        return s;
    }
  });
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " &#160;"), opt_xml);
};
goog.string.preserveSpaces = function(str) {
  return str.replace(/(^|[\n ]) /g, "$1" + goog.string.Unicode.NBSP);
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for (var i = 0; i < length; i++) {
    var quoteChar = 1 == length ? quoteChars : quoteChars.charAt(i);
    if (str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1);
    }
  }
  return str;
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  opt_protectEscapedCharacters && (str = goog.string.unescapeEntities(str));
  str.length > chars && (str = str.substring(0, chars - 3) + "...");
  opt_protectEscapedCharacters && (str = goog.string.htmlEscape(str));
  return str;
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  opt_protectEscapedCharacters && (str = goog.string.unescapeEntities(str));
  if (opt_trailingChars && str.length > chars) {
    opt_trailingChars > chars && (opt_trailingChars = chars);
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint);
  } else {
    if (str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos);
    }
  }
  opt_protectEscapedCharacters && (str = goog.string.htmlEscape(str));
  return str;
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\", "<":"<"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  var sb = ['"'];
  for (var i = 0; i < s.length; i++) {
    var ch = s.charAt(i);
    var cc = ch.charCodeAt(0);
    sb[i + 1] = goog.string.specialEscapeChars_[ch] || (31 < cc && 127 > cc ? ch : goog.string.escapeChar(ch));
  }
  sb.push('"');
  return sb.join("");
};
goog.string.escapeString = function(str) {
  var sb = [];
  for (var i = 0; i < str.length; i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i));
  }
  return sb.join("");
};
goog.string.escapeChar = function(c) {
  if (c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c];
  }
  if (c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c];
  }
  var cc = c.charCodeAt(0);
  if (31 < cc && 127 > cc) {
    var rv = c;
  } else {
    if (256 > cc) {
      if (rv = "\\x", 16 > cc || 256 < cc) {
        rv += "0";
      }
    } else {
      rv = "\\u", 4096 > cc && (rv += "0");
    }
    rv += cc.toString(16).toUpperCase();
  }
  return goog.string.jsEscapeCache_[c] = rv;
};
goog.string.contains = function(str, subString) {
  return -1 != str.indexOf(subString);
};
goog.string.caseInsensitiveContains = function(str, subString) {
  return goog.string.contains(str.toLowerCase(), subString.toLowerCase());
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0;
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  0 <= index && index < s.length && 0 < stringLength && (resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength));
  return resultStr;
};
goog.string.remove = function(str, substr) {
  return str.replace(substr, "");
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "");
};
goog.string.replaceAll = function(s, ss, replacement) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, replacement.replace(/\$/g, "$$$$"));
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
};
goog.string.repeat = String.prototype.repeat ? function(string, length) {
  return string.repeat(length);
} : function(string, length) {
  return Array(length + 1).join(string);
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  -1 == index && (index = s.length);
  return goog.string.repeat("0", Math.max(0, length - index)) + s;
};
goog.string.makeSafe = function(obj) {
  return null == obj ? "" : String(obj);
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "");
};
goog.string.getRandomString = function() {
  return Math.floor(2147483648 * Math.random()).toString(36) + Math.abs(Math.floor(2147483648 * Math.random()) ^ goog.now()).toString(36);
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for (var subIdx = 0; 0 == order && subIdx < subCount; subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    do {
      var v1Comp = /(\d*)(\D*)(.*)/.exec(v1Sub) || ["", "", "", ""];
      var v2Comp = /(\d*)(\D*)(.*)/.exec(v2Sub) || ["", "", "", ""];
      if (0 == v1Comp[0].length && 0 == v2Comp[0].length) {
        break;
      }
      var v1CompNum = 0 == v1Comp[1].length ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = 0 == v2Comp[1].length ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(0 == v1Comp[2].length, 0 == v2Comp[2].length) || goog.string.compareElements_(v1Comp[2], v2Comp[2]);
      v1Sub = v1Comp[3];
      v2Sub = v2Comp[3];
    } while (0 == order);
  }
  return order;
};
goog.string.compareElements_ = function(left, right) {
  return left < right ? -1 : left > right ? 1 : 0;
};
goog.string.hashCode = function(str) {
  var result = 0;
  for (var i = 0; i < str.length; ++i) {
    result = 31 * result + str.charCodeAt(i) >>> 0;
  }
  return result;
};
goog.string.uniqueStringCounter_ = 2147483648 * Math.random() | 0;
goog.string.createUniqueString = function() {
  return "goog_" + goog.string.uniqueStringCounter_++;
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  return 0 == num && goog.string.isEmptyOrWhitespace(str) ? NaN : num;
};
goog.string.isLowerCamelCase = function(str) {
  return /^[a-z]+([A-Z][a-z]*)*$/.test(str);
};
goog.string.isUpperCamelCase = function(str) {
  return /^([A-Z][a-z]*)+$/.test(str);
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase();
  });
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase();
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase();
  });
};
goog.string.capitalize = function(str) {
  return String(str.charAt(0)).toUpperCase() + String(str.substr(1)).toLowerCase();
};
goog.string.parseInt = function(value) {
  isFinite(value) && (value = String(value));
  return goog.isString(value) ? /^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10) : NaN;
};
goog.string.splitLimit = function(str, separator, limit) {
  var parts = str.split(separator);
  for (var returnVal = []; 0 < limit && parts.length;) {
    returnVal.push(parts.shift()), limit--;
  }
  parts.length && returnVal.push(parts.join(separator));
  return returnVal;
};
goog.string.lastComponent = function(str, separators) {
  if (separators) {
    "string" == typeof separators && (separators = [separators]);
  } else {
    return str;
  }
  var lastSeparatorIndex = -1;
  for (var i = 0; i < separators.length; i++) {
    if ("" != separators[i]) {
      var currentSeparatorIndex = str.lastIndexOf(separators[i]);
      currentSeparatorIndex > lastSeparatorIndex && (lastSeparatorIndex = currentSeparatorIndex);
    }
  }
  return -1 == lastSeparatorIndex ? str : str.slice(lastSeparatorIndex + 1);
};
goog.string.editDistance = function(a, b) {
  var v0 = [];
  var v1 = [];
  if (a == b) {
    return 0;
  }
  if (!a.length || !b.length) {
    return Math.max(a.length, b.length);
  }
  for (var i = 0; i < b.length + 1; i++) {
    v0[i] = i;
  }
  for (i = 0; i < a.length; i++) {
    v1[0] = i + 1;
    for (var j = 0; j < b.length; j++) {
      var cost = Number(a[i] != b[j]);
      v1[j + 1] = Math.min(v1[j] + 1, v0[j + 1] + 1, v0[j] + cost);
    }
    for (j = 0; j < v0.length; j++) {
      v0[j] = v1[j];
    }
  }
  return v1[b.length];
};
goog.asserts = {};
goog.asserts.ENABLE_ASSERTS = goog.DEBUG;
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.DEFAULT_ERROR_HANDLER = function(e) {
  throw e;
};
goog.asserts.errorHandler_ = goog.asserts.DEFAULT_ERROR_HANDLER;
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if (givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs;
  } else {
    defaultMessage && (message += ": " + defaultMessage, args = defaultArgs);
  }
  var e = new goog.asserts.AssertionError("" + message, args || []);
  goog.asserts.errorHandler_(e);
};
goog.asserts.setErrorHandler = function(errorHandler) {
  goog.asserts.ENABLE_ASSERTS && (goog.asserts.errorHandler_ = errorHandler);
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  goog.asserts.ENABLE_ASSERTS && !condition && goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2));
  return condition;
};
goog.asserts.fail = function(opt_message, var_args) {
  goog.asserts.ENABLE_ASSERTS && goog.asserts.errorHandler_(new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1)));
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value) && goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  return value;
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  goog.asserts.ENABLE_ASSERTS && !goog.isString(value) && goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  return value;
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value) && goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  return value;
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  goog.asserts.ENABLE_ASSERTS && !goog.isObject(value) && goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  return value;
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  goog.asserts.ENABLE_ASSERTS && !goog.isArray(value) && goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  return value;
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value) && goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  return value;
};
goog.asserts.assertElement = function(value, opt_message, var_args) {
  !goog.asserts.ENABLE_ASSERTS || goog.isObject(value) && value.nodeType == goog.dom.NodeType.ELEMENT || goog.asserts.doAssertFailure_("Expected Element but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  return value;
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  !goog.asserts.ENABLE_ASSERTS || value instanceof type || goog.asserts.doAssertFailure_("Expected instanceof %s but got %s.", [goog.asserts.getType_(type), goog.asserts.getType_(value)], opt_message, Array.prototype.slice.call(arguments, 3));
  return value;
};
goog.asserts.assertFinite = function(value, opt_message, var_args) {
  !goog.asserts.ENABLE_ASSERTS || "number" == typeof value && isFinite(value) || goog.asserts.doAssertFailure_("Expected %s to be a finite number but it is not.", [value], opt_message, Array.prototype.slice.call(arguments, 2));
  return value;
};
goog.asserts.assertObjectPrototypeIsIntact = function() {
  for (var key in Object.prototype) {
    goog.asserts.fail(key + " should not be enumerable in Object.prototype.");
  }
};
goog.asserts.getType_ = function(value) {
  return value instanceof Function ? value.displayName || value.name || "unknown type name" : value instanceof Object ? value.constructor.displayName || value.constructor.name || Object.prototype.toString.call(value) : null === value ? "null" : typeof value;
};
goog.array = {};
goog.NATIVE_ARRAY_PROTOTYPES = goog.TRUSTED_SITE;
goog.array.ASSUME_NATIVE_FUNCTIONS = !1;
goog.array.peek = function(array) {
  return array[array.length - 1];
};
goog.array.last = goog.array.peek;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.indexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(null != arr.length);
  return Array.prototype.indexOf.call(arr, obj, opt_fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = null == opt_fromIndex ? 0 : 0 > opt_fromIndex ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if (goog.isString(arr)) {
    return goog.isString(obj) && 1 == obj.length ? arr.indexOf(obj, fromIndex) : -1;
  }
  for (var i = fromIndex; i < arr.length; i++) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return -1;
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.lastIndexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(null != arr.length);
  var fromIndex = null == opt_fromIndex ? arr.length - 1 : opt_fromIndex;
  return Array.prototype.lastIndexOf.call(arr, obj, fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = null == opt_fromIndex ? arr.length - 1 : opt_fromIndex;
  0 > fromIndex && (fromIndex = Math.max(0, arr.length + fromIndex));
  if (goog.isString(arr)) {
    return goog.isString(obj) && 1 == obj.length ? arr.lastIndexOf(obj, fromIndex) : -1;
  }
  for (var i = fromIndex; 0 <= i; i--) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return -1;
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.forEach) ? function(arr, f, opt_obj) {
  goog.asserts.assert(null != arr.length);
  Array.prototype.forEach.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0; i < l; i++) {
    i in arr2 && f.call(opt_obj, arr2[i], i, arr);
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1; 0 <= i; --i) {
    i in arr2 && f.call(opt_obj, arr2[i], i, arr);
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.filter) ? function(arr, f, opt_obj) {
  goog.asserts.assert(null != arr.length);
  return Array.prototype.filter.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0; i < l; i++) {
    if (i in arr2) {
      var val = arr2[i];
      f.call(opt_obj, val, i, arr) && (res[resLength++] = val);
    }
  }
  return res;
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.map) ? function(arr, f, opt_obj) {
  goog.asserts.assert(null != arr.length);
  return Array.prototype.map.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0; i < l; i++) {
    i in arr2 && (res[i] = f.call(opt_obj, arr2[i], i, arr));
  }
  return res;
};
goog.array.reduce = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.reduce) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(null != arr.length);
  opt_obj && (f = goog.bind(f, opt_obj));
  return Array.prototype.reduce.call(arr, f, val);
} : function(arr, f, val$jscomp$0, opt_obj) {
  var rval = val$jscomp$0;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.reduceRight = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.reduceRight) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(null != arr.length);
  goog.asserts.assert(null != f);
  opt_obj && (f = goog.bind(f, opt_obj));
  return Array.prototype.reduceRight.call(arr, f, val);
} : function(arr, f, val$jscomp$0, opt_obj) {
  var rval = val$jscomp$0;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.some) ? function(arr, f, opt_obj) {
  goog.asserts.assert(null != arr.length);
  return Array.prototype.some.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0; i < l; i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return !0;
    }
  }
  return !1;
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.every) ? function(arr, f, opt_obj) {
  goog.asserts.assert(null != arr.length);
  return Array.prototype.every.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0; i < l; i++) {
    if (i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return !1;
    }
  }
  return !0;
};
goog.array.count = function(arr$jscomp$0, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr$jscomp$0, function(element, index, arr) {
    f.call(opt_obj, element, index, arr) && ++count;
  }, opt_obj);
  return count;
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return 0 > i ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0; i < l; i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return -1;
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return 0 > i ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1; 0 <= i; i--) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return -1;
};
goog.array.contains = function(arr, obj) {
  return 0 <= goog.array.indexOf(arr, obj);
};
goog.array.isEmpty = function(arr) {
  return 0 == arr.length;
};
goog.array.clear = function(arr) {
  if (!goog.isArray(arr)) {
    for (var i = arr.length - 1; 0 <= i; i--) {
      delete arr[i];
    }
  }
  arr.length = 0;
};
goog.array.insert = function(arr, obj) {
  goog.array.contains(arr, obj) || arr.push(obj);
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj);
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd);
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  2 == arguments.length || 0 > (i = goog.array.indexOf(arr, opt_obj2)) ? arr.push(obj) : goog.array.insertAt(arr, obj, i);
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  (rv = 0 <= i) && goog.array.removeAt(arr, i);
  return rv;
};
goog.array.removeLast = function(arr, obj) {
  var i = goog.array.lastIndexOf(arr, obj);
  return 0 <= i ? (goog.array.removeAt(arr, i), !0) : !1;
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(null != arr.length);
  return 1 == Array.prototype.splice.call(arr, i, 1).length;
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return 0 <= i ? (goog.array.removeAt(arr, i), !0) : !1;
};
goog.array.removeAllIf = function(arr, f, opt_obj) {
  var removedCount = 0;
  goog.array.forEachRight(arr, function(val, index) {
    f.call(opt_obj, val, index, arr) && goog.array.removeAt(arr, index) && removedCount++;
  });
  return removedCount;
};
goog.array.concat = function(var_args) {
  return Array.prototype.concat.apply([], arguments);
};
goog.array.join = function(var_args) {
  return Array.prototype.concat.apply([], arguments);
};
goog.array.toArray = function(object) {
  var length = object.length;
  if (0 < length) {
    var rv = Array(length);
    for (var i = 0; i < length; i++) {
      rv[i] = object[i];
    }
    return rv;
  }
  return [];
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for (var i = 1; i < arguments.length; i++) {
    var arr2 = arguments[i];
    if (goog.isArrayLike(arr2)) {
      var len1 = arr1.length || 0;
      var len2 = arr2.length || 0;
      arr1.length = len1 + len2;
      for (var j = 0; j < len2; j++) {
        arr1[len1 + j] = arr2[j];
      }
    } else {
      arr1.push(arr2);
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(null != arr.length);
  return Array.prototype.splice.apply(arr, goog.array.slice(arguments, 1));
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(null != arr.length);
  return 2 >= arguments.length ? Array.prototype.slice.call(arr, start) : Array.prototype.slice.call(arr, start, opt_end);
};
goog.array.removeDuplicates = function(arr, opt_rv, opt_hashFn) {
  var returnArray = opt_rv || arr;
  var defaultHashFn = function(item) {
    return goog.isObject(item) ? "o" + goog.getUid(item) : (typeof item).charAt(0) + item;
  };
  var hashFn = opt_hashFn || defaultHashFn;
  var seen = {};
  var cursorInsert = 0;
  for (var cursorRead = 0; cursorRead < arr.length;) {
    var current = arr[cursorRead++];
    var key = hashFn(current);
    Object.prototype.hasOwnProperty.call(seen, key) || (seen[key] = !0, returnArray[cursorInsert++] = current);
  }
  returnArray.length = cursorInsert;
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, !1, target);
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, !0, void 0, opt_obj);
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  for (var found; left < right;) {
    var middle = left + right >> 1;
    var compareResult = isEvaluator ? compareFn.call(opt_selfObj, arr[middle], middle, arr) : compareFn(opt_target, arr[middle]);
    0 < compareResult ? left = middle + 1 : (right = middle, found = !compareResult);
  }
  return found ? left : ~left;
};
goog.array.sort = function(arr, opt_compareFn) {
  arr.sort(opt_compareFn || goog.array.defaultCompare);
};
goog.array.stableSort = function(arr, opt_compareFn) {
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index;
  }
  var compArr = Array(arr.length);
  for (var i = 0; i < arr.length; i++) {
    compArr[i] = {index:i, value:arr[i]};
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(compArr, stableCompareFn);
  for (i = 0; i < arr.length; i++) {
    arr[i] = compArr[i].value;
  }
};
goog.array.sortByKey = function(arr, keyFn, opt_compareFn) {
  var keyCompareFn = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return keyCompareFn(keyFn(a), keyFn(b));
  });
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  goog.array.sortByKey(arr, function(obj) {
    return obj[key];
  }, opt_compareFn);
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for (var i = 1; i < arr.length; i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if (0 < compareResult || 0 == compareResult && opt_strict) {
      return !1;
    }
  }
  return !0;
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if (!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return !1;
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for (var i = 0; i < l; i++) {
    if (!equalsFn(arr1[i], arr2[i])) {
      return !1;
    }
  }
  return !0;
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for (var i = 0; i < l; i++) {
    var result = compare(arr1[i], arr2[i]);
    if (0 != result) {
      return result;
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length);
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0;
};
goog.array.inverseDefaultCompare = function(a, b) {
  return -goog.array.defaultCompare(a, b);
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b;
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return 0 > index ? (goog.array.insertAt(array, value, -(index + 1)), !0) : !1;
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return 0 <= index ? goog.array.removeAt(array, index) : !1;
};
goog.array.bucket = function(array, sorter, opt_obj) {
  var buckets = {};
  for (var i = 0; i < array.length; i++) {
    var value = array[i];
    var key = sorter.call(opt_obj, value, i, array);
    if (goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value);
    }
  }
  return buckets;
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call(opt_obj, element, index, arr)] = element;
  });
  return ret;
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [];
  var start = 0;
  var end = startOrEnd;
  var step = opt_step || 1;
  void 0 !== opt_end && (start = startOrEnd, end = opt_end);
  if (0 > step * (end - start)) {
    return [];
  }
  if (0 < step) {
    for (var i = start; i < end; i += step) {
      array.push(i);
    }
  } else {
    for (i = start; i > end; i += step) {
      array.push(i);
    }
  }
  return array;
};
goog.array.repeat = function(value, n) {
  var array = [];
  for (var i = 0; i < n; i++) {
    array[i] = value;
  }
  return array;
};
goog.array.flatten = function(var_args) {
  var result = [];
  for (var i = 0; i < arguments.length; i++) {
    var element = arguments[i];
    if (goog.isArray(element)) {
      for (var c = 0; c < element.length; c += 8192) {
        var chunk = goog.array.slice(element, c, c + 8192);
        var recurseResult = goog.array.flatten.apply(null, chunk);
        for (var r = 0; r < recurseResult.length; r++) {
          result.push(recurseResult[r]);
        }
      }
    } else {
      result.push(element);
    }
  }
  return result;
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(null != array.length);
  array.length && (n %= array.length, 0 < n ? Array.prototype.unshift.apply(array, array.splice(-n, n)) : 0 > n && Array.prototype.push.apply(array, array.splice(0, -n)));
  return array;
};
goog.array.moveItem = function(arr, fromIndex, toIndex) {
  goog.asserts.assert(0 <= fromIndex && fromIndex < arr.length);
  goog.asserts.assert(0 <= toIndex && toIndex < arr.length);
  var removedItems = Array.prototype.splice.call(arr, fromIndex, 1);
  Array.prototype.splice.call(arr, toIndex, 0, removedItems[0]);
};
goog.array.zip = function(var_args) {
  if (!arguments.length) {
    return [];
  }
  var result = [];
  var minLen = arguments[0].length;
  for (var i = 1; i < arguments.length; i++) {
    arguments[i].length < minLen && (minLen = arguments[i].length);
  }
  for (i = 0; i < minLen; i++) {
    var value = [];
    for (var j = 0; j < arguments.length; j++) {
      value.push(arguments[j][i]);
    }
    result.push(value);
  }
  return result;
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for (var i = arr.length - 1; 0 < i; i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp;
  }
};
goog.array.copyByIndex = function(arr, index_arr) {
  var result = [];
  goog.array.forEach(index_arr, function(index) {
    result.push(arr[index]);
  });
  return result;
};
goog.array.concatMap = function(arr, f, opt_obj) {
  return goog.array.concat.apply([], goog.array.map(arr, f, opt_obj));
};
goog.crypt = {};
goog.crypt.stringToByteArray = function(str) {
  var output = [];
  var p = 0;
  for (var i = 0; i < str.length; i++) {
    var c = str.charCodeAt(i);
    255 < c && (output[p++] = c & 255, c >>= 8);
    output[p++] = c;
  }
  return output;
};
goog.crypt.byteArrayToString = function(bytes) {
  if (8192 >= bytes.length) {
    return String.fromCharCode.apply(null, bytes);
  }
  var str = "";
  for (var i = 0; i < bytes.length; i += 8192) {
    var chunk = goog.array.slice(bytes, i, i + 8192);
    str += String.fromCharCode.apply(null, chunk);
  }
  return str;
};
goog.crypt.byteArrayToHex = function(array) {
  return goog.array.map(array, function(numByte) {
    var hexByte = numByte.toString(16);
    return 1 < hexByte.length ? hexByte : "0" + hexByte;
  }).join("");
};
goog.crypt.hexToByteArray = function(hexString) {
  goog.asserts.assert(0 == hexString.length % 2, "Key string length must be multiple of 2");
  var arr = [];
  for (var i = 0; i < hexString.length; i += 2) {
    arr.push(parseInt(hexString.substring(i, i + 2), 16));
  }
  return arr;
};
goog.crypt.stringToUtf8ByteArray = function(str) {
  var out = [];
  var p = 0;
  for (var i = 0; i < str.length; i++) {
    var c = str.charCodeAt(i);
    128 > c ? out[p++] = c : (2048 > c ? out[p++] = c >> 6 | 192 : (55296 == (c & 64512) && i + 1 < str.length && 56320 == (str.charCodeAt(i + 1) & 64512) ? (c = 65536 + ((c & 1023) << 10) + (str.charCodeAt(++i) & 1023), out[p++] = c >> 18 | 240, out[p++] = c >> 12 & 63 | 128) : out[p++] = c >> 12 | 224, out[p++] = c >> 6 & 63 | 128), out[p++] = c & 63 | 128);
  }
  return out;
};
goog.crypt.utf8ByteArrayToString = function(bytes) {
  var out = [];
  var pos = 0;
  for (var c = 0; pos < bytes.length;) {
    var c1 = bytes[pos++];
    if (128 > c1) {
      out[c++] = String.fromCharCode(c1);
    } else {
      if (191 < c1 && 224 > c1) {
        var c2 = bytes[pos++];
        out[c++] = String.fromCharCode((c1 & 31) << 6 | c2 & 63);
      } else {
        if (239 < c1 && 365 > c1) {
          c2 = bytes[pos++];
          var c3 = bytes[pos++];
          var c4 = bytes[pos++];
          var u = ((c1 & 7) << 18 | (c2 & 63) << 12 | (c3 & 63) << 6 | c4 & 63) - 65536;
          out[c++] = String.fromCharCode(55296 + (u >> 10));
          out[c++] = String.fromCharCode(56320 + (u & 1023));
        } else {
          c2 = bytes[pos++], c3 = bytes[pos++], out[c++] = String.fromCharCode((c1 & 15) << 12 | (c2 & 63) << 6 | c3 & 63);
        }
      }
    }
  }
  return out.join("");
};
goog.crypt.xorByteArray = function(bytes1, bytes2) {
  goog.asserts.assert(bytes1.length == bytes2.length, "XOR array lengths must match");
  var result = [];
  for (var i = 0; i < bytes1.length; i++) {
    result.push(bytes1[i] ^ bytes2[i]);
  }
  return result;
};
goog.labs = {};
goog.labs.userAgent = {};
goog.labs.userAgent.util = {};
goog.labs.userAgent.util.getNativeUserAgentString_ = function() {
  var navigator = goog.labs.userAgent.util.getNavigator_();
  if (navigator) {
    var userAgent = navigator.userAgent;
    if (userAgent) {
      return userAgent;
    }
  }
  return "";
};
goog.labs.userAgent.util.getNavigator_ = function() {
  return goog.global.navigator;
};
goog.labs.userAgent.util.userAgent_ = goog.labs.userAgent.util.getNativeUserAgentString_();
goog.labs.userAgent.util.setUserAgent = function(opt_userAgent) {
  goog.labs.userAgent.util.userAgent_ = opt_userAgent || goog.labs.userAgent.util.getNativeUserAgentString_();
};
goog.labs.userAgent.util.getUserAgent = function() {
  return goog.labs.userAgent.util.userAgent_;
};
goog.labs.userAgent.util.matchUserAgent = function(str) {
  var userAgent = goog.labs.userAgent.util.getUserAgent();
  return goog.string.contains(userAgent, str);
};
goog.labs.userAgent.util.matchUserAgentIgnoreCase = function(str) {
  var userAgent = goog.labs.userAgent.util.getUserAgent();
  return goog.string.caseInsensitiveContains(userAgent, str);
};
goog.labs.userAgent.util.extractVersionTuples = function(userAgent) {
  var versionRegExp = /(\w[\w ]+)\/([^\s]+)\s*(?:\((.*?)\))?/g;
  var data = [];
  for (var match; match = versionRegExp.exec(userAgent);) {
    data.push([match[1], match[2], match[3] || void 0]);
  }
  return data;
};
goog.object = {};
goog.object.is = function(v, v2) {
  return v === v2 ? 0 !== v || 1 / v === 1 / v2 : v !== v && v2 !== v2;
};
goog.object.forEach = function(obj, f, opt_obj) {
  for (var key in obj) {
    f.call(opt_obj, obj[key], key, obj);
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    f.call(opt_obj, obj[key], key, obj) && (res[key] = obj[key]);
  }
  return res;
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj);
  }
  return res;
};
goog.object.some = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      return !0;
    }
  }
  return !1;
};
goog.object.every = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (!f.call(opt_obj, obj[key], key, obj)) {
      return !1;
    }
  }
  return !0;
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for (var key in obj) {
    rv++;
  }
  return rv;
};
goog.object.getAnyKey = function(obj) {
  for (var key in obj) {
    return key;
  }
};
goog.object.getAnyValue = function(obj) {
  for (var key in obj) {
    return obj[key];
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val);
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = obj[key];
  }
  return res;
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = key;
  }
  return res;
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for (var i = isArrayLike ? 0 : 1; i < keys.length; i++) {
    if (null == obj) {
      return;
    }
    obj = obj[keys[i]];
  }
  return obj;
};
goog.object.containsKey = function(obj, key) {
  return null !== obj && key in obj;
};
goog.object.containsValue = function(obj, val) {
  for (var key in obj) {
    if (obj[key] == val) {
      return !0;
    }
  }
  return !1;
};
goog.object.findKey = function(obj, f, opt_this) {
  for (var key in obj) {
    if (f.call(opt_this, obj[key], key, obj)) {
      return key;
    }
  }
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key];
};
goog.object.isEmpty = function(obj) {
  for (var key in obj) {
    return !1;
  }
  return !0;
};
goog.object.clear = function(obj) {
  for (var i in obj) {
    delete obj[i];
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  (rv = key in obj) && delete obj[key];
  return rv;
};
goog.object.add = function(obj, key, val) {
  if (null !== obj && key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val);
};
goog.object.get = function(obj, key, opt_val) {
  return null !== obj && key in obj ? obj[key] : opt_val;
};
goog.object.set = function(obj, key, value) {
  obj[key] = value;
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value;
};
goog.object.setWithReturnValueIfNotSet = function(obj, key, f) {
  if (key in obj) {
    return obj[key];
  }
  var val = f();
  obj[key] = val;
  return val;
};
goog.object.equals = function(a, b) {
  for (var k in a) {
    if (!(k in b) || a[k] !== b[k]) {
      return !1;
    }
  }
  for (k in b) {
    if (!(k in a)) {
      return !1;
    }
  }
  return !0;
};
goog.object.clone = function(obj) {
  var res = {};
  for (var key in obj) {
    res[key] = obj[key];
  }
  return res;
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if ("object" == type || "array" == type) {
    if (goog.isFunction(obj.clone)) {
      return obj.clone();
    }
    var clone = "array" == type ? [] : {};
    for (var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for (var key in obj) {
    transposed[obj[key]] = key;
  }
  return transposed;
};
goog.object.PROTOTYPE_FIELDS_ = "constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" ");
goog.object.extend = function(target, var_args) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];
    for (key in source) {
      target[key] = source[key];
    }
    for (var j = 0; j < goog.object.PROTOTYPE_FIELDS_.length; j++) {
      var key = goog.object.PROTOTYPE_FIELDS_[j];
      Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if (1 == argLength && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0]);
  }
  if (argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for (var i = 0; i < argLength; i += 2) {
    rv[arguments[i]] = arguments[i + 1];
  }
  return rv;
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if (1 == argLength && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0]);
  }
  var rv = {};
  for (var i = 0; i < argLength; i++) {
    rv[arguments[i]] = !0;
  }
  return rv;
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  Object.isFrozen && !Object.isFrozen(obj) && (result = Object.create(obj), Object.freeze(result));
  return result;
};
goog.object.isImmutableView = function(obj) {
  return !!Object.isFrozen && Object.isFrozen(obj);
};
goog.object.getAllPropertyNames = function(obj, opt_includeObjectPrototype, opt_includeFunctionPrototype) {
  if (!obj) {
    return [];
  }
  if (!Object.getOwnPropertyNames || !Object.getPrototypeOf) {
    return goog.object.getKeys(obj);
  }
  var visitedSet = {};
  for (var proto = obj; proto && (proto !== Object.prototype || opt_includeObjectPrototype) && (proto !== Function.prototype || opt_includeFunctionPrototype);) {
    var names = Object.getOwnPropertyNames(proto);
    for (var i = 0; i < names.length; i++) {
      visitedSet[names[i]] = !0;
    }
    proto = Object.getPrototypeOf(proto);
  }
  return goog.object.getKeys(visitedSet);
};
goog.labs.userAgent.browser = {};
goog.labs.userAgent.browser.matchOpera_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Opera");
};
goog.labs.userAgent.browser.matchIE_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Trident") || goog.labs.userAgent.util.matchUserAgent("MSIE");
};
goog.labs.userAgent.browser.matchEdge_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Edge");
};
goog.labs.userAgent.browser.matchFirefox_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Firefox");
};
goog.labs.userAgent.browser.matchSafari_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Safari") && !(goog.labs.userAgent.browser.matchChrome_() || goog.labs.userAgent.browser.matchCoast_() || goog.labs.userAgent.browser.matchOpera_() || goog.labs.userAgent.browser.matchEdge_() || goog.labs.userAgent.browser.isSilk() || goog.labs.userAgent.util.matchUserAgent("Android"));
};
goog.labs.userAgent.browser.matchCoast_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Coast");
};
goog.labs.userAgent.browser.matchIosWebview_ = function() {
  return (goog.labs.userAgent.util.matchUserAgent("iPad") || goog.labs.userAgent.util.matchUserAgent("iPhone")) && !goog.labs.userAgent.browser.matchSafari_() && !goog.labs.userAgent.browser.matchChrome_() && !goog.labs.userAgent.browser.matchCoast_() && goog.labs.userAgent.util.matchUserAgent("AppleWebKit");
};
goog.labs.userAgent.browser.matchChrome_ = function() {
  return (goog.labs.userAgent.util.matchUserAgent("Chrome") || goog.labs.userAgent.util.matchUserAgent("CriOS")) && !goog.labs.userAgent.browser.matchEdge_();
};
goog.labs.userAgent.browser.matchAndroidBrowser_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Android") && !(goog.labs.userAgent.browser.isChrome() || goog.labs.userAgent.browser.isFirefox() || goog.labs.userAgent.browser.isOpera() || goog.labs.userAgent.browser.isSilk());
};
goog.labs.userAgent.browser.isOpera = goog.labs.userAgent.browser.matchOpera_;
goog.labs.userAgent.browser.isIE = goog.labs.userAgent.browser.matchIE_;
goog.labs.userAgent.browser.isEdge = goog.labs.userAgent.browser.matchEdge_;
goog.labs.userAgent.browser.isFirefox = goog.labs.userAgent.browser.matchFirefox_;
goog.labs.userAgent.browser.isSafari = goog.labs.userAgent.browser.matchSafari_;
goog.labs.userAgent.browser.isCoast = goog.labs.userAgent.browser.matchCoast_;
goog.labs.userAgent.browser.isIosWebview = goog.labs.userAgent.browser.matchIosWebview_;
goog.labs.userAgent.browser.isChrome = goog.labs.userAgent.browser.matchChrome_;
goog.labs.userAgent.browser.isAndroidBrowser = goog.labs.userAgent.browser.matchAndroidBrowser_;
goog.labs.userAgent.browser.isSilk = function() {
  return goog.labs.userAgent.util.matchUserAgent("Silk");
};
goog.labs.userAgent.browser.getVersion = function() {
  function lookUpValueWithKeys(keys) {
    var key = goog.array.find(keys, versionMapHasKey);
    return versionMap[key] || "";
  }
  var userAgentString = goog.labs.userAgent.util.getUserAgent();
  if (goog.labs.userAgent.browser.isIE()) {
    return goog.labs.userAgent.browser.getIEVersion_(userAgentString);
  }
  var versionTuples = goog.labs.userAgent.util.extractVersionTuples(userAgentString);
  var versionMap = {};
  goog.array.forEach(versionTuples, function(tuple) {
    var key = tuple[0];
    var value = tuple[1];
    versionMap[key] = value;
  });
  var versionMapHasKey = goog.partial(goog.object.containsKey, versionMap);
  if (goog.labs.userAgent.browser.isOpera()) {
    return lookUpValueWithKeys(["Version", "Opera"]);
  }
  if (goog.labs.userAgent.browser.isEdge()) {
    return lookUpValueWithKeys(["Edge"]);
  }
  if (goog.labs.userAgent.browser.isChrome()) {
    return lookUpValueWithKeys(["Chrome", "CriOS"]);
  }
  var tuple = versionTuples[2];
  return tuple && tuple[1] || "";
};
goog.labs.userAgent.browser.isVersionOrHigher = function(version) {
  return 0 <= goog.string.compareVersions(goog.labs.userAgent.browser.getVersion(), version);
};
goog.labs.userAgent.browser.getIEVersion_ = function(userAgent) {
  var rv = /rv: *([\d\.]*)/.exec(userAgent);
  if (rv && rv[1]) {
    return rv[1];
  }
  var version = "";
  var msie = /MSIE +([\d\.]+)/.exec(userAgent);
  if (msie && msie[1]) {
    var tridentVersion = /Trident\/(\d.\d)/.exec(userAgent);
    if ("7.0" == msie[1]) {
      if (tridentVersion && tridentVersion[1]) {
        switch(tridentVersion[1]) {
          case "4.0":
            version = "8.0";
            break;
          case "5.0":
            version = "9.0";
            break;
          case "6.0":
            version = "10.0";
            break;
          case "7.0":
            version = "11.0";
        }
      } else {
        version = "7.0";
      }
    } else {
      version = msie[1];
    }
  }
  return version;
};
goog.labs.userAgent.platform = {};
goog.labs.userAgent.platform.isAndroid = function() {
  return goog.labs.userAgent.util.matchUserAgent("Android");
};
goog.labs.userAgent.platform.isIpod = function() {
  return goog.labs.userAgent.util.matchUserAgent("iPod");
};
goog.labs.userAgent.platform.isIphone = function() {
  return goog.labs.userAgent.util.matchUserAgent("iPhone") && !goog.labs.userAgent.util.matchUserAgent("iPod") && !goog.labs.userAgent.util.matchUserAgent("iPad");
};
goog.labs.userAgent.platform.isIpad = function() {
  return goog.labs.userAgent.util.matchUserAgent("iPad");
};
goog.labs.userAgent.platform.isIos = function() {
  return goog.labs.userAgent.platform.isIphone() || goog.labs.userAgent.platform.isIpad() || goog.labs.userAgent.platform.isIpod();
};
goog.labs.userAgent.platform.isMacintosh = function() {
  return goog.labs.userAgent.util.matchUserAgent("Macintosh");
};
goog.labs.userAgent.platform.isLinux = function() {
  return goog.labs.userAgent.util.matchUserAgent("Linux");
};
goog.labs.userAgent.platform.isWindows = function() {
  return goog.labs.userAgent.util.matchUserAgent("Windows");
};
goog.labs.userAgent.platform.isChromeOS = function() {
  return goog.labs.userAgent.util.matchUserAgent("CrOS");
};
goog.labs.userAgent.platform.getVersion = function() {
  var userAgentString = goog.labs.userAgent.util.getUserAgent();
  var version = "";
  if (goog.labs.userAgent.platform.isWindows()) {
    var re = /Windows (?:NT|Phone) ([0-9.]+)/;
    var match = re.exec(userAgentString);
    version = match ? match[1] : "0.0";
  } else {
    goog.labs.userAgent.platform.isIos() ? (re = /(?:iPhone|iPod|iPad|CPU)\s+OS\s+(\S+)/, match = re.exec(userAgentString), version = match && match[1].replace(/_/g, ".")) : goog.labs.userAgent.platform.isMacintosh() ? (re = /Mac OS X ([0-9_.]+)/, match = re.exec(userAgentString), version = match ? match[1].replace(/_/g, ".") : "10") : goog.labs.userAgent.platform.isAndroid() ? (re = /Android\s+([^\);]+)(\)|;)/, match = re.exec(userAgentString), version = match && match[1]) : goog.labs.userAgent.platform.isChromeOS() && 
    (re = /(?:CrOS\s+(?:i686|x86_64)\s+([0-9.]+))/, match = re.exec(userAgentString), version = match && match[1]);
  }
  return version || "";
};
goog.labs.userAgent.platform.isVersionOrHigher = function(version) {
  return 0 <= goog.string.compareVersions(goog.labs.userAgent.platform.getVersion(), version);
};
goog.labs.userAgent.engine = {};
goog.labs.userAgent.engine.isPresto = function() {
  return goog.labs.userAgent.util.matchUserAgent("Presto");
};
goog.labs.userAgent.engine.isTrident = function() {
  return goog.labs.userAgent.util.matchUserAgent("Trident") || goog.labs.userAgent.util.matchUserAgent("MSIE");
};
goog.labs.userAgent.engine.isEdge = function() {
  return goog.labs.userAgent.util.matchUserAgent("Edge");
};
goog.labs.userAgent.engine.isWebKit = function() {
  return goog.labs.userAgent.util.matchUserAgentIgnoreCase("WebKit") && !goog.labs.userAgent.engine.isEdge();
};
goog.labs.userAgent.engine.isGecko = function() {
  return goog.labs.userAgent.util.matchUserAgent("Gecko") && !goog.labs.userAgent.engine.isWebKit() && !goog.labs.userAgent.engine.isTrident() && !goog.labs.userAgent.engine.isEdge();
};
goog.labs.userAgent.engine.getVersion = function() {
  var userAgentString = goog.labs.userAgent.util.getUserAgent();
  if (userAgentString) {
    var tuples = goog.labs.userAgent.util.extractVersionTuples(userAgentString);
    var engineTuple = goog.labs.userAgent.engine.getEngineTuple_(tuples);
    if (engineTuple) {
      return "Gecko" == engineTuple[0] ? goog.labs.userAgent.engine.getVersionForKey_(tuples, "Firefox") : engineTuple[1];
    }
    var browserTuple = tuples[0];
    var info;
    if (browserTuple && (info = browserTuple[2])) {
      var match = /Trident\/([^\s;]+)/.exec(info);
      if (match) {
        return match[1];
      }
    }
  }
  return "";
};
goog.labs.userAgent.engine.getEngineTuple_ = function(tuples) {
  if (!goog.labs.userAgent.engine.isEdge()) {
    return tuples[1];
  }
  for (var i = 0; i < tuples.length; i++) {
    var tuple = tuples[i];
    if ("Edge" == tuple[0]) {
      return tuple;
    }
  }
};
goog.labs.userAgent.engine.isVersionOrHigher = function(version) {
  return 0 <= goog.string.compareVersions(goog.labs.userAgent.engine.getVersion(), version);
};
goog.labs.userAgent.engine.getVersionForKey_ = function(tuples, key) {
  var pair = goog.array.find(tuples, function(pair) {
    return key == pair[0];
  });
  return pair && pair[1] || "";
};
goog.reflect = {};
goog.reflect.object = function(type, object) {
  return object;
};
goog.reflect.objectProperty = function(prop) {
  return prop;
};
goog.reflect.sinkValue = function(x) {
  goog.reflect.sinkValue[" "](x);
  return x;
};
goog.reflect.sinkValue[" "] = goog.nullFunction;
goog.reflect.canAccessProperty = function(obj, prop) {
  try {
    return goog.reflect.sinkValue(obj[prop]), !0;
  } catch (e) {
  }
  return !1;
};
goog.reflect.cache = function(cacheObj, key, valueFn, opt_keyFn) {
  var storedKey = opt_keyFn ? opt_keyFn(key) : key;
  return Object.prototype.hasOwnProperty.call(cacheObj, storedKey) ? cacheObj[storedKey] : cacheObj[storedKey] = valueFn(key);
};
goog.userAgent = {};
goog.userAgent.ASSUME_IE = !1;
goog.userAgent.ASSUME_EDGE = !1;
goog.userAgent.ASSUME_GECKO = !1;
goog.userAgent.ASSUME_WEBKIT = !1;
goog.userAgent.ASSUME_MOBILE_WEBKIT = !1;
goog.userAgent.ASSUME_OPERA = !1;
goog.userAgent.ASSUME_ANY_VERSION = !1;
goog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_EDGE || goog.userAgent.ASSUME_GECKO || goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_OPERA;
goog.userAgent.getUserAgentString = function() {
  return goog.labs.userAgent.util.getUserAgent();
};
goog.userAgent.getNavigator = function() {
  return goog.global.navigator || null;
};
goog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_OPERA : goog.labs.userAgent.browser.isOpera();
goog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_IE : goog.labs.userAgent.browser.isIE();
goog.userAgent.EDGE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_EDGE : goog.labs.userAgent.engine.isEdge();
goog.userAgent.EDGE_OR_IE = goog.userAgent.EDGE || goog.userAgent.IE;
goog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_GECKO : goog.labs.userAgent.engine.isGecko();
goog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT : goog.labs.userAgent.engine.isWebKit();
goog.userAgent.isMobile_ = function() {
  return goog.userAgent.WEBKIT && goog.labs.userAgent.util.matchUserAgent("Mobile");
};
goog.userAgent.MOBILE = goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.isMobile_();
goog.userAgent.SAFARI = goog.userAgent.WEBKIT;
goog.userAgent.determinePlatform_ = function() {
  var navigator = goog.userAgent.getNavigator();
  return navigator && navigator.platform || "";
};
goog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();
goog.userAgent.ASSUME_MAC = !1;
goog.userAgent.ASSUME_WINDOWS = !1;
goog.userAgent.ASSUME_LINUX = !1;
goog.userAgent.ASSUME_X11 = !1;
goog.userAgent.ASSUME_ANDROID = !1;
goog.userAgent.ASSUME_IPHONE = !1;
goog.userAgent.ASSUME_IPAD = !1;
goog.userAgent.ASSUME_IPOD = !1;
goog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC || goog.userAgent.ASSUME_WINDOWS || goog.userAgent.ASSUME_LINUX || goog.userAgent.ASSUME_X11 || goog.userAgent.ASSUME_ANDROID || goog.userAgent.ASSUME_IPHONE || goog.userAgent.ASSUME_IPAD || goog.userAgent.ASSUME_IPOD;
goog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_MAC : goog.labs.userAgent.platform.isMacintosh();
goog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_WINDOWS : goog.labs.userAgent.platform.isWindows();
goog.userAgent.isLegacyLinux_ = function() {
  return goog.labs.userAgent.platform.isLinux() || goog.labs.userAgent.platform.isChromeOS();
};
goog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_LINUX : goog.userAgent.isLegacyLinux_();
goog.userAgent.isX11_ = function() {
  var navigator = goog.userAgent.getNavigator();
  return !!navigator && goog.string.contains(navigator.appVersion || "", "X11");
};
goog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_X11 : goog.userAgent.isX11_();
goog.userAgent.ANDROID = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_ANDROID : goog.labs.userAgent.platform.isAndroid();
goog.userAgent.IPHONE = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPHONE : goog.labs.userAgent.platform.isIphone();
goog.userAgent.IPAD = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPAD : goog.labs.userAgent.platform.isIpad();
goog.userAgent.IPOD = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPOD : goog.labs.userAgent.platform.isIpod();
goog.userAgent.IOS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPHONE || goog.userAgent.ASSUME_IPAD || goog.userAgent.ASSUME_IPOD : goog.labs.userAgent.platform.isIos();
goog.userAgent.determineVersion_ = function() {
  var version = "";
  var arr = goog.userAgent.getVersionRegexResult_();
  arr && (version = arr ? arr[1] : "");
  if (goog.userAgent.IE) {
    var docMode = goog.userAgent.getDocumentMode_();
    if (null != docMode && docMode > parseFloat(version)) {
      return String(docMode);
    }
  }
  return version;
};
goog.userAgent.getVersionRegexResult_ = function() {
  var userAgent = goog.userAgent.getUserAgentString();
  if (goog.userAgent.GECKO) {
    return /rv\:([^\);]+)(\)|;)/.exec(userAgent);
  }
  if (goog.userAgent.EDGE) {
    return /Edge\/([\d\.]+)/.exec(userAgent);
  }
  if (goog.userAgent.IE) {
    return /\b(?:MSIE|rv)[: ]([^\);]+)(\)|;)/.exec(userAgent);
  }
  if (goog.userAgent.WEBKIT) {
    return /WebKit\/(\S+)/.exec(userAgent);
  }
  if (goog.userAgent.OPERA) {
    return /(?:Version)[ \/]?(\S+)/.exec(userAgent);
  }
};
goog.userAgent.getDocumentMode_ = function() {
  var doc = goog.global.document;
  return doc ? doc.documentMode : void 0;
};
goog.userAgent.VERSION = goog.userAgent.determineVersion_();
goog.userAgent.compare = function(v1, v2) {
  return goog.string.compareVersions(v1, v2);
};
goog.userAgent.isVersionOrHigherCache_ = {};
goog.userAgent.isVersionOrHigher = function(version) {
  return goog.userAgent.ASSUME_ANY_VERSION || goog.reflect.cache(goog.userAgent.isVersionOrHigherCache_, version, function() {
    return 0 <= goog.string.compareVersions(goog.userAgent.VERSION, version);
  });
};
goog.userAgent.isVersion = goog.userAgent.isVersionOrHigher;
goog.userAgent.isDocumentModeOrHigher = function(documentMode) {
  return Number(goog.userAgent.DOCUMENT_MODE) >= documentMode;
};
goog.userAgent.isDocumentMode = goog.userAgent.isDocumentModeOrHigher;
goog.userAgent.DOCUMENT_MODE = function() {
  var doc = goog.global.document;
  var mode = goog.userAgent.getDocumentMode_();
  if (doc && goog.userAgent.IE) {
    return mode || ("CSS1Compat" == doc.compatMode ? parseInt(goog.userAgent.VERSION, 10) : 5);
  }
}();
goog.userAgent.product = {};
goog.userAgent.product.ASSUME_FIREFOX = !1;
goog.userAgent.product.ASSUME_IPHONE = !1;
goog.userAgent.product.ASSUME_IPAD = !1;
goog.userAgent.product.ASSUME_ANDROID = !1;
goog.userAgent.product.ASSUME_CHROME = !1;
goog.userAgent.product.ASSUME_SAFARI = !1;
goog.userAgent.product.PRODUCT_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_EDGE || goog.userAgent.ASSUME_OPERA || goog.userAgent.product.ASSUME_FIREFOX || goog.userAgent.product.ASSUME_IPHONE || goog.userAgent.product.ASSUME_IPAD || goog.userAgent.product.ASSUME_ANDROID || goog.userAgent.product.ASSUME_CHROME || goog.userAgent.product.ASSUME_SAFARI;
goog.userAgent.product.OPERA = goog.userAgent.OPERA;
goog.userAgent.product.IE = goog.userAgent.IE;
goog.userAgent.product.EDGE = goog.userAgent.EDGE;
goog.userAgent.product.FIREFOX = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_FIREFOX : goog.labs.userAgent.browser.isFirefox();
goog.userAgent.product.isIphoneOrIpod_ = function() {
  return goog.labs.userAgent.platform.isIphone() || goog.labs.userAgent.platform.isIpod();
};
goog.userAgent.product.IPHONE = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_IPHONE : goog.userAgent.product.isIphoneOrIpod_();
goog.userAgent.product.IPAD = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_IPAD : goog.labs.userAgent.platform.isIpad();
goog.userAgent.product.ANDROID = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_ANDROID : goog.labs.userAgent.browser.isAndroidBrowser();
goog.userAgent.product.CHROME = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_CHROME : goog.labs.userAgent.browser.isChrome();
goog.userAgent.product.isSafariDesktop_ = function() {
  return goog.labs.userAgent.browser.isSafari() && !goog.labs.userAgent.platform.isIos();
};
goog.userAgent.product.SAFARI = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_SAFARI : goog.userAgent.product.isSafariDesktop_();
goog.crypt.base64 = {};
goog.crypt.base64.byteToCharMap_ = null;
goog.crypt.base64.charToByteMap_ = null;
goog.crypt.base64.byteToCharMapWebSafe_ = null;
goog.crypt.base64.ENCODED_VALS_BASE = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
goog.crypt.base64.ENCODED_VALS = goog.crypt.base64.ENCODED_VALS_BASE + "+/=";
goog.crypt.base64.ENCODED_VALS_WEBSAFE = goog.crypt.base64.ENCODED_VALS_BASE + "-_.";
goog.crypt.base64.ASSUME_NATIVE_SUPPORT_ = goog.userAgent.GECKO || goog.userAgent.WEBKIT && !goog.userAgent.product.SAFARI || goog.userAgent.OPERA;
goog.crypt.base64.HAS_NATIVE_ENCODE_ = goog.crypt.base64.ASSUME_NATIVE_SUPPORT_ || "function" == typeof goog.global.btoa;
goog.crypt.base64.HAS_NATIVE_DECODE_ = goog.crypt.base64.ASSUME_NATIVE_SUPPORT_ || !goog.userAgent.product.SAFARI && !goog.userAgent.IE && "function" == typeof goog.global.atob;
goog.crypt.base64.encodeByteArray = function(input, opt_webSafe) {
  goog.asserts.assert(goog.isArrayLike(input), "encodeByteArray takes an array as a parameter");
  goog.crypt.base64.init_();
  var byteToCharMap = opt_webSafe ? goog.crypt.base64.byteToCharMapWebSafe_ : goog.crypt.base64.byteToCharMap_;
  var output = [];
  for (var i = 0; i < input.length; i += 3) {
    var byte1 = input[i];
    var haveByte2 = i + 1 < input.length;
    var byte2 = haveByte2 ? input[i + 1] : 0;
    var haveByte3 = i + 2 < input.length;
    var byte3 = haveByte3 ? input[i + 2] : 0;
    var outByte1 = byte1 >> 2;
    var outByte2 = (byte1 & 3) << 4 | byte2 >> 4;
    var outByte3 = (byte2 & 15) << 2 | byte3 >> 6;
    var outByte4 = byte3 & 63;
    haveByte3 || (outByte4 = 64, haveByte2 || (outByte3 = 64));
    output.push(byteToCharMap[outByte1], byteToCharMap[outByte2], byteToCharMap[outByte3], byteToCharMap[outByte4]);
  }
  return output.join("");
};
goog.crypt.base64.encodeString = function(input, opt_webSafe) {
  return goog.crypt.base64.HAS_NATIVE_ENCODE_ && !opt_webSafe ? goog.global.btoa(input) : goog.crypt.base64.encodeByteArray(goog.crypt.stringToByteArray(input), opt_webSafe);
};
goog.crypt.base64.decodeString = function(input, opt_webSafe) {
  function pushByte(b) {
    output += String.fromCharCode(b);
  }
  if (goog.crypt.base64.HAS_NATIVE_DECODE_ && !opt_webSafe) {
    return goog.global.atob(input);
  }
  var output = "";
  goog.crypt.base64.decodeStringInternal_(input, pushByte);
  return output;
};
goog.crypt.base64.decodeStringToByteArray = function(input) {
  function pushByte(b) {
    output.push(b);
  }
  var output = [];
  goog.crypt.base64.decodeStringInternal_(input, pushByte);
  return output;
};
goog.crypt.base64.decodeStringToUint8Array = function(input) {
  function pushByte(b) {
    output[outLen++] = b;
  }
  goog.asserts.assert(!goog.userAgent.IE || goog.userAgent.isVersionOrHigher("10"), "Browser does not support typed arrays");
  var len = input.length;
  var placeholders = 0;
  "=" === input[len - 2] ? placeholders = 2 : "=" === input[len - 1] && (placeholders = 1);
  var output = new Uint8Array(Math.ceil(3 * len / 4) - placeholders);
  var outLen = 0;
  goog.crypt.base64.decodeStringInternal_(input, pushByte);
  return output.subarray(0, outLen);
};
goog.crypt.base64.decodeStringInternal_ = function(input, pushByte) {
  function getByte(default_val) {
    for (; nextCharIndex < input.length;) {
      var ch = input.charAt(nextCharIndex++);
      var b = goog.crypt.base64.charToByteMap_[ch];
      if (null != b) {
        return b;
      }
      if (!goog.string.isEmptyOrWhitespace(ch)) {
        throw Error("Unknown base64 encoding at char: " + ch);
      }
    }
    return default_val;
  }
  goog.crypt.base64.init_();
  for (var nextCharIndex = 0;;) {
    var byte1 = getByte(-1);
    var byte2 = getByte(0);
    var byte3 = getByte(64);
    var byte4 = getByte(64);
    if (64 === byte4 && -1 === byte1) {
      break;
    }
    var outByte1 = byte1 << 2 | byte2 >> 4;
    pushByte(outByte1);
    if (64 != byte3) {
      var outByte2 = byte2 << 4 & 240 | byte3 >> 2;
      pushByte(outByte2);
      if (64 != byte4) {
        var outByte3 = byte3 << 6 & 192 | byte4;
        pushByte(outByte3);
      }
    }
  }
};
goog.crypt.base64.init_ = function() {
  if (!goog.crypt.base64.byteToCharMap_) {
    goog.crypt.base64.byteToCharMap_ = {};
    goog.crypt.base64.charToByteMap_ = {};
    goog.crypt.base64.byteToCharMapWebSafe_ = {};
    for (var i = 0; i < goog.crypt.base64.ENCODED_VALS.length; i++) {
      goog.crypt.base64.byteToCharMap_[i] = goog.crypt.base64.ENCODED_VALS.charAt(i), goog.crypt.base64.charToByteMap_[goog.crypt.base64.byteToCharMap_[i]] = i, goog.crypt.base64.byteToCharMapWebSafe_[i] = goog.crypt.base64.ENCODED_VALS_WEBSAFE.charAt(i), i >= goog.crypt.base64.ENCODED_VALS_BASE.length && (goog.crypt.base64.charToByteMap_[goog.crypt.base64.ENCODED_VALS_WEBSAFE.charAt(i)] = i);
    }
  }
};
jspb.utils = {};
jspb.utils.split64Low = 0;
jspb.utils.split64High = 0;
jspb.utils.splitUint64 = function(value) {
  var lowBits = value >>> 0;
  var highBits = Math.floor((value - lowBits) / jspb.BinaryConstants.TWO_TO_32) >>> 0;
  jspb.utils.split64Low = lowBits;
  jspb.utils.split64High = highBits;
};
jspb.utils.splitInt64 = function(value) {
  var sign = 0 > value;
  value = Math.abs(value);
  var lowBits = value >>> 0;
  var highBits = Math.floor((value - lowBits) / jspb.BinaryConstants.TWO_TO_32);
  highBits >>>= 0;
  sign && (highBits = ~highBits >>> 0, lowBits = ~lowBits >>> 0, lowBits += 1, 4294967295 < lowBits && (lowBits = 0, highBits++, 4294967295 < highBits && (highBits = 0)));
  jspb.utils.split64Low = lowBits;
  jspb.utils.split64High = highBits;
};
jspb.utils.splitZigzag64 = function(value) {
  var sign = 0 > value;
  value = 2 * Math.abs(value);
  jspb.utils.splitUint64(value);
  var lowBits = jspb.utils.split64Low;
  var highBits = jspb.utils.split64High;
  sign && (0 == lowBits ? 0 == highBits ? (lowBits = 4294967295, highBits = 4294967295) : (highBits--, lowBits = 4294967295) : lowBits--);
  jspb.utils.split64Low = lowBits;
  jspb.utils.split64High = highBits;
};
jspb.utils.splitFloat32 = function(value) {
  var sign = 0 > value ? 1 : 0;
  value = sign ? -value : value;
  if (0 === value) {
    0 < 1 / value ? (jspb.utils.split64High = 0, jspb.utils.split64Low = 0) : (jspb.utils.split64High = 0, jspb.utils.split64Low = 2147483648);
  } else {
    if (isNaN(value)) {
      jspb.utils.split64High = 0, jspb.utils.split64Low = 2147483647;
    } else {
      if (value > jspb.BinaryConstants.FLOAT32_MAX) {
        jspb.utils.split64High = 0, jspb.utils.split64Low = (sign << 31 | 2139095040) >>> 0;
      } else {
        if (value < jspb.BinaryConstants.FLOAT32_MIN) {
          var mant = Math.round(value / Math.pow(2, -149));
          jspb.utils.split64High = 0;
          jspb.utils.split64Low = (sign << 31 | mant) >>> 0;
        } else {
          var exp = Math.floor(Math.log(value) / Math.LN2);
          mant = value * Math.pow(2, -exp);
          mant = Math.round(mant * jspb.BinaryConstants.TWO_TO_23) & 8388607;
          jspb.utils.split64High = 0;
          jspb.utils.split64Low = (sign << 31 | exp + 127 << 23 | mant) >>> 0;
        }
      }
    }
  }
};
jspb.utils.splitFloat64 = function(value) {
  var sign = 0 > value ? 1 : 0;
  value = sign ? -value : value;
  if (0 === value) {
    jspb.utils.split64High = 0 < 1 / value ? 0 : 2147483648, jspb.utils.split64Low = 0;
  } else {
    if (isNaN(value)) {
      jspb.utils.split64High = 2147483647, jspb.utils.split64Low = 4294967295;
    } else {
      if (value > jspb.BinaryConstants.FLOAT64_MAX) {
        jspb.utils.split64High = (sign << 31 | 2146435072) >>> 0, jspb.utils.split64Low = 0;
      } else {
        if (value < jspb.BinaryConstants.FLOAT64_MIN) {
          var mant = value / Math.pow(2, -1074);
          var mantHigh = mant / jspb.BinaryConstants.TWO_TO_32;
          jspb.utils.split64High = (sign << 31 | mantHigh) >>> 0;
          jspb.utils.split64Low = mant >>> 0;
        } else {
          var exp = Math.floor(Math.log(value) / Math.LN2);
          1024 == exp && (exp = 1023);
          mant = value * Math.pow(2, -exp);
          mantHigh = mant * jspb.BinaryConstants.TWO_TO_20 & 1048575;
          var mantLow = mant * jspb.BinaryConstants.TWO_TO_52 >>> 0;
          jspb.utils.split64High = (sign << 31 | exp + 1023 << 20 | mantHigh) >>> 0;
          jspb.utils.split64Low = mantLow;
        }
      }
    }
  }
};
jspb.utils.splitHash64 = function(hash) {
  var a = hash.charCodeAt(0);
  var b = hash.charCodeAt(1);
  var c = hash.charCodeAt(2);
  var d = hash.charCodeAt(3);
  var e = hash.charCodeAt(4);
  var f = hash.charCodeAt(5);
  var g = hash.charCodeAt(6);
  var h = hash.charCodeAt(7);
  jspb.utils.split64Low = a + (b << 8) + (c << 16) + (d << 24) >>> 0;
  jspb.utils.split64High = e + (f << 8) + (g << 16) + (h << 24) >>> 0;
};
jspb.utils.joinUint64 = function(bitsLow, bitsHigh) {
  return bitsHigh * jspb.BinaryConstants.TWO_TO_32 + bitsLow;
};
jspb.utils.joinInt64 = function(bitsLow, bitsHigh) {
  var sign = bitsHigh & 2147483648;
  sign && (bitsLow = ~bitsLow + 1 >>> 0, bitsHigh = ~bitsHigh >>> 0, 0 == bitsLow && (bitsHigh = bitsHigh + 1 >>> 0));
  var result = jspb.utils.joinUint64(bitsLow, bitsHigh);
  return sign ? -result : result;
};
jspb.utils.joinZigzag64 = function(bitsLow, bitsHigh) {
  var sign = bitsLow & 1;
  bitsLow = (bitsLow >>> 1 | bitsHigh << 31) >>> 0;
  bitsHigh >>>= 1;
  sign && (bitsLow = bitsLow + 1 >>> 0, 0 == bitsLow && (bitsHigh = bitsHigh + 1 >>> 0));
  var result = jspb.utils.joinUint64(bitsLow, bitsHigh);
  return sign ? -result : result;
};
jspb.utils.joinFloat32 = function(bitsLow) {
  var sign = 2 * (bitsLow >> 31) + 1;
  var exp = bitsLow >>> 23 & 255;
  var mant = bitsLow & 8388607;
  return 255 == exp ? mant ? NaN : Infinity * sign : 0 == exp ? sign * Math.pow(2, -149) * mant : sign * Math.pow(2, exp - 150) * (mant + Math.pow(2, 23));
};
jspb.utils.joinFloat64 = function(bitsLow, bitsHigh) {
  var sign = 2 * (bitsHigh >> 31) + 1;
  var exp = bitsHigh >>> 20 & 2047;
  var mant = jspb.BinaryConstants.TWO_TO_32 * (bitsHigh & 1048575) + bitsLow;
  return 2047 == exp ? mant ? NaN : Infinity * sign : 0 == exp ? sign * Math.pow(2, -1074) * mant : sign * Math.pow(2, exp - 1075) * (mant + jspb.BinaryConstants.TWO_TO_52);
};
jspb.utils.joinHash64 = function(bitsLow, bitsHigh) {
  var a = bitsLow >>> 0 & 255;
  var b = bitsLow >>> 8 & 255;
  var c = bitsLow >>> 16 & 255;
  var d = bitsLow >>> 24 & 255;
  var e = bitsHigh >>> 0 & 255;
  var f = bitsHigh >>> 8 & 255;
  var g = bitsHigh >>> 16 & 255;
  var h = bitsHigh >>> 24 & 255;
  return String.fromCharCode(a, b, c, d, e, f, g, h);
};
jspb.utils.DIGITS = "0123456789abcdef".split("");
jspb.utils.joinUnsignedDecimalString = function(bitsLow, bitsHigh) {
  function emit(digit) {
    var temp = 10000000;
    for (var i = 0; 7 > i; i++) {
      temp /= 10;
      var decimalDigit = digit / temp % 10 >>> 0;
      if (0 != decimalDigit || start) {
        start = !0, result += table[decimalDigit];
      }
    }
  }
  if (2097151 >= bitsHigh) {
    return "" + (jspb.BinaryConstants.TWO_TO_32 * bitsHigh + bitsLow);
  }
  var low = bitsLow & 16777215;
  var mid = (bitsLow >>> 24 | bitsHigh << 8) >>> 0 & 16777215;
  var high = bitsHigh >> 16 & 65535;
  var digitA = low + 6777216 * mid + 6710656 * high;
  var digitB = mid + 8147497 * high;
  var digitC = 2 * high;
  10000000 <= digitA && (digitB += Math.floor(digitA / 10000000), digitA %= 10000000);
  10000000 <= digitB && (digitC += Math.floor(digitB / 10000000), digitB %= 10000000);
  var table = jspb.utils.DIGITS;
  var start = !1;
  var result = "";
  (digitC || start) && emit(digitC);
  (digitB || start) && emit(digitB);
  (digitA || start) && emit(digitA);
  return result;
};
jspb.utils.joinSignedDecimalString = function(bitsLow, bitsHigh) {
  var negative = bitsHigh & 2147483648;
  if (negative) {
    bitsLow = ~bitsLow + 1 >>> 0;
    var carry = 0 == bitsLow ? 1 : 0;
    bitsHigh = ~bitsHigh + carry >>> 0;
  }
  var result = jspb.utils.joinUnsignedDecimalString(bitsLow, bitsHigh);
  return negative ? "-" + result : result;
};
jspb.utils.hash64ToDecimalString = function(hash, signed) {
  jspb.utils.splitHash64(hash);
  var bitsLow = jspb.utils.split64Low;
  var bitsHigh = jspb.utils.split64High;
  return signed ? jspb.utils.joinSignedDecimalString(bitsLow, bitsHigh) : jspb.utils.joinUnsignedDecimalString(bitsLow, bitsHigh);
};
jspb.utils.hash64ArrayToDecimalStrings = function(hashes, signed) {
  var result = Array(hashes.length);
  for (var i = 0; i < hashes.length; i++) {
    result[i] = jspb.utils.hash64ToDecimalString(hashes[i], signed);
  }
  return result;
};
jspb.utils.decimalStringToHash64 = function(dec) {
  function muladd(m, c) {
    for (var i = 0; 8 > i && (1 !== m || 0 < c); i++) {
      var r = m * resultBytes[i] + c;
      resultBytes[i] = r & 255;
      c = r >>> 8;
    }
  }
  function neg() {
    for (var i = 0; 8 > i; i++) {
      resultBytes[i] = ~resultBytes[i] & 255;
    }
  }
  goog.asserts.assert(0 < dec.length);
  var minus = !1;
  "-" === dec[0] && (minus = !0, dec = dec.slice(1));
  var resultBytes = [0, 0, 0, 0, 0, 0, 0, 0];
  for (var i$jscomp$0 = 0; i$jscomp$0 < dec.length; i$jscomp$0++) {
    muladd(10, jspb.utils.DIGITS.indexOf(dec[i$jscomp$0]));
  }
  minus && (neg(), muladd(1, 1));
  return goog.crypt.byteArrayToString(resultBytes);
};
jspb.utils.splitDecimalString = function(value) {
  jspb.utils.splitHash64(jspb.utils.decimalStringToHash64(value));
};
jspb.utils.hash64ToHexString = function(hash) {
  var temp = Array(18);
  temp[0] = "0";
  temp[1] = "x";
  for (var i = 0; 8 > i; i++) {
    var c = hash.charCodeAt(7 - i);
    temp[2 * i + 2] = jspb.utils.DIGITS[c >> 4];
    temp[2 * i + 3] = jspb.utils.DIGITS[c & 15];
  }
  var result = temp.join("");
  return result;
};
jspb.utils.hexStringToHash64 = function(hex) {
  hex = hex.toLowerCase();
  goog.asserts.assert(18 == hex.length);
  goog.asserts.assert("0" == hex[0]);
  goog.asserts.assert("x" == hex[1]);
  var result = "";
  for (var i = 0; 8 > i; i++) {
    var hi = jspb.utils.DIGITS.indexOf(hex[2 * i + 2]);
    var lo = jspb.utils.DIGITS.indexOf(hex[2 * i + 3]);
    result = String.fromCharCode(16 * hi + lo) + result;
  }
  return result;
};
jspb.utils.hash64ToNumber = function(hash, signed) {
  jspb.utils.splitHash64(hash);
  var bitsLow = jspb.utils.split64Low;
  var bitsHigh = jspb.utils.split64High;
  return signed ? jspb.utils.joinInt64(bitsLow, bitsHigh) : jspb.utils.joinUint64(bitsLow, bitsHigh);
};
jspb.utils.numberToHash64 = function(value) {
  jspb.utils.splitInt64(value);
  return jspb.utils.joinHash64(jspb.utils.split64Low, jspb.utils.split64High);
};
jspb.utils.countVarints = function(buffer, start, end) {
  var count = 0;
  for (var i = start; i < end; i++) {
    count += buffer[i] >> 7;
  }
  return end - start - count;
};
jspb.utils.countVarintFields = function(buffer, start, end, field) {
  var count = 0;
  var cursor = start;
  var tag = 8 * field + jspb.BinaryConstants.WireType.VARINT;
  if (128 > tag) {
    for (; cursor < end && buffer[cursor++] == tag;) {
      for (count++;;) {
        var x = buffer[cursor++];
        if (0 == (x & 128)) {
          break;
        }
      }
    }
  } else {
    for (; cursor < end;) {
      for (var temp = tag; 128 < temp;) {
        if (buffer[cursor] != (temp & 127 | 128)) {
          return count;
        }
        cursor++;
        temp >>= 7;
      }
      if (buffer[cursor++] != temp) {
        break;
      }
      for (count++; x = buffer[cursor++], 0 != (x & 128);) {
      }
    }
  }
  return count;
};
jspb.utils.countFixedFields_ = function(buffer, start, end, tag, stride) {
  var count = 0;
  var cursor = start;
  if (128 > tag) {
    for (; cursor < end && buffer[cursor++] == tag;) {
      count++, cursor += stride;
    }
  } else {
    for (; cursor < end;) {
      for (var temp = tag; 128 < temp;) {
        if (buffer[cursor++] != (temp & 127 | 128)) {
          return count;
        }
        temp >>= 7;
      }
      if (buffer[cursor++] != temp) {
        break;
      }
      count++;
      cursor += stride;
    }
  }
  return count;
};
jspb.utils.countFixed32Fields = function(buffer, start, end, field) {
  var tag = 8 * field + jspb.BinaryConstants.WireType.FIXED32;
  return jspb.utils.countFixedFields_(buffer, start, end, tag, 4);
};
jspb.utils.countFixed64Fields = function(buffer, start, end, field) {
  var tag = 8 * field + jspb.BinaryConstants.WireType.FIXED64;
  return jspb.utils.countFixedFields_(buffer, start, end, tag, 8);
};
jspb.utils.countDelimitedFields = function(buffer, start, end, field) {
  var count = 0;
  var cursor = start;
  for (var tag = 8 * field + jspb.BinaryConstants.WireType.DELIMITED; cursor < end;) {
    for (var temp = tag; 128 < temp;) {
      if (buffer[cursor++] != (temp & 127 | 128)) {
        return count;
      }
      temp >>= 7;
    }
    if (buffer[cursor++] != temp) {
      break;
    }
    count++;
    var length = 0;
    for (var shift = 1; temp = buffer[cursor++], length += (temp & 127) * shift, shift *= 128, 0 != (temp & 128);) {
    }
    cursor += length;
  }
  return count;
};
jspb.utils.debugBytesToTextFormat = function(byteSource) {
  var s = '"';
  if (byteSource) {
    var bytes = jspb.utils.byteSourceToUint8Array(byteSource);
    for (var i = 0; i < bytes.length; i++) {
      s += "\\x", 16 > bytes[i] && (s += "0"), s += bytes[i].toString(16);
    }
  }
  return s + '"';
};
jspb.utils.debugScalarToTextFormat = function(scalar) {
  return goog.isString(scalar) ? goog.string.quote(scalar) : scalar.toString();
};
jspb.utils.stringToByteArray = function(str) {
  var arr = new Uint8Array(str.length);
  for (var i = 0; i < str.length; i++) {
    var codepoint = str.charCodeAt(i);
    if (255 < codepoint) {
      throw Error("Conversion error: string contains codepoint outside of byte range");
    }
    arr[i] = codepoint;
  }
  return arr;
};
jspb.utils.byteSourceToUint8Array = function(data) {
  if (data.constructor === Uint8Array) {
    return data;
  }
  if (data.constructor === ArrayBuffer) {
    return new Uint8Array(data);
  }
  if (data.constructor === Array) {
    return new Uint8Array(data);
  }
  if (data.constructor === String) {
    return goog.crypt.base64.decodeStringToUint8Array(data);
  }
  goog.asserts.fail("Type not convertible to Uint8Array.");
  return new Uint8Array(0);
};
jspb.BinaryIterator = function(opt_decoder, opt_next, opt_elements) {
  this.decoder_ = null;
  this.nextMethod_ = null;
  this.elements_ = null;
  this.cursor_ = 0;
  this.nextValue_ = null;
  this.atEnd_ = !0;
  this.init_(opt_decoder, opt_next, opt_elements);
};
jspb.BinaryIterator.prototype.init_ = function(opt_decoder, opt_next, opt_elements) {
  opt_decoder && opt_next && (this.decoder_ = opt_decoder, this.nextMethod_ = opt_next);
  this.elements_ = opt_elements || null;
  this.cursor_ = 0;
  this.nextValue_ = null;
  this.atEnd_ = !this.decoder_ && !this.elements_;
  this.next();
};
jspb.BinaryIterator.instanceCache_ = [];
jspb.BinaryIterator.alloc = function(opt_decoder, opt_next, opt_elements) {
  if (jspb.BinaryIterator.instanceCache_.length) {
    var iterator = jspb.BinaryIterator.instanceCache_.pop();
    iterator.init_(opt_decoder, opt_next, opt_elements);
    return iterator;
  }
  return new jspb.BinaryIterator(opt_decoder, opt_next, opt_elements);
};
jspb.BinaryIterator.prototype.free = function() {
  this.clear();
  100 > jspb.BinaryIterator.instanceCache_.length && jspb.BinaryIterator.instanceCache_.push(this);
};
jspb.BinaryIterator.prototype.clear = function() {
  this.decoder_ && this.decoder_.free();
  this.decoder_ = null;
  this.nextMethod_ = null;
  this.elements_ = null;
  this.cursor_ = 0;
  this.nextValue_ = null;
  this.atEnd_ = !0;
};
jspb.BinaryIterator.prototype.get = function() {
  return this.nextValue_;
};
jspb.BinaryIterator.prototype.atEnd = function() {
  return this.atEnd_;
};
jspb.BinaryIterator.prototype.next = function() {
  var lastValue = this.nextValue_;
  this.decoder_ ? this.decoder_.atEnd() ? (this.nextValue_ = null, this.atEnd_ = !0) : this.nextValue_ = this.nextMethod_.call(this.decoder_) : this.elements_ && (this.cursor_ == this.elements_.length ? (this.nextValue_ = null, this.atEnd_ = !0) : this.nextValue_ = this.elements_[this.cursor_++]);
  return lastValue;
};
jspb.BinaryDecoder = function(opt_bytes, opt_start, opt_length) {
  this.bytes_ = null;
  this.start_ = 0;
  this.end_ = 0;
  this.cursor_ = 0;
  this.tempLow_ = 0;
  this.tempHigh_ = 0;
  this.error_ = !1;
  opt_bytes && this.setBlock(opt_bytes, opt_start, opt_length);
};
jspb.BinaryDecoder.instanceCache_ = [];
jspb.BinaryDecoder.alloc = function(opt_bytes, opt_start, opt_length) {
  if (jspb.BinaryDecoder.instanceCache_.length) {
    var newDecoder = jspb.BinaryDecoder.instanceCache_.pop();
    opt_bytes && newDecoder.setBlock(opt_bytes, opt_start, opt_length);
    return newDecoder;
  }
  return new jspb.BinaryDecoder(opt_bytes, opt_start, opt_length);
};
jspb.BinaryDecoder.prototype.free = function() {
  this.clear();
  100 > jspb.BinaryDecoder.instanceCache_.length && jspb.BinaryDecoder.instanceCache_.push(this);
};
jspb.BinaryDecoder.prototype.clone = function() {
  return jspb.BinaryDecoder.alloc(this.bytes_, this.start_, this.end_ - this.start_);
};
jspb.BinaryDecoder.prototype.clear = function() {
  this.bytes_ = null;
  this.start_ = 0;
  this.end_ = 0;
  this.cursor_ = 0;
  this.error_ = !1;
};
jspb.BinaryDecoder.prototype.setBlock = function(data, opt_start, opt_length) {
  this.bytes_ = jspb.utils.byteSourceToUint8Array(data);
  this.start_ = goog.isDef(opt_start) ? opt_start : 0;
  this.end_ = goog.isDef(opt_length) ? this.start_ + opt_length : this.bytes_.length;
  this.cursor_ = this.start_;
};
jspb.BinaryDecoder.prototype.getEnd = function() {
  return this.end_;
};
jspb.BinaryDecoder.prototype.setEnd = function(end) {
  this.end_ = end;
};
jspb.BinaryDecoder.prototype.reset = function() {
  this.cursor_ = this.start_;
};
jspb.BinaryDecoder.prototype.getCursor = function() {
  return this.cursor_;
};
jspb.BinaryDecoder.prototype.setCursor = function(cursor) {
  this.cursor_ = cursor;
};
jspb.BinaryDecoder.prototype.advance = function(count) {
  this.cursor_ += count;
  goog.asserts.assert(this.cursor_ <= this.end_);
};
jspb.BinaryDecoder.prototype.atEnd = function() {
  return this.cursor_ == this.end_;
};
jspb.BinaryDecoder.prototype.getError = function() {
  return this.error_ || 0 > this.cursor_ || this.cursor_ > this.end_;
};
jspb.BinaryDecoder.prototype.readSplitVarint64_ = function() {
  var lowBits = 0;
  var highBits = 0;
  for (var i = 0; 4 > i; i++) {
    var temp = this.bytes_[this.cursor_++];
    lowBits |= (temp & 127) << 7 * i;
    if (128 > temp) {
      this.tempLow_ = lowBits >>> 0;
      this.tempHigh_ = 0;
      return;
    }
  }
  temp = this.bytes_[this.cursor_++];
  lowBits |= (temp & 127) << 28;
  highBits |= (temp & 127) >> 4;
  if (128 > temp) {
    this.tempLow_ = lowBits >>> 0, this.tempHigh_ = highBits >>> 0;
  } else {
    for (i = 0; 5 > i; i++) {
      if (temp = this.bytes_[this.cursor_++], highBits |= (temp & 127) << 7 * i + 3, 128 > temp) {
        this.tempLow_ = lowBits >>> 0;
        this.tempHigh_ = highBits >>> 0;
        return;
      }
    }
    goog.asserts.fail("Failed to read varint, encoding is invalid.");
    this.error_ = !0;
  }
};
jspb.BinaryDecoder.prototype.skipVarint = function() {
  for (; this.bytes_[this.cursor_] & 128;) {
    this.cursor_++;
  }
  this.cursor_++;
};
jspb.BinaryDecoder.prototype.readUnsignedVarint32 = function() {
  var bytes = this.bytes_;
  var temp = bytes[this.cursor_ + 0];
  var x = temp & 127;
  if (128 > temp) {
    return this.cursor_ += 1, goog.asserts.assert(this.cursor_ <= this.end_), x;
  }
  temp = bytes[this.cursor_ + 1];
  x |= (temp & 127) << 7;
  if (128 > temp) {
    return this.cursor_ += 2, goog.asserts.assert(this.cursor_ <= this.end_), x;
  }
  temp = bytes[this.cursor_ + 2];
  x |= (temp & 127) << 14;
  if (128 > temp) {
    return this.cursor_ += 3, goog.asserts.assert(this.cursor_ <= this.end_), x;
  }
  temp = bytes[this.cursor_ + 3];
  x |= (temp & 127) << 21;
  if (128 > temp) {
    return this.cursor_ += 4, goog.asserts.assert(this.cursor_ <= this.end_), x;
  }
  temp = bytes[this.cursor_ + 4];
  x |= (temp & 15) << 28;
  if (128 > temp) {
    return this.cursor_ += 5, goog.asserts.assert(this.cursor_ <= this.end_), x >>> 0;
  }
  this.cursor_ += 5;
  128 <= bytes[this.cursor_++] && 128 <= bytes[this.cursor_++] && 128 <= bytes[this.cursor_++] && 128 <= bytes[this.cursor_++] && 128 <= bytes[this.cursor_++] && goog.asserts.assert(!1);
  goog.asserts.assert(this.cursor_ <= this.end_);
  return x;
};
jspb.BinaryDecoder.prototype.readSignedVarint32 = jspb.BinaryDecoder.prototype.readUnsignedVarint32;
jspb.BinaryDecoder.prototype.readSignedVarint64 = function() {
  this.readSplitVarint64_();
  return jspb.utils.joinInt64(this.tempLow_, this.tempHigh_);
};
jspb.BinaryDecoder.prototype.readEnum = function() {
  return this.readSignedVarint32();
};
jspb.BinaryDecoder.prototype.readString = function(length) {
  var bytes = this.bytes_;
  var cursor = this.cursor_;
  var end = cursor + length;
  var codeUnits = [];
  for (var result = ""; cursor < end;) {
    var c = bytes[cursor++];
    if (128 > c) {
      codeUnits.push(c);
    } else {
      if (192 > c) {
        continue;
      } else {
        if (224 > c) {
          var c2 = bytes[cursor++];
          codeUnits.push((c & 31) << 6 | c2 & 63);
        } else {
          if (240 > c) {
            c2 = bytes[cursor++];
            var c3 = bytes[cursor++];
            codeUnits.push((c & 15) << 12 | (c2 & 63) << 6 | c3 & 63);
          } else {
            if (248 > c) {
              c2 = bytes[cursor++];
              c3 = bytes[cursor++];
              var c4 = bytes[cursor++];
              var codepoint = (c & 7) << 18 | (c2 & 63) << 12 | (c3 & 63) << 6 | c4 & 63;
              codepoint -= 65536;
              var low = (codepoint & 1023) + 56320;
              var high = (codepoint >> 10 & 1023) + 55296;
              codeUnits.push(high, low);
            }
          }
        }
      }
    }
    8192 <= codeUnits.length && (result += String.fromCharCode.apply(null, codeUnits), codeUnits.length = 0);
  }
  result += goog.crypt.byteArrayToString(codeUnits);
  this.cursor_ = cursor;
  return result;
};
jspb.BinaryEncoder = function() {
  this.buffer_ = [];
};
jspb.BinaryEncoder.prototype.length = function() {
  return this.buffer_.length;
};
jspb.BinaryEncoder.prototype.end = function() {
  var buffer = this.buffer_;
  this.buffer_ = [];
  return buffer;
};
jspb.BinaryEncoder.prototype.writeUnsignedVarint32 = function(value) {
  goog.asserts.assert(value == Math.floor(value));
  for (goog.asserts.assert(0 <= value && value < jspb.BinaryConstants.TWO_TO_32); 127 < value;) {
    this.buffer_.push(value & 127 | 128), value >>>= 7;
  }
  this.buffer_.push(value);
};
jspb.BinaryEncoder.prototype.writeSignedVarint32 = function(value) {
  goog.asserts.assert(value == Math.floor(value));
  goog.asserts.assert(value >= -jspb.BinaryConstants.TWO_TO_31 && value < jspb.BinaryConstants.TWO_TO_31);
  if (0 <= value) {
    this.writeUnsignedVarint32(value);
  } else {
    for (var i = 0; 9 > i; i++) {
      this.buffer_.push(value & 127 | 128), value >>= 7;
    }
    this.buffer_.push(1);
  }
};
jspb.BinaryEncoder.prototype.writeEnum = function(value) {
  goog.asserts.assert(value == Math.floor(value));
  goog.asserts.assert(value >= -jspb.BinaryConstants.TWO_TO_31 && value < jspb.BinaryConstants.TWO_TO_31);
  this.writeSignedVarint32(value);
};
jspb.BinaryEncoder.prototype.writeString = function(value) {
  var oldLength = this.buffer_.length;
  for (var i = 0; i < value.length; i++) {
    var c = value.charCodeAt(i);
    if (128 > c) {
      this.buffer_.push(c);
    } else {
      if (2048 > c) {
        this.buffer_.push(c >> 6 | 192), this.buffer_.push(c & 63 | 128);
      } else {
        if (65536 > c) {
          if (55296 <= c && 56319 >= c && i + 1 < value.length) {
            var second = value.charCodeAt(i + 1);
            56320 <= second && 57343 >= second && (c = 1024 * (c - 55296) + second - 56320 + 65536, this.buffer_.push(c >> 18 | 240), this.buffer_.push(c >> 12 & 63 | 128), this.buffer_.push(c >> 6 & 63 | 128), this.buffer_.push(c & 63 | 128), i++);
          } else {
            this.buffer_.push(c >> 12 | 224), this.buffer_.push(c >> 6 & 63 | 128), this.buffer_.push(c & 63 | 128);
          }
        }
      }
    }
  }
  var length = this.buffer_.length - oldLength;
  return length;
};
jspb.BinaryReader = function(opt_bytes, opt_start, opt_length) {
  this.decoder_ = jspb.BinaryDecoder.alloc(opt_bytes, opt_start, opt_length);
  this.nextField_ = jspb.BinaryConstants.INVALID_FIELD_NUMBER;
  this.nextWireType_ = jspb.BinaryConstants.WireType.INVALID;
  this.error_ = !1;
};
jspb.BinaryReader.instanceCache_ = [];
jspb.BinaryReader.alloc = function(opt_bytes, opt_start, opt_length) {
  if (jspb.BinaryReader.instanceCache_.length) {
    var newReader = jspb.BinaryReader.instanceCache_.pop();
    opt_bytes && newReader.decoder_.setBlock(opt_bytes, opt_start, opt_length);
    return newReader;
  }
  return new jspb.BinaryReader(opt_bytes, opt_start, opt_length);
};
jspb.BinaryReader.prototype.alloc = jspb.BinaryReader.alloc;
jspb.BinaryReader.prototype.free = function() {
  this.decoder_.clear();
  this.nextField_ = jspb.BinaryConstants.INVALID_FIELD_NUMBER;
  this.nextWireType_ = jspb.BinaryConstants.WireType.INVALID;
  this.error_ = !1;
  100 > jspb.BinaryReader.instanceCache_.length && jspb.BinaryReader.instanceCache_.push(this);
};
jspb.BinaryReader.prototype.getCursor = function() {
  return this.decoder_.getCursor();
};
jspb.BinaryReader.prototype.isEndGroup = function() {
  return this.nextWireType_ == jspb.BinaryConstants.WireType.END_GROUP;
};
jspb.BinaryReader.prototype.getError = function() {
  return this.error_ || this.decoder_.getError();
};
jspb.BinaryReader.prototype.setBlock = function(bytes, start, length) {
  this.decoder_.setBlock(bytes, start, length);
  this.nextField_ = jspb.BinaryConstants.INVALID_FIELD_NUMBER;
  this.nextWireType_ = jspb.BinaryConstants.WireType.INVALID;
};
jspb.BinaryReader.prototype.reset = function() {
  this.decoder_.reset();
  this.nextField_ = jspb.BinaryConstants.INVALID_FIELD_NUMBER;
  this.nextWireType_ = jspb.BinaryConstants.WireType.INVALID;
};
jspb.BinaryReader.prototype.advance = function(count) {
  this.decoder_.advance(count);
};
jspb.BinaryReader.prototype.nextField = function() {
  if (this.decoder_.atEnd()) {
    return !1;
  }
  if (this.getError()) {
    return goog.asserts.fail("Decoder hit an error"), !1;
  }
  var header = this.decoder_.readUnsignedVarint32();
  var nextField = header >>> 3;
  var nextWireType = header & 7;
  if (nextWireType != jspb.BinaryConstants.WireType.VARINT && nextWireType != jspb.BinaryConstants.WireType.FIXED32 && nextWireType != jspb.BinaryConstants.WireType.FIXED64 && nextWireType != jspb.BinaryConstants.WireType.DELIMITED && nextWireType != jspb.BinaryConstants.WireType.START_GROUP && nextWireType != jspb.BinaryConstants.WireType.END_GROUP) {
    return goog.asserts.fail("Invalid wire type"), this.error_ = !0, !1;
  }
  this.nextField_ = nextField;
  this.nextWireType_ = nextWireType;
  return !0;
};
jspb.BinaryReader.prototype.skipVarintField = function() {
  this.nextWireType_ != jspb.BinaryConstants.WireType.VARINT ? (goog.asserts.fail("Invalid wire type for skipVarintField"), this.skipField()) : this.decoder_.skipVarint();
};
jspb.BinaryReader.prototype.skipDelimitedField = function() {
  if (this.nextWireType_ != jspb.BinaryConstants.WireType.DELIMITED) {
    goog.asserts.fail("Invalid wire type for skipDelimitedField"), this.skipField();
  } else {
    var length = this.decoder_.readUnsignedVarint32();
    this.decoder_.advance(length);
  }
};
jspb.BinaryReader.prototype.skipFixed32Field = function() {
  this.nextWireType_ != jspb.BinaryConstants.WireType.FIXED32 ? (goog.asserts.fail("Invalid wire type for skipFixed32Field"), this.skipField()) : this.decoder_.advance(4);
};
jspb.BinaryReader.prototype.skipFixed64Field = function() {
  this.nextWireType_ != jspb.BinaryConstants.WireType.FIXED64 ? (goog.asserts.fail("Invalid wire type for skipFixed64Field"), this.skipField()) : this.decoder_.advance(8);
};
jspb.BinaryReader.prototype.skipGroup = function() {
  var nestedGroups = [this.nextField_];
  do {
    if (!this.nextField()) {
      goog.asserts.fail("Unmatched start-group tag: stream EOF");
      this.error_ = !0;
      break;
    }
    if (this.nextWireType_ == jspb.BinaryConstants.WireType.START_GROUP) {
      nestedGroups.push(this.nextField_);
    } else {
      if (this.nextWireType_ == jspb.BinaryConstants.WireType.END_GROUP && this.nextField_ != nestedGroups.pop()) {
        goog.asserts.fail("Unmatched end-group tag");
        this.error_ = !0;
        break;
      }
    }
  } while (0 < nestedGroups.length);
};
jspb.BinaryReader.prototype.skipField = function() {
  switch(this.nextWireType_) {
    case jspb.BinaryConstants.WireType.VARINT:
      this.skipVarintField();
      break;
    case jspb.BinaryConstants.WireType.FIXED64:
      this.skipFixed64Field();
      break;
    case jspb.BinaryConstants.WireType.DELIMITED:
      this.skipDelimitedField();
      break;
    case jspb.BinaryConstants.WireType.FIXED32:
      this.skipFixed32Field();
      break;
    case jspb.BinaryConstants.WireType.START_GROUP:
      this.skipGroup();
      break;
    default:
      goog.asserts.fail("Invalid wire encoding for field.");
  }
};
jspb.BinaryReader.prototype.readMessage = function(message, reader) {
  goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.DELIMITED);
  var oldEnd = this.decoder_.getEnd();
  var length = this.decoder_.readUnsignedVarint32();
  var newEnd = this.decoder_.getCursor() + length;
  this.decoder_.setEnd(newEnd);
  reader(message, this);
  this.decoder_.setCursor(newEnd);
  this.decoder_.setEnd(oldEnd);
};
jspb.BinaryReader.prototype.readEnum = function() {
  goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.VARINT);
  return this.decoder_.readSignedVarint64();
};
jspb.BinaryReader.prototype.readString = function() {
  goog.asserts.assert(this.nextWireType_ == jspb.BinaryConstants.WireType.DELIMITED);
  var length = this.decoder_.readUnsignedVarint32();
  return this.decoder_.readString(length);
};
jspb.BinaryWriter = function() {
  this.blocks_ = [];
  this.totalLength_ = 0;
  this.encoder_ = new jspb.BinaryEncoder;
};
jspb.BinaryWriter.prototype.beginDelimited_ = function(field) {
  this.writeFieldHeader_(field, jspb.BinaryConstants.WireType.DELIMITED);
  var bookmark = this.encoder_.end();
  this.blocks_.push(bookmark);
  this.totalLength_ += bookmark.length;
  bookmark.push(this.totalLength_);
  return bookmark;
};
jspb.BinaryWriter.prototype.endDelimited_ = function(bookmark) {
  var oldLength = bookmark.pop();
  var messageLength = this.totalLength_ + this.encoder_.length() - oldLength;
  for (goog.asserts.assert(0 <= messageLength); 127 < messageLength;) {
    bookmark.push(messageLength & 127 | 128), messageLength >>>= 7, this.totalLength_++;
  }
  bookmark.push(messageLength);
  this.totalLength_++;
};
jspb.BinaryWriter.prototype.reset = function() {
  this.blocks_ = [];
  this.encoder_.end();
  this.totalLength_ = 0;
};
jspb.BinaryWriter.prototype.writeFieldHeader_ = function(field, wireType) {
  goog.asserts.assert(1 <= field && field == Math.floor(field));
  var x = 8 * field + wireType;
  this.encoder_.writeUnsignedVarint32(x);
};
jspb.BinaryWriter.prototype.writeEnum = function(field, value) {
  null != value && (goog.asserts.assert(value >= -jspb.BinaryConstants.TWO_TO_31 && value < jspb.BinaryConstants.TWO_TO_31), this.writeFieldHeader_(field, jspb.BinaryConstants.WireType.VARINT), this.encoder_.writeSignedVarint32(value));
};
jspb.BinaryWriter.prototype.writeString = function(field, value) {
  if (null != value) {
    var bookmark = this.beginDelimited_(field);
    this.encoder_.writeString(value);
    this.endDelimited_(bookmark);
  }
};
jspb.BinaryWriter.prototype.writeMessage = function(field, value, writerCallback) {
  if (null != value) {
    var bookmark = this.beginDelimited_(field);
    writerCallback(value, this);
    this.endDelimited_(bookmark);
  }
};
jspb.BinaryWriter.prototype.writeRepeatedMessage = function(field, value, writerCallback) {
  if (null != value) {
    for (var i = 0; i < value.length; i++) {
      var bookmark = this.beginDelimited_(field);
      writerCallback(value[i], this);
      this.endDelimited_(bookmark);
    }
  }
};
jspb.Map = function(arr, opt_valueCtor) {
  this.arr_ = arr;
  this.valueCtor_ = opt_valueCtor;
  this.map_ = {};
  this.arrClean = !0;
  0 < this.arr_.length && this.loadFromArray_();
};
jspb.Map.prototype.loadFromArray_ = function() {
  for (var i = 0; i < this.arr_.length; i++) {
    var record = this.arr_[i];
    var key = record[0];
    var value = record[1];
    this.map_[key.toString()] = new jspb.Map.Entry_(key, value);
  }
  this.arrClean = !0;
};
jspb.Map.prototype.toArray = function() {
  if (this.arrClean) {
    if (this.valueCtor_) {
      var m = this.map_;
      for (var p in m) {
        if (Object.prototype.hasOwnProperty.call(m, p)) {
          var valueWrapper = m[p].valueWrapper;
          valueWrapper && valueWrapper.toArray();
        }
      }
    }
  } else {
    this.arr_.length = 0;
    var strKeys = this.stringKeys_();
    strKeys.sort();
    for (var i = 0; i < strKeys.length; i++) {
      var entry = this.map_[strKeys[i]];
      valueWrapper = entry.valueWrapper;
      valueWrapper && valueWrapper.toArray();
      this.arr_.push([entry.key, entry.value]);
    }
    this.arrClean = !0;
  }
  return this.arr_;
};
jspb.Map.prototype.toObject = function(includeInstance, valueToObject) {
  var rawArray = this.toArray();
  var entries = [];
  for (var i = 0; i < rawArray.length; i++) {
    var entry = this.map_[rawArray[i][0].toString()];
    this.wrapEntry_(entry);
    var valueWrapper = entry.valueWrapper;
    valueWrapper ? (goog.asserts.assert(valueToObject), entries.push([entry.key, valueToObject(includeInstance, valueWrapper)])) : entries.push([entry.key, entry.value]);
  }
  return entries;
};
jspb.Map.fromObject = function(entries, valueCtor, valueFromObject) {
  var result = new jspb.Map([], valueCtor);
  for (var i = 0; i < entries.length; i++) {
    var key = entries[i][0];
    var value = valueFromObject(entries[i][1]);
    result.set(key, value);
  }
  return result;
};
jspb.Map.ArrayIteratorIterable_ = function(arr) {
  this.idx_ = 0;
  this.arr_ = arr;
};
jspb.Map.ArrayIteratorIterable_.prototype.next = function() {
  return this.idx_ < this.arr_.length ? {done:!1, value:this.arr_[this.idx_++]} : {done:!0, value:void 0};
};
"undefined" != typeof Symbol && (jspb.Map.ArrayIteratorIterable_.prototype[Symbol.iterator] = function() {
  return this;
});
jspb.Map.prototype.getLength = function() {
  return this.stringKeys_().length;
};
jspb.Map.prototype.clear = function() {
  this.map_ = {};
  this.arrClean = !1;
};
jspb.Map.prototype.entries = function() {
  var entries = [];
  var strKeys = this.stringKeys_();
  strKeys.sort();
  for (var i = 0; i < strKeys.length; i++) {
    var entry = this.map_[strKeys[i]];
    entries.push([entry.key, this.wrapEntry_(entry)]);
  }
  return new jspb.Map.ArrayIteratorIterable_(entries);
};
jspb.Map.prototype.keys = function() {
  var keys = [];
  var strKeys = this.stringKeys_();
  strKeys.sort();
  for (var i = 0; i < strKeys.length; i++) {
    var entry = this.map_[strKeys[i]];
    keys.push(entry.key);
  }
  return new jspb.Map.ArrayIteratorIterable_(keys);
};
jspb.Map.prototype.values = function() {
  var values = [];
  var strKeys = this.stringKeys_();
  strKeys.sort();
  for (var i = 0; i < strKeys.length; i++) {
    var entry = this.map_[strKeys[i]];
    values.push(this.wrapEntry_(entry));
  }
  return new jspb.Map.ArrayIteratorIterable_(values);
};
jspb.Map.prototype.forEach = function(cb, opt_thisArg) {
  var strKeys = this.stringKeys_();
  strKeys.sort();
  for (var i = 0; i < strKeys.length; i++) {
    var entry = this.map_[strKeys[i]];
    cb.call(opt_thisArg, this.wrapEntry_(entry), entry.key, this);
  }
};
jspb.Map.prototype.set = function(key, value) {
  var entry = new jspb.Map.Entry_(key);
  this.valueCtor_ ? (entry.valueWrapper = value, entry.value = value.toArray()) : entry.value = value;
  this.map_[key.toString()] = entry;
  this.arrClean = !1;
  return this;
};
jspb.Map.prototype.wrapEntry_ = function(entry) {
  return this.valueCtor_ ? (entry.valueWrapper || (entry.valueWrapper = new this.valueCtor_(entry.value)), entry.valueWrapper) : entry.value;
};
jspb.Map.prototype.get = function(key) {
  var keyValue = key.toString();
  var entry = this.map_[keyValue];
  if (entry) {
    return this.wrapEntry_(entry);
  }
};
jspb.Map.prototype.has = function(key) {
  var keyValue = key.toString();
  return keyValue in this.map_;
};
jspb.Map.deserializeBinary = function(map, reader, keyReaderFn, valueReaderFn, opt_valueReaderCallback) {
  var key = void 0;
  for (var value = void 0; reader.nextField() && !reader.isEndGroup();) {
    var field = reader.nextField_;
    1 == field ? key = keyReaderFn.call(reader) : 2 == field && (map.valueCtor_ ? (value = new map.valueCtor_, valueReaderFn.call(reader, value, opt_valueReaderCallback)) : value = valueReaderFn.call(reader));
  }
  goog.asserts.assert(void 0 != key);
  goog.asserts.assert(void 0 != value);
  map.set(key, value);
};
jspb.Map.prototype.stringKeys_ = function() {
  var m = this.map_;
  var ret = [];
  for (var p in m) {
    Object.prototype.hasOwnProperty.call(m, p) && ret.push(p);
  }
  return ret;
};
jspb.Map.Entry_ = function(key, opt_value) {
  this.key = key;
  this.value = opt_value;
  this.valueWrapper = void 0;
};
jspb.ExtensionFieldInfo = function(fieldNumber, fieldName, ctor, toObjectFn, isRepeated) {
  this.fieldIndex = fieldNumber;
  this.fieldName = fieldName;
  this.ctor = ctor;
  this.toObjectFn = toObjectFn;
  this.isRepeated = isRepeated;
};
jspb.ExtensionFieldBinaryInfo = function(fieldInfo, binaryReaderFn, binaryWriterFn, opt_binaryMessageSerializeFn, opt_binaryMessageDeserializeFn, opt_isPacked) {
  this.fieldInfo = fieldInfo;
  this.binaryReaderFn = binaryReaderFn;
  this.binaryWriterFn = binaryWriterFn;
  this.binaryMessageSerializeFn = opt_binaryMessageSerializeFn;
  this.binaryMessageDeserializeFn = opt_binaryMessageDeserializeFn;
  this.isPacked = opt_isPacked;
};
jspb.ExtensionFieldInfo.prototype.isMessageType = function() {
  return !!this.ctor;
};
jspb.Message = function() {
};
jspb.Message.GENERATE_TO_OBJECT = !0;
jspb.Message.GENERATE_FROM_OBJECT = !goog.DISALLOW_TEST_ONLY_CODE;
jspb.Message.GENERATE_TO_STRING = !0;
jspb.Message.ASSUME_LOCAL_ARRAYS = !1;
jspb.Message.MINIMIZE_MEMORY_ALLOCATIONS = !0;
jspb.Message.SUPPORTS_UINT8ARRAY_ = "function" == typeof Uint8Array;
jspb.Message.getIndex_ = function(msg, fieldNumber) {
  return fieldNumber + msg.arrayIndexOffset_;
};
jspb.Message.initialize = function(msg, data, messageId, suggestedPivot, repeatedFields, opt_oneofFields) {
  msg.wrappers_ = jspb.Message.MINIMIZE_MEMORY_ALLOCATIONS ? null : {};
  data || (data = messageId ? [messageId] : []);
  msg.messageId_ = messageId ? String(messageId) : void 0;
  msg.arrayIndexOffset_ = 0 === messageId ? -1 : 0;
  msg.array = data;
  jspb.Message.initPivotAndExtensionObject_(msg, suggestedPivot);
  msg.convertedFloatingPointFields_ = {};
  if (repeatedFields) {
    for (var i = 0; i < repeatedFields.length; i++) {
      var fieldNumber = repeatedFields[i];
      if (fieldNumber < msg.pivot_) {
        var index = jspb.Message.getIndex_(msg, fieldNumber);
        msg.array[index] = msg.array[index] || (jspb.Message.MINIMIZE_MEMORY_ALLOCATIONS ? jspb.Message.EMPTY_LIST_SENTINEL_ : []);
      } else {
        jspb.Message.maybeInitEmptyExtensionObject_(msg), msg.extensionObject_[fieldNumber] = msg.extensionObject_[fieldNumber] || (jspb.Message.MINIMIZE_MEMORY_ALLOCATIONS ? jspb.Message.EMPTY_LIST_SENTINEL_ : []);
      }
    }
  }
  opt_oneofFields && opt_oneofFields.length && goog.array.forEach(opt_oneofFields, goog.partial(jspb.Message.computeOneofCase, msg));
};
jspb.Message.EMPTY_LIST_SENTINEL_ = goog.DEBUG && Object.freeze ? Object.freeze([]) : [];
jspb.Message.isArray_ = function(o) {
  return jspb.Message.ASSUME_LOCAL_ARRAYS ? o instanceof Array : goog.isArray(o);
};
jspb.Message.initPivotAndExtensionObject_ = function(msg, suggestedPivot) {
  if (msg.array.length) {
    var foundIndex = msg.array.length - 1;
    var obj = msg.array[foundIndex];
    if (obj && "object" == typeof obj && !jspb.Message.isArray_(obj) && !(jspb.Message.SUPPORTS_UINT8ARRAY_ && obj instanceof Uint8Array)) {
      msg.pivot_ = foundIndex - msg.arrayIndexOffset_;
      msg.extensionObject_ = obj;
      return;
    }
  }
  -1 < suggestedPivot ? (msg.pivot_ = suggestedPivot, msg.extensionObject_ = null) : msg.pivot_ = Number.MAX_VALUE;
};
jspb.Message.maybeInitEmptyExtensionObject_ = function(msg) {
  var pivotIndex = jspb.Message.getIndex_(msg, msg.pivot_);
  msg.array[pivotIndex] || (msg.extensionObject_ = msg.array[pivotIndex] = {});
};
jspb.Message.toObjectList = function(field, toObjectFn, opt_includeInstance) {
  var result = [];
  for (var i = 0; i < field.length; i++) {
    result[i] = toObjectFn.call(field[i], opt_includeInstance, field[i]);
  }
  return result;
};
jspb.Message.toObjectExtension = function(proto, obj, extensions, getExtensionFn, opt_includeInstance) {
  for (var fieldNumber in extensions) {
    var fieldInfo = extensions[fieldNumber];
    var value = getExtensionFn.call(proto, fieldInfo);
    if (null != value) {
      for (var name in fieldInfo.fieldName) {
        if (fieldInfo.fieldName.hasOwnProperty(name)) {
          break;
        }
      }
      obj[name] = fieldInfo.toObjectFn ? fieldInfo.isRepeated ? jspb.Message.toObjectList(value, fieldInfo.toObjectFn, opt_includeInstance) : fieldInfo.toObjectFn(opt_includeInstance, value) : value;
    }
  }
};
jspb.Message.serializeBinaryExtensions = function(proto, writer, extensions, getExtensionFn) {
  for (var fieldNumber in extensions) {
    var binaryFieldInfo = extensions[fieldNumber];
    var fieldInfo = binaryFieldInfo.fieldInfo;
    if (!binaryFieldInfo.binaryWriterFn) {
      throw Error("Message extension present that was generated without binary serialization support");
    }
    var value = getExtensionFn.call(proto, fieldInfo);
    if (null != value) {
      if (fieldInfo.isMessageType()) {
        if (binaryFieldInfo.binaryMessageSerializeFn) {
          binaryFieldInfo.binaryWriterFn.call(writer, fieldInfo.fieldIndex, value, binaryFieldInfo.binaryMessageSerializeFn);
        } else {
          throw Error("Message extension present holding submessage without binary support enabled, and message is being serialized to binary format");
        }
      } else {
        binaryFieldInfo.binaryWriterFn.call(writer, fieldInfo.fieldIndex, value);
      }
    }
  }
};
jspb.Message.readBinaryExtension = function(msg, reader, extensions, getExtensionFn, setExtensionFn) {
  var binaryFieldInfo = extensions[reader.nextField_];
  if (binaryFieldInfo) {
    var fieldInfo = binaryFieldInfo.fieldInfo;
    if (!binaryFieldInfo.binaryReaderFn) {
      throw Error("Deserializing extension whose generated code does not support binary format");
    }
    if (fieldInfo.isMessageType()) {
      var value = new fieldInfo.ctor;
      binaryFieldInfo.binaryReaderFn.call(reader, value, binaryFieldInfo.binaryMessageDeserializeFn);
    } else {
      value = binaryFieldInfo.binaryReaderFn.call(reader);
    }
    if (fieldInfo.isRepeated && !binaryFieldInfo.isPacked) {
      var currentList = getExtensionFn.call(msg, fieldInfo);
      currentList ? currentList.push(value) : setExtensionFn.call(msg, fieldInfo, [value]);
    } else {
      setExtensionFn.call(msg, fieldInfo, value);
    }
  } else {
    reader.skipField();
  }
};
jspb.Message.getField = function(msg, fieldNumber) {
  if (fieldNumber < msg.pivot_) {
    var index = jspb.Message.getIndex_(msg, fieldNumber);
    var val = msg.array[index];
    return val === jspb.Message.EMPTY_LIST_SENTINEL_ ? msg.array[index] = [] : val;
  }
  if (msg.extensionObject_) {
    return val = msg.extensionObject_[fieldNumber], val === jspb.Message.EMPTY_LIST_SENTINEL_ ? msg.extensionObject_[fieldNumber] = [] : val;
  }
};
jspb.Message.getRepeatedField = function(msg, fieldNumber) {
  if (fieldNumber < msg.pivot_) {
    var index = jspb.Message.getIndex_(msg, fieldNumber);
    var val = msg.array[index];
    return val === jspb.Message.EMPTY_LIST_SENTINEL_ ? msg.array[index] = [] : val;
  }
  val = msg.extensionObject_[fieldNumber];
  return val === jspb.Message.EMPTY_LIST_SENTINEL_ ? msg.extensionObject_[fieldNumber] = [] : val;
};
jspb.Message.getOptionalFloatingPointField = function(msg, fieldNumber) {
  var value = jspb.Message.getField(msg, fieldNumber);
  return null == value ? value : +value;
};
jspb.Message.getRepeatedFloatingPointField = function(msg, fieldNumber) {
  var values = jspb.Message.getRepeatedField(msg, fieldNumber);
  msg.convertedFloatingPointFields_ || (msg.convertedFloatingPointFields_ = {});
  if (!msg.convertedFloatingPointFields_[fieldNumber]) {
    for (var i = 0; i < values.length; i++) {
      values[i] = +values[i];
    }
    msg.convertedFloatingPointFields_[fieldNumber] = !0;
  }
  return values;
};
jspb.Message.bytesAsB64 = function(value) {
  if (null == value || goog.isString(value)) {
    return value;
  }
  if (jspb.Message.SUPPORTS_UINT8ARRAY_ && value instanceof Uint8Array) {
    return goog.crypt.base64.encodeByteArray(value);
  }
  goog.asserts.fail("Cannot coerce to b64 string: " + goog.typeOf(value));
  return null;
};
jspb.Message.bytesAsU8 = function(value) {
  if (null == value || value instanceof Uint8Array) {
    return value;
  }
  if (goog.isString(value)) {
    return goog.crypt.base64.decodeStringToUint8Array(value);
  }
  goog.asserts.fail("Cannot coerce to Uint8Array: " + goog.typeOf(value));
  return null;
};
jspb.Message.bytesListAsB64 = function(value) {
  jspb.Message.assertConsistentTypes_(value);
  return !value.length || goog.isString(value[0]) ? value : goog.array.map(value, jspb.Message.bytesAsB64);
};
jspb.Message.bytesListAsU8 = function(value) {
  jspb.Message.assertConsistentTypes_(value);
  return !value.length || value[0] instanceof Uint8Array ? value : goog.array.map(value, jspb.Message.bytesAsU8);
};
jspb.Message.assertConsistentTypes_ = function(array) {
  if (goog.DEBUG && array && 1 < array.length) {
    var expected = goog.typeOf(array[0]);
    goog.array.forEach(array, function(e) {
      goog.typeOf(e) != expected && goog.asserts.fail("Inconsistent type in JSPB repeated field array. Got " + goog.typeOf(e) + " expected " + expected);
    });
  }
};
jspb.Message.getFieldWithDefault = function(msg, fieldNumber, defaultValue) {
  var value = jspb.Message.getField(msg, fieldNumber);
  return null == value ? defaultValue : value;
};
jspb.Message.getFieldProto3 = jspb.Message.getFieldWithDefault;
jspb.Message.getMapField = function(msg, fieldNumber, noLazyCreate, opt_valueCtor) {
  msg.wrappers_ || (msg.wrappers_ = {});
  if (fieldNumber in msg.wrappers_) {
    return msg.wrappers_[fieldNumber];
  }
  if (!noLazyCreate) {
    var arr = jspb.Message.getField(msg, fieldNumber);
    arr || (arr = [], jspb.Message.setField(msg, fieldNumber, arr));
    return msg.wrappers_[fieldNumber] = new jspb.Map(arr, opt_valueCtor);
  }
};
jspb.Message.setField = function(msg, fieldNumber, value) {
  fieldNumber < msg.pivot_ ? msg.array[jspb.Message.getIndex_(msg, fieldNumber)] = value : (jspb.Message.maybeInitEmptyExtensionObject_(msg), msg.extensionObject_[fieldNumber] = value);
};
jspb.Message.setProto3IntField = function(msg, fieldNumber, value) {
  jspb.Message.setFieldIgnoringDefault_(msg, fieldNumber, value, 0);
};
jspb.Message.setProto3FloatField = function(msg, fieldNumber, value) {
  jspb.Message.setFieldIgnoringDefault_(msg, fieldNumber, value, 0.0);
};
jspb.Message.setProto3BooleanField = function(msg, fieldNumber, value) {
  jspb.Message.setFieldIgnoringDefault_(msg, fieldNumber, value, !1);
};
jspb.Message.setProto3StringField = function(msg, fieldNumber, value) {
  jspb.Message.setFieldIgnoringDefault_(msg, fieldNumber, value, "");
};
jspb.Message.setProto3BytesField = function(msg, fieldNumber, value) {
  jspb.Message.setFieldIgnoringDefault_(msg, fieldNumber, value, "");
};
jspb.Message.setProto3EnumField = function(msg, fieldNumber, value) {
  jspb.Message.setFieldIgnoringDefault_(msg, fieldNumber, value, 0);
};
jspb.Message.setProto3StringIntField = function(msg, fieldNumber, value) {
  jspb.Message.setFieldIgnoringDefault_(msg, fieldNumber, value, "0");
};
jspb.Message.setFieldIgnoringDefault_ = function(msg, fieldNumber, value, defaultValue) {
  value != defaultValue ? jspb.Message.setField(msg, fieldNumber, value) : msg.array[jspb.Message.getIndex_(msg, fieldNumber)] = null;
};
jspb.Message.addToRepeatedField = function(msg, fieldNumber, value, opt_index) {
  var arr = jspb.Message.getRepeatedField(msg, fieldNumber);
  void 0 != opt_index ? arr.splice(opt_index, 0, value) : arr.push(value);
};
jspb.Message.setOneofField = function(msg, fieldNumber, oneof, value) {
  var currentCase = jspb.Message.computeOneofCase(msg, oneof);
  currentCase && currentCase !== fieldNumber && void 0 !== value && (msg.wrappers_ && currentCase in msg.wrappers_ && (msg.wrappers_[currentCase] = void 0), jspb.Message.setField(msg, currentCase, void 0));
  jspb.Message.setField(msg, fieldNumber, value);
};
jspb.Message.computeOneofCase = function(msg, oneof) {
  var oneofField;
  var oneofValue;
  goog.array.forEach(oneof, function(fieldNumber) {
    var value = jspb.Message.getField(msg, fieldNumber);
    goog.isDefAndNotNull(value) && (oneofField = fieldNumber, oneofValue = value, jspb.Message.setField(msg, fieldNumber, void 0));
  });
  return oneofField ? (jspb.Message.setField(msg, oneofField, oneofValue), oneofField) : 0;
};
jspb.Message.getWrapperField = function(msg, ctor, fieldNumber, opt_required) {
  msg.wrappers_ || (msg.wrappers_ = {});
  if (!msg.wrappers_[fieldNumber]) {
    var data = jspb.Message.getField(msg, fieldNumber);
    if (opt_required || data) {
      msg.wrappers_[fieldNumber] = new ctor(data);
    }
  }
  return msg.wrappers_[fieldNumber];
};
jspb.Message.getRepeatedWrapperField = function(msg, ctor, fieldNumber) {
  jspb.Message.wrapRepeatedField_(msg, ctor, fieldNumber);
  var val = msg.wrappers_[fieldNumber];
  val == jspb.Message.EMPTY_LIST_SENTINEL_ && (val = msg.wrappers_[fieldNumber] = []);
  return val;
};
jspb.Message.wrapRepeatedField_ = function(msg, ctor, fieldNumber) {
  msg.wrappers_ || (msg.wrappers_ = {});
  if (!msg.wrappers_[fieldNumber]) {
    var data = jspb.Message.getRepeatedField(msg, fieldNumber);
    var wrappers = [];
    for (var i = 0; i < data.length; i++) {
      wrappers[i] = new ctor(data[i]);
    }
    msg.wrappers_[fieldNumber] = wrappers;
  }
};
jspb.Message.setWrapperField = function(msg, fieldNumber, value) {
  msg.wrappers_ || (msg.wrappers_ = {});
  var data = value ? value.toArray() : value;
  msg.wrappers_[fieldNumber] = value;
  jspb.Message.setField(msg, fieldNumber, data);
};
jspb.Message.setOneofWrapperField = function(msg, fieldNumber, oneof, value) {
  msg.wrappers_ || (msg.wrappers_ = {});
  var data = value ? value.toArray() : value;
  msg.wrappers_[fieldNumber] = value;
  jspb.Message.setOneofField(msg, fieldNumber, oneof, data);
};
jspb.Message.setRepeatedWrapperField = function(msg, fieldNumber, value) {
  msg.wrappers_ || (msg.wrappers_ = {});
  value = value || [];
  var data = [];
  for (var i = 0; i < value.length; i++) {
    data[i] = value[i].toArray();
  }
  msg.wrappers_[fieldNumber] = value;
  jspb.Message.setField(msg, fieldNumber, data);
};
jspb.Message.addToRepeatedWrapperField = function(msg, fieldNumber, value, ctor, index) {
  jspb.Message.wrapRepeatedField_(msg, ctor, fieldNumber);
  var wrapperArray = msg.wrappers_[fieldNumber];
  wrapperArray || (wrapperArray = msg.wrappers_[fieldNumber] = []);
  var insertedValue = value ? value : new ctor;
  var array = jspb.Message.getRepeatedField(msg, fieldNumber);
  void 0 != index ? (wrapperArray.splice(index, 0, insertedValue), array.splice(index, 0, insertedValue.toArray())) : (wrapperArray.push(insertedValue), array.push(insertedValue.toArray()));
  return insertedValue;
};
jspb.Message.toMap = function(field, mapKeyGetterFn, opt_toObjectFn, opt_includeInstance) {
  var result = {};
  for (var i = 0; i < field.length; i++) {
    result[mapKeyGetterFn.call(field[i])] = opt_toObjectFn ? opt_toObjectFn.call(field[i], opt_includeInstance, field[i]) : field[i];
  }
  return result;
};
jspb.Message.prototype.syncMapFields_ = function() {
  if (this.wrappers_) {
    for (var fieldNumber in this.wrappers_) {
      var val = this.wrappers_[fieldNumber];
      if (goog.isArray(val)) {
        for (var i = 0; i < val.length; i++) {
          val[i] && val[i].toArray();
        }
      } else {
        val && val.toArray();
      }
    }
  }
};
jspb.Message.prototype.toArray = function() {
  this.syncMapFields_();
  return this.array;
};
jspb.Message.prototype.serialize = jspb.Message.SUPPORTS_UINT8ARRAY_ ? function() {
  var old_toJSON = Uint8Array.prototype.toJSON;
  Uint8Array.prototype.toJSON = function() {
    return goog.crypt.base64.encodeByteArray(this);
  };
  try {
    var result = JSON.stringify(this.toArray(), jspb.Message.serializeSpecialNumbers_);
  } finally {
    Uint8Array.prototype.toJSON = old_toJSON;
  }
  return result;
} : function() {
  return JSON.stringify(this.toArray(), jspb.Message.serializeSpecialNumbers_);
};
jspb.Message.serializeSpecialNumbers_ = function(key, value) {
  if (goog.isNumber(value)) {
    if (isNaN(value)) {
      return "NaN";
    }
    if (Infinity === value) {
      return "Infinity";
    }
    if (-Infinity === value) {
      return "-Infinity";
    }
  }
  return value;
};
jspb.Message.deserialize = function(ctor, data) {
  var msg = new ctor(data ? JSON.parse(data) : null);
  goog.asserts.assertInstanceof(msg, jspb.Message);
  return msg;
};
jspb.Message.buildMessageFromArray = function(data) {
  var messageCtor = jspb.Message.registry_[data[0]];
  if (!messageCtor) {
    throw Error("Unknown JsPb message type: " + data[0]);
  }
  return new messageCtor(data);
};
jspb.Message.GENERATE_TO_STRING && (jspb.Message.prototype.toString = function() {
  this.syncMapFields_();
  return this.array.toString();
});
jspb.Message.prototype.getExtension = function(fieldInfo) {
  if (this.extensionObject_) {
    this.wrappers_ || (this.wrappers_ = {});
    var fieldNumber = fieldInfo.fieldIndex;
    if (fieldInfo.isRepeated) {
      if (fieldInfo.isMessageType()) {
        return this.wrappers_[fieldNumber] || (this.wrappers_[fieldNumber] = goog.array.map(this.extensionObject_[fieldNumber] || [], function(arr) {
          return new fieldInfo.ctor(arr);
        })), this.wrappers_[fieldNumber];
      }
    } else {
      if (fieldInfo.isMessageType()) {
        return !this.wrappers_[fieldNumber] && this.extensionObject_[fieldNumber] && (this.wrappers_[fieldNumber] = new fieldInfo.ctor(this.extensionObject_[fieldNumber])), this.wrappers_[fieldNumber];
      }
    }
    return this.extensionObject_[fieldNumber];
  }
};
jspb.Message.difference = function(m1, m2) {
  if (!(m1 instanceof m2.constructor)) {
    throw Error("Messages have different types.");
  }
  var arr1 = m1.toArray();
  var arr2 = m2.toArray();
  var res = [];
  var start = 0;
  var length = arr1.length > arr2.length ? arr1.length : arr2.length;
  m1.messageId_ && (res[0] = m1.messageId_, start = 1);
  for (var i = start; i < length; i++) {
    jspb.Message.compareFields(arr1[i], arr2[i]) || (res[i] = arr2[i]);
  }
  return new m1.constructor(res);
};
jspb.Message.equals = function(m1, m2) {
  return m1 == m2 || !(!m1 || !m2) && m1 instanceof m2.constructor && jspb.Message.compareFields(m1.toArray(), m2.toArray());
};
jspb.Message.compareExtensions = function(extension1, extension2) {
  extension1 = extension1 || {};
  extension2 = extension2 || {};
  var keys = {};
  for (var name in extension1) {
    keys[name] = 0;
  }
  for (name in extension2) {
    keys[name] = 0;
  }
  for (name in keys) {
    if (!jspb.Message.compareFields(extension1[name], extension2[name])) {
      return !1;
    }
  }
  return !0;
};
jspb.Message.compareFields = function(field1, field2) {
  if (field1 == field2) {
    return !0;
  }
  if (!goog.isObject(field1) || !goog.isObject(field2) || field1.constructor != field2.constructor) {
    return !1;
  }
  if (jspb.Message.SUPPORTS_UINT8ARRAY_ && field1.constructor === Uint8Array) {
    var bytes1 = field1;
    var bytes2 = field2;
    if (bytes1.length != bytes2.length) {
      return !1;
    }
    for (var i = 0; i < bytes1.length; i++) {
      if (bytes1[i] != bytes2[i]) {
        return !1;
      }
    }
    return !0;
  }
  if (field1.constructor === Array) {
    var extension1 = void 0;
    var extension2 = void 0;
    var length = Math.max(field1.length, field2.length);
    for (i = 0; i < length; i++) {
      var val1 = field1[i];
      var val2 = field2[i];
      val1 && val1.constructor == Object && (goog.asserts.assert(void 0 === extension1), goog.asserts.assert(i === field1.length - 1), extension1 = val1, val1 = void 0);
      val2 && val2.constructor == Object && (goog.asserts.assert(void 0 === extension2), goog.asserts.assert(i === field2.length - 1), extension2 = val2, val2 = void 0);
      if (!jspb.Message.compareFields(val1, val2)) {
        return !1;
      }
    }
    return extension1 || extension2 ? (extension1 = extension1 || {}, extension2 = extension2 || {}, jspb.Message.compareExtensions(extension1, extension2)) : !0;
  }
  if (field1.constructor === Object) {
    return jspb.Message.compareExtensions(field1, field2);
  }
  throw Error("Invalid type in JSPB array");
};
jspb.Message.prototype.cloneMessage = function() {
  return jspb.Message.cloneMessage(this);
};
jspb.Message.prototype.clone = function() {
  return jspb.Message.cloneMessage(this);
};
jspb.Message.clone = function(msg) {
  return jspb.Message.cloneMessage(msg);
};
jspb.Message.cloneMessage = function(msg) {
  return new msg.constructor(jspb.Message.clone_(msg.toArray()));
};
jspb.Message.copyInto = function(fromMessage, toMessage) {
  goog.asserts.assertInstanceof(fromMessage, jspb.Message);
  goog.asserts.assertInstanceof(toMessage, jspb.Message);
  goog.asserts.assert(fromMessage.constructor == toMessage.constructor, "Copy source and target message should have the same type.");
  var copyOfFrom = jspb.Message.clone(fromMessage);
  var to = toMessage.toArray();
  var from = copyOfFrom.toArray();
  to.length = 0;
  for (var i = 0; i < from.length; i++) {
    to[i] = from[i];
  }
  toMessage.wrappers_ = copyOfFrom.wrappers_;
  toMessage.extensionObject_ = copyOfFrom.extensionObject_;
};
jspb.Message.clone_ = function(obj) {
  var o;
  if (goog.isArray(obj)) {
    var clonedArray = Array(obj.length);
    for (var i = 0; i < obj.length; i++) {
      null != (o = obj[i]) && (clonedArray[i] = "object" == typeof o ? jspb.Message.clone_(o) : o);
    }
    return clonedArray;
  }
  if (jspb.Message.SUPPORTS_UINT8ARRAY_ && obj instanceof Uint8Array) {
    return new Uint8Array(obj);
  }
  var clone = {};
  for (var key in obj) {
    null != (o = obj[key]) && (clone[key] = "object" == typeof o ? jspb.Message.clone_(o) : o);
  }
  return clone;
};
jspb.Message.registerMessageType = function(id, constructor) {
  jspb.Message.registry_[id] = constructor;
  constructor.messageId = id;
};
jspb.Message.registry_ = {};
jspb.Message.messageSetExtensions = {};
jspb.Message.messageSetExtensionsBinary = {};
var wiz = {Attribute:{CONTROLLER:"jscontroller", DATA:"jsdata", MODEL:"jsmodel", NAME:"jsname", LAZY:"jslazy", SHADOW:"jsshadow", IS_OWNER:"__IS_OWNER", OWNER:"jsowner"}};
var jsaction = {Attribute:{JSACTION:"jsaction", JSNAMESPACE:"jsnamespace", OI:"oi", VED:"ved", VET:"vet", JSINSTANCE:"jsinstance", JSTRACK:"jstrack"}, Branch:{MAIN:"main-actionflow-branch"}, Char:{NAMESPACE_ACTION_SEPARATOR:".", EVENT_ACTION_SEPARATOR:":", OI_SEPARATOR:".", CAD_KEY_VALUE_SEPARATOR:":", CAD_SEPARATOR:","}, EventType:{AUXCLICK:"auxclick", CLICK:"click", CLICKMOD:"clickmod", CLICKONLY:"clickonly", DBLCLICK:"dblclick", FOCUS:"focus", FOCUSIN:"focusin", BLUR:"blur", FOCUSOUT:"focusout", 
SUBMIT:"submit", KEYDOWN:"keydown", KEYPRESS:"keypress", KEYUP:"keyup", MOUSEUP:"mouseup", MOUSEDOWN:"mousedown", MOUSEOVER:"mouseover", MOUSEOUT:"mouseout", MOUSEENTER:"mouseenter", MOUSELEAVE:"mouseleave", MOUSEMOVE:"mousemove", ERROR:"error", LOAD:"load", UNLOAD:"unload", TOUCHSTART:"touchstart", TOUCHEND:"touchend", TOUCHMOVE:"touchmove", INPUT:"input", SCROLL:"scroll", CUSTOM:"_custom"}, KeyCodes:{MAC_ENTER:3, ENTER:13, SPACE:32}, TagName:{TEXTAREA:"TEXTAREA", INPUT:"INPUT", BUTTON:"BUTTON", 
A:"A"}, Name:{START:"start", CAD:"cad", DUP:"dup"}, Tick:{IMP0:"imp0", IMP1:"imp1"}, Property:{JSACTION:"__jsaction", JSNAMESPACE:"__jsnamespace", OI:"__oi", OWNER:"__owner"}, UrlParam:{CLICK_TYPE:"ct", CLICK_DATA:"cd", CLICK_ADDITIONAL_DATA:"cad", EVENT_ID:"ei", VISUAL_ELEMENT_CLICK:"ved", VISUAL_ELEMENT_TYPE:"vet"}};
wiz.Property = {DATA:"__data", DISPATCHER:"__wizdispatcher", MANAGER:"__wizmanager", CONTROLLER:"__jscontroller", MODEL:"__jsmodel", OWNER:jsaction.Property.OWNER, OWNED:"__owned", EVENT_SOURCE:"__source"};
goog.async = {};
goog.async.FreeList = function(create, reset, limit) {
  this.limit_ = limit;
  this.create_ = create;
  this.reset_ = reset;
  this.occupants_ = 0;
  this.head_ = null;
};
goog.async.FreeList.prototype.get = function() {
  if (0 < this.occupants_) {
    this.occupants_--;
    var item = this.head_;
    this.head_ = item.next;
    item.next = null;
  } else {
    item = this.create_();
  }
  return item;
};
goog.async.FreeList.prototype.put = function(item) {
  this.reset_(item);
  this.occupants_ < this.limit_ && (this.occupants_++, item.next = this.head_, this.head_ = item);
};
goog.debug.entryPointRegistry = {};
goog.debug.EntryPointMonitor = function() {
};
goog.debug.entryPointRegistry.refList_ = [];
goog.debug.entryPointRegistry.monitors_ = [];
goog.debug.entryPointRegistry.monitorsMayExist_ = !1;
goog.debug.entryPointRegistry.register = function(callback) {
  goog.debug.entryPointRegistry.refList_[goog.debug.entryPointRegistry.refList_.length] = callback;
  if (goog.debug.entryPointRegistry.monitorsMayExist_) {
    var monitors = goog.debug.entryPointRegistry.monitors_;
    for (var i = 0; i < monitors.length; i++) {
      callback(goog.bind(monitors[i].wrap, monitors[i]));
    }
  }
};
goog.debug.entryPointRegistry.monitorAll = function(monitor) {
  goog.debug.entryPointRegistry.monitorsMayExist_ = !0;
  var transformer = goog.bind(monitor.wrap, monitor);
  for (var i = 0; i < goog.debug.entryPointRegistry.refList_.length; i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer);
  }
  goog.debug.entryPointRegistry.monitors_.push(monitor);
};
goog.debug.entryPointRegistry.unmonitorAllIfPossible = function(monitor) {
  var monitors = goog.debug.entryPointRegistry.monitors_;
  goog.asserts.assert(monitor == monitors[monitors.length - 1], "Only the most recent monitor can be unwrapped.");
  var transformer = goog.bind(monitor.unwrap, monitor);
  for (var i = 0; i < goog.debug.entryPointRegistry.refList_.length; i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer);
  }
  monitors.length--;
};
goog.dom.HtmlElement = function() {
};
goog.dom.TagName = function(tagName) {
  this.tagName_ = tagName;
};
goog.dom.TagName.prototype.toString = function() {
  return this.tagName_;
};
goog.dom.TagName.A = new goog.dom.TagName("A");
goog.dom.TagName.ABBR = new goog.dom.TagName("ABBR");
goog.dom.TagName.ACRONYM = new goog.dom.TagName("ACRONYM");
goog.dom.TagName.ADDRESS = new goog.dom.TagName("ADDRESS");
goog.dom.TagName.APPLET = new goog.dom.TagName("APPLET");
goog.dom.TagName.AREA = new goog.dom.TagName("AREA");
goog.dom.TagName.ARTICLE = new goog.dom.TagName("ARTICLE");
goog.dom.TagName.ASIDE = new goog.dom.TagName("ASIDE");
goog.dom.TagName.AUDIO = new goog.dom.TagName("AUDIO");
goog.dom.TagName.B = new goog.dom.TagName("B");
goog.dom.TagName.BASE = new goog.dom.TagName("BASE");
goog.dom.TagName.BASEFONT = new goog.dom.TagName("BASEFONT");
goog.dom.TagName.BDI = new goog.dom.TagName("BDI");
goog.dom.TagName.BDO = new goog.dom.TagName("BDO");
goog.dom.TagName.BIG = new goog.dom.TagName("BIG");
goog.dom.TagName.BLOCKQUOTE = new goog.dom.TagName("BLOCKQUOTE");
goog.dom.TagName.BODY = new goog.dom.TagName("BODY");
goog.dom.TagName.BR = new goog.dom.TagName("BR");
goog.dom.TagName.BUTTON = new goog.dom.TagName("BUTTON");
goog.dom.TagName.CANVAS = new goog.dom.TagName("CANVAS");
goog.dom.TagName.CAPTION = new goog.dom.TagName("CAPTION");
goog.dom.TagName.CENTER = new goog.dom.TagName("CENTER");
goog.dom.TagName.CITE = new goog.dom.TagName("CITE");
goog.dom.TagName.CODE = new goog.dom.TagName("CODE");
goog.dom.TagName.COL = new goog.dom.TagName("COL");
goog.dom.TagName.COLGROUP = new goog.dom.TagName("COLGROUP");
goog.dom.TagName.COMMAND = new goog.dom.TagName("COMMAND");
goog.dom.TagName.DATA = new goog.dom.TagName("DATA");
goog.dom.TagName.DATALIST = new goog.dom.TagName("DATALIST");
goog.dom.TagName.DD = new goog.dom.TagName("DD");
goog.dom.TagName.DEL = new goog.dom.TagName("DEL");
goog.dom.TagName.DETAILS = new goog.dom.TagName("DETAILS");
goog.dom.TagName.DFN = new goog.dom.TagName("DFN");
goog.dom.TagName.DIALOG = new goog.dom.TagName("DIALOG");
goog.dom.TagName.DIR = new goog.dom.TagName("DIR");
goog.dom.TagName.DIV = new goog.dom.TagName("DIV");
goog.dom.TagName.DL = new goog.dom.TagName("DL");
goog.dom.TagName.DT = new goog.dom.TagName("DT");
goog.dom.TagName.EM = new goog.dom.TagName("EM");
goog.dom.TagName.EMBED = new goog.dom.TagName("EMBED");
goog.dom.TagName.FIELDSET = new goog.dom.TagName("FIELDSET");
goog.dom.TagName.FIGCAPTION = new goog.dom.TagName("FIGCAPTION");
goog.dom.TagName.FIGURE = new goog.dom.TagName("FIGURE");
goog.dom.TagName.FONT = new goog.dom.TagName("FONT");
goog.dom.TagName.FOOTER = new goog.dom.TagName("FOOTER");
goog.dom.TagName.FORM = new goog.dom.TagName("FORM");
goog.dom.TagName.FRAME = new goog.dom.TagName("FRAME");
goog.dom.TagName.FRAMESET = new goog.dom.TagName("FRAMESET");
goog.dom.TagName.H1 = new goog.dom.TagName("H1");
goog.dom.TagName.H2 = new goog.dom.TagName("H2");
goog.dom.TagName.H3 = new goog.dom.TagName("H3");
goog.dom.TagName.H4 = new goog.dom.TagName("H4");
goog.dom.TagName.H5 = new goog.dom.TagName("H5");
goog.dom.TagName.H6 = new goog.dom.TagName("H6");
goog.dom.TagName.HEAD = new goog.dom.TagName("HEAD");
goog.dom.TagName.HEADER = new goog.dom.TagName("HEADER");
goog.dom.TagName.HGROUP = new goog.dom.TagName("HGROUP");
goog.dom.TagName.HR = new goog.dom.TagName("HR");
goog.dom.TagName.HTML = new goog.dom.TagName("HTML");
goog.dom.TagName.I = new goog.dom.TagName("I");
goog.dom.TagName.IFRAME = new goog.dom.TagName("IFRAME");
goog.dom.TagName.IMG = new goog.dom.TagName("IMG");
goog.dom.TagName.INPUT = new goog.dom.TagName("INPUT");
goog.dom.TagName.INS = new goog.dom.TagName("INS");
goog.dom.TagName.ISINDEX = new goog.dom.TagName("ISINDEX");
goog.dom.TagName.KBD = new goog.dom.TagName("KBD");
goog.dom.TagName.KEYGEN = new goog.dom.TagName("KEYGEN");
goog.dom.TagName.LABEL = new goog.dom.TagName("LABEL");
goog.dom.TagName.LEGEND = new goog.dom.TagName("LEGEND");
goog.dom.TagName.LI = new goog.dom.TagName("LI");
goog.dom.TagName.LINK = new goog.dom.TagName("LINK");
goog.dom.TagName.MAP = new goog.dom.TagName("MAP");
goog.dom.TagName.MARK = new goog.dom.TagName("MARK");
goog.dom.TagName.MATH = new goog.dom.TagName("MATH");
goog.dom.TagName.MENU = new goog.dom.TagName("MENU");
goog.dom.TagName.META = new goog.dom.TagName("META");
goog.dom.TagName.METER = new goog.dom.TagName("METER");
goog.dom.TagName.NAV = new goog.dom.TagName("NAV");
goog.dom.TagName.NOFRAMES = new goog.dom.TagName("NOFRAMES");
goog.dom.TagName.NOSCRIPT = new goog.dom.TagName("NOSCRIPT");
goog.dom.TagName.OBJECT = new goog.dom.TagName("OBJECT");
goog.dom.TagName.OL = new goog.dom.TagName("OL");
goog.dom.TagName.OPTGROUP = new goog.dom.TagName("OPTGROUP");
goog.dom.TagName.OPTION = new goog.dom.TagName("OPTION");
goog.dom.TagName.OUTPUT = new goog.dom.TagName("OUTPUT");
goog.dom.TagName.P = new goog.dom.TagName("P");
goog.dom.TagName.PARAM = new goog.dom.TagName("PARAM");
goog.dom.TagName.PRE = new goog.dom.TagName("PRE");
goog.dom.TagName.PROGRESS = new goog.dom.TagName("PROGRESS");
goog.dom.TagName.Q = new goog.dom.TagName("Q");
goog.dom.TagName.RP = new goog.dom.TagName("RP");
goog.dom.TagName.RT = new goog.dom.TagName("RT");
goog.dom.TagName.RUBY = new goog.dom.TagName("RUBY");
goog.dom.TagName.S = new goog.dom.TagName("S");
goog.dom.TagName.SAMP = new goog.dom.TagName("SAMP");
goog.dom.TagName.SCRIPT = new goog.dom.TagName("SCRIPT");
goog.dom.TagName.SECTION = new goog.dom.TagName("SECTION");
goog.dom.TagName.SELECT = new goog.dom.TagName("SELECT");
goog.dom.TagName.SMALL = new goog.dom.TagName("SMALL");
goog.dom.TagName.SOURCE = new goog.dom.TagName("SOURCE");
goog.dom.TagName.SPAN = new goog.dom.TagName("SPAN");
goog.dom.TagName.STRIKE = new goog.dom.TagName("STRIKE");
goog.dom.TagName.STRONG = new goog.dom.TagName("STRONG");
goog.dom.TagName.STYLE = new goog.dom.TagName("STYLE");
goog.dom.TagName.SUB = new goog.dom.TagName("SUB");
goog.dom.TagName.SUMMARY = new goog.dom.TagName("SUMMARY");
goog.dom.TagName.SUP = new goog.dom.TagName("SUP");
goog.dom.TagName.SVG = new goog.dom.TagName("SVG");
goog.dom.TagName.TABLE = new goog.dom.TagName("TABLE");
goog.dom.TagName.TBODY = new goog.dom.TagName("TBODY");
goog.dom.TagName.TD = new goog.dom.TagName("TD");
goog.dom.TagName.TEMPLATE = new goog.dom.TagName("TEMPLATE");
goog.dom.TagName.TEXTAREA = new goog.dom.TagName("TEXTAREA");
goog.dom.TagName.TFOOT = new goog.dom.TagName("TFOOT");
goog.dom.TagName.TH = new goog.dom.TagName("TH");
goog.dom.TagName.THEAD = new goog.dom.TagName("THEAD");
goog.dom.TagName.TIME = new goog.dom.TagName("TIME");
goog.dom.TagName.TITLE = new goog.dom.TagName("TITLE");
goog.dom.TagName.TR = new goog.dom.TagName("TR");
goog.dom.TagName.TRACK = new goog.dom.TagName("TRACK");
goog.dom.TagName.TT = new goog.dom.TagName("TT");
goog.dom.TagName.U = new goog.dom.TagName("U");
goog.dom.TagName.UL = new goog.dom.TagName("UL");
goog.dom.TagName.VAR = new goog.dom.TagName("VAR");
goog.dom.TagName.VIDEO = new goog.dom.TagName("VIDEO");
goog.dom.TagName.WBR = new goog.dom.TagName("WBR");
goog.functions = {};
goog.functions.constant = function(retValue) {
  return function() {
    return retValue;
  };
};
goog.functions.FALSE = goog.functions.constant(!1);
goog.functions.TRUE = goog.functions.constant(!0);
goog.functions.NULL = goog.functions.constant(null);
goog.functions.identity = function(opt_returnValue) {
  return opt_returnValue;
};
goog.functions.error = function(message) {
  return function() {
    throw Error(message);
  };
};
goog.functions.fail = function(err) {
  return function() {
    throw err;
  };
};
goog.functions.lock = function(f, opt_numArgs) {
  opt_numArgs = opt_numArgs || 0;
  return function() {
    return f.apply(this, Array.prototype.slice.call(arguments, 0, opt_numArgs));
  };
};
goog.functions.nth = function(n) {
  return function() {
    return arguments[n];
  };
};
goog.functions.partialRight = function(fn, var_args) {
  var rightArgs = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = Array.prototype.slice.call(arguments);
    newArgs.push.apply(newArgs, rightArgs);
    return fn.apply(this, newArgs);
  };
};
goog.functions.withReturnValue = function(f, retValue) {
  return goog.functions.sequence(f, goog.functions.constant(retValue));
};
goog.functions.equalTo = function(value, opt_useLooseComparison) {
  return function(other) {
    return opt_useLooseComparison ? value == other : value === other;
  };
};
goog.functions.compose = function(fn, var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    length && (result = functions[length - 1].apply(this, arguments));
    for (var i = length - 2; 0 <= i; i--) {
      result = functions[i].call(this, result);
    }
    return result;
  };
};
goog.functions.sequence = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for (var i = 0; i < length; i++) {
      var result = functions[i].apply(this, arguments);
    }
    return result;
  };
};
goog.functions.and = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for (var i = 0; i < length; i++) {
      if (!functions[i].apply(this, arguments)) {
        return !1;
      }
    }
    return !0;
  };
};
goog.functions.or = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for (var i = 0; i < length; i++) {
      if (functions[i].apply(this, arguments)) {
        return !0;
      }
    }
    return !1;
  };
};
goog.functions.not = function(f) {
  return function() {
    return !f.apply(this, arguments);
  };
};
goog.functions.create = function(constructor, var_args) {
  var temp = function() {
  };
  temp.prototype = constructor.prototype;
  var obj = new temp;
  constructor.apply(obj, Array.prototype.slice.call(arguments, 1));
  return obj;
};
goog.functions.CACHE_RETURN_VALUE = !0;
goog.functions.cacheReturnValue = function(fn) {
  var called = !1;
  var value;
  return function() {
    if (!goog.functions.CACHE_RETURN_VALUE) {
      return fn();
    }
    called || (value = fn(), called = !0);
    return value;
  };
};
goog.functions.once = function(f) {
  var inner = f;
  return function() {
    if (inner) {
      var tmp = inner;
      inner = null;
      tmp();
    }
  };
};
goog.functions.debounce = function(f, interval, opt_scope) {
  var timeout = 0;
  return function(var_args) {
    goog.global.clearTimeout(timeout);
    var args = arguments;
    timeout = goog.global.setTimeout(function() {
      f.apply(opt_scope, args);
    }, interval);
  };
};
goog.functions.throttle = function(f, interval, opt_scope) {
  var timeout = 0;
  var shouldFire = !1;
  var args = [];
  var handleTimeout = function() {
    timeout = 0;
    shouldFire && (shouldFire = !1, fire());
  };
  var fire = function() {
    timeout = goog.global.setTimeout(handleTimeout, interval);
    f.apply(opt_scope, args);
  };
  return function(var_args) {
    args = arguments;
    timeout ? shouldFire = !0 : fire();
  };
};
goog.functions.rateLimit = function(f, interval, opt_scope) {
  var timeout = 0;
  var handleTimeout = function() {
    timeout = 0;
  };
  return function(var_args) {
    timeout || (timeout = goog.global.setTimeout(handleTimeout, interval), f.apply(opt_scope, arguments));
  };
};
goog.async.throwException = function(exception) {
  goog.global.setTimeout(function() {
    throw exception;
  }, 0);
};
goog.async.nextTick = function(callback, opt_context, opt_useSetImmediate) {
  var cb = callback;
  opt_context && (cb = goog.bind(callback, opt_context));
  cb = goog.async.nextTick.wrapCallback_(cb);
  goog.isFunction(goog.global.setImmediate) && (opt_useSetImmediate || goog.async.nextTick.useSetImmediate_()) ? goog.global.setImmediate(cb) : (goog.async.nextTick.setImmediate_ || (goog.async.nextTick.setImmediate_ = goog.async.nextTick.getSetImmediateEmulator_()), goog.async.nextTick.setImmediate_(cb));
};
goog.async.nextTick.useSetImmediate_ = function() {
  return goog.global.Window && goog.global.Window.prototype && !goog.labs.userAgent.browser.isEdge() && goog.global.Window.prototype.setImmediate == goog.global.setImmediate ? !1 : !0;
};
goog.async.nextTick.getSetImmediateEmulator_ = function() {
  var Channel = goog.global.MessageChannel;
  "undefined" === typeof Channel && "undefined" !== typeof window && window.postMessage && window.addEventListener && !goog.labs.userAgent.engine.isPresto() && (Channel = function() {
    var iframe = document.createElement("IFRAME");
    iframe.style.display = "none";
    iframe.src = "";
    document.documentElement.appendChild(iframe);
    var win = iframe.contentWindow;
    var doc = win.document;
    doc.open();
    doc.write("");
    doc.close();
    var message = "callImmediate" + Math.random();
    var origin = "file:" == win.location.protocol ? "*" : win.location.protocol + "//" + win.location.host;
    var onmessage = goog.bind(function(e) {
      if (("*" == origin || e.origin == origin) && e.data == message) {
        this.port1.onmessage();
      }
    }, this);
    win.addEventListener("message", onmessage, !1);
    this.port1 = {};
    this.port2 = {postMessage:function() {
      win.postMessage(message, origin);
    }};
  });
  if ("undefined" !== typeof Channel && !goog.labs.userAgent.browser.isIE()) {
    var channel = new Channel;
    var head = {};
    var tail = head;
    channel.port1.onmessage = function() {
      if (goog.isDef(head.next)) {
        head = head.next;
        var cb = head.cb;
        head.cb = null;
        cb();
      }
    };
    return function(cb) {
      tail.next = {cb:cb};
      tail = tail.next;
      channel.port2.postMessage(0);
    };
  }
  return "undefined" !== typeof document && "onreadystatechange" in document.createElement("SCRIPT") ? function(cb) {
    var script = document.createElement("SCRIPT");
    script.onreadystatechange = function() {
      script.onreadystatechange = null;
      script.parentNode.removeChild(script);
      script = null;
      cb();
      cb = null;
    };
    document.documentElement.appendChild(script);
  } : function(cb) {
    goog.global.setTimeout(cb, 0);
  };
};
goog.async.nextTick.wrapCallback_ = goog.functions.identity;
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.async.nextTick.wrapCallback_ = transformer;
});
goog.async.WorkQueue = function() {
  this.workHead_ = null;
  this.workTail_ = null;
};
goog.async.WorkQueue.DEFAULT_MAX_UNUSED = 100;
goog.async.WorkQueue.freelist_ = new goog.async.FreeList(function() {
  return new goog.async.WorkItem;
}, function(item) {
  item.reset();
}, goog.async.WorkQueue.DEFAULT_MAX_UNUSED);
goog.async.WorkQueue.prototype.add = function(fn, scope) {
  var item = this.getUnusedItem_();
  item.set(fn, scope);
  this.workTail_ ? this.workTail_.next = item : (goog.asserts.assert(!this.workHead_), this.workHead_ = item);
  this.workTail_ = item;
};
goog.async.WorkQueue.prototype.remove = function() {
  var item = null;
  this.workHead_ && (item = this.workHead_, this.workHead_ = this.workHead_.next, this.workHead_ || (this.workTail_ = null), item.next = null);
  return item;
};
goog.async.WorkQueue.prototype.returnUnused = function(item) {
  goog.async.WorkQueue.freelist_.put(item);
};
goog.async.WorkQueue.prototype.getUnusedItem_ = function() {
  return goog.async.WorkQueue.freelist_.get();
};
goog.async.WorkItem = function() {
  this.fn = null;
  this.scope = null;
  this.next = null;
};
goog.async.WorkItem.prototype.set = function(fn, scope) {
  this.fn = fn;
  this.scope = scope;
  this.next = null;
};
goog.async.WorkItem.prototype.reset = function() {
  this.fn = null;
  this.scope = null;
  this.next = null;
};
goog.async.run = function(callback, opt_context) {
  goog.async.run.schedule_ || goog.async.run.initializeRunner_();
  goog.async.run.workQueueScheduled_ || (goog.async.run.schedule_(), goog.async.run.workQueueScheduled_ = !0);
  goog.async.run.workQueue_.add(callback, opt_context);
};
goog.async.run.initializeRunner_ = function() {
  if (-1 != String(goog.global.Promise).indexOf("[native code]")) {
    var promise = goog.global.Promise.resolve(void 0);
    goog.async.run.schedule_ = function() {
      promise.then(goog.async.run.processWorkQueue);
    };
  } else {
    goog.async.run.schedule_ = function() {
      goog.async.nextTick(goog.async.run.processWorkQueue);
    };
  }
};
goog.async.run.forceNextTick = function(opt_realSetTimeout) {
  goog.async.run.schedule_ = function() {
    goog.async.nextTick(goog.async.run.processWorkQueue);
    opt_realSetTimeout && opt_realSetTimeout(goog.async.run.processWorkQueue);
  };
};
goog.async.run.workQueueScheduled_ = !1;
goog.async.run.workQueue_ = new goog.async.WorkQueue;
goog.DEBUG && (goog.async.run.resetQueue = function() {
  goog.async.run.workQueueScheduled_ = !1;
  goog.async.run.workQueue_ = new goog.async.WorkQueue;
});
goog.async.run.processWorkQueue = function() {
  for (var item; item = goog.async.run.workQueue_.remove();) {
    try {
      item.fn.call(item.scope);
    } catch (e) {
      goog.async.throwException(e);
    }
    goog.async.run.workQueue_.returnUnused(item);
  }
  goog.async.run.workQueueScheduled_ = !1;
};
goog.debug.errorcontext = {};
goog.debug.errorcontext.addErrorContext = function(err, contextKey, contextValue) {
  err[goog.debug.errorcontext.CONTEXT_KEY_] || (err[goog.debug.errorcontext.CONTEXT_KEY_] = {});
  err[goog.debug.errorcontext.CONTEXT_KEY_][contextKey] = contextValue;
};
goog.debug.errorcontext.getErrorContext = function(err) {
  return err[goog.debug.errorcontext.CONTEXT_KEY_] || {};
};
goog.debug.errorcontext.CONTEXT_KEY_ = "__closure__error__context__984382";
goog.debug.LOGGING_ENABLED = goog.DEBUG;
goog.debug.FORCE_SLOPPY_STACKS = !1;
goog.debug.catchErrors = function(logFunc, opt_cancel, opt_target) {
  var target = opt_target || goog.global;
  var oldErrorHandler = target.onerror;
  var retVal = !!opt_cancel;
  goog.userAgent.WEBKIT && !goog.userAgent.isVersionOrHigher("535.3") && (retVal = !retVal);
  target.onerror = function(message, url, line, opt_col, opt_error) {
    oldErrorHandler && oldErrorHandler(message, url, line, opt_col, opt_error);
    logFunc({message:message, fileName:url, line:line, lineNumber:line, col:opt_col, error:opt_error});
    return retVal;
  };
};
goog.debug.expose = function(obj, opt_showFn) {
  if ("undefined" == typeof obj) {
    return "undefined";
  }
  if (null == obj) {
    return "NULL";
  }
  var str = [];
  for (var x in obj) {
    if (opt_showFn || !goog.isFunction(obj[x])) {
      var s = x + " = ";
      try {
        s += obj[x];
      } catch (e) {
        s += "*** " + e + " ***";
      }
      str.push(s);
    }
  }
  return str.join("\n");
};
goog.debug.deepExpose = function(obj$jscomp$0, opt_showFn) {
  var str$jscomp$0 = [];
  var uidsToCleanup = [];
  var ancestorUids = {};
  var helper = function(obj, space) {
    var nestspace = space + "  ";
    var indentMultiline = function(str) {
      return str.replace(/\n/g, "\n" + space);
    };
    try {
      if (goog.isDef(obj)) {
        if (goog.isNull(obj)) {
          str$jscomp$0.push("NULL");
        } else {
          if (goog.isString(obj)) {
            str$jscomp$0.push('"' + indentMultiline(obj) + '"');
          } else {
            if (goog.isFunction(obj)) {
              str$jscomp$0.push(indentMultiline(String(obj)));
            } else {
              if (goog.isObject(obj)) {
                goog.hasUid(obj) || uidsToCleanup.push(obj);
                var uid = goog.getUid(obj);
                if (ancestorUids[uid]) {
                  str$jscomp$0.push("*** reference loop detected (id=" + uid + ") ***");
                } else {
                  ancestorUids[uid] = !0;
                  str$jscomp$0.push("{");
                  for (var x in obj) {
                    if (opt_showFn || !goog.isFunction(obj[x])) {
                      str$jscomp$0.push("\n"), str$jscomp$0.push(nestspace), str$jscomp$0.push(x + " = "), helper(obj[x], nestspace);
                    }
                  }
                  str$jscomp$0.push("\n" + space + "}");
                  delete ancestorUids[uid];
                }
              } else {
                str$jscomp$0.push(obj);
              }
            }
          }
        }
      } else {
        str$jscomp$0.push("undefined");
      }
    } catch (e) {
      str$jscomp$0.push("*** " + e + " ***");
    }
  };
  helper(obj$jscomp$0, "");
  for (var i = 0; i < uidsToCleanup.length; i++) {
    goog.removeUid(uidsToCleanup[i]);
  }
  return str$jscomp$0.join("");
};
goog.debug.exposeArray = function(arr) {
  var str = [];
  for (var i = 0; i < arr.length; i++) {
    goog.isArray(arr[i]) ? str.push(goog.debug.exposeArray(arr[i])) : str.push(arr[i]);
  }
  return "[ " + str.join(", ") + " ]";
};
goog.debug.normalizeErrorObject = function(err) {
  var href = goog.getObjectByName("window.location.href");
  if (goog.isString(err)) {
    return {message:err, name:"Unknown error", lineNumber:"Not available", fileName:href, stack:"Not available"};
  }
  var threwError = !1;
  try {
    var lineNumber = err.lineNumber || err.line || "Not available";
  } catch (e) {
    lineNumber = "Not available", threwError = !0;
  }
  try {
    var fileName = err.fileName || err.filename || err.sourceURL || goog.global.$googDebugFname || href;
  } catch (e$1) {
    fileName = "Not available", threwError = !0;
  }
  return !threwError && err.lineNumber && err.fileName && err.stack && err.message && err.name ? err : {message:err.message || "Not available", name:err.name || "UnknownError", lineNumber:lineNumber, fileName:fileName, stack:err.stack || "Not available"};
};
goog.debug.enhanceError = function(err, opt_message) {
  if (err instanceof Error) {
    var error = err;
  } else {
    error = Error(err), Error.captureStackTrace && Error.captureStackTrace(error, goog.debug.enhanceError);
  }
  error.stack || (error.stack = goog.debug.getStacktrace(goog.debug.enhanceError));
  if (opt_message) {
    for (var x = 0; error["message" + x];) {
      ++x;
    }
    error["message" + x] = String(opt_message);
  }
  return error;
};
goog.debug.enhanceErrorWithContext = function(err, opt_context) {
  var error = goog.debug.enhanceError(err);
  if (opt_context) {
    for (var key in opt_context) {
      goog.debug.errorcontext.addErrorContext(error, key, opt_context[key]);
    }
  }
  return error;
};
goog.debug.getStacktraceSimple = function(opt_depth) {
  if (!goog.debug.FORCE_SLOPPY_STACKS) {
    var stack = goog.debug.getNativeStackTrace_(goog.debug.getStacktraceSimple);
    if (stack) {
      return stack;
    }
  }
  var sb = [];
  var fn = arguments.callee.caller;
  for (var depth = 0; fn && (!opt_depth || depth < opt_depth);) {
    sb.push(goog.debug.getFunctionName(fn));
    sb.push("()\n");
    try {
      fn = fn.caller;
    } catch (e) {
      sb.push("[exception trying to get caller]\n");
      break;
    }
    depth++;
    if (depth >= goog.debug.MAX_STACK_DEPTH) {
      sb.push("[...long stack...]");
      break;
    }
  }
  opt_depth && depth >= opt_depth ? sb.push("[...reached max depth limit...]") : sb.push("[end]");
  return sb.join("");
};
goog.debug.MAX_STACK_DEPTH = 50;
goog.debug.getNativeStackTrace_ = function(fn) {
  var tempErr = Error();
  if (Error.captureStackTrace) {
    return Error.captureStackTrace(tempErr, fn), String(tempErr.stack);
  }
  try {
    throw tempErr;
  } catch (e) {
    tempErr = e;
  }
  var stack = tempErr.stack;
  return stack ? String(stack) : null;
};
goog.debug.getStacktrace = function(fn) {
  if (!goog.debug.FORCE_SLOPPY_STACKS) {
    var contextFn = fn || goog.debug.getStacktrace;
    var stack = goog.debug.getNativeStackTrace_(contextFn);
  }
  stack || (stack = goog.debug.getStacktraceHelper_(fn || arguments.callee.caller, []));
  return stack;
};
goog.debug.getStacktraceHelper_ = function(fn, visited) {
  var sb = [];
  if (goog.array.contains(visited, fn)) {
    sb.push("[...circular reference...]");
  } else {
    if (fn && visited.length < goog.debug.MAX_STACK_DEPTH) {
      sb.push(goog.debug.getFunctionName(fn) + "(");
      var args = fn.arguments;
      for (var i = 0; args && i < args.length; i++) {
        0 < i && sb.push(", ");
        var arg = args[i];
        switch(typeof arg) {
          case "object":
            var argDesc = arg ? "object" : "null";
            break;
          case "string":
            argDesc = arg;
            break;
          case "number":
            argDesc = String(arg);
            break;
          case "boolean":
            argDesc = arg ? "true" : "false";
            break;
          case "function":
            argDesc = goog.debug.getFunctionName(arg);
            argDesc = argDesc ? argDesc : "[fn]";
            break;
          default:
            argDesc = typeof arg;
        }
        40 < argDesc.length && (argDesc = argDesc.substr(0, 40) + "...");
        sb.push(argDesc);
      }
      visited.push(fn);
      sb.push(")\n");
      try {
        sb.push(goog.debug.getStacktraceHelper_(fn.caller, visited));
      } catch (e) {
        sb.push("[exception trying to get caller]\n");
      }
    } else {
      fn ? sb.push("[...long stack...]") : sb.push("[end]");
    }
  }
  return sb.join("");
};
goog.debug.setFunctionResolver = function(resolver) {
  goog.debug.fnNameResolver_ = resolver;
};
goog.debug.getFunctionName = function(fn) {
  if (goog.debug.fnNameCache_[fn]) {
    return goog.debug.fnNameCache_[fn];
  }
  if (goog.debug.fnNameResolver_) {
    var name = goog.debug.fnNameResolver_(fn);
    if (name) {
      return goog.debug.fnNameCache_[fn] = name, name;
    }
  }
  var functionSource = String(fn);
  if (!goog.debug.fnNameCache_[functionSource]) {
    var matches = /function ([^\(]+)/.exec(functionSource);
    if (matches) {
      var method = matches[1];
      goog.debug.fnNameCache_[functionSource] = method;
    } else {
      goog.debug.fnNameCache_[functionSource] = "[Anonymous]";
    }
  }
  return goog.debug.fnNameCache_[functionSource];
};
goog.debug.makeWhitespaceVisible = function(string) {
  return string.replace(/ /g, "[_]").replace(/\f/g, "[f]").replace(/\n/g, "[n]\n").replace(/\r/g, "[r]").replace(/\t/g, "[t]");
};
goog.debug.runtimeType = function(value) {
  return value instanceof Function ? value.displayName || value.name || "unknown type name" : value instanceof Object ? value.constructor.displayName || value.constructor.name || Object.prototype.toString.call(value) : null === value ? "null" : typeof value;
};
goog.debug.fnNameCache_ = {};
goog.debug.freezeInternal_ = goog.DEBUG && Object.freeze || function(arg) {
  return arg;
};
goog.debug.freeze = function(arg) {
  return function() {
    return goog.debug.freezeInternal_(arg);
  }();
};
goog.debug.LogRecord = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  this.reset(level, msg, loggerName, opt_time, opt_sequenceNumber);
};
goog.debug.LogRecord.prototype.exception_ = null;
goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS = !0;
goog.debug.LogRecord.nextSequenceNumber_ = 0;
goog.debug.LogRecord.prototype.reset = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS && ("number" == typeof opt_sequenceNumber || goog.debug.LogRecord.nextSequenceNumber_++);
  opt_time || goog.now();
  this.level_ = level;
  this.msg_ = msg;
  delete this.exception_;
};
goog.debug.LogRecord.prototype.setException = function(exception) {
  this.exception_ = exception;
};
goog.debug.LogRecord.prototype.setLevel = function(level) {
  this.level_ = level;
};
goog.debug.LogRecord.prototype.getMessage = function() {
  return this.msg_;
};
goog.debug.LogBuffer = function() {
  goog.asserts.assert(goog.debug.LogBuffer.isBufferingEnabled(), "Cannot use goog.debug.LogBuffer without defining goog.debug.LogBuffer.CAPACITY.");
  this.clear();
};
goog.debug.LogBuffer.getInstance = function() {
  goog.debug.LogBuffer.instance_ || (goog.debug.LogBuffer.instance_ = new goog.debug.LogBuffer);
  return goog.debug.LogBuffer.instance_;
};
goog.debug.LogBuffer.CAPACITY = 0;
goog.debug.LogBuffer.prototype.addRecord = function(level, msg, loggerName) {
  var curIndex = (this.curIndex_ + 1) % goog.debug.LogBuffer.CAPACITY;
  this.curIndex_ = curIndex;
  if (this.isFull_) {
    var ret = this.buffer_[curIndex];
    ret.reset(level, msg, loggerName);
    return ret;
  }
  this.isFull_ = curIndex == goog.debug.LogBuffer.CAPACITY - 1;
  return this.buffer_[curIndex] = new goog.debug.LogRecord(level, msg, loggerName);
};
goog.debug.LogBuffer.isBufferingEnabled = function() {
  return 0 < goog.debug.LogBuffer.CAPACITY;
};
goog.debug.LogBuffer.prototype.clear = function() {
  this.buffer_ = Array(goog.debug.LogBuffer.CAPACITY);
  this.curIndex_ = -1;
  this.isFull_ = !1;
};
goog.debug.Logger = function(name) {
  this.name_ = name;
  this.parent_ = null;
  this.level_ = null;
  this.children_ = null;
  this.handlers_ = null;
};
goog.debug.Logger.ROOT_LOGGER_NAME = "";
goog.debug.Logger.ENABLE_HIERARCHY = !0;
goog.debug.Logger.ENABLE_HIERARCHY || (goog.debug.Logger.rootHandlers_ = []);
goog.debug.Logger.Level = function(name, value) {
  this.name = name;
  this.value = value;
};
goog.debug.Logger.Level.prototype.toString = function() {
  return this.name;
};
goog.debug.Logger.Level.OFF = new goog.debug.Logger.Level("OFF", Infinity);
goog.debug.Logger.Level.SHOUT = new goog.debug.Logger.Level("SHOUT", 1200);
goog.debug.Logger.Level.SEVERE = new goog.debug.Logger.Level("SEVERE", 1000);
goog.debug.Logger.Level.WARNING = new goog.debug.Logger.Level("WARNING", 900);
goog.debug.Logger.Level.INFO = new goog.debug.Logger.Level("INFO", 800);
goog.debug.Logger.Level.CONFIG = new goog.debug.Logger.Level("CONFIG", 700);
goog.debug.Logger.Level.FINE = new goog.debug.Logger.Level("FINE", 500);
goog.debug.Logger.Level.FINER = new goog.debug.Logger.Level("FINER", 400);
goog.debug.Logger.Level.FINEST = new goog.debug.Logger.Level("FINEST", 300);
goog.debug.Logger.Level.ALL = new goog.debug.Logger.Level("ALL", 0);
goog.debug.Logger.Level.PREDEFINED_LEVELS = [goog.debug.Logger.Level.OFF, goog.debug.Logger.Level.SHOUT, goog.debug.Logger.Level.SEVERE, goog.debug.Logger.Level.WARNING, goog.debug.Logger.Level.INFO, goog.debug.Logger.Level.CONFIG, goog.debug.Logger.Level.FINE, goog.debug.Logger.Level.FINER, goog.debug.Logger.Level.FINEST, goog.debug.Logger.Level.ALL];
goog.debug.Logger.Level.predefinedLevelsCache_ = null;
goog.debug.Logger.Level.createPredefinedLevelsCache_ = function() {
  goog.debug.Logger.Level.predefinedLevelsCache_ = {};
  var i = 0;
  for (var level; level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i]; i++) {
    goog.debug.Logger.Level.predefinedLevelsCache_[level.value] = level, goog.debug.Logger.Level.predefinedLevelsCache_[level.name] = level;
  }
};
goog.debug.Logger.Level.getPredefinedLevel = function(name) {
  goog.debug.Logger.Level.predefinedLevelsCache_ || goog.debug.Logger.Level.createPredefinedLevelsCache_();
  return goog.debug.Logger.Level.predefinedLevelsCache_[name] || null;
};
goog.debug.Logger.Level.getPredefinedLevelByValue = function(value) {
  goog.debug.Logger.Level.predefinedLevelsCache_ || goog.debug.Logger.Level.createPredefinedLevelsCache_();
  if (value in goog.debug.Logger.Level.predefinedLevelsCache_) {
    return goog.debug.Logger.Level.predefinedLevelsCache_[value];
  }
  for (var i = 0; i < goog.debug.Logger.Level.PREDEFINED_LEVELS.length; ++i) {
    var level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];
    if (level.value <= value) {
      return level;
    }
  }
  return null;
};
goog.debug.Logger.getLogger = function(name) {
  return goog.debug.LogManager.getLogger(name);
};
goog.debug.Logger.logToProfilers = function(msg) {
  var console = goog.global.console;
  console && console.timeStamp && console.timeStamp(msg);
  var msWriteProfilerMark = goog.global.msWriteProfilerMark;
  msWriteProfilerMark && msWriteProfilerMark(msg);
};
goog.debug.Logger.prototype.getName = function() {
  return this.name_;
};
goog.debug.Logger.prototype.addHandler = function(handler) {
  goog.debug.LOGGING_ENABLED && (goog.debug.Logger.ENABLE_HIERARCHY ? (this.handlers_ || (this.handlers_ = []), this.handlers_.push(handler)) : (goog.asserts.assert(!this.name_, "Cannot call addHandler on a non-root logger when goog.debug.Logger.ENABLE_HIERARCHY is false."), goog.debug.Logger.rootHandlers_.push(handler)));
};
goog.debug.Logger.prototype.removeHandler = function(handler) {
  if (goog.debug.LOGGING_ENABLED) {
    var handlers = goog.debug.Logger.ENABLE_HIERARCHY ? this.handlers_ : goog.debug.Logger.rootHandlers_;
    return !!handlers && goog.array.remove(handlers, handler);
  }
  return !1;
};
goog.debug.Logger.prototype.getParent = function() {
  return this.parent_;
};
goog.debug.Logger.prototype.getChildren = function() {
  this.children_ || (this.children_ = {});
  return this.children_;
};
goog.debug.Logger.prototype.setLevel = function(level) {
  goog.debug.LOGGING_ENABLED && (goog.debug.Logger.ENABLE_HIERARCHY ? this.level_ = level : (goog.asserts.assert(!this.name_, "Cannot call setLevel() on a non-root logger when goog.debug.Logger.ENABLE_HIERARCHY is false."), goog.debug.Logger.rootLevel_ = level));
};
goog.debug.Logger.prototype.getEffectiveLevel = function() {
  if (!goog.debug.LOGGING_ENABLED) {
    return goog.debug.Logger.Level.OFF;
  }
  if (!goog.debug.Logger.ENABLE_HIERARCHY) {
    return goog.debug.Logger.rootLevel_;
  }
  if (this.level_) {
    return this.level_;
  }
  if (this.parent_) {
    return this.parent_.getEffectiveLevel();
  }
  goog.asserts.fail("Root logger has no level set.");
  return null;
};
goog.debug.Logger.prototype.isLoggable = function(level) {
  return goog.debug.LOGGING_ENABLED && level.value >= this.getEffectiveLevel().value;
};
goog.debug.Logger.prototype.log = function(level, msg, opt_exception) {
  goog.debug.LOGGING_ENABLED && this.isLoggable(level) && (goog.isFunction(msg) && (msg = msg()), this.doLogRecord_(this.getLogRecord(level, msg, opt_exception)));
};
goog.debug.Logger.prototype.getLogRecord = function(level, msg, opt_exception) {
  var logRecord = goog.debug.LogBuffer.isBufferingEnabled() ? goog.debug.LogBuffer.getInstance().addRecord(level, msg, this.name_) : new goog.debug.LogRecord(level, String(msg), this.name_);
  opt_exception && logRecord.setException(opt_exception);
  return logRecord;
};
goog.debug.Logger.prototype.severe = function(msg, opt_exception) {
  goog.debug.LOGGING_ENABLED && this.log(goog.debug.Logger.Level.SEVERE, msg, opt_exception);
};
goog.debug.Logger.prototype.warning = function(msg, opt_exception) {
  goog.debug.LOGGING_ENABLED && this.log(goog.debug.Logger.Level.WARNING, msg, opt_exception);
};
goog.debug.Logger.prototype.info = function(msg, opt_exception) {
  goog.debug.LOGGING_ENABLED && this.log(goog.debug.Logger.Level.INFO, msg, opt_exception);
};
goog.debug.Logger.prototype.fine = function(msg, opt_exception) {
  goog.debug.LOGGING_ENABLED && this.log(goog.debug.Logger.Level.FINE, msg, opt_exception);
};
goog.debug.Logger.prototype.doLogRecord_ = function(logRecord) {
  goog.debug.Logger.logToProfilers("log:" + logRecord.getMessage());
  if (goog.debug.Logger.ENABLE_HIERARCHY) {
    for (var target = this; target;) {
      target.callPublish_(logRecord), target = target.getParent();
    }
  } else {
    var i = 0;
    for (var handler; handler = goog.debug.Logger.rootHandlers_[i++];) {
      handler(logRecord);
    }
  }
};
goog.debug.Logger.prototype.callPublish_ = function(logRecord) {
  if (this.handlers_) {
    var i = 0;
    for (var handler; handler = this.handlers_[i]; i++) {
      handler(logRecord);
    }
  }
};
goog.debug.Logger.prototype.setParent_ = function(parent) {
  this.parent_ = parent;
};
goog.debug.Logger.prototype.addChild_ = function(name, logger) {
  this.getChildren()[name] = logger;
};
goog.debug.LogManager = {};
goog.debug.LogManager.loggers_ = {};
goog.debug.LogManager.rootLogger_ = null;
goog.debug.LogManager.initialize = function() {
  goog.debug.LogManager.rootLogger_ || (goog.debug.LogManager.rootLogger_ = new goog.debug.Logger(goog.debug.Logger.ROOT_LOGGER_NAME), goog.debug.LogManager.loggers_[goog.debug.Logger.ROOT_LOGGER_NAME] = goog.debug.LogManager.rootLogger_, goog.debug.LogManager.rootLogger_.setLevel(goog.debug.Logger.Level.CONFIG));
};
goog.debug.LogManager.getLoggers = function() {
  return goog.debug.LogManager.loggers_;
};
goog.debug.LogManager.getRoot = function() {
  goog.debug.LogManager.initialize();
  return goog.debug.LogManager.rootLogger_;
};
goog.debug.LogManager.getLogger = function(name) {
  goog.debug.LogManager.initialize();
  var ret = goog.debug.LogManager.loggers_[name];
  return ret || goog.debug.LogManager.createLogger_(name);
};
goog.debug.LogManager.createFunctionForCatchErrors = function(opt_logger) {
  return function(info) {
    var logger = opt_logger || goog.debug.LogManager.getRoot();
    logger.severe("Error: " + info.message + " (" + info.fileName + " @ Line: " + info.line + ")");
  };
};
goog.debug.LogManager.createLogger_ = function(name) {
  var logger = new goog.debug.Logger(name);
  if (goog.debug.Logger.ENABLE_HIERARCHY) {
    var lastDotIndex = name.lastIndexOf(".");
    var parentName = name.substr(0, lastDotIndex);
    var leafName = name.substr(lastDotIndex + 1);
    var parentLogger = goog.debug.LogManager.getLogger(parentName);
    parentLogger.addChild_(leafName, logger);
    logger.setParent_(parentLogger);
  }
  goog.debug.LogManager.loggers_[name] = logger;
  return logger;
};
goog.disposable = {};
goog.disposable.IDisposable = function() {
};
goog.Disposable = function() {
  goog.Disposable.MONITORING_MODE != goog.Disposable.MonitoringMode.OFF && (goog.Disposable.instances_[goog.getUid(this)] = this);
  this.disposed_ = this.disposed_;
  this.onDisposeCallbacks_ = this.onDisposeCallbacks_;
};
goog.Disposable.MonitoringMode = {OFF:0, PERMANENT:1, INTERACTIVE:2};
goog.Disposable.MONITORING_MODE = 0;
goog.Disposable.INCLUDE_STACK_ON_CREATION = !0;
goog.Disposable.instances_ = {};
goog.Disposable.getUndisposedObjects = function() {
  var ret = [];
  for (var id in goog.Disposable.instances_) {
    goog.Disposable.instances_.hasOwnProperty(id) && ret.push(goog.Disposable.instances_[Number(id)]);
  }
  return ret;
};
goog.Disposable.clearUndisposedObjects = function() {
  goog.Disposable.instances_ = {};
};
goog.Disposable.prototype.disposed_ = !1;
goog.Disposable.prototype.isDisposed = function() {
  return this.disposed_;
};
goog.Disposable.prototype.dispose = function() {
  if (!this.disposed_ && (this.disposed_ = !0, this.disposeInternal(), goog.Disposable.MONITORING_MODE != goog.Disposable.MonitoringMode.OFF)) {
    var uid = goog.getUid(this);
    if (goog.Disposable.MONITORING_MODE == goog.Disposable.MonitoringMode.PERMANENT && !goog.Disposable.instances_.hasOwnProperty(uid)) {
      throw Error(this + " did not call the goog.Disposable base constructor or was disposed of after a clearUndisposedObjects call");
    }
    delete goog.Disposable.instances_[uid];
  }
};
goog.Disposable.prototype.disposeInternal = function() {
  if (this.onDisposeCallbacks_) {
    for (; this.onDisposeCallbacks_.length;) {
      this.onDisposeCallbacks_.shift()();
    }
  }
};
goog.Disposable.isDisposed = function(obj) {
  return obj && "function" == typeof obj.isDisposed ? obj.isDisposed() : !1;
};
goog.dispose = function(obj) {
  obj && "function" == typeof obj.dispose && obj.dispose();
};
goog.disposeAll = function(var_args) {
  var i = 0;
  for (var len = arguments.length; i < len; ++i) {
    var disposable = arguments[i];
    goog.isArrayLike(disposable) ? goog.disposeAll.apply(null, disposable) : goog.dispose(disposable);
  }
};
goog.dom.asserts = {};
goog.dom.asserts.assertIsLocation = function(o) {
  if (goog.asserts.ENABLE_ASSERTS) {
    var win = goog.dom.asserts.getWindow_(o);
    "undefined" != typeof win.Location && "undefined" != typeof win.Element && goog.asserts.assert(o && (o instanceof win.Location || !(o instanceof win.Element)), "Argument is not a Location (or a non-Element mock); got: %s", goog.dom.asserts.debugStringForType_(o));
  }
  return o;
};
goog.dom.asserts.assertIsElementType_ = function(o, typename) {
  if (goog.asserts.ENABLE_ASSERTS) {
    var win = goog.dom.asserts.getWindow_(o);
    "undefined" != typeof win[typename] && "undefined" != typeof win.Location && "undefined" != typeof win.Element && goog.asserts.assert(o && (o instanceof win[typename] || !(o instanceof win.Location || o instanceof win.Element)), "Argument is not a %s (or a non-Element, non-Location mock); got: %s", typename, goog.dom.asserts.debugStringForType_(o));
  }
  return o;
};
goog.dom.asserts.assertIsHTMLAnchorElement = function(o) {
  return goog.dom.asserts.assertIsElementType_(o, "HTMLAnchorElement");
};
goog.dom.asserts.assertIsHTMLButtonElement = function(o) {
  return goog.dom.asserts.assertIsElementType_(o, "HTMLButtonElement");
};
goog.dom.asserts.assertIsHTMLLinkElement = function(o) {
  return goog.dom.asserts.assertIsElementType_(o, "HTMLLinkElement");
};
goog.dom.asserts.assertIsHTMLImageElement = function(o) {
  return goog.dom.asserts.assertIsElementType_(o, "HTMLImageElement");
};
goog.dom.asserts.assertIsHTMLInputElement = function(o) {
  return goog.dom.asserts.assertIsElementType_(o, "HTMLInputElement");
};
goog.dom.asserts.assertIsHTMLEmbedElement = function(o) {
  return goog.dom.asserts.assertIsElementType_(o, "HTMLEmbedElement");
};
goog.dom.asserts.assertIsHTMLFormElement = function(o) {
  return goog.dom.asserts.assertIsElementType_(o, "HTMLFormElement");
};
goog.dom.asserts.assertIsHTMLFrameElement = function(o) {
  return goog.dom.asserts.assertIsElementType_(o, "HTMLFrameElement");
};
goog.dom.asserts.assertIsHTMLIFrameElement = function(o) {
  return goog.dom.asserts.assertIsElementType_(o, "HTMLIFrameElement");
};
goog.dom.asserts.assertIsHTMLObjectElement = function(o) {
  return goog.dom.asserts.assertIsElementType_(o, "HTMLObjectElement");
};
goog.dom.asserts.assertIsHTMLScriptElement = function(o) {
  return goog.dom.asserts.assertIsElementType_(o, "HTMLScriptElement");
};
goog.dom.asserts.debugStringForType_ = function(value) {
  return goog.isObject(value) ? value.constructor.displayName || value.constructor.name || Object.prototype.toString.call(value) : void 0 === value ? "undefined" : null === value ? "null" : typeof value;
};
goog.dom.asserts.getWindow_ = function(o) {
  var doc = o && o.ownerDocument;
  var win = doc && (doc.defaultView || doc.parentWindow);
  return win || goog.global;
};
goog.dom.BrowserFeature = {CAN_ADD_NAME_OR_TYPE_ATTRIBUTES:!goog.userAgent.IE || goog.userAgent.isDocumentModeOrHigher(9), CAN_USE_CHILDREN_ATTRIBUTE:!goog.userAgent.GECKO && !goog.userAgent.IE || goog.userAgent.IE && goog.userAgent.isDocumentModeOrHigher(9) || goog.userAgent.GECKO && goog.userAgent.isVersionOrHigher("1.9.1"), CAN_USE_INNER_TEXT:goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("9"), CAN_USE_PARENT_ELEMENT_PROPERTY:goog.userAgent.IE || goog.userAgent.OPERA || goog.userAgent.WEBKIT, 
INNER_HTML_NEEDS_SCOPED_ELEMENT:goog.userAgent.IE, LEGACY_IE_RANGES:goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9)};
goog.dom.classlist = {};
goog.dom.classlist.ALWAYS_USE_DOM_TOKEN_LIST = !1;
goog.dom.classlist.get = function(element) {
  if (goog.dom.classlist.ALWAYS_USE_DOM_TOKEN_LIST || element.classList) {
    return element.classList;
  }
  var className = element.className;
  return goog.isString(className) && className.match(/\S+/g) || [];
};
goog.dom.classlist.set = function(element, className) {
  element.className = className;
};
goog.dom.classlist.contains = function(element, className) {
  return goog.dom.classlist.ALWAYS_USE_DOM_TOKEN_LIST || element.classList ? element.classList.contains(className) : goog.array.contains(goog.dom.classlist.get(element), className);
};
goog.dom.classlist.add = function(element, className) {
  goog.dom.classlist.ALWAYS_USE_DOM_TOKEN_LIST || element.classList ? element.classList.add(className) : goog.dom.classlist.contains(element, className) || (element.className += 0 < element.className.length ? " " + className : className);
};
goog.dom.classlist.addAll = function(element, classesToAdd) {
  if (goog.dom.classlist.ALWAYS_USE_DOM_TOKEN_LIST || element.classList) {
    goog.array.forEach(classesToAdd, function(className) {
      goog.dom.classlist.add(element, className);
    });
  } else {
    var classMap = {};
    goog.array.forEach(goog.dom.classlist.get(element), function(className) {
      classMap[className] = !0;
    });
    goog.array.forEach(classesToAdd, function(className) {
      classMap[className] = !0;
    });
    element.className = "";
    for (var className$jscomp$0 in classMap) {
      element.className += 0 < element.className.length ? " " + className$jscomp$0 : className$jscomp$0;
    }
  }
};
goog.dom.classlist.remove = function(element, className) {
  goog.dom.classlist.ALWAYS_USE_DOM_TOKEN_LIST || element.classList ? element.classList.remove(className) : goog.dom.classlist.contains(element, className) && (element.className = goog.array.filter(goog.dom.classlist.get(element), function(c) {
    return c != className;
  }).join(" "));
};
goog.dom.classlist.removeAll = function(element, classesToRemove) {
  goog.dom.classlist.ALWAYS_USE_DOM_TOKEN_LIST || element.classList ? goog.array.forEach(classesToRemove, function(className) {
    goog.dom.classlist.remove(element, className);
  }) : element.className = goog.array.filter(goog.dom.classlist.get(element), function(className) {
    return !goog.array.contains(classesToRemove, className);
  }).join(" ");
};
goog.dom.classlist.enable = function(element, className, enabled) {
  enabled ? goog.dom.classlist.add(element, className) : goog.dom.classlist.remove(element, className);
};
goog.dom.classlist.enableAll = function(element, classesToEnable, enabled) {
  var f = enabled ? goog.dom.classlist.addAll : goog.dom.classlist.removeAll;
  f(element, classesToEnable);
};
goog.dom.classlist.swap = function(element, fromClass, toClass) {
  return goog.dom.classlist.contains(element, fromClass) ? (goog.dom.classlist.remove(element, fromClass), goog.dom.classlist.add(element, toClass), !0) : !1;
};
goog.dom.classlist.toggle = function(element, className) {
  var add = !goog.dom.classlist.contains(element, className);
  goog.dom.classlist.enable(element, className, add);
  return add;
};
goog.dom.classlist.addRemove = function(element, classToRemove, classToAdd) {
  goog.dom.classlist.remove(element, classToRemove);
  goog.dom.classlist.add(element, classToAdd);
};
goog.dom.tags = {};
goog.dom.tags.VOID_TAGS_ = {area:!0, base:!0, br:!0, col:!0, command:!0, embed:!0, hr:!0, img:!0, input:!0, keygen:!0, link:!0, meta:!0, param:!0, source:!0, track:!0, wbr:!0};
goog.dom.tags.isVoidTag = function(tagName) {
  return !0 === goog.dom.tags.VOID_TAGS_[tagName];
};
goog.string.TypedString = function() {
};
goog.string.Const = function() {
  this.stringConstValueWithSecurityContract__googStringSecurityPrivate_ = "";
  this.STRING_CONST_TYPE_MARKER__GOOG_STRING_SECURITY_PRIVATE_ = goog.string.Const.TYPE_MARKER_;
};
goog.string.Const.prototype.implementsGoogStringTypedString = !0;
goog.string.Const.prototype.getTypedStringValue = function() {
  return this.stringConstValueWithSecurityContract__googStringSecurityPrivate_;
};
goog.string.Const.prototype.toString = function() {
  return "Const{" + this.stringConstValueWithSecurityContract__googStringSecurityPrivate_ + "}";
};
goog.string.Const.unwrap = function(stringConst) {
  if (stringConst instanceof goog.string.Const && stringConst.constructor === goog.string.Const && stringConst.STRING_CONST_TYPE_MARKER__GOOG_STRING_SECURITY_PRIVATE_ === goog.string.Const.TYPE_MARKER_) {
    return stringConst.stringConstValueWithSecurityContract__googStringSecurityPrivate_;
  }
  goog.asserts.fail("expected object of type Const, got '" + stringConst + "'");
  return "type_error:Const";
};
goog.string.Const.from = function(s) {
  return goog.string.Const.create__googStringSecurityPrivate_(s);
};
goog.string.Const.TYPE_MARKER_ = {};
goog.string.Const.create__googStringSecurityPrivate_ = function(s) {
  var stringConst = new goog.string.Const;
  stringConst.stringConstValueWithSecurityContract__googStringSecurityPrivate_ = s;
  return stringConst;
};
goog.string.Const.EMPTY = goog.string.Const.from("");
goog.html = {};
goog.html.SafeScript = function() {
  this.privateDoNotAccessOrElseSafeScriptWrappedValue_ = "";
  this.SAFE_SCRIPT_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeScript.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
};
goog.html.SafeScript.prototype.implementsGoogStringTypedString = !0;
goog.html.SafeScript.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
goog.html.SafeScript.fromConstant = function(script) {
  var scriptString = goog.string.Const.unwrap(script);
  return 0 === scriptString.length ? goog.html.SafeScript.EMPTY : goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(scriptString);
};
goog.html.SafeScript.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseSafeScriptWrappedValue_;
};
goog.DEBUG && (goog.html.SafeScript.prototype.toString = function() {
  return "SafeScript{" + this.privateDoNotAccessOrElseSafeScriptWrappedValue_ + "}";
});
goog.html.SafeScript.unwrap = function(safeScript) {
  if (safeScript instanceof goog.html.SafeScript && safeScript.constructor === goog.html.SafeScript && safeScript.SAFE_SCRIPT_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeScript.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
    return safeScript.privateDoNotAccessOrElseSafeScriptWrappedValue_;
  }
  goog.asserts.fail("expected object of type SafeScript, got '" + safeScript + "' of type " + goog.typeOf(safeScript));
  return "type_error:SafeScript";
};
goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse = function(script) {
  return (new goog.html.SafeScript).initSecurityPrivateDoNotAccessOrElse_(script);
};
goog.html.SafeScript.prototype.initSecurityPrivateDoNotAccessOrElse_ = function(script) {
  this.privateDoNotAccessOrElseSafeScriptWrappedValue_ = script;
  return this;
};
goog.html.SafeScript.EMPTY = goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse("");
goog.fs = {};
goog.fs.url = {};
goog.fs.url.createObjectUrl = function(blob) {
  return goog.fs.url.getUrlObject_().createObjectURL(blob);
};
goog.fs.url.revokeObjectUrl = function(url) {
  goog.fs.url.getUrlObject_().revokeObjectURL(url);
};
goog.fs.url.getUrlObject_ = function() {
  var urlObject = goog.fs.url.findUrlObject_();
  if (null != urlObject) {
    return urlObject;
  }
  throw Error("This browser doesn't seem to support blob URLs");
};
goog.fs.url.findUrlObject_ = function() {
  return goog.isDef(goog.global.URL) && goog.isDef(goog.global.URL.createObjectURL) ? goog.global.URL : goog.isDef(goog.global.webkitURL) && goog.isDef(goog.global.webkitURL.createObjectURL) ? goog.global.webkitURL : goog.isDef(goog.global.createObjectURL) ? goog.global : null;
};
goog.fs.url.browserSupportsObjectUrls = function() {
  return null != goog.fs.url.findUrlObject_();
};
goog.i18n = {};
goog.i18n.bidi = {};
goog.i18n.bidi.FORCE_RTL = !1;
goog.i18n.bidi.IS_RTL = goog.i18n.bidi.FORCE_RTL || ("ar" == goog.LOCALE.substring(0, 2).toLowerCase() || "fa" == goog.LOCALE.substring(0, 2).toLowerCase() || "he" == goog.LOCALE.substring(0, 2).toLowerCase() || "iw" == goog.LOCALE.substring(0, 2).toLowerCase() || "ps" == goog.LOCALE.substring(0, 2).toLowerCase() || "sd" == goog.LOCALE.substring(0, 2).toLowerCase() || "ug" == goog.LOCALE.substring(0, 2).toLowerCase() || "ur" == goog.LOCALE.substring(0, 2).toLowerCase() || "yi" == goog.LOCALE.substring(0, 
2).toLowerCase()) && (2 == goog.LOCALE.length || "-" == goog.LOCALE.substring(2, 3) || "_" == goog.LOCALE.substring(2, 3)) || 3 <= goog.LOCALE.length && "ckb" == goog.LOCALE.substring(0, 3).toLowerCase() && (3 == goog.LOCALE.length || "-" == goog.LOCALE.substring(3, 4) || "_" == goog.LOCALE.substring(3, 4));
goog.i18n.bidi.Format = {LRE:"\u202a", RLE:"\u202b", PDF:"\u202c", LRM:"\u200e", RLM:"\u200f"};
goog.i18n.bidi.Dir = {LTR:1, RTL:-1, NEUTRAL:0};
goog.i18n.bidi.RIGHT = "right";
goog.i18n.bidi.LEFT = "left";
goog.i18n.bidi.I18N_RIGHT = goog.i18n.bidi.IS_RTL ? goog.i18n.bidi.LEFT : goog.i18n.bidi.RIGHT;
goog.i18n.bidi.I18N_LEFT = goog.i18n.bidi.IS_RTL ? goog.i18n.bidi.RIGHT : goog.i18n.bidi.LEFT;
goog.i18n.bidi.toDir = function(givenDir, opt_noNeutral) {
  return "number" == typeof givenDir ? 0 < givenDir ? goog.i18n.bidi.Dir.LTR : 0 > givenDir ? goog.i18n.bidi.Dir.RTL : opt_noNeutral ? null : goog.i18n.bidi.Dir.NEUTRAL : null == givenDir ? null : givenDir ? goog.i18n.bidi.Dir.RTL : goog.i18n.bidi.Dir.LTR;
};
goog.i18n.bidi.ltrChars_ = "A-Za-z\u00c0-\u00d6\u00d8-\u00f6\u00f8-\u02b8\u0300-\u0590\u0800-\u1fff\u200e\u2c00-\ufb1c\ufe00-\ufe6f\ufefd-\uffff";
goog.i18n.bidi.rtlChars_ = "\u0591-\u06ef\u06fa-\u07ff\u200f\ufb1d-\ufdff\ufe70-\ufefc";
goog.i18n.bidi.htmlSkipReg_ = /<[^>]*>|&[^;]+;/g;
goog.i18n.bidi.stripHtmlIfNeeded_ = function(str, opt_isStripNeeded) {
  return opt_isStripNeeded ? str.replace(goog.i18n.bidi.htmlSkipReg_, "") : str;
};
goog.i18n.bidi.rtlCharReg_ = new RegExp("[" + goog.i18n.bidi.rtlChars_ + "]");
goog.i18n.bidi.ltrCharReg_ = new RegExp("[" + goog.i18n.bidi.ltrChars_ + "]");
goog.i18n.bidi.hasAnyRtl = function(str, opt_isHtml) {
  return goog.i18n.bidi.rtlCharReg_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.hasRtlChar = goog.i18n.bidi.hasAnyRtl;
goog.i18n.bidi.hasAnyLtr = function(str, opt_isHtml) {
  return goog.i18n.bidi.ltrCharReg_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.ltrRe_ = new RegExp("^[" + goog.i18n.bidi.ltrChars_ + "]");
goog.i18n.bidi.rtlRe_ = new RegExp("^[" + goog.i18n.bidi.rtlChars_ + "]");
goog.i18n.bidi.isRtlChar = function(str) {
  return goog.i18n.bidi.rtlRe_.test(str);
};
goog.i18n.bidi.isLtrChar = function(str) {
  return goog.i18n.bidi.ltrRe_.test(str);
};
goog.i18n.bidi.isNeutralChar = function(str) {
  return !goog.i18n.bidi.isLtrChar(str) && !goog.i18n.bidi.isRtlChar(str);
};
goog.i18n.bidi.ltrDirCheckRe_ = new RegExp("^[^" + goog.i18n.bidi.rtlChars_ + "]*[" + goog.i18n.bidi.ltrChars_ + "]");
goog.i18n.bidi.rtlDirCheckRe_ = new RegExp("^[^" + goog.i18n.bidi.ltrChars_ + "]*[" + goog.i18n.bidi.rtlChars_ + "]");
goog.i18n.bidi.startsWithRtl = function(str, opt_isHtml) {
  return goog.i18n.bidi.rtlDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.isRtlText = goog.i18n.bidi.startsWithRtl;
goog.i18n.bidi.startsWithLtr = function(str, opt_isHtml) {
  return goog.i18n.bidi.ltrDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.isLtrText = goog.i18n.bidi.startsWithLtr;
goog.i18n.bidi.isRequiredLtrRe_ = /^http:\/\/.*/;
goog.i18n.bidi.isNeutralText = function(str, opt_isHtml) {
  str = goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml);
  return goog.i18n.bidi.isRequiredLtrRe_.test(str) || !goog.i18n.bidi.hasAnyLtr(str) && !goog.i18n.bidi.hasAnyRtl(str);
};
goog.i18n.bidi.ltrExitDirCheckRe_ = new RegExp("[" + goog.i18n.bidi.ltrChars_ + "][^" + goog.i18n.bidi.rtlChars_ + "]*$");
goog.i18n.bidi.rtlExitDirCheckRe_ = new RegExp("[" + goog.i18n.bidi.rtlChars_ + "][^" + goog.i18n.bidi.ltrChars_ + "]*$");
goog.i18n.bidi.endsWithLtr = function(str, opt_isHtml) {
  return goog.i18n.bidi.ltrExitDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.isLtrExitText = goog.i18n.bidi.endsWithLtr;
goog.i18n.bidi.endsWithRtl = function(str, opt_isHtml) {
  return goog.i18n.bidi.rtlExitDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.isRtlExitText = goog.i18n.bidi.endsWithRtl;
goog.i18n.bidi.rtlLocalesRe_ = /^(ar|ckb|dv|he|iw|fa|nqo|ps|sd|ug|ur|yi|.*[-_](Arab|Hebr|Thaa|Nkoo|Tfng))(?!.*[-_](Latn|Cyrl)($|-|_))($|-|_)/i;
goog.i18n.bidi.isRtlLanguage = function(lang) {
  return goog.i18n.bidi.rtlLocalesRe_.test(lang);
};
goog.i18n.bidi.bracketGuardTextRe_ = /(\(.*?\)+)|(\[.*?\]+)|(\{.*?\}+)|(<.*?>+)/g;
goog.i18n.bidi.guardBracketInText = function(s, opt_isRtlContext) {
  var useRtl = void 0 === opt_isRtlContext ? goog.i18n.bidi.hasAnyRtl(s) : opt_isRtlContext;
  var mark = useRtl ? goog.i18n.bidi.Format.RLM : goog.i18n.bidi.Format.LRM;
  return s.replace(goog.i18n.bidi.bracketGuardTextRe_, mark + "$&" + mark);
};
goog.i18n.bidi.enforceRtlInHtml = function(html) {
  return "<" == html.charAt(0) ? html.replace(/<\w+/, "$& dir=rtl") : "\n<span dir=rtl>" + html + "</span>";
};
goog.i18n.bidi.enforceRtlInText = function(text) {
  return goog.i18n.bidi.Format.RLE + text + goog.i18n.bidi.Format.PDF;
};
goog.i18n.bidi.enforceLtrInHtml = function(html) {
  return "<" == html.charAt(0) ? html.replace(/<\w+/, "$& dir=ltr") : "\n<span dir=ltr>" + html + "</span>";
};
goog.i18n.bidi.enforceLtrInText = function(text) {
  return goog.i18n.bidi.Format.LRE + text + goog.i18n.bidi.Format.PDF;
};
goog.i18n.bidi.dimensionsRe_ = /:\s*([.\d][.\w]*)\s+([.\d][.\w]*)\s+([.\d][.\w]*)\s+([.\d][.\w]*)/g;
goog.i18n.bidi.leftRe_ = /left/gi;
goog.i18n.bidi.rightRe_ = /right/gi;
goog.i18n.bidi.tempRe_ = /%%%%/g;
goog.i18n.bidi.mirrorCSS = function(cssStr) {
  return cssStr.replace(goog.i18n.bidi.dimensionsRe_, ":$1 $4 $3 $2").replace(goog.i18n.bidi.leftRe_, "%%%%").replace(goog.i18n.bidi.rightRe_, goog.i18n.bidi.LEFT).replace(goog.i18n.bidi.tempRe_, goog.i18n.bidi.RIGHT);
};
goog.i18n.bidi.doubleQuoteSubstituteRe_ = /([\u0591-\u05f2])"/g;
goog.i18n.bidi.singleQuoteSubstituteRe_ = /([\u0591-\u05f2])'/g;
goog.i18n.bidi.normalizeHebrewQuote = function(str) {
  return str.replace(goog.i18n.bidi.doubleQuoteSubstituteRe_, "$1\u05f4").replace(goog.i18n.bidi.singleQuoteSubstituteRe_, "$1\u05f3");
};
goog.i18n.bidi.wordSeparatorRe_ = /\s+/;
goog.i18n.bidi.hasNumeralsRe_ = /[\d\u06f0-\u06f9]/;
goog.i18n.bidi.rtlDetectionThreshold_ = 0.40;
goog.i18n.bidi.estimateDirection = function(str, opt_isHtml) {
  var rtlCount = 0;
  var totalCount = 0;
  var hasWeaklyLtr = !1;
  var tokens = goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml).split(goog.i18n.bidi.wordSeparatorRe_);
  for (var i = 0; i < tokens.length; i++) {
    var token = tokens[i];
    goog.i18n.bidi.startsWithRtl(token) ? (rtlCount++, totalCount++) : goog.i18n.bidi.isRequiredLtrRe_.test(token) ? hasWeaklyLtr = !0 : goog.i18n.bidi.hasAnyLtr(token) ? totalCount++ : goog.i18n.bidi.hasNumeralsRe_.test(token) && (hasWeaklyLtr = !0);
  }
  return 0 == totalCount ? hasWeaklyLtr ? goog.i18n.bidi.Dir.LTR : goog.i18n.bidi.Dir.NEUTRAL : rtlCount / totalCount > goog.i18n.bidi.rtlDetectionThreshold_ ? goog.i18n.bidi.Dir.RTL : goog.i18n.bidi.Dir.LTR;
};
goog.i18n.bidi.detectRtlDirectionality = function(str, opt_isHtml) {
  return goog.i18n.bidi.estimateDirection(str, opt_isHtml) == goog.i18n.bidi.Dir.RTL;
};
goog.i18n.bidi.setElementDirAndAlign = function(element, dir) {
  element && (dir = goog.i18n.bidi.toDir(dir), dir && (element.style.textAlign = dir == goog.i18n.bidi.Dir.RTL ? goog.i18n.bidi.RIGHT : goog.i18n.bidi.LEFT, element.dir = dir == goog.i18n.bidi.Dir.RTL ? "rtl" : "ltr"));
};
goog.i18n.bidi.setElementDirByTextDirectionality = function(element, text) {
  switch(goog.i18n.bidi.estimateDirection(text)) {
    case goog.i18n.bidi.Dir.LTR:
      element.dir = "ltr";
      break;
    case goog.i18n.bidi.Dir.RTL:
      element.dir = "rtl";
      break;
    default:
      element.removeAttribute("dir");
  }
};
goog.i18n.bidi.DirectionalString = function() {
};
goog.html.TrustedResourceUrl = function() {
  this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_ = "";
  this.TRUSTED_RESOURCE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.TrustedResourceUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
};
goog.html.TrustedResourceUrl.prototype.implementsGoogStringTypedString = !0;
goog.html.TrustedResourceUrl.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_;
};
goog.html.TrustedResourceUrl.prototype.implementsGoogI18nBidiDirectionalString = !0;
goog.html.TrustedResourceUrl.prototype.getDirection = function() {
  return goog.i18n.bidi.Dir.LTR;
};
goog.DEBUG && (goog.html.TrustedResourceUrl.prototype.toString = function() {
  return "TrustedResourceUrl{" + this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_ + "}";
});
goog.html.TrustedResourceUrl.unwrap = function(trustedResourceUrl) {
  if (trustedResourceUrl instanceof goog.html.TrustedResourceUrl && trustedResourceUrl.constructor === goog.html.TrustedResourceUrl && trustedResourceUrl.TRUSTED_RESOURCE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.TrustedResourceUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
    return trustedResourceUrl.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_;
  }
  goog.asserts.fail("expected object of type TrustedResourceUrl, got '" + trustedResourceUrl + "' of type " + goog.typeOf(trustedResourceUrl));
  return "type_error:TrustedResourceUrl";
};
goog.html.TrustedResourceUrl.format = function(format, args) {
  var result = goog.html.TrustedResourceUrl.format_(format, args);
  return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(result);
};
goog.html.TrustedResourceUrl.format_ = function(format, args) {
  var formatStr = goog.string.Const.unwrap(format);
  if (!goog.html.TrustedResourceUrl.BASE_URL_.test(formatStr)) {
    throw Error("Invalid TrustedResourceUrl format: " + formatStr);
  }
  return formatStr.replace(goog.html.TrustedResourceUrl.FORMAT_MARKER_, function(match, id) {
    if (!Object.prototype.hasOwnProperty.call(args, id)) {
      throw Error('Found marker, "' + id + '", in format string, "' + formatStr + '", but no valid label mapping found in args: ' + JSON.stringify(args));
    }
    var arg = args[id];
    return arg instanceof goog.string.Const ? goog.string.Const.unwrap(arg) : encodeURIComponent(String(arg));
  });
};
goog.html.TrustedResourceUrl.FORMAT_MARKER_ = /%{(\w+)}/g;
goog.html.TrustedResourceUrl.BASE_URL_ = /^(?:https:)?\/\/[0-9a-z.:[\]-]+\/|^\/[^\/\\]|^about:blank(#|$)/i;
goog.html.TrustedResourceUrl.formatWithParams = function(format, args, params) {
  var url = goog.html.TrustedResourceUrl.format_(format, args);
  var separator = /\?/.test(url) ? "&" : "?";
  for (var key in params) {
    var values = goog.isArray(params[key]) ? params[key] : [params[key]];
    for (var i = 0; i < values.length; i++) {
      null != values[i] && (url += separator + encodeURIComponent(key) + "=" + encodeURIComponent(String(values[i])), separator = "&");
    }
  }
  return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(url);
};
goog.html.TrustedResourceUrl.fromConstant = function(url) {
  return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(goog.string.Const.unwrap(url));
};
goog.html.TrustedResourceUrl.fromConstants = function(parts) {
  var unwrapped = "";
  for (var i = 0; i < parts.length; i++) {
    unwrapped += goog.string.Const.unwrap(parts[i]);
  }
  return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(unwrapped);
};
goog.html.TrustedResourceUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse = function(url) {
  var trustedResourceUrl = new goog.html.TrustedResourceUrl;
  trustedResourceUrl.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_ = url;
  return trustedResourceUrl;
};
goog.html.SafeUrl = function() {
  this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ = "";
  this.SAFE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
};
goog.html.SafeUrl.INNOCUOUS_STRING = "about:invalid#zClosurez";
goog.html.SafeUrl.prototype.implementsGoogStringTypedString = !0;
goog.html.SafeUrl.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseSafeHtmlWrappedValue_;
};
goog.html.SafeUrl.prototype.implementsGoogI18nBidiDirectionalString = !0;
goog.html.SafeUrl.prototype.getDirection = function() {
  return goog.i18n.bidi.Dir.LTR;
};
goog.DEBUG && (goog.html.SafeUrl.prototype.toString = function() {
  return "SafeUrl{" + this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ + "}";
});
goog.html.SafeUrl.unwrap = function(safeUrl) {
  if (safeUrl instanceof goog.html.SafeUrl && safeUrl.constructor === goog.html.SafeUrl && safeUrl.SAFE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
    return safeUrl.privateDoNotAccessOrElseSafeHtmlWrappedValue_;
  }
  goog.asserts.fail("expected object of type SafeUrl, got '" + safeUrl + "' of type " + goog.typeOf(safeUrl));
  return "type_error:SafeUrl";
};
goog.html.SafeUrl.fromConstant = function(url) {
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(goog.string.Const.unwrap(url));
};
goog.html.SAFE_MIME_TYPE_PATTERN_ = /^(?:audio\/(?:3gpp|3gpp2|aac|midi|mp4|mpeg|ogg|x-m4a|x-wav|webm)|image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|text\/csv|video\/(?:mpeg|mp4|ogg|webm))$/i;
goog.html.SafeUrl.fromBlob = function(blob) {
  var url = goog.html.SAFE_MIME_TYPE_PATTERN_.test(blob.type) ? goog.fs.url.createObjectUrl(blob) : goog.html.SafeUrl.INNOCUOUS_STRING;
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(url);
};
goog.html.DATA_URL_PATTERN_ = /^data:([^;,]*);base64,[a-z0-9+\/]+=*$/i;
goog.html.SafeUrl.fromDataUrl = function(dataUrl) {
  var match = dataUrl.match(goog.html.DATA_URL_PATTERN_);
  var valid = match && goog.html.SAFE_MIME_TYPE_PATTERN_.test(match[1]);
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(valid ? dataUrl : goog.html.SafeUrl.INNOCUOUS_STRING);
};
goog.html.SafeUrl.fromTelUrl = function(telUrl) {
  goog.string.caseInsensitiveStartsWith(telUrl, "tel:") || (telUrl = goog.html.SafeUrl.INNOCUOUS_STRING);
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(telUrl);
};
goog.html.SafeUrl.fromTrustedResourceUrl = function(trustedResourceUrl) {
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(goog.html.TrustedResourceUrl.unwrap(trustedResourceUrl));
};
goog.html.SAFE_URL_PATTERN_ = /^(?:(?:https?|mailto|ftp):|[^:/?#]*(?:[/?#]|$))/i;
goog.html.SafeUrl.sanitize = function(url) {
  if (url instanceof goog.html.SafeUrl) {
    return url;
  }
  url = url.implementsGoogStringTypedString ? url.getTypedStringValue() : String(url);
  goog.html.SAFE_URL_PATTERN_.test(url) || (url = goog.html.SafeUrl.INNOCUOUS_STRING);
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(url);
};
goog.html.SafeUrl.sanitizeAssertUnchanged = function(url) {
  if (url instanceof goog.html.SafeUrl) {
    return url;
  }
  url = url.implementsGoogStringTypedString ? url.getTypedStringValue() : String(url);
  goog.asserts.assert(goog.html.SAFE_URL_PATTERN_.test(url)) || (url = goog.html.SafeUrl.INNOCUOUS_STRING);
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(url);
};
goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse = function(url) {
  var safeUrl = new goog.html.SafeUrl;
  safeUrl.privateDoNotAccessOrElseSafeHtmlWrappedValue_ = url;
  return safeUrl;
};
goog.html.SafeUrl.ABOUT_BLANK = goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse("about:blank");
goog.html.SafeStyle = function() {
  this.privateDoNotAccessOrElseSafeStyleWrappedValue_ = "";
  this.SAFE_STYLE_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeStyle.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
};
goog.html.SafeStyle.prototype.implementsGoogStringTypedString = !0;
goog.html.SafeStyle.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
goog.html.SafeStyle.fromConstant = function(style) {
  var styleString = goog.string.Const.unwrap(style);
  if (0 === styleString.length) {
    return goog.html.SafeStyle.EMPTY;
  }
  goog.html.SafeStyle.checkStyle_(styleString);
  goog.asserts.assert(goog.string.endsWith(styleString, ";"), "Last character of style string is not ';': " + styleString);
  goog.asserts.assert(goog.string.contains(styleString, ":"), "Style string must contain at least one ':', to specify a \"name: value\" pair: " + styleString);
  return goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(styleString);
};
goog.html.SafeStyle.checkStyle_ = function(style) {
  goog.asserts.assert(!/[<>]/.test(style), "Forbidden characters in style string: " + style);
};
goog.html.SafeStyle.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseSafeStyleWrappedValue_;
};
goog.DEBUG && (goog.html.SafeStyle.prototype.toString = function() {
  return "SafeStyle{" + this.privateDoNotAccessOrElseSafeStyleWrappedValue_ + "}";
});
goog.html.SafeStyle.unwrap = function(safeStyle) {
  if (safeStyle instanceof goog.html.SafeStyle && safeStyle.constructor === goog.html.SafeStyle && safeStyle.SAFE_STYLE_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeStyle.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
    return safeStyle.privateDoNotAccessOrElseSafeStyleWrappedValue_;
  }
  goog.asserts.fail("expected object of type SafeStyle, got '" + safeStyle + "' of type " + goog.typeOf(safeStyle));
  return "type_error:SafeStyle";
};
goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse = function(style) {
  return (new goog.html.SafeStyle).initSecurityPrivateDoNotAccessOrElse_(style);
};
goog.html.SafeStyle.prototype.initSecurityPrivateDoNotAccessOrElse_ = function(style) {
  this.privateDoNotAccessOrElseSafeStyleWrappedValue_ = style;
  return this;
};
goog.html.SafeStyle.EMPTY = goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse("");
goog.html.SafeStyle.INNOCUOUS_STRING = "zClosurez";
goog.html.SafeStyle.create = function(map) {
  var style = "";
  for (var name in map) {
    if (!/^[-_a-zA-Z0-9]+$/.test(name)) {
      throw Error("Name allows only [-_a-zA-Z0-9], got: " + name);
    }
    var value = map[name];
    null != value && (value = goog.isArray(value) ? goog.array.map(value, goog.html.SafeStyle.sanitizePropertyValue_).join(" ") : goog.html.SafeStyle.sanitizePropertyValue_(value), style += name + ":" + value + ";");
  }
  if (!style) {
    return goog.html.SafeStyle.EMPTY;
  }
  goog.html.SafeStyle.checkStyle_(style);
  return goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(style);
};
goog.html.SafeStyle.sanitizePropertyValue_ = function(value) {
  if (value instanceof goog.html.SafeUrl) {
    var url = goog.html.SafeUrl.unwrap(value);
    return 'url("' + url.replace(/</g, "%3c").replace(/[\\"]/g, "\\$&") + '")';
  }
  var result = value instanceof goog.string.Const ? goog.string.Const.unwrap(value) : goog.html.SafeStyle.sanitizePropertyValueString_(String(value));
  goog.asserts.assert(!/[{;}]/.test(result), "Value does not allow [{;}].");
  return result;
};
goog.html.SafeStyle.sanitizePropertyValueString_ = function(value) {
  var valueWithoutFunctions = value.replace(goog.html.SafeUrl.FUNCTIONS_RE_, "$1").replace(goog.html.SafeUrl.URL_RE_, "url");
  return goog.html.SafeStyle.VALUE_RE_.test(valueWithoutFunctions) ? goog.html.SafeStyle.hasBalancedQuotes_(value) ? goog.html.SafeStyle.sanitizeUrl_(value) : (goog.asserts.fail("String value requires balanced quotes, got: " + value), goog.html.SafeStyle.INNOCUOUS_STRING) : (goog.asserts.fail("String value allows only " + goog.html.SafeStyle.VALUE_ALLOWED_CHARS_ + " and simple functions, got: " + value), goog.html.SafeStyle.INNOCUOUS_STRING);
};
goog.html.SafeStyle.hasBalancedQuotes_ = function(value) {
  var outsideSingle = !0;
  var outsideDouble = !0;
  for (var i = 0; i < value.length; i++) {
    var c = value.charAt(i);
    "'" == c && outsideDouble ? outsideSingle = !outsideSingle : '"' == c && outsideSingle && (outsideDouble = !outsideDouble);
  }
  return outsideSingle && outsideDouble;
};
goog.html.SafeStyle.VALUE_ALLOWED_CHARS_ = "[-,.\"'%_!# a-zA-Z0-9]";
goog.html.SafeStyle.VALUE_RE_ = new RegExp("^" + goog.html.SafeStyle.VALUE_ALLOWED_CHARS_ + "+$");
goog.html.SafeUrl.URL_RE_ = /\b(url\([ \t\n]*)('[ -&(-\[\]-~]*'|"[ !#-\[\]-~]*"|[!#-&*-\[\]-~]*)([ \t\n]*\))/g;
goog.html.SafeUrl.FUNCTIONS_RE_ = /\b(hsl|hsla|rgb|rgba|(rotate|scale|translate)(X|Y|Z|3d)?)\([-0-9a-z.%, ]+\)/g;
goog.html.SafeStyle.sanitizeUrl_ = function(value) {
  return value.replace(goog.html.SafeUrl.URL_RE_, function(match$jscomp$0, before, url, after) {
    var quote = "";
    url = url.replace(/^(['"])(.*)\1$/, function(match, start, inside) {
      quote = start;
      return inside;
    });
    var sanitized = goog.html.SafeUrl.sanitize(url).getTypedStringValue();
    return before + quote + sanitized + quote + after;
  });
};
goog.html.SafeStyle.concat = function(var_args) {
  var style = "";
  var addArgument = function(argument) {
    goog.isArray(argument) ? goog.array.forEach(argument, addArgument) : style += goog.html.SafeStyle.unwrap(argument);
  };
  goog.array.forEach(arguments, addArgument);
  return style ? goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(style) : goog.html.SafeStyle.EMPTY;
};
goog.html.SafeStyleSheet = function() {
  this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_ = "";
  this.SAFE_STYLE_SHEET_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeStyleSheet.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
};
goog.html.SafeStyleSheet.prototype.implementsGoogStringTypedString = !0;
goog.html.SafeStyleSheet.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
goog.html.SafeStyleSheet.createRule = function(selector, style) {
  if (goog.string.contains(selector, "<")) {
    throw Error("Selector does not allow '<', got: " + selector);
  }
  var selectorToCheck = selector.replace(/('|")((?!\1)[^\r\n\f\\]|\\[\s\S])*\1/g, "");
  if (!/^[-_a-zA-Z0-9#.:* ,>+~[\]()=^$|]+$/.test(selectorToCheck)) {
    throw Error("Selector allows only [-_a-zA-Z0-9#.:* ,>+~[\\]()=^$|] and strings, got: " + selector);
  }
  if (!goog.html.SafeStyleSheet.hasBalancedBrackets_(selectorToCheck)) {
    throw Error("() and [] in selector must be balanced, got: " + selector);
  }
  style instanceof goog.html.SafeStyle || (style = goog.html.SafeStyle.create(style));
  var styleSheet = selector + "{" + goog.html.SafeStyle.unwrap(style) + "}";
  return goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(styleSheet);
};
goog.html.SafeStyleSheet.hasBalancedBrackets_ = function(s) {
  var brackets = {"(":")", "[":"]"};
  var expectedBrackets = [];
  for (var i = 0; i < s.length; i++) {
    var ch = s[i];
    if (brackets[ch]) {
      expectedBrackets.push(brackets[ch]);
    } else {
      if (goog.object.contains(brackets, ch) && expectedBrackets.pop() != ch) {
        return !1;
      }
    }
  }
  return 0 == expectedBrackets.length;
};
goog.html.SafeStyleSheet.concat = function(var_args) {
  var result = "";
  var addArgument = function(argument) {
    goog.isArray(argument) ? goog.array.forEach(argument, addArgument) : result += goog.html.SafeStyleSheet.unwrap(argument);
  };
  goog.array.forEach(arguments, addArgument);
  return goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(result);
};
goog.html.SafeStyleSheet.fromConstant = function(styleSheet) {
  var styleSheetString = goog.string.Const.unwrap(styleSheet);
  if (0 === styleSheetString.length) {
    return goog.html.SafeStyleSheet.EMPTY;
  }
  goog.asserts.assert(!goog.string.contains(styleSheetString, "<"), "Forbidden '<' character in style sheet string: " + styleSheetString);
  return goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(styleSheetString);
};
goog.html.SafeStyleSheet.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_;
};
goog.DEBUG && (goog.html.SafeStyleSheet.prototype.toString = function() {
  return "SafeStyleSheet{" + this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_ + "}";
});
goog.html.SafeStyleSheet.unwrap = function(safeStyleSheet) {
  if (safeStyleSheet instanceof goog.html.SafeStyleSheet && safeStyleSheet.constructor === goog.html.SafeStyleSheet && safeStyleSheet.SAFE_STYLE_SHEET_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeStyleSheet.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
    return safeStyleSheet.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_;
  }
  goog.asserts.fail("expected object of type SafeStyleSheet, got '" + safeStyleSheet + "' of type " + goog.typeOf(safeStyleSheet));
  return "type_error:SafeStyleSheet";
};
goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse = function(styleSheet) {
  return (new goog.html.SafeStyleSheet).initSecurityPrivateDoNotAccessOrElse_(styleSheet);
};
goog.html.SafeStyleSheet.prototype.initSecurityPrivateDoNotAccessOrElse_ = function(styleSheet) {
  this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_ = styleSheet;
  return this;
};
goog.html.SafeStyleSheet.EMPTY = goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse("");
goog.html.SafeHtml = function() {
  this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ = "";
  this.SAFE_HTML_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
  this.dir_ = null;
};
goog.html.SafeHtml.prototype.implementsGoogI18nBidiDirectionalString = !0;
goog.html.SafeHtml.prototype.getDirection = function() {
  return this.dir_;
};
goog.html.SafeHtml.prototype.implementsGoogStringTypedString = !0;
goog.html.SafeHtml.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseSafeHtmlWrappedValue_;
};
goog.DEBUG && (goog.html.SafeHtml.prototype.toString = function() {
  return "SafeHtml{" + this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ + "}";
});
goog.html.SafeHtml.unwrap = function(safeHtml) {
  if (safeHtml instanceof goog.html.SafeHtml && safeHtml.constructor === goog.html.SafeHtml && safeHtml.SAFE_HTML_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
    return safeHtml.privateDoNotAccessOrElseSafeHtmlWrappedValue_;
  }
  goog.asserts.fail("expected object of type SafeHtml, got '" + safeHtml + "' of type " + goog.typeOf(safeHtml));
  return "type_error:SafeHtml";
};
goog.html.SafeHtml.htmlEscape = function(textOrHtml) {
  if (textOrHtml instanceof goog.html.SafeHtml) {
    return textOrHtml;
  }
  var dir = null;
  textOrHtml.implementsGoogI18nBidiDirectionalString && (dir = textOrHtml.getDirection());
  var textAsString = textOrHtml.implementsGoogStringTypedString ? textOrHtml.getTypedStringValue() : String(textOrHtml);
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.htmlEscape(textAsString), dir);
};
goog.html.SafeHtml.htmlEscapePreservingNewlines = function(textOrHtml) {
  if (textOrHtml instanceof goog.html.SafeHtml) {
    return textOrHtml;
  }
  var html = goog.html.SafeHtml.htmlEscape(textOrHtml);
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.newLineToBr(goog.html.SafeHtml.unwrap(html)), html.getDirection());
};
goog.html.SafeHtml.htmlEscapePreservingNewlinesAndSpaces = function(textOrHtml) {
  if (textOrHtml instanceof goog.html.SafeHtml) {
    return textOrHtml;
  }
  var html = goog.html.SafeHtml.htmlEscape(textOrHtml);
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.whitespaceEscape(goog.html.SafeHtml.unwrap(html)), html.getDirection());
};
goog.html.SafeHtml.from = goog.html.SafeHtml.htmlEscape;
goog.html.SafeHtml.VALID_NAMES_IN_TAG_ = /^[a-zA-Z0-9-]+$/;
goog.html.SafeHtml.URL_ATTRIBUTES_ = {action:!0, cite:!0, data:!0, formaction:!0, href:!0, manifest:!0, poster:!0, src:!0};
goog.html.SafeHtml.NOT_ALLOWED_TAG_NAMES_ = {APPLET:!0, BASE:!0, EMBED:!0, IFRAME:!0, LINK:!0, MATH:!0, META:!0, OBJECT:!0, SCRIPT:!0, STYLE:!0, SVG:!0, TEMPLATE:!0};
goog.html.SafeHtml.create = function(tagName, opt_attributes, opt_content) {
  goog.html.SafeHtml.verifyTagName(String(tagName));
  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(String(tagName), opt_attributes, opt_content);
};
goog.html.SafeHtml.verifyTagName = function(tagName) {
  if (!goog.html.SafeHtml.VALID_NAMES_IN_TAG_.test(tagName)) {
    throw Error("Invalid tag name <" + tagName + ">.");
  }
  if (tagName.toUpperCase() in goog.html.SafeHtml.NOT_ALLOWED_TAG_NAMES_) {
    throw Error("Tag name <" + tagName + "> is not allowed for SafeHtml.");
  }
};
goog.html.SafeHtml.createIframe = function(opt_src, opt_srcdoc, opt_attributes, opt_content) {
  opt_src && goog.html.TrustedResourceUrl.unwrap(opt_src);
  var fixedAttributes = {};
  fixedAttributes.src = opt_src || null;
  fixedAttributes.srcdoc = opt_srcdoc && goog.html.SafeHtml.unwrap(opt_srcdoc);
  var defaultAttributes = {sandbox:""};
  var attributes = goog.html.SafeHtml.combineAttributes(fixedAttributes, defaultAttributes, opt_attributes);
  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("iframe", attributes, opt_content);
};
goog.html.SafeHtml.createSandboxIframe = function(opt_src, opt_srcdoc, opt_attributes, opt_content) {
  if (!goog.html.SafeHtml.canUseSandboxIframe()) {
    throw Error("The browser does not support sandboxed iframes.");
  }
  var fixedAttributes = {};
  fixedAttributes.src = opt_src ? goog.html.SafeUrl.unwrap(goog.html.SafeUrl.sanitize(opt_src)) : null;
  fixedAttributes.srcdoc = opt_srcdoc || null;
  fixedAttributes.sandbox = "";
  var attributes = goog.html.SafeHtml.combineAttributes(fixedAttributes, {}, opt_attributes);
  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("iframe", attributes, opt_content);
};
goog.html.SafeHtml.canUseSandboxIframe = function() {
  return goog.global.HTMLIFrameElement && "sandbox" in goog.global.HTMLIFrameElement.prototype;
};
goog.html.SafeHtml.createScriptSrc = function(src, opt_attributes) {
  goog.html.TrustedResourceUrl.unwrap(src);
  var fixedAttributes = {src:src};
  var defaultAttributes = {};
  var attributes = goog.html.SafeHtml.combineAttributes(fixedAttributes, defaultAttributes, opt_attributes);
  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("script", attributes);
};
goog.html.SafeHtml.createScript = function(script, opt_attributes) {
  for (var attr in opt_attributes) {
    var attrLower = attr.toLowerCase();
    if ("language" == attrLower || "src" == attrLower || "text" == attrLower || "type" == attrLower) {
      throw Error('Cannot set "' + attrLower + '" attribute');
    }
  }
  var content = "";
  script = goog.array.concat(script);
  for (var i = 0; i < script.length; i++) {
    content += goog.html.SafeScript.unwrap(script[i]);
  }
  var htmlContent = goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(content, goog.i18n.bidi.Dir.NEUTRAL);
  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("script", opt_attributes, htmlContent);
};
goog.html.SafeHtml.createStyle = function(styleSheet, opt_attributes) {
  var fixedAttributes = {type:"text/css"};
  var defaultAttributes = {};
  var attributes = goog.html.SafeHtml.combineAttributes(fixedAttributes, defaultAttributes, opt_attributes);
  var content = "";
  styleSheet = goog.array.concat(styleSheet);
  for (var i = 0; i < styleSheet.length; i++) {
    content += goog.html.SafeStyleSheet.unwrap(styleSheet[i]);
  }
  var htmlContent = goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(content, goog.i18n.bidi.Dir.NEUTRAL);
  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("style", attributes, htmlContent);
};
goog.html.SafeHtml.createMetaRefresh = function(url, opt_secs) {
  var unwrappedUrl = goog.html.SafeUrl.unwrap(goog.html.SafeUrl.sanitize(url));
  (goog.labs.userAgent.browser.isIE() || goog.labs.userAgent.browser.isEdge()) && goog.string.contains(unwrappedUrl, ";") && (unwrappedUrl = "'" + unwrappedUrl.replace(/'/g, "%27") + "'");
  var attributes = {"http-equiv":"refresh", content:(opt_secs || 0) + "; url=" + unwrappedUrl};
  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("meta", attributes);
};
goog.html.SafeHtml.getAttrNameAndValue_ = function(tagName, name, value) {
  if (value instanceof goog.string.Const) {
    value = goog.string.Const.unwrap(value);
  } else {
    if ("style" == name.toLowerCase()) {
      value = goog.html.SafeHtml.getStyleValue_(value);
    } else {
      if (/^on/i.test(name)) {
        throw Error('Attribute "' + name + '" requires goog.string.Const value, "' + value + '" given.');
      }
      if (name.toLowerCase() in goog.html.SafeHtml.URL_ATTRIBUTES_) {
        if (value instanceof goog.html.TrustedResourceUrl) {
          value = goog.html.TrustedResourceUrl.unwrap(value);
        } else {
          if (value instanceof goog.html.SafeUrl) {
            value = goog.html.SafeUrl.unwrap(value);
          } else {
            if (goog.isString(value)) {
              value = goog.html.SafeUrl.sanitize(value).getTypedStringValue();
            } else {
              throw Error('Attribute "' + name + '" on tag "' + tagName + '" requires goog.html.SafeUrl, goog.string.Const, or string, value "' + value + '" given.');
            }
          }
        }
      }
    }
  }
  value.implementsGoogStringTypedString && (value = value.getTypedStringValue());
  goog.asserts.assert(goog.isString(value) || goog.isNumber(value), "String or number value expected, got " + typeof value + " with value: " + value);
  return name + '="' + goog.string.htmlEscape(String(value)) + '"';
};
goog.html.SafeHtml.getStyleValue_ = function(value) {
  if (!goog.isObject(value)) {
    throw Error('The "style" attribute requires goog.html.SafeStyle or map of style properties, ' + typeof value + " given: " + value);
  }
  value instanceof goog.html.SafeStyle || (value = goog.html.SafeStyle.create(value));
  return goog.html.SafeStyle.unwrap(value);
};
goog.html.SafeHtml.createWithDir = function(dir, tagName, opt_attributes, opt_content) {
  var html = goog.html.SafeHtml.create(tagName, opt_attributes, opt_content);
  html.dir_ = dir;
  return html;
};
goog.html.SafeHtml.concat = function(var_args) {
  var dir = goog.i18n.bidi.Dir.NEUTRAL;
  var content = "";
  var addArgument = function(argument) {
    if (goog.isArray(argument)) {
      goog.array.forEach(argument, addArgument);
    } else {
      var html = goog.html.SafeHtml.htmlEscape(argument);
      content += goog.html.SafeHtml.unwrap(html);
      var htmlDir = html.getDirection();
      dir == goog.i18n.bidi.Dir.NEUTRAL ? dir = htmlDir : htmlDir != goog.i18n.bidi.Dir.NEUTRAL && dir != htmlDir && (dir = null);
    }
  };
  goog.array.forEach(arguments, addArgument);
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(content, dir);
};
goog.html.SafeHtml.concatWithDir = function(dir, var_args) {
  var html = goog.html.SafeHtml.concat(goog.array.slice(arguments, 1));
  html.dir_ = dir;
  return html;
};
goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse = function(html, dir) {
  return (new goog.html.SafeHtml).initSecurityPrivateDoNotAccessOrElse_(html, dir);
};
goog.html.SafeHtml.prototype.initSecurityPrivateDoNotAccessOrElse_ = function(html, dir) {
  this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ = html;
  this.dir_ = dir;
  return this;
};
goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse = function(tagName, opt_attributes, opt_content) {
  var dir = null;
  var result = "<" + tagName;
  result += goog.html.SafeHtml.stringifyAttributes(tagName, opt_attributes);
  var content = opt_content;
  goog.isDefAndNotNull(content) ? goog.isArray(content) || (content = [content]) : content = [];
  if (goog.dom.tags.isVoidTag(tagName.toLowerCase())) {
    goog.asserts.assert(!content.length, "Void tag <" + tagName + "> does not allow content."), result += ">";
  } else {
    var html = goog.html.SafeHtml.concat(content);
    result += ">" + goog.html.SafeHtml.unwrap(html) + "</" + tagName + ">";
    dir = html.getDirection();
  }
  var dirAttribute = opt_attributes && opt_attributes.dir;
  dirAttribute && (dir = /^(ltr|rtl|auto)$/i.test(dirAttribute) ? goog.i18n.bidi.Dir.NEUTRAL : null);
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(result, dir);
};
goog.html.SafeHtml.stringifyAttributes = function(tagName, opt_attributes) {
  var result = "";
  if (opt_attributes) {
    for (var name in opt_attributes) {
      if (!goog.html.SafeHtml.VALID_NAMES_IN_TAG_.test(name)) {
        throw Error('Invalid attribute name "' + name + '".');
      }
      var value = opt_attributes[name];
      goog.isDefAndNotNull(value) && (result += " " + goog.html.SafeHtml.getAttrNameAndValue_(tagName, name, value));
    }
  }
  return result;
};
goog.html.SafeHtml.combineAttributes = function(fixedAttributes, defaultAttributes, opt_attributes) {
  var combinedAttributes = {};
  for (var name in fixedAttributes) {
    goog.asserts.assert(name.toLowerCase() == name, "Must be lower case"), combinedAttributes[name] = fixedAttributes[name];
  }
  for (name in defaultAttributes) {
    goog.asserts.assert(name.toLowerCase() == name, "Must be lower case"), combinedAttributes[name] = defaultAttributes[name];
  }
  for (name in opt_attributes) {
    var nameLower = name.toLowerCase();
    if (nameLower in fixedAttributes) {
      throw Error('Cannot override "' + nameLower + '" attribute, got "' + name + '" with value "' + opt_attributes[name] + '"');
    }
    nameLower in defaultAttributes && delete combinedAttributes[nameLower];
    combinedAttributes[name] = opt_attributes[name];
  }
  return combinedAttributes;
};
goog.html.SafeHtml.DOCTYPE_HTML = goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse("<!DOCTYPE html>", goog.i18n.bidi.Dir.NEUTRAL);
goog.html.SafeHtml.EMPTY = goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse("", goog.i18n.bidi.Dir.NEUTRAL);
goog.html.SafeHtml.BR = goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse("<br>", goog.i18n.bidi.Dir.NEUTRAL);
goog.dom.safe = {};
goog.dom.safe.InsertAdjacentHtmlPosition = {AFTERBEGIN:"afterbegin", AFTEREND:"afterend", BEFOREBEGIN:"beforebegin", BEFOREEND:"beforeend"};
goog.dom.safe.insertAdjacentHtml = function(node, position, html) {
  node.insertAdjacentHTML(position, goog.html.SafeHtml.unwrap(html));
};
goog.dom.safe.SET_INNER_HTML_DISALLOWED_TAGS_ = {MATH:!0, SCRIPT:!0, STYLE:!0, SVG:!0, TEMPLATE:!0};
goog.dom.safe.setInnerHtml = function(elem, html) {
  if (goog.asserts.ENABLE_ASSERTS) {
    var tagName = elem.tagName.toUpperCase();
    if (goog.dom.safe.SET_INNER_HTML_DISALLOWED_TAGS_[tagName]) {
      throw Error("goog.dom.safe.setInnerHtml cannot be used to set content of " + elem.tagName + ".");
    }
  }
  elem.innerHTML = goog.html.SafeHtml.unwrap(html);
};
goog.dom.safe.setOuterHtml = function(elem, html) {
  elem.outerHTML = goog.html.SafeHtml.unwrap(html);
};
goog.dom.safe.setStyle = function(elem, style) {
  elem.style.cssText = goog.html.SafeStyle.unwrap(style);
};
goog.dom.safe.documentWrite = function(doc, html) {
  doc.write(goog.html.SafeHtml.unwrap(html));
};
goog.dom.safe.setAnchorHref = function(anchor, url) {
  goog.dom.asserts.assertIsHTMLAnchorElement(anchor);
  var safeUrl = url instanceof goog.html.SafeUrl ? url : goog.html.SafeUrl.sanitizeAssertUnchanged(url);
  anchor.href = goog.html.SafeUrl.unwrap(safeUrl);
};
goog.dom.safe.setImageSrc = function(imageElement, url) {
  goog.dom.asserts.assertIsHTMLImageElement(imageElement);
  var safeUrl = url instanceof goog.html.SafeUrl ? url : goog.html.SafeUrl.sanitizeAssertUnchanged(url);
  imageElement.src = goog.html.SafeUrl.unwrap(safeUrl);
};
goog.dom.safe.setEmbedSrc = function(embed, url) {
  goog.dom.asserts.assertIsHTMLEmbedElement(embed);
  embed.src = goog.html.TrustedResourceUrl.unwrap(url);
};
goog.dom.safe.setFrameSrc = function(frame, url) {
  goog.dom.asserts.assertIsHTMLFrameElement(frame);
  frame.src = goog.html.TrustedResourceUrl.unwrap(url);
};
goog.dom.safe.setIframeSrc = function(iframe, url) {
  goog.dom.asserts.assertIsHTMLIFrameElement(iframe);
  iframe.src = goog.html.TrustedResourceUrl.unwrap(url);
};
goog.dom.safe.setIframeSrcdoc = function(iframe, html) {
  goog.dom.asserts.assertIsHTMLIFrameElement(iframe);
  iframe.srcdoc = goog.html.SafeHtml.unwrap(html);
};
goog.dom.safe.setLinkHrefAndRel = function(link, url, rel) {
  goog.dom.asserts.assertIsHTMLLinkElement(link);
  link.rel = rel;
  goog.string.caseInsensitiveContains(rel, "stylesheet") ? (goog.asserts.assert(url instanceof goog.html.TrustedResourceUrl, 'URL must be TrustedResourceUrl because "rel" contains "stylesheet"'), link.href = goog.html.TrustedResourceUrl.unwrap(url)) : link.href = url instanceof goog.html.TrustedResourceUrl ? goog.html.TrustedResourceUrl.unwrap(url) : url instanceof goog.html.SafeUrl ? goog.html.SafeUrl.unwrap(url) : goog.html.SafeUrl.sanitizeAssertUnchanged(url).getTypedStringValue();
};
goog.dom.safe.setObjectData = function(object, url) {
  goog.dom.asserts.assertIsHTMLObjectElement(object);
  object.data = goog.html.TrustedResourceUrl.unwrap(url);
};
goog.dom.safe.setScriptSrc = function(script, url) {
  goog.dom.asserts.assertIsHTMLScriptElement(script);
  script.src = goog.html.TrustedResourceUrl.unwrap(url);
};
goog.dom.safe.setScriptContent = function(script, content) {
  goog.dom.asserts.assertIsHTMLScriptElement(script);
  script.text = goog.html.SafeScript.unwrap(content);
};
goog.dom.safe.setLocationHref = function(loc, url) {
  goog.dom.asserts.assertIsLocation(loc);
  var safeUrl = url instanceof goog.html.SafeUrl ? url : goog.html.SafeUrl.sanitizeAssertUnchanged(url);
  loc.href = goog.html.SafeUrl.unwrap(safeUrl);
};
goog.dom.safe.openInWindow = function(url, opt_openerWin, opt_name, opt_specs, opt_replace) {
  var safeUrl = url instanceof goog.html.SafeUrl ? url : goog.html.SafeUrl.sanitizeAssertUnchanged(url);
  var win = opt_openerWin || window;
  return win.open(goog.html.SafeUrl.unwrap(safeUrl), opt_name ? goog.string.Const.unwrap(opt_name) : "", opt_specs, opt_replace);
};
goog.html.uncheckedconversions = {};
goog.html.uncheckedconversions.safeHtmlFromStringKnownToSatisfyTypeContract = function(justification, html, opt_dir) {
  goog.asserts.assertString(goog.string.Const.unwrap(justification), "must provide justification");
  goog.asserts.assert(!goog.string.isEmptyOrWhitespace(goog.string.Const.unwrap(justification)), "must provide non-empty justification");
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(html, opt_dir || null);
};
goog.html.uncheckedconversions.safeScriptFromStringKnownToSatisfyTypeContract = function(justification, script) {
  goog.asserts.assertString(goog.string.Const.unwrap(justification), "must provide justification");
  goog.asserts.assert(!goog.string.isEmptyOrWhitespace(goog.string.Const.unwrap(justification)), "must provide non-empty justification");
  return goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(script);
};
goog.html.uncheckedconversions.safeStyleFromStringKnownToSatisfyTypeContract = function(justification, style) {
  goog.asserts.assertString(goog.string.Const.unwrap(justification), "must provide justification");
  goog.asserts.assert(!goog.string.isEmptyOrWhitespace(goog.string.Const.unwrap(justification)), "must provide non-empty justification");
  return goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(style);
};
goog.html.uncheckedconversions.safeStyleSheetFromStringKnownToSatisfyTypeContract = function(justification, styleSheet) {
  goog.asserts.assertString(goog.string.Const.unwrap(justification), "must provide justification");
  goog.asserts.assert(!goog.string.isEmptyOrWhitespace(goog.string.Const.unwrap(justification)), "must provide non-empty justification");
  return goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(styleSheet);
};
goog.html.uncheckedconversions.safeUrlFromStringKnownToSatisfyTypeContract = function(justification, url) {
  goog.asserts.assertString(goog.string.Const.unwrap(justification), "must provide justification");
  goog.asserts.assert(!goog.string.isEmptyOrWhitespace(goog.string.Const.unwrap(justification)), "must provide non-empty justification");
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(url);
};
goog.html.uncheckedconversions.trustedResourceUrlFromStringKnownToSatisfyTypeContract = function(justification, url) {
  goog.asserts.assertString(goog.string.Const.unwrap(justification), "must provide justification");
  goog.asserts.assert(!goog.string.isEmptyOrWhitespace(goog.string.Const.unwrap(justification)), "must provide non-empty justification");
  return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(url);
};
goog.math = {};
goog.math.randomInt = function(a) {
  return Math.floor(Math.random() * a);
};
goog.math.uniformRandom = function(a, b) {
  return a + Math.random() * (b - a);
};
goog.math.clamp = function(value, min, max) {
  return Math.min(Math.max(value, min), max);
};
goog.math.modulo = function(a, b) {
  var r = a % b;
  return 0 > r * b ? r + b : r;
};
goog.math.lerp = function(a, b, x) {
  return a + x * (b - a);
};
goog.math.nearlyEquals = function(a, b, opt_tolerance) {
  return Math.abs(a - b) <= (opt_tolerance || 0.000001);
};
goog.math.standardAngle = function(angle) {
  return goog.math.modulo(angle, 360);
};
goog.math.standardAngleInRadians = function(angle) {
  return goog.math.modulo(angle, 2 * Math.PI);
};
goog.math.toRadians = function(angleDegrees) {
  return angleDegrees * Math.PI / 180;
};
goog.math.toDegrees = function(angleRadians) {
  return 180 * angleRadians / Math.PI;
};
goog.math.angleDx = function(degrees, radius) {
  return radius * Math.cos(goog.math.toRadians(degrees));
};
goog.math.angleDy = function(degrees, radius) {
  return radius * Math.sin(goog.math.toRadians(degrees));
};
goog.math.angle = function(x1, y1, x2, y2) {
  return goog.math.standardAngle(goog.math.toDegrees(Math.atan2(y2 - y1, x2 - x1)));
};
goog.math.angleDifference = function(startAngle, endAngle) {
  var d = goog.math.standardAngle(endAngle) - goog.math.standardAngle(startAngle);
  180 < d ? d -= 360 : -180 >= d && (d = 360 + d);
  return d;
};
goog.math.sign = function(x) {
  return 0 < x ? 1 : 0 > x ? -1 : x;
};
goog.math.longestCommonSubsequence = function(array1, array2, opt_compareFn, opt_collectorFn) {
  var compare = opt_compareFn || function(a, b) {
    return a == b;
  };
  var collect = opt_collectorFn || function(i1) {
    return array1[i1];
  };
  var length1 = array1.length;
  var length2 = array2.length;
  var arr = [];
  for (var i = 0; i < length1 + 1; i++) {
    arr[i] = [], arr[i][0] = 0;
  }
  for (var j = 0; j < length2 + 1; j++) {
    arr[0][j] = 0;
  }
  for (i = 1; i <= length1; i++) {
    for (j = 1; j <= length2; j++) {
      compare(array1[i - 1], array2[j - 1]) ? arr[i][j] = arr[i - 1][j - 1] + 1 : arr[i][j] = Math.max(arr[i - 1][j], arr[i][j - 1]);
    }
  }
  var result = [];
  i = length1;
  for (j = length2; 0 < i && 0 < j;) {
    compare(array1[i - 1], array2[j - 1]) ? (result.unshift(collect(i - 1, j - 1)), i--, j--) : arr[i - 1][j] > arr[i][j - 1] ? i-- : j--;
  }
  return result;
};
goog.math.sum = function(var_args) {
  return goog.array.reduce(arguments, function(sum, value) {
    return sum + value;
  }, 0);
};
goog.math.average = function(var_args) {
  return goog.math.sum.apply(null, arguments) / arguments.length;
};
goog.math.sampleVariance = function(var_args) {
  var sampleSize = arguments.length;
  if (2 > sampleSize) {
    return 0;
  }
  var mean = goog.math.average.apply(null, arguments);
  var variance = goog.math.sum.apply(null, goog.array.map(arguments, function(val) {
    return Math.pow(val - mean, 2);
  })) / (sampleSize - 1);
  return variance;
};
goog.math.standardDeviation = function(var_args) {
  return Math.sqrt(goog.math.sampleVariance.apply(null, arguments));
};
goog.math.isInt = function(num) {
  return isFinite(num) && 0 == num % 1;
};
goog.math.isFiniteNumber = function(num) {
  return isFinite(num);
};
goog.math.isNegativeZero = function(num) {
  return 0 == num && 0 > 1 / num;
};
goog.math.log10Floor = function(num) {
  if (0 < num) {
    var x = Math.round(Math.log(num) * Math.LOG10E);
    return x - (parseFloat("1e" + x) > num ? 1 : 0);
  }
  return 0 == num ? -Infinity : NaN;
};
goog.math.safeFloor = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || 0 < opt_epsilon);
  return Math.floor(num + (opt_epsilon || 2e-15));
};
goog.math.safeCeil = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || 0 < opt_epsilon);
  return Math.ceil(num - (opt_epsilon || 2e-15));
};
goog.math.Coordinate = function(opt_x, opt_y) {
  this.x = goog.isDef(opt_x) ? opt_x : 0;
  this.y = goog.isDef(opt_y) ? opt_y : 0;
};
goog.math.Coordinate.prototype.clone = function() {
  return new goog.math.Coordinate(this.x, this.y);
};
goog.DEBUG && (goog.math.Coordinate.prototype.toString = function() {
  return "(" + this.x + ", " + this.y + ")";
});
goog.math.Coordinate.prototype.equals = function(other) {
  return other instanceof goog.math.Coordinate && goog.math.Coordinate.equals(this, other);
};
goog.math.Coordinate.equals = function(a, b) {
  return a == b ? !0 : a && b ? a.x == b.x && a.y == b.y : !1;
};
goog.math.Coordinate.distance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return Math.sqrt(dx * dx + dy * dy);
};
goog.math.Coordinate.magnitude = function(a) {
  return Math.sqrt(a.x * a.x + a.y * a.y);
};
goog.math.Coordinate.azimuth = function(a) {
  return goog.math.angle(0, 0, a.x, a.y);
};
goog.math.Coordinate.squaredDistance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return dx * dx + dy * dy;
};
goog.math.Coordinate.difference = function(a, b) {
  return new goog.math.Coordinate(a.x - b.x, a.y - b.y);
};
goog.math.Coordinate.sum = function(a, b) {
  return new goog.math.Coordinate(a.x + b.x, a.y + b.y);
};
goog.math.Coordinate.prototype.ceil = function() {
  this.x = Math.ceil(this.x);
  this.y = Math.ceil(this.y);
  return this;
};
goog.math.Coordinate.prototype.floor = function() {
  this.x = Math.floor(this.x);
  this.y = Math.floor(this.y);
  return this;
};
goog.math.Coordinate.prototype.round = function() {
  this.x = Math.round(this.x);
  this.y = Math.round(this.y);
  return this;
};
goog.math.Coordinate.prototype.translate = function(tx, opt_ty) {
  tx instanceof goog.math.Coordinate ? (this.x += tx.x, this.y += tx.y) : (this.x += Number(tx), goog.isNumber(opt_ty) && (this.y += opt_ty));
  return this;
};
goog.math.Coordinate.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.x *= sx;
  this.y *= sy;
  return this;
};
goog.math.Size = function(width, height) {
  this.width = width;
  this.height = height;
};
goog.math.Size.equals = function(a, b) {
  return a == b ? !0 : a && b ? a.width == b.width && a.height == b.height : !1;
};
goog.math.Size.prototype.clone = function() {
  return new goog.math.Size(this.width, this.height);
};
goog.DEBUG && (goog.math.Size.prototype.toString = function() {
  return "(" + this.width + " x " + this.height + ")";
});
goog.math.Size.prototype.area = function() {
  return this.width * this.height;
};
goog.math.Size.prototype.aspectRatio = function() {
  return this.width / this.height;
};
goog.math.Size.prototype.isEmpty = function() {
  return !this.area();
};
goog.math.Size.prototype.ceil = function() {
  this.width = Math.ceil(this.width);
  this.height = Math.ceil(this.height);
  return this;
};
goog.math.Size.prototype.floor = function() {
  this.width = Math.floor(this.width);
  this.height = Math.floor(this.height);
  return this;
};
goog.math.Size.prototype.round = function() {
  this.width = Math.round(this.width);
  this.height = Math.round(this.height);
  return this;
};
goog.math.Size.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.width *= sx;
  this.height *= sy;
  return this;
};
goog.dom.ASSUME_QUIRKS_MODE = !1;
goog.dom.ASSUME_STANDARDS_MODE = !1;
goog.dom.COMPAT_MODE_KNOWN_ = goog.dom.ASSUME_QUIRKS_MODE || goog.dom.ASSUME_STANDARDS_MODE;
goog.dom.getDomHelper = function(opt_element) {
  return opt_element ? new goog.dom.DomHelper(goog.dom.getOwnerDocument(opt_element)) : goog.dom.defaultDomHelper_ || (goog.dom.defaultDomHelper_ = new goog.dom.DomHelper);
};
goog.dom.getDocument = function() {
  return document;
};
goog.dom.getElement = function(element) {
  return goog.dom.getElementHelper_(document, element);
};
goog.dom.getElementHelper_ = function(doc, element) {
  return goog.isString(element) ? doc.getElementById(element) : element;
};
goog.dom.getRequiredElement = function(id) {
  return goog.dom.getRequiredElementHelper_(document, id);
};
goog.dom.getRequiredElementHelper_ = function(doc, id) {
  goog.asserts.assertString(id);
  var element = goog.dom.getElementHelper_(doc, id);
  element = goog.asserts.assertElement(element, "No element found with id: " + id);
  return element;
};
goog.dom.$ = goog.dom.getElement;
goog.dom.getElementsByTagName = function(tagName, opt_parent) {
  var parent = opt_parent || document;
  return parent.getElementsByTagName(String(tagName));
};
goog.dom.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(document, opt_tag, opt_class, opt_el);
};
goog.dom.getElementByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementByTagNameAndClass_(document, opt_tag, opt_class, opt_el);
};
goog.dom.getElementsByClass = function(className, opt_el) {
  var parent = opt_el || document;
  return goog.dom.canUseQuerySelector_(parent) ? parent.querySelectorAll("." + className) : goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el);
};
goog.dom.getElementByClass = function(className, opt_el) {
  var parent = opt_el || document;
  var retVal = parent.getElementsByClassName ? parent.getElementsByClassName(className)[0] : goog.dom.getElementByTagNameAndClass_(document, "*", className, opt_el);
  return retVal || null;
};
goog.dom.getRequiredElementByClass = function(className, opt_root) {
  var retValue = goog.dom.getElementByClass(className, opt_root);
  return goog.asserts.assert(retValue, "No element found with className: " + className);
};
goog.dom.canUseQuerySelector_ = function(parent) {
  return !(!parent.querySelectorAll || !parent.querySelector);
};
goog.dom.getElementsByTagNameAndClass_ = function(doc, opt_tag, opt_class, opt_el) {
  var parent = opt_el || doc;
  var tagName = opt_tag && "*" != opt_tag ? String(opt_tag).toUpperCase() : "";
  if (goog.dom.canUseQuerySelector_(parent) && (tagName || opt_class)) {
    var query = tagName + (opt_class ? "." + opt_class : "");
    return parent.querySelectorAll(query);
  }
  if (opt_class && parent.getElementsByClassName) {
    var els = parent.getElementsByClassName(opt_class);
    if (tagName) {
      var arrayLike = {};
      var len = 0;
      var i = 0;
      for (var el; el = els[i]; i++) {
        tagName == el.nodeName && (arrayLike[len++] = el);
      }
      arrayLike.length = len;
      return arrayLike;
    }
    return els;
  }
  els = parent.getElementsByTagName(tagName || "*");
  if (opt_class) {
    arrayLike = {};
    len = 0;
    for (i = 0; el = els[i]; i++) {
      var className = el.className;
      "function" == typeof className.split && goog.array.contains(className.split(/\s+/), opt_class) && (arrayLike[len++] = el);
    }
    arrayLike.length = len;
    return arrayLike;
  }
  return els;
};
goog.dom.getElementByTagNameAndClass_ = function(doc, opt_tag, opt_class, opt_el) {
  var parent = opt_el || doc;
  var tag = opt_tag && "*" != opt_tag ? String(opt_tag).toUpperCase() : "";
  if (goog.dom.canUseQuerySelector_(parent) && (tag || opt_class)) {
    return parent.querySelector(tag + (opt_class ? "." + opt_class : ""));
  }
  var elements = goog.dom.getElementsByTagNameAndClass_(doc, opt_tag, opt_class, opt_el);
  return elements[0] || null;
};
goog.dom.$$ = goog.dom.getElementsByTagNameAndClass;
goog.dom.setProperties = function(element, properties) {
  goog.object.forEach(properties, function(val, key) {
    val && val.implementsGoogStringTypedString && (val = val.getTypedStringValue());
    "style" == key ? element.style.cssText = val : "class" == key ? element.className = val : "for" == key ? element.htmlFor = val : goog.dom.DIRECT_ATTRIBUTE_MAP_.hasOwnProperty(key) ? element.setAttribute(goog.dom.DIRECT_ATTRIBUTE_MAP_[key], val) : goog.string.startsWith(key, "aria-") || goog.string.startsWith(key, "data-") ? element.setAttribute(key, val) : element[key] = val;
  });
};
goog.dom.DIRECT_ATTRIBUTE_MAP_ = {cellpadding:"cellPadding", cellspacing:"cellSpacing", colspan:"colSpan", frameborder:"frameBorder", height:"height", maxlength:"maxLength", nonce:"nonce", role:"role", rowspan:"rowSpan", type:"type", usemap:"useMap", valign:"vAlign", width:"width"};
goog.dom.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize_(opt_window || window);
};
goog.dom.getViewportSize_ = function(win) {
  var doc = win.document;
  var el = goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body;
  return new goog.math.Size(el.clientWidth, el.clientHeight);
};
goog.dom.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(window);
};
goog.dom.getDocumentHeightForWindow = function(win) {
  return goog.dom.getDocumentHeight_(win);
};
goog.dom.getDocumentHeight_ = function(win) {
  var doc = win.document;
  var height = 0;
  if (doc) {
    var body = doc.body;
    var docEl = doc.documentElement;
    if (!docEl || !body) {
      return 0;
    }
    var vh = goog.dom.getViewportSize_(win).height;
    if (goog.dom.isCss1CompatMode_(doc) && docEl.scrollHeight) {
      height = docEl.scrollHeight != vh ? docEl.scrollHeight : docEl.offsetHeight;
    } else {
      var sh = docEl.scrollHeight;
      var oh = docEl.offsetHeight;
      docEl.clientHeight != oh && (sh = body.scrollHeight, oh = body.offsetHeight);
      height = sh > vh ? sh > oh ? sh : oh : sh < oh ? sh : oh;
    }
  }
  return height;
};
goog.dom.getPageScroll = function(opt_window) {
  var win = opt_window || goog.global || window;
  return goog.dom.getDomHelper(win.document).getDocumentScroll();
};
goog.dom.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(document);
};
goog.dom.getDocumentScroll_ = function(doc) {
  var el = goog.dom.getDocumentScrollElement_(doc);
  var win = goog.dom.getWindow_(doc);
  return goog.userAgent.IE && goog.userAgent.isVersionOrHigher("10") && win.pageYOffset != el.scrollTop ? new goog.math.Coordinate(el.scrollLeft, el.scrollTop) : new goog.math.Coordinate(win.pageXOffset || el.scrollLeft, win.pageYOffset || el.scrollTop);
};
goog.dom.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(document);
};
goog.dom.getDocumentScrollElement_ = function(doc) {
  return doc.scrollingElement ? doc.scrollingElement : !goog.userAgent.WEBKIT && goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body || doc.documentElement;
};
goog.dom.getWindow = function(opt_doc) {
  return opt_doc ? goog.dom.getWindow_(opt_doc) : window;
};
goog.dom.getWindow_ = function(doc) {
  return doc.parentWindow || doc.defaultView;
};
goog.dom.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(document, arguments);
};
goog.dom.createDom_ = function(doc, args) {
  var tagName = String(args[0]);
  var attributes = args[1];
  if (!goog.dom.BrowserFeature.CAN_ADD_NAME_OR_TYPE_ATTRIBUTES && attributes && (attributes.name || attributes.type)) {
    var tagNameArr = ["<", tagName];
    attributes.name && tagNameArr.push(' name="', goog.string.htmlEscape(attributes.name), '"');
    if (attributes.type) {
      tagNameArr.push(' type="', goog.string.htmlEscape(attributes.type), '"');
      var clone = {};
      goog.object.extend(clone, attributes);
      delete clone.type;
      attributes = clone;
    }
    tagNameArr.push(">");
    tagName = tagNameArr.join("");
  }
  var element = doc.createElement(tagName);
  attributes && (goog.isString(attributes) ? element.className = attributes : goog.isArray(attributes) ? element.className = attributes.join(" ") : goog.dom.setProperties(element, attributes));
  2 < args.length && goog.dom.append_(doc, element, args, 2);
  return element;
};
goog.dom.append_ = function(doc, parent, args, startIndex) {
  function childHandler(child) {
    child && parent.appendChild(goog.isString(child) ? doc.createTextNode(child) : child);
  }
  for (var i = startIndex; i < args.length; i++) {
    var arg = args[i];
    goog.isArrayLike(arg) && !goog.dom.isNodeLike(arg) ? goog.array.forEach(goog.dom.isNodeList(arg) ? goog.array.toArray(arg) : arg, childHandler) : childHandler(arg);
  }
};
goog.dom.$dom = goog.dom.createDom;
goog.dom.createElement = function(name) {
  return goog.dom.createElement_(document, name);
};
goog.dom.createElement_ = function(doc, name) {
  return doc.createElement(String(name));
};
goog.dom.createTextNode = function(content) {
  return document.createTextNode(String(content));
};
goog.dom.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(document, rows, columns, !!opt_fillWithNbsp);
};
goog.dom.createTable_ = function(doc, rows, columns, fillWithNbsp) {
  var table = goog.dom.createElement_(doc, "TABLE");
  var tbody = table.appendChild(goog.dom.createElement_(doc, "TBODY"));
  for (var i = 0; i < rows; i++) {
    var tr = goog.dom.createElement_(doc, "TR");
    for (var j = 0; j < columns; j++) {
      var td = goog.dom.createElement_(doc, "TD");
      fillWithNbsp && goog.dom.setTextContent(td, goog.string.Unicode.NBSP);
      tr.appendChild(td);
    }
    tbody.appendChild(tr);
  }
  return table;
};
goog.dom.constHtmlToNode = function(var_args) {
  var stringArray = goog.array.map(arguments, goog.string.Const.unwrap);
  var safeHtml = goog.html.uncheckedconversions.safeHtmlFromStringKnownToSatisfyTypeContract(goog.string.Const.from("Constant HTML string, that gets turned into a Node later, so it will be automatically balanced."), stringArray.join(""));
  return goog.dom.safeHtmlToNode(safeHtml);
};
goog.dom.safeHtmlToNode = function(html) {
  return goog.dom.safeHtmlToNode_(document, html);
};
goog.dom.safeHtmlToNode_ = function(doc, html) {
  var tempDiv = goog.dom.createElement_(doc, "DIV");
  goog.dom.BrowserFeature.INNER_HTML_NEEDS_SCOPED_ELEMENT ? (goog.dom.safe.setInnerHtml(tempDiv, goog.html.SafeHtml.concat(goog.html.SafeHtml.BR, html)), tempDiv.removeChild(tempDiv.firstChild)) : goog.dom.safe.setInnerHtml(tempDiv, html);
  return goog.dom.childrenToNode_(doc, tempDiv);
};
goog.dom.childrenToNode_ = function(doc, tempDiv) {
  if (1 == tempDiv.childNodes.length) {
    return tempDiv.removeChild(tempDiv.firstChild);
  }
  for (var fragment = doc.createDocumentFragment(); tempDiv.firstChild;) {
    fragment.appendChild(tempDiv.firstChild);
  }
  return fragment;
};
goog.dom.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(document);
};
goog.dom.isCss1CompatMode_ = function(doc) {
  return goog.dom.COMPAT_MODE_KNOWN_ ? goog.dom.ASSUME_STANDARDS_MODE : "CSS1Compat" == doc.compatMode;
};
goog.dom.canHaveChildren = function(node) {
  if (node.nodeType != goog.dom.NodeType.ELEMENT) {
    return !1;
  }
  switch(node.tagName) {
    case "APPLET":
    case "AREA":
    case "BASE":
    case "BR":
    case "COL":
    case "COMMAND":
    case "EMBED":
    case "FRAME":
    case "HR":
    case "IMG":
    case "INPUT":
    case "IFRAME":
    case "ISINDEX":
    case "KEYGEN":
    case "LINK":
    case "NOFRAMES":
    case "NOSCRIPT":
    case "META":
    case "OBJECT":
    case "PARAM":
    case "SCRIPT":
    case "SOURCE":
    case "STYLE":
    case "TRACK":
    case "WBR":
      return !1;
  }
  return !0;
};
goog.dom.appendChild = function(parent, child) {
  parent.appendChild(child);
};
goog.dom.append = function(parent, var_args) {
  goog.dom.append_(goog.dom.getOwnerDocument(parent), parent, arguments, 1);
};
goog.dom.removeChildren = function(node) {
  for (var child; child = node.firstChild;) {
    node.removeChild(child);
  }
};
goog.dom.insertSiblingBefore = function(newNode, refNode) {
  refNode.parentNode && refNode.parentNode.insertBefore(newNode, refNode);
};
goog.dom.insertSiblingAfter = function(newNode, refNode) {
  refNode.parentNode && refNode.parentNode.insertBefore(newNode, refNode.nextSibling);
};
goog.dom.insertChildAt = function(parent, child, index) {
  parent.insertBefore(child, parent.childNodes[index] || null);
};
goog.dom.removeNode = function(node) {
  return node && node.parentNode ? node.parentNode.removeChild(node) : null;
};
goog.dom.replaceNode = function(newNode, oldNode) {
  var parent = oldNode.parentNode;
  parent && parent.replaceChild(newNode, oldNode);
};
goog.dom.flattenElement = function(element) {
  var child;
  var parent = element.parentNode;
  if (parent && parent.nodeType != goog.dom.NodeType.DOCUMENT_FRAGMENT) {
    if (element.removeNode) {
      return element.removeNode(!1);
    }
    for (; child = element.firstChild;) {
      parent.insertBefore(child, element);
    }
    return goog.dom.removeNode(element);
  }
};
goog.dom.getChildren = function(element) {
  return goog.dom.BrowserFeature.CAN_USE_CHILDREN_ATTRIBUTE && void 0 != element.children ? element.children : goog.array.filter(element.childNodes, function(node) {
    return node.nodeType == goog.dom.NodeType.ELEMENT;
  });
};
goog.dom.getFirstElementChild = function(node) {
  return goog.isDef(node.firstElementChild) ? node.firstElementChild : goog.dom.getNextElementNode_(node.firstChild, !0);
};
goog.dom.getLastElementChild = function(node) {
  return goog.isDef(node.lastElementChild) ? node.lastElementChild : goog.dom.getNextElementNode_(node.lastChild, !1);
};
goog.dom.getNextElementSibling = function(node) {
  return goog.isDef(node.nextElementSibling) ? node.nextElementSibling : goog.dom.getNextElementNode_(node.nextSibling, !0);
};
goog.dom.getPreviousElementSibling = function(node) {
  return goog.isDef(node.previousElementSibling) ? node.previousElementSibling : goog.dom.getNextElementNode_(node.previousSibling, !1);
};
goog.dom.getNextElementNode_ = function(node, forward) {
  for (; node && node.nodeType != goog.dom.NodeType.ELEMENT;) {
    node = forward ? node.nextSibling : node.previousSibling;
  }
  return node;
};
goog.dom.getNextNode = function(node) {
  if (!node) {
    return null;
  }
  if (node.firstChild) {
    return node.firstChild;
  }
  for (; node && !node.nextSibling;) {
    node = node.parentNode;
  }
  return node ? node.nextSibling : null;
};
goog.dom.getPreviousNode = function(node) {
  if (!node) {
    return null;
  }
  if (!node.previousSibling) {
    return node.parentNode;
  }
  for (node = node.previousSibling; node && node.lastChild;) {
    node = node.lastChild;
  }
  return node;
};
goog.dom.isNodeLike = function(obj) {
  return goog.isObject(obj) && 0 < obj.nodeType;
};
goog.dom.isElement = function(obj) {
  return goog.isObject(obj) && obj.nodeType == goog.dom.NodeType.ELEMENT;
};
goog.dom.isWindow = function(obj) {
  return goog.isObject(obj) && obj.window == obj;
};
goog.dom.getParentElement = function(element) {
  if (goog.dom.BrowserFeature.CAN_USE_PARENT_ELEMENT_PROPERTY) {
    var isIe9 = goog.userAgent.IE && goog.userAgent.isVersionOrHigher("9") && !goog.userAgent.isVersionOrHigher("10");
    if (!(isIe9 && goog.global.SVGElement && element instanceof goog.global.SVGElement)) {
      var parent = element.parentElement;
      if (parent) {
        return parent;
      }
    }
  }
  parent = element.parentNode;
  return goog.dom.isElement(parent) ? parent : null;
};
goog.dom.contains = function(parent, descendant) {
  if (!parent || !descendant) {
    return !1;
  }
  if (parent.contains && descendant.nodeType == goog.dom.NodeType.ELEMENT) {
    return parent == descendant || parent.contains(descendant);
  }
  if ("undefined" != typeof parent.compareDocumentPosition) {
    return parent == descendant || !!(parent.compareDocumentPosition(descendant) & 16);
  }
  for (; descendant && parent != descendant;) {
    descendant = descendant.parentNode;
  }
  return descendant == parent;
};
goog.dom.compareNodeOrder = function(node1, node2) {
  if (node1 == node2) {
    return 0;
  }
  if (node1.compareDocumentPosition) {
    return node1.compareDocumentPosition(node2) & 2 ? 1 : -1;
  }
  if (goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9)) {
    if (node1.nodeType == goog.dom.NodeType.DOCUMENT) {
      return -1;
    }
    if (node2.nodeType == goog.dom.NodeType.DOCUMENT) {
      return 1;
    }
  }
  if ("sourceIndex" in node1 || node1.parentNode && "sourceIndex" in node1.parentNode) {
    var isElement1 = node1.nodeType == goog.dom.NodeType.ELEMENT;
    var isElement2 = node2.nodeType == goog.dom.NodeType.ELEMENT;
    if (isElement1 && isElement2) {
      return node1.sourceIndex - node2.sourceIndex;
    }
    var parent1 = node1.parentNode;
    var parent2 = node2.parentNode;
    return parent1 == parent2 ? goog.dom.compareSiblingOrder_(node1, node2) : !isElement1 && goog.dom.contains(parent1, node2) ? -1 * goog.dom.compareParentsDescendantNodeIe_(node1, node2) : !isElement2 && goog.dom.contains(parent2, node1) ? goog.dom.compareParentsDescendantNodeIe_(node2, node1) : (isElement1 ? node1.sourceIndex : parent1.sourceIndex) - (isElement2 ? node2.sourceIndex : parent2.sourceIndex);
  }
  var doc = goog.dom.getOwnerDocument(node1);
  var range1 = doc.createRange();
  range1.selectNode(node1);
  range1.collapse(!0);
  var range2 = doc.createRange();
  range2.selectNode(node2);
  range2.collapse(!0);
  return range1.compareBoundaryPoints(goog.global.Range.START_TO_END, range2);
};
goog.dom.compareParentsDescendantNodeIe_ = function(textNode, node) {
  var parent = textNode.parentNode;
  if (parent == node) {
    return -1;
  }
  for (var sibling = node; sibling.parentNode != parent;) {
    sibling = sibling.parentNode;
  }
  return goog.dom.compareSiblingOrder_(sibling, textNode);
};
goog.dom.compareSiblingOrder_ = function(node1, node2) {
  for (var s = node2; s = s.previousSibling;) {
    if (s == node1) {
      return -1;
    }
  }
  return 1;
};
goog.dom.findCommonAncestor = function(var_args) {
  var i;
  var count = arguments.length;
  if (!count) {
    return null;
  }
  if (1 == count) {
    return arguments[0];
  }
  var paths = [];
  var minLength = Infinity;
  for (i = 0; i < count; i++) {
    var ancestors = [];
    for (var node = arguments[i]; node;) {
      ancestors.unshift(node), node = node.parentNode;
    }
    paths.push(ancestors);
    minLength = Math.min(minLength, ancestors.length);
  }
  var output = null;
  for (i = 0; i < minLength; i++) {
    var first = paths[0][i];
    for (var j = 1; j < count; j++) {
      if (first != paths[j][i]) {
        return output;
      }
    }
    output = first;
  }
  return output;
};
goog.dom.getOwnerDocument = function(node) {
  goog.asserts.assert(node, "Node cannot be null or undefined.");
  return node.nodeType == goog.dom.NodeType.DOCUMENT ? node : node.ownerDocument || node.document;
};
goog.dom.getFrameContentDocument = function(frame) {
  return frame.contentDocument || frame.contentWindow.document;
};
goog.dom.getFrameContentWindow = function(frame) {
  try {
    return frame.contentWindow || (frame.contentDocument ? goog.dom.getWindow(frame.contentDocument) : null);
  } catch (e) {
  }
  return null;
};
goog.dom.setTextContent = function(node, text) {
  goog.asserts.assert(null != node, "goog.dom.setTextContent expects a non-null value for node");
  if ("textContent" in node) {
    node.textContent = text;
  } else {
    if (node.nodeType == goog.dom.NodeType.TEXT) {
      node.data = String(text);
    } else {
      if (node.firstChild && node.firstChild.nodeType == goog.dom.NodeType.TEXT) {
        for (; node.lastChild != node.firstChild;) {
          node.removeChild(node.lastChild);
        }
        node.firstChild.data = String(text);
      } else {
        goog.dom.removeChildren(node);
        var doc = goog.dom.getOwnerDocument(node);
        node.appendChild(doc.createTextNode(String(text)));
      }
    }
  }
};
goog.dom.getOuterHtml = function(element) {
  goog.asserts.assert(null !== element, "goog.dom.getOuterHtml expects a non-null value for element");
  if ("outerHTML" in element) {
    return element.outerHTML;
  }
  var doc = goog.dom.getOwnerDocument(element);
  var div = goog.dom.createElement_(doc, "DIV");
  div.appendChild(element.cloneNode(!0));
  return div.innerHTML;
};
goog.dom.findNode = function(root, p) {
  var rv = [];
  var found = goog.dom.findNodes_(root, p, rv, !0);
  return found ? rv[0] : void 0;
};
goog.dom.findNodes = function(root, p) {
  var rv = [];
  goog.dom.findNodes_(root, p, rv, !1);
  return rv;
};
goog.dom.findNodes_ = function(root, p, rv, findOne) {
  if (null != root) {
    for (var child = root.firstChild; child;) {
      if (p(child) && (rv.push(child), findOne) || goog.dom.findNodes_(child, p, rv, findOne)) {
        return !0;
      }
      child = child.nextSibling;
    }
  }
  return !1;
};
goog.dom.TAGS_TO_IGNORE_ = {SCRIPT:1, STYLE:1, HEAD:1, IFRAME:1, OBJECT:1};
goog.dom.PREDEFINED_TAG_VALUES_ = {IMG:" ", BR:"\n"};
goog.dom.isFocusableTabIndex = function(element) {
  return goog.dom.hasSpecifiedTabIndex_(element) && goog.dom.isTabIndexFocusable_(element);
};
goog.dom.setFocusableTabIndex = function(element, enable) {
  enable ? element.tabIndex = 0 : (element.tabIndex = -1, element.removeAttribute("tabIndex"));
};
goog.dom.isFocusable = function(element) {
  var focusable = goog.dom.nativelySupportsFocus_(element) ? !element.disabled && (!goog.dom.hasSpecifiedTabIndex_(element) || goog.dom.isTabIndexFocusable_(element)) : goog.dom.isFocusableTabIndex(element);
  return focusable && goog.userAgent.IE ? goog.dom.hasNonZeroBoundingRect_(element) : focusable;
};
goog.dom.hasSpecifiedTabIndex_ = function(element) {
  if (goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("9")) {
    var attrNode = element.getAttributeNode("tabindex");
    return goog.isDefAndNotNull(attrNode) && attrNode.specified;
  }
  return element.hasAttribute("tabindex");
};
goog.dom.isTabIndexFocusable_ = function(element) {
  var index = element.tabIndex;
  return goog.isNumber(index) && 0 <= index && 32768 > index;
};
goog.dom.nativelySupportsFocus_ = function(element) {
  return "A" == element.tagName || "INPUT" == element.tagName || "TEXTAREA" == element.tagName || "SELECT" == element.tagName || "BUTTON" == element.tagName;
};
goog.dom.hasNonZeroBoundingRect_ = function(element) {
  var rect = !goog.isFunction(element.getBoundingClientRect) || goog.userAgent.IE && null == element.parentElement ? {height:element.offsetHeight, width:element.offsetWidth} : element.getBoundingClientRect();
  return goog.isDefAndNotNull(rect) && 0 < rect.height && 0 < rect.width;
};
goog.dom.getTextContent = function(node) {
  if (goog.dom.BrowserFeature.CAN_USE_INNER_TEXT && null !== node && "innerText" in node) {
    var textContent = goog.string.canonicalizeNewlines(node.innerText);
  } else {
    var buf = [];
    goog.dom.getTextContent_(node, buf, !0);
    textContent = buf.join("");
  }
  textContent = textContent.replace(/ \xAD /g, " ").replace(/\xAD/g, "");
  textContent = textContent.replace(/\u200B/g, "");
  goog.dom.BrowserFeature.CAN_USE_INNER_TEXT || (textContent = textContent.replace(/ +/g, " "));
  " " != textContent && (textContent = textContent.replace(/^\s*/, ""));
  return textContent;
};
goog.dom.getRawTextContent = function(node) {
  var buf = [];
  goog.dom.getTextContent_(node, buf, !1);
  return buf.join("");
};
goog.dom.getTextContent_ = function(node, buf, normalizeWhitespace) {
  if (!(node.nodeName in goog.dom.TAGS_TO_IGNORE_)) {
    if (node.nodeType == goog.dom.NodeType.TEXT) {
      normalizeWhitespace ? buf.push(String(node.nodeValue).replace(/(\r\n|\r|\n)/g, "")) : buf.push(node.nodeValue);
    } else {
      if (node.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
        buf.push(goog.dom.PREDEFINED_TAG_VALUES_[node.nodeName]);
      } else {
        for (var child = node.firstChild; child;) {
          goog.dom.getTextContent_(child, buf, normalizeWhitespace), child = child.nextSibling;
        }
      }
    }
  }
};
goog.dom.getNodeTextLength = function(node) {
  return goog.dom.getTextContent(node).length;
};
goog.dom.getNodeTextOffset = function(node, opt_offsetParent) {
  var root = opt_offsetParent || goog.dom.getOwnerDocument(node).body;
  for (var buf = []; node && node != root;) {
    for (var cur = node; cur = cur.previousSibling;) {
      buf.unshift(goog.dom.getTextContent(cur));
    }
    node = node.parentNode;
  }
  return goog.string.trimLeft(buf.join("")).replace(/ +/g, " ").length;
};
goog.dom.getNodeAtOffset = function(parent, offset, opt_result) {
  var stack = [parent];
  var pos = 0;
  for (var cur = null; 0 < stack.length && pos < offset;) {
    if (cur = stack.pop(), !(cur.nodeName in goog.dom.TAGS_TO_IGNORE_)) {
      if (cur.nodeType == goog.dom.NodeType.TEXT) {
        var text = cur.nodeValue.replace(/(\r\n|\r|\n)/g, "").replace(/ +/g, " ");
        pos += text.length;
      } else {
        if (cur.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
          pos += goog.dom.PREDEFINED_TAG_VALUES_[cur.nodeName].length;
        } else {
          for (var i = cur.childNodes.length - 1; 0 <= i; i--) {
            stack.push(cur.childNodes[i]);
          }
        }
      }
    }
  }
  goog.isObject(opt_result) && (opt_result.remainder = cur ? cur.nodeValue.length + offset - pos - 1 : 0, opt_result.node = cur);
  return cur;
};
goog.dom.isNodeList = function(val) {
  if (val && "number" == typeof val.length) {
    if (goog.isObject(val)) {
      return "function" == typeof val.item || "string" == typeof val.item;
    }
    if (goog.isFunction(val)) {
      return "function" == typeof val.item;
    }
  }
  return !1;
};
goog.dom.getAncestorByTagNameAndClass = function(element, opt_tag, opt_class, opt_maxSearchSteps) {
  if (!opt_tag && !opt_class) {
    return null;
  }
  var tagName = opt_tag ? String(opt_tag).toUpperCase() : null;
  return goog.dom.getAncestor(element, function(node) {
    return (!tagName || node.nodeName == tagName) && (!opt_class || goog.isString(node.className) && goog.array.contains(node.className.split(/\s+/), opt_class));
  }, !0, opt_maxSearchSteps);
};
goog.dom.getAncestorByClass = function(element, className, opt_maxSearchSteps) {
  return goog.dom.getAncestorByTagNameAndClass(element, null, className, opt_maxSearchSteps);
};
goog.dom.getAncestor = function(element, matcher, opt_includeNode, opt_maxSearchSteps) {
  element && !opt_includeNode && (element = element.parentNode);
  for (var steps = 0; element && (null == opt_maxSearchSteps || steps <= opt_maxSearchSteps);) {
    goog.asserts.assert("parentNode" != element.name);
    if (matcher(element)) {
      return element;
    }
    element = element.parentNode;
    steps++;
  }
  return null;
};
goog.dom.getActiveElement = function(doc) {
  try {
    return doc && doc.activeElement;
  } catch (e) {
  }
  return null;
};
goog.dom.getPixelRatio = function() {
  var win = goog.dom.getWindow();
  return goog.isDef(win.devicePixelRatio) ? win.devicePixelRatio : win.matchMedia ? goog.dom.matchesPixelRatio_(3) || goog.dom.matchesPixelRatio_(2) || goog.dom.matchesPixelRatio_(1.5) || goog.dom.matchesPixelRatio_(1) || .75 : 1;
};
goog.dom.matchesPixelRatio_ = function(pixelRatio) {
  var win = goog.dom.getWindow();
  var query = "(min-resolution: " + pixelRatio + "dppx),(min--moz-device-pixel-ratio: " + pixelRatio + "),(min-resolution: " + 96 * pixelRatio + "dpi)";
  return win.matchMedia(query).matches ? pixelRatio : 0;
};
goog.dom.getCanvasContext2D = function(canvas) {
  return canvas.getContext("2d");
};
goog.dom.DomHelper = function(opt_document) {
  this.document_ = opt_document || goog.global.document || document;
};
goog.dom.DomHelper.prototype.getDomHelper = goog.dom.getDomHelper;
goog.dom.DomHelper.prototype.getDocument = function() {
  return this.document_;
};
goog.dom.DomHelper.prototype.getElement = function(element) {
  return goog.dom.getElementHelper_(this.document_, element);
};
goog.dom.DomHelper.prototype.getRequiredElement = function(id) {
  return goog.dom.getRequiredElementHelper_(this.document_, id);
};
goog.dom.DomHelper.prototype.$ = goog.dom.DomHelper.prototype.getElement;
goog.dom.DomHelper.prototype.getElementsByTagName = function(tagName, opt_parent) {
  var parent = opt_parent || this.document_;
  return parent.getElementsByTagName(String(tagName));
};
goog.dom.DomHelper.prototype.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(this.document_, opt_tag, opt_class, opt_el);
};
goog.dom.DomHelper.prototype.getElementByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementByTagNameAndClass_(this.document_, opt_tag, opt_class, opt_el);
};
goog.dom.DomHelper.prototype.getElementsByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementsByClass(className, doc);
};
goog.dom.DomHelper.prototype.getElementByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementByClass(className, doc);
};
goog.dom.DomHelper.prototype.getRequiredElementByClass = function(className, opt_root) {
  var root = opt_root || this.document_;
  return goog.dom.getRequiredElementByClass(className, root);
};
goog.dom.DomHelper.prototype.$$ = goog.dom.DomHelper.prototype.getElementsByTagNameAndClass;
goog.dom.DomHelper.prototype.setProperties = goog.dom.setProperties;
goog.dom.DomHelper.prototype.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize(opt_window || this.getWindow());
};
goog.dom.DomHelper.prototype.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(this.getWindow());
};
goog.dom.DomHelper.prototype.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(this.document_, arguments);
};
goog.dom.DomHelper.prototype.$dom = goog.dom.DomHelper.prototype.createDom;
goog.dom.DomHelper.prototype.createElement = function(name) {
  return goog.dom.createElement_(this.document_, name);
};
goog.dom.DomHelper.prototype.createTextNode = function(content) {
  return this.document_.createTextNode(String(content));
};
goog.dom.DomHelper.prototype.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(this.document_, rows, columns, !!opt_fillWithNbsp);
};
goog.dom.DomHelper.prototype.safeHtmlToNode = function(html) {
  return goog.dom.safeHtmlToNode_(this.document_, html);
};
goog.dom.DomHelper.prototype.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(this.document_);
};
goog.dom.DomHelper.prototype.getWindow = function() {
  return goog.dom.getWindow_(this.document_);
};
goog.dom.DomHelper.prototype.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(this.document_);
};
goog.dom.DomHelper.prototype.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(this.document_);
};
goog.dom.DomHelper.prototype.getActiveElement = function(opt_doc) {
  return goog.dom.getActiveElement(opt_doc || this.document_);
};
goog.dom.DomHelper.prototype.appendChild = goog.dom.appendChild;
goog.dom.DomHelper.prototype.append = goog.dom.append;
goog.dom.DomHelper.prototype.canHaveChildren = goog.dom.canHaveChildren;
goog.dom.DomHelper.prototype.removeChildren = goog.dom.removeChildren;
goog.dom.DomHelper.prototype.insertSiblingBefore = goog.dom.insertSiblingBefore;
goog.dom.DomHelper.prototype.insertSiblingAfter = goog.dom.insertSiblingAfter;
goog.dom.DomHelper.prototype.insertChildAt = goog.dom.insertChildAt;
goog.dom.DomHelper.prototype.removeNode = goog.dom.removeNode;
goog.dom.DomHelper.prototype.replaceNode = goog.dom.replaceNode;
goog.dom.DomHelper.prototype.flattenElement = goog.dom.flattenElement;
goog.dom.DomHelper.prototype.getChildren = goog.dom.getChildren;
goog.dom.DomHelper.prototype.getFirstElementChild = goog.dom.getFirstElementChild;
goog.dom.DomHelper.prototype.getLastElementChild = goog.dom.getLastElementChild;
goog.dom.DomHelper.prototype.getNextElementSibling = goog.dom.getNextElementSibling;
goog.dom.DomHelper.prototype.getPreviousElementSibling = goog.dom.getPreviousElementSibling;
goog.dom.DomHelper.prototype.getNextNode = goog.dom.getNextNode;
goog.dom.DomHelper.prototype.getPreviousNode = goog.dom.getPreviousNode;
goog.dom.DomHelper.prototype.isNodeLike = goog.dom.isNodeLike;
goog.dom.DomHelper.prototype.isElement = goog.dom.isElement;
goog.dom.DomHelper.prototype.isWindow = goog.dom.isWindow;
goog.dom.DomHelper.prototype.getParentElement = goog.dom.getParentElement;
goog.dom.DomHelper.prototype.contains = goog.dom.contains;
goog.dom.DomHelper.prototype.compareNodeOrder = goog.dom.compareNodeOrder;
goog.dom.DomHelper.prototype.findCommonAncestor = goog.dom.findCommonAncestor;
goog.dom.DomHelper.prototype.getOwnerDocument = goog.dom.getOwnerDocument;
goog.dom.DomHelper.prototype.getFrameContentDocument = goog.dom.getFrameContentDocument;
goog.dom.DomHelper.prototype.getFrameContentWindow = goog.dom.getFrameContentWindow;
goog.dom.DomHelper.prototype.setTextContent = goog.dom.setTextContent;
goog.dom.DomHelper.prototype.getOuterHtml = goog.dom.getOuterHtml;
goog.dom.DomHelper.prototype.findNode = goog.dom.findNode;
goog.dom.DomHelper.prototype.findNodes = goog.dom.findNodes;
goog.dom.DomHelper.prototype.isFocusableTabIndex = goog.dom.isFocusableTabIndex;
goog.dom.DomHelper.prototype.setFocusableTabIndex = goog.dom.setFocusableTabIndex;
goog.dom.DomHelper.prototype.isFocusable = goog.dom.isFocusable;
goog.dom.DomHelper.prototype.getTextContent = goog.dom.getTextContent;
goog.dom.DomHelper.prototype.getNodeTextLength = goog.dom.getNodeTextLength;
goog.dom.DomHelper.prototype.getNodeTextOffset = goog.dom.getNodeTextOffset;
goog.dom.DomHelper.prototype.getNodeAtOffset = goog.dom.getNodeAtOffset;
goog.dom.DomHelper.prototype.isNodeList = goog.dom.isNodeList;
goog.dom.DomHelper.prototype.getAncestorByTagNameAndClass = goog.dom.getAncestorByTagNameAndClass;
goog.dom.DomHelper.prototype.getAncestorByClass = goog.dom.getAncestorByClass;
goog.dom.DomHelper.prototype.getAncestor = goog.dom.getAncestor;
goog.dom.DomHelper.prototype.getCanvasContext2D = goog.dom.getCanvasContext2D;
goog.dom.vendor = {};
goog.dom.vendor.getVendorJsPrefix = function() {
  return goog.userAgent.WEBKIT ? "Webkit" : goog.userAgent.GECKO ? "Moz" : goog.userAgent.IE ? "ms" : goog.userAgent.OPERA ? "O" : null;
};
goog.dom.vendor.getVendorPrefix = function() {
  return goog.userAgent.WEBKIT ? "-webkit" : goog.userAgent.GECKO ? "-moz" : goog.userAgent.IE ? "-ms" : goog.userAgent.OPERA ? "-o" : null;
};
goog.dom.vendor.getPrefixedPropertyName = function(propertyName, opt_object) {
  if (opt_object && propertyName in opt_object) {
    return propertyName;
  }
  var prefix = goog.dom.vendor.getVendorJsPrefix();
  if (prefix) {
    prefix = prefix.toLowerCase();
    var prefixedPropertyName = prefix + goog.string.toTitleCase(propertyName);
    return !goog.isDef(opt_object) || prefixedPropertyName in opt_object ? prefixedPropertyName : null;
  }
  return null;
};
goog.dom.vendor.getPrefixedEventType = function(eventType) {
  var prefix = goog.dom.vendor.getVendorJsPrefix() || "";
  return (prefix + eventType).toLowerCase();
};
goog.events = {};
$jscomp.scope.purify = function(fn) {
  return fn();
};
goog.events.BrowserFeature = {HAS_W3C_BUTTON:!goog.userAgent.IE || goog.userAgent.isDocumentModeOrHigher(9), HAS_W3C_EVENT_SUPPORT:!goog.userAgent.IE || goog.userAgent.isDocumentModeOrHigher(9), SET_KEY_CODE_TO_PREVENT_DEFAULT:goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("9"), HAS_NAVIGATOR_ONLINE_PROPERTY:!goog.userAgent.WEBKIT || goog.userAgent.isVersionOrHigher("528"), HAS_HTML5_NETWORK_EVENT_SUPPORT:goog.userAgent.GECKO && goog.userAgent.isVersionOrHigher("1.9b") || goog.userAgent.IE && 
goog.userAgent.isVersionOrHigher("8") || goog.userAgent.OPERA && goog.userAgent.isVersionOrHigher("9.5") || goog.userAgent.WEBKIT && goog.userAgent.isVersionOrHigher("528"), HTML5_NETWORK_EVENTS_FIRE_ON_BODY:goog.userAgent.GECKO && !goog.userAgent.isVersionOrHigher("8") || goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("9"), TOUCH_ENABLED:"ontouchstart" in goog.global || !!(goog.global.document && document.documentElement && "ontouchstart" in document.documentElement) || !(!goog.global.navigator || 
!goog.global.navigator.maxTouchPoints && !goog.global.navigator.msMaxTouchPoints), POINTER_EVENTS:"PointerEvent" in goog.global, MSPOINTER_EVENTS:"MSPointerEvent" in goog.global && !(!goog.global.navigator || !goog.global.navigator.msPointerEnabled), PASSIVE_EVENTS:(0,$jscomp.scope.purify)(function() {
  if (!goog.global.addEventListener || !Object.defineProperty) {
    return !1;
  }
  var passive = !1;
  var options = Object.defineProperty({}, "passive", {get:function() {
    passive = !0;
  }});
  goog.global.addEventListener("test", goog.nullFunction, options);
  goog.global.removeEventListener("test", goog.nullFunction, options);
  return passive;
})};
goog.events.EventId = function(eventId) {
  this.id = eventId;
};
goog.events.EventId.prototype.toString = function() {
  return this.id;
};
goog.events.Event = function(type, opt_target) {
  this.type = type instanceof goog.events.EventId ? String(type) : type;
  this.target = opt_target;
  this.currentTarget = this.target;
  this.propagationStopped_ = !1;
  this.defaultPrevented = !1;
  this.returnValue_ = !0;
};
goog.events.Event.prototype.stopPropagation = function() {
  this.propagationStopped_ = !0;
};
goog.events.Event.prototype.preventDefault = function() {
  this.defaultPrevented = !0;
  this.returnValue_ = !1;
};
goog.events.Event.stopPropagation = function(e) {
  e.stopPropagation();
};
goog.events.Event.preventDefault = function(e) {
  e.preventDefault();
};
goog.events.getVendorPrefixedName_ = function(eventName) {
  return goog.userAgent.WEBKIT ? "webkit" + eventName : goog.userAgent.OPERA ? "o" + eventName.toLowerCase() : eventName.toLowerCase();
};
goog.events.EventType = {CLICK:"click", RIGHTCLICK:"rightclick", DBLCLICK:"dblclick", MOUSEDOWN:"mousedown", MOUSEUP:"mouseup", MOUSEOVER:"mouseover", MOUSEOUT:"mouseout", MOUSEMOVE:"mousemove", MOUSEENTER:"mouseenter", MOUSELEAVE:"mouseleave", SELECTIONCHANGE:"selectionchange", SELECTSTART:"selectstart", WHEEL:"wheel", KEYPRESS:"keypress", KEYDOWN:"keydown", KEYUP:"keyup", BLUR:"blur", FOCUS:"focus", DEACTIVATE:"deactivate", FOCUSIN:goog.userAgent.IE ? "focusin" : "DOMFocusIn", FOCUSOUT:goog.userAgent.IE ? 
"focusout" : "DOMFocusOut", CHANGE:"change", RESET:"reset", SELECT:"select", SUBMIT:"submit", INPUT:"input", PROPERTYCHANGE:"propertychange", DRAGSTART:"dragstart", DRAG:"drag", DRAGENTER:"dragenter", DRAGOVER:"dragover", DRAGLEAVE:"dragleave", DROP:"drop", DRAGEND:"dragend", TOUCHSTART:"touchstart", TOUCHMOVE:"touchmove", TOUCHEND:"touchend", TOUCHCANCEL:"touchcancel", BEFOREUNLOAD:"beforeunload", CONSOLEMESSAGE:"consolemessage", CONTEXTMENU:"contextmenu", DEVICEMOTION:"devicemotion", DEVICEORIENTATION:"deviceorientation", 
DOMCONTENTLOADED:"DOMContentLoaded", ERROR:"error", HELP:"help", LOAD:"load", LOSECAPTURE:"losecapture", ORIENTATIONCHANGE:"orientationchange", READYSTATECHANGE:"readystatechange", RESIZE:"resize", SCROLL:"scroll", UNLOAD:"unload", CANPLAY:"canplay", CANPLAYTHROUGH:"canplaythrough", DURATIONCHANGE:"durationchange", EMPTIED:"emptied", ENDED:"ended", LOADEDDATA:"loadeddata", LOADEDMETADATA:"loadedmetadata", PAUSE:"pause", PLAY:"play", PLAYING:"playing", RATECHANGE:"ratechange", SEEKED:"seeked", SEEKING:"seeking", 
STALLED:"stalled", SUSPEND:"suspend", TIMEUPDATE:"timeupdate", VOLUMECHANGE:"volumechange", WAITING:"waiting", SOURCEOPEN:"sourceopen", SOURCEENDED:"sourceended", SOURCECLOSED:"sourceclosed", ABORT:"abort", UPDATE:"update", UPDATESTART:"updatestart", UPDATEEND:"updateend", HASHCHANGE:"hashchange", PAGEHIDE:"pagehide", PAGESHOW:"pageshow", POPSTATE:"popstate", COPY:"copy", PASTE:"paste", CUT:"cut", BEFORECOPY:"beforecopy", BEFORECUT:"beforecut", BEFOREPASTE:"beforepaste", ONLINE:"online", OFFLINE:"offline", 
MESSAGE:"message", CONNECT:"connect", INSTALL:"install", ACTIVATE:"activate", FETCH:"fetch", FOREIGNFETCH:"foreignfetch", MESSAGEERROR:"messageerror", STATECHANGE:"statechange", UPDATEFOUND:"updatefound", CONTROLLERCHANGE:"controllerchange", ANIMATIONSTART:goog.events.getVendorPrefixedName_("AnimationStart"), ANIMATIONEND:goog.events.getVendorPrefixedName_("AnimationEnd"), ANIMATIONITERATION:goog.events.getVendorPrefixedName_("AnimationIteration"), TRANSITIONEND:goog.events.getVendorPrefixedName_("TransitionEnd"), 
POINTERDOWN:"pointerdown", POINTERUP:"pointerup", POINTERCANCEL:"pointercancel", POINTERMOVE:"pointermove", POINTEROVER:"pointerover", POINTEROUT:"pointerout", POINTERENTER:"pointerenter", POINTERLEAVE:"pointerleave", GOTPOINTERCAPTURE:"gotpointercapture", LOSTPOINTERCAPTURE:"lostpointercapture", MSGESTURECHANGE:"MSGestureChange", MSGESTUREEND:"MSGestureEnd", MSGESTUREHOLD:"MSGestureHold", MSGESTURESTART:"MSGestureStart", MSGESTURETAP:"MSGestureTap", MSGOTPOINTERCAPTURE:"MSGotPointerCapture", MSINERTIASTART:"MSInertiaStart", 
MSLOSTPOINTERCAPTURE:"MSLostPointerCapture", MSPOINTERCANCEL:"MSPointerCancel", MSPOINTERDOWN:"MSPointerDown", MSPOINTERENTER:"MSPointerEnter", MSPOINTERHOVER:"MSPointerHover", MSPOINTERLEAVE:"MSPointerLeave", MSPOINTERMOVE:"MSPointerMove", MSPOINTEROUT:"MSPointerOut", MSPOINTEROVER:"MSPointerOver", MSPOINTERUP:"MSPointerUp", TEXT:"text", TEXTINPUT:goog.userAgent.IE ? "textinput" : "textInput", COMPOSITIONSTART:"compositionstart", COMPOSITIONUPDATE:"compositionupdate", COMPOSITIONEND:"compositionend", 
BEFOREINPUT:"beforeinput", EXIT:"exit", LOADABORT:"loadabort", LOADCOMMIT:"loadcommit", LOADREDIRECT:"loadredirect", LOADSTART:"loadstart", LOADSTOP:"loadstop", RESPONSIVE:"responsive", SIZECHANGED:"sizechanged", UNRESPONSIVE:"unresponsive", VISIBILITYCHANGE:"visibilitychange", STORAGE:"storage", DOMSUBTREEMODIFIED:"DOMSubtreeModified", DOMNODEINSERTED:"DOMNodeInserted", DOMNODEREMOVED:"DOMNodeRemoved", DOMNODEREMOVEDFROMDOCUMENT:"DOMNodeRemovedFromDocument", DOMNODEINSERTEDINTODOCUMENT:"DOMNodeInsertedIntoDocument", 
DOMATTRMODIFIED:"DOMAttrModified", DOMCHARACTERDATAMODIFIED:"DOMCharacterDataModified", BEFOREPRINT:"beforeprint", AFTERPRINT:"afterprint"};
goog.events.getPointerFallbackEventName_ = function(pointerEventName, msPointerEventName, mouseEventName) {
  return goog.events.BrowserFeature.POINTER_EVENTS ? pointerEventName : goog.events.BrowserFeature.MSPOINTER_EVENTS ? msPointerEventName : mouseEventName;
};
goog.events.PointerFallbackEventType = {POINTERDOWN:goog.events.getPointerFallbackEventName_(goog.events.EventType.POINTERDOWN, goog.events.EventType.MSPOINTERDOWN, goog.events.EventType.MOUSEDOWN), POINTERUP:goog.events.getPointerFallbackEventName_(goog.events.EventType.POINTERUP, goog.events.EventType.MSPOINTERUP, goog.events.EventType.MOUSEUP), POINTERCANCEL:goog.events.getPointerFallbackEventName_(goog.events.EventType.POINTERCANCEL, goog.events.EventType.MSPOINTERCANCEL, "mousecancel"), POINTERMOVE:goog.events.getPointerFallbackEventName_(goog.events.EventType.POINTERMOVE, 
goog.events.EventType.MSPOINTERMOVE, goog.events.EventType.MOUSEMOVE), POINTEROVER:goog.events.getPointerFallbackEventName_(goog.events.EventType.POINTEROVER, goog.events.EventType.MSPOINTEROVER, goog.events.EventType.MOUSEOVER), POINTEROUT:goog.events.getPointerFallbackEventName_(goog.events.EventType.POINTEROUT, goog.events.EventType.MSPOINTEROUT, goog.events.EventType.MOUSEOUT), POINTERENTER:goog.events.getPointerFallbackEventName_(goog.events.EventType.POINTERENTER, goog.events.EventType.MSPOINTERENTER, 
goog.events.EventType.MOUSEENTER), POINTERLEAVE:goog.events.getPointerFallbackEventName_(goog.events.EventType.POINTERLEAVE, goog.events.EventType.MSPOINTERLEAVE, goog.events.EventType.MOUSELEAVE)};
goog.events.BrowserEvent = function(opt_e, opt_currentTarget) {
  goog.events.Event.call(this, opt_e ? opt_e.type : "");
  this.target = null;
  this.currentTarget = null;
  this.relatedTarget = null;
  this.offsetX = 0;
  this.offsetY = 0;
  this.clientX = 0;
  this.clientY = 0;
  this.screenX = 0;
  this.screenY = 0;
  this.button = 0;
  this.key = "";
  this.keyCode = 0;
  this.charCode = 0;
  this.ctrlKey = !1;
  this.altKey = !1;
  this.shiftKey = !1;
  this.metaKey = !1;
  this.state = null;
  this.pointerId = 0;
  this.pointerType = "";
  this.event_ = null;
  opt_e && this.init(opt_e, opt_currentTarget);
};
goog.inherits(goog.events.BrowserEvent, goog.events.Event);
goog.events.BrowserEvent.MouseButton = {LEFT:0, MIDDLE:1, RIGHT:2};
goog.events.BrowserEvent.PointerType = {MOUSE:"mouse", PEN:"pen", TOUCH:"touch"};
goog.events.BrowserEvent.IEButtonMap = goog.debug.freeze([1, 4, 2]);
goog.events.BrowserEvent.IE_BUTTON_MAP = goog.events.BrowserEvent.IEButtonMap;
goog.events.BrowserEvent.IE_POINTER_TYPE_MAP = goog.debug.freeze({2:goog.events.BrowserEvent.PointerType.TOUCH, 3:goog.events.BrowserEvent.PointerType.PEN, 4:goog.events.BrowserEvent.PointerType.MOUSE});
goog.events.BrowserEvent.prototype.init = function(e, opt_currentTarget) {
  var type = this.type = e.type;
  var relevantTouch = e.changedTouches ? e.changedTouches[0] : null;
  this.target = e.target || e.srcElement;
  this.currentTarget = opt_currentTarget;
  var relatedTarget = e.relatedTarget;
  relatedTarget ? goog.userAgent.GECKO && (goog.reflect.canAccessProperty(relatedTarget, "nodeName") || (relatedTarget = null)) : type == goog.events.EventType.MOUSEOVER ? relatedTarget = e.fromElement : type == goog.events.EventType.MOUSEOUT && (relatedTarget = e.toElement);
  this.relatedTarget = relatedTarget;
  goog.isNull(relevantTouch) ? (this.offsetX = goog.userAgent.WEBKIT || void 0 !== e.offsetX ? e.offsetX : e.layerX, this.offsetY = goog.userAgent.WEBKIT || void 0 !== e.offsetY ? e.offsetY : e.layerY, this.clientX = void 0 !== e.clientX ? e.clientX : e.pageX, this.clientY = void 0 !== e.clientY ? e.clientY : e.pageY, this.screenX = e.screenX || 0, this.screenY = e.screenY || 0) : (this.clientX = void 0 !== relevantTouch.clientX ? relevantTouch.clientX : relevantTouch.pageX, this.clientY = void 0 !== 
  relevantTouch.clientY ? relevantTouch.clientY : relevantTouch.pageY, this.screenX = relevantTouch.screenX || 0, this.screenY = relevantTouch.screenY || 0);
  this.button = e.button;
  this.keyCode = e.keyCode || 0;
  this.key = e.key || "";
  this.charCode = e.charCode || ("keypress" == type ? e.keyCode : 0);
  this.ctrlKey = e.ctrlKey;
  this.altKey = e.altKey;
  this.shiftKey = e.shiftKey;
  this.metaKey = e.metaKey;
  this.pointerId = e.pointerId || 0;
  this.pointerType = goog.events.BrowserEvent.getPointerType_(e);
  this.state = e.state;
  this.event_ = e;
  e.defaultPrevented && this.preventDefault();
};
goog.events.BrowserEvent.prototype.stopPropagation = function() {
  goog.events.BrowserEvent.superClass_.stopPropagation.call(this);
  this.event_.stopPropagation ? this.event_.stopPropagation() : this.event_.cancelBubble = !0;
};
goog.events.BrowserEvent.prototype.preventDefault = function() {
  goog.events.BrowserEvent.superClass_.preventDefault.call(this);
  var be = this.event_;
  if (be.preventDefault) {
    be.preventDefault();
  } else {
    if (be.returnValue = !1, goog.events.BrowserFeature.SET_KEY_CODE_TO_PREVENT_DEFAULT) {
      try {
        if (be.ctrlKey || 112 <= be.keyCode && 123 >= be.keyCode) {
          be.keyCode = -1;
        }
      } catch (ex) {
      }
    }
  }
};
goog.events.BrowserEvent.getPointerType_ = function(e) {
  return goog.isString(e.pointerType) ? e.pointerType : goog.events.BrowserEvent.IE_POINTER_TYPE_MAP[e.pointerType] || "";
};
goog.events.Listenable = function() {
};
goog.events.Listenable.IMPLEMENTED_BY_PROP = "closure_listenable_" + (1e6 * Math.random() | 0);
goog.events.Listenable.addImplementation = function(cls) {
  cls.prototype[goog.events.Listenable.IMPLEMENTED_BY_PROP] = !0;
};
goog.events.Listenable.isImplementedBy = function(obj) {
  return !(!obj || !obj[goog.events.Listenable.IMPLEMENTED_BY_PROP]);
};
goog.events.ListenableKey = function() {
};
goog.events.ListenableKey.counter_ = 0;
goog.events.ListenableKey.reserveKey = function() {
  return ++goog.events.ListenableKey.counter_;
};
goog.events.Listener = function(listener, proxy, src, type, capture, opt_handler) {
  this.listener = listener;
  this.proxy = proxy;
  this.src = src;
  this.type = type;
  this.capture = !!capture;
  this.handler = opt_handler;
  this.key = goog.events.ListenableKey.reserveKey();
  this.callOnce = !1;
  this.removed = !1;
};
goog.events.Listener.ENABLE_MONITORING = !1;
goog.events.Listener.prototype.markAsRemoved = function() {
  this.removed = !0;
  this.listener = null;
  this.proxy = null;
  this.src = null;
  this.handler = null;
};
goog.events.ListenerMap = function(src) {
  this.src = src;
  this.listeners = {};
  this.typeCount_ = 0;
};
goog.events.ListenerMap.prototype.add = function(type, listener, callOnce, opt_useCapture, opt_listenerScope) {
  var typeStr = type.toString();
  var listenerArray = this.listeners[typeStr];
  listenerArray || (listenerArray = this.listeners[typeStr] = [], this.typeCount_++);
  var index = goog.events.ListenerMap.findListenerIndex_(listenerArray, listener, opt_useCapture, opt_listenerScope);
  if (-1 < index) {
    var listenerObj = listenerArray[index];
    callOnce || (listenerObj.callOnce = !1);
  } else {
    listenerObj = new goog.events.Listener(listener, null, this.src, typeStr, !!opt_useCapture, opt_listenerScope), listenerObj.callOnce = callOnce, listenerArray.push(listenerObj);
  }
  return listenerObj;
};
goog.events.ListenerMap.prototype.remove = function(type, listener, opt_useCapture, opt_listenerScope) {
  var typeStr = type.toString();
  if (!(typeStr in this.listeners)) {
    return !1;
  }
  var listenerArray = this.listeners[typeStr];
  var index = goog.events.ListenerMap.findListenerIndex_(listenerArray, listener, opt_useCapture, opt_listenerScope);
  if (-1 < index) {
    var listenerObj = listenerArray[index];
    listenerObj.markAsRemoved();
    goog.array.removeAt(listenerArray, index);
    0 == listenerArray.length && (delete this.listeners[typeStr], this.typeCount_--);
    return !0;
  }
  return !1;
};
goog.events.ListenerMap.prototype.removeByKey = function(listener) {
  var type = listener.type;
  if (!(type in this.listeners)) {
    return !1;
  }
  var removed = goog.array.remove(this.listeners[type], listener);
  removed && (listener.markAsRemoved(), 0 == this.listeners[type].length && (delete this.listeners[type], this.typeCount_--));
  return removed;
};
goog.events.ListenerMap.prototype.removeAll = function(opt_type) {
  var typeStr = opt_type && opt_type.toString();
  var count = 0;
  for (var type in this.listeners) {
    if (!typeStr || type == typeStr) {
      var listenerArray = this.listeners[type];
      for (var i = 0; i < listenerArray.length; i++) {
        ++count, listenerArray[i].markAsRemoved();
      }
      delete this.listeners[type];
      this.typeCount_--;
    }
  }
  return count;
};
goog.events.ListenerMap.prototype.getListeners = function(type, capture) {
  var listenerArray = this.listeners[type.toString()];
  var rv = [];
  if (listenerArray) {
    for (var i = 0; i < listenerArray.length; ++i) {
      var listenerObj = listenerArray[i];
      listenerObj.capture == capture && rv.push(listenerObj);
    }
  }
  return rv;
};
goog.events.ListenerMap.prototype.getListener = function(type, listener, capture, opt_listenerScope) {
  var listenerArray = this.listeners[type.toString()];
  var i = -1;
  listenerArray && (i = goog.events.ListenerMap.findListenerIndex_(listenerArray, listener, capture, opt_listenerScope));
  return -1 < i ? listenerArray[i] : null;
};
goog.events.ListenerMap.prototype.hasListener = function(opt_type, opt_capture) {
  var hasType = goog.isDef(opt_type);
  var typeStr = hasType ? opt_type.toString() : "";
  var hasCapture = goog.isDef(opt_capture);
  return goog.object.some(this.listeners, function(listenerArray) {
    for (var i = 0; i < listenerArray.length; ++i) {
      if (!(hasType && listenerArray[i].type != typeStr || hasCapture && listenerArray[i].capture != opt_capture)) {
        return !0;
      }
    }
    return !1;
  });
};
goog.events.ListenerMap.findListenerIndex_ = function(listenerArray, listener, opt_useCapture, opt_listenerScope) {
  for (var i = 0; i < listenerArray.length; ++i) {
    var listenerObj = listenerArray[i];
    if (!listenerObj.removed && listenerObj.listener == listener && listenerObj.capture == !!opt_useCapture && listenerObj.handler == opt_listenerScope) {
      return i;
    }
  }
  return -1;
};
goog.events.LISTENER_MAP_PROP_ = "closure_lm_" + (1e6 * Math.random() | 0);
goog.events.onString_ = "on";
goog.events.onStringMap_ = {};
goog.events.CaptureSimulationMode = {OFF_AND_FAIL:0, OFF_AND_SILENT:1, ON:2};
goog.events.CAPTURE_SIMULATION_MODE = 2;
goog.events.listenerCountEstimate_ = 0;
goog.events.listen = function(src, type, listener, opt_options, opt_handler) {
  if (opt_options && opt_options.once) {
    return goog.events.listenOnce(src, type, listener, opt_options, opt_handler);
  }
  if (goog.isArray(type)) {
    for (var i = 0; i < type.length; i++) {
      goog.events.listen(src, type[i], listener, opt_options, opt_handler);
    }
    return null;
  }
  listener = goog.events.wrapListener(listener);
  if (goog.events.Listenable.isImplementedBy(src)) {
    var capture = goog.isObject(opt_options) ? !!opt_options.capture : !!opt_options;
    return src.listen(type, listener, capture, opt_handler);
  }
  return goog.events.listen_(src, type, listener, !1, opt_options, opt_handler);
};
goog.events.listen_ = function(src, type, listener, callOnce, opt_options, opt_handler) {
  if (!type) {
    throw Error("Invalid event type");
  }
  var capture = goog.isObject(opt_options) ? !!opt_options.capture : !!opt_options;
  if (capture && !goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT) {
    if (goog.events.CAPTURE_SIMULATION_MODE == goog.events.CaptureSimulationMode.OFF_AND_FAIL) {
      return goog.asserts.fail("Can not register capture listener in IE8-."), null;
    }
    if (goog.events.CAPTURE_SIMULATION_MODE == goog.events.CaptureSimulationMode.OFF_AND_SILENT) {
      return null;
    }
  }
  var listenerMap = goog.events.getListenerMap_(src);
  listenerMap || (src[goog.events.LISTENER_MAP_PROP_] = listenerMap = new goog.events.ListenerMap(src));
  var listenerObj = listenerMap.add(type, listener, callOnce, capture, opt_handler);
  if (listenerObj.proxy) {
    return listenerObj;
  }
  var proxy = goog.events.getProxy();
  listenerObj.proxy = proxy;
  proxy.src = src;
  proxy.listener = listenerObj;
  if (src.addEventListener) {
    goog.events.BrowserFeature.PASSIVE_EVENTS || (opt_options = capture), void 0 === opt_options && (opt_options = !1), src.addEventListener(type.toString(), proxy, opt_options);
  } else {
    if (src.attachEvent) {
      src.attachEvent(goog.events.getOnString_(type.toString()), proxy);
    } else {
      throw Error("addEventListener and attachEvent are unavailable.");
    }
  }
  goog.events.listenerCountEstimate_++;
  return listenerObj;
};
goog.events.getProxy = function() {
  var proxyCallbackFunction = goog.events.handleBrowserEvent_;
  var f = goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT ? function(eventObject) {
    return proxyCallbackFunction.call(f.src, f.listener, eventObject);
  } : function(eventObject) {
    var v = proxyCallbackFunction.call(f.src, f.listener, eventObject);
    if (!v) {
      return v;
    }
  };
  return f;
};
goog.events.listenOnce = function(src, type, listener, opt_options, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0; i < type.length; i++) {
      goog.events.listenOnce(src, type[i], listener, opt_options, opt_handler);
    }
    return null;
  }
  listener = goog.events.wrapListener(listener);
  if (goog.events.Listenable.isImplementedBy(src)) {
    var capture = goog.isObject(opt_options) ? !!opt_options.capture : !!opt_options;
    return src.listenOnce(type, listener, capture, opt_handler);
  }
  return goog.events.listen_(src, type, listener, !0, opt_options, opt_handler);
};
goog.events.listenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.listen(src, listener, opt_capt, opt_handler);
};
goog.events.unlisten = function(src, type, listener, opt_options, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0; i < type.length; i++) {
      goog.events.unlisten(src, type[i], listener, opt_options, opt_handler);
    }
    return null;
  }
  var capture = goog.isObject(opt_options) ? !!opt_options.capture : !!opt_options;
  listener = goog.events.wrapListener(listener);
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.unlisten(type, listener, capture, opt_handler);
  }
  if (!src) {
    return !1;
  }
  var listenerMap = goog.events.getListenerMap_(src);
  if (listenerMap) {
    var listenerObj = listenerMap.getListener(type, listener, capture, opt_handler);
    if (listenerObj) {
      return goog.events.unlistenByKey(listenerObj);
    }
  }
  return !1;
};
goog.events.unlistenByKey = function(key) {
  if (goog.isNumber(key)) {
    return !1;
  }
  var listener = key;
  if (!listener || listener.removed) {
    return !1;
  }
  var src = listener.src;
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.unlistenByKey(listener);
  }
  var type = listener.type;
  var proxy = listener.proxy;
  src.removeEventListener ? src.removeEventListener(type, proxy, listener.capture) : src.detachEvent && src.detachEvent(goog.events.getOnString_(type), proxy);
  goog.events.listenerCountEstimate_--;
  var listenerMap = goog.events.getListenerMap_(src);
  listenerMap ? (listenerMap.removeByKey(listener), 0 == listenerMap.typeCount_ && (listenerMap.src = null, src[goog.events.LISTENER_MAP_PROP_] = null)) : listener.markAsRemoved();
  return !0;
};
goog.events.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.unlisten(src, listener, opt_capt, opt_handler);
};
goog.events.removeAll = function(obj, opt_type) {
  if (!obj) {
    return 0;
  }
  if (goog.events.Listenable.isImplementedBy(obj)) {
    return obj.removeAllListeners(opt_type);
  }
  var listenerMap = goog.events.getListenerMap_(obj);
  if (!listenerMap) {
    return 0;
  }
  var count = 0;
  var typeStr = opt_type && opt_type.toString();
  for (var type in listenerMap.listeners) {
    if (!typeStr || type == typeStr) {
      var listeners = listenerMap.listeners[type].concat();
      for (var i = 0; i < listeners.length; ++i) {
        goog.events.unlistenByKey(listeners[i]) && ++count;
      }
    }
  }
  return count;
};
goog.events.getListeners = function(obj, type, capture) {
  if (goog.events.Listenable.isImplementedBy(obj)) {
    return obj.getListeners(type, capture);
  }
  if (!obj) {
    return [];
  }
  var listenerMap = goog.events.getListenerMap_(obj);
  return listenerMap ? listenerMap.getListeners(type, capture) : [];
};
goog.events.getListener = function(src, type, listener, opt_capt, opt_handler) {
  listener = goog.events.wrapListener(listener);
  var capture = !!opt_capt;
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.getListener(type, listener, capture, opt_handler);
  }
  if (!src) {
    return null;
  }
  var listenerMap = goog.events.getListenerMap_(src);
  return listenerMap ? listenerMap.getListener(type, listener, capture, opt_handler) : null;
};
goog.events.hasListener = function(obj, opt_type, opt_capture) {
  if (goog.events.Listenable.isImplementedBy(obj)) {
    return obj.hasListener(opt_type, opt_capture);
  }
  var listenerMap = goog.events.getListenerMap_(obj);
  return !!listenerMap && listenerMap.hasListener(opt_type, opt_capture);
};
goog.events.expose = function(e) {
  var str = [];
  for (var key in e) {
    e[key] && e[key].id ? str.push(key + " = " + e[key] + " (" + e[key].id + ")") : str.push(key + " = " + e[key]);
  }
  return str.join("\n");
};
goog.events.getOnString_ = function(type) {
  return type in goog.events.onStringMap_ ? goog.events.onStringMap_[type] : goog.events.onStringMap_[type] = goog.events.onString_ + type;
};
goog.events.fireListeners = function(obj, type, capture, eventObject) {
  return goog.events.Listenable.isImplementedBy(obj) ? obj.fireListeners(type, capture, eventObject) : goog.events.fireListeners_(obj, type, capture, eventObject);
};
goog.events.fireListeners_ = function(obj, type, capture, eventObject) {
  var retval = !0;
  var listenerMap = goog.events.getListenerMap_(obj);
  if (listenerMap) {
    var listenerArray = listenerMap.listeners[type.toString()];
    if (listenerArray) {
      listenerArray = listenerArray.concat();
      for (var i = 0; i < listenerArray.length; i++) {
        var listener = listenerArray[i];
        if (listener && listener.capture == capture && !listener.removed) {
          var result = goog.events.fireListener(listener, eventObject);
          retval = retval && !1 !== result;
        }
      }
    }
  }
  return retval;
};
goog.events.fireListener = function(listener, eventObject) {
  var listenerFn = listener.listener;
  var listenerHandler = listener.handler || listener.src;
  listener.callOnce && goog.events.unlistenByKey(listener);
  return listenerFn.call(listenerHandler, eventObject);
};
goog.events.getTotalListenerCount = function() {
  return goog.events.listenerCountEstimate_;
};
goog.events.dispatchEvent = function(src, e) {
  goog.asserts.assert(goog.events.Listenable.isImplementedBy(src), "Can not use goog.events.dispatchEvent with non-goog.events.Listenable instance.");
  return src.dispatchEvent(e);
};
goog.events.protectBrowserEventEntryPoint = function(errorHandler) {
  goog.events.handleBrowserEvent_ = errorHandler.protectEntryPoint(goog.events.handleBrowserEvent_);
};
goog.events.handleBrowserEvent_ = function(listener, opt_evt) {
  if (listener.removed) {
    return !0;
  }
  if (!goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT) {
    var ieEvent = opt_evt || goog.getObjectByName("window.event");
    var evt = new goog.events.BrowserEvent(ieEvent, this);
    var retval = !0;
    if (goog.events.CAPTURE_SIMULATION_MODE == goog.events.CaptureSimulationMode.ON) {
      if (!goog.events.isMarkedIeEvent_(ieEvent)) {
        goog.events.markIeEvent_(ieEvent);
        var ancestors = [];
        for (var parent = evt.currentTarget; parent; parent = parent.parentNode) {
          ancestors.push(parent);
        }
        var type = listener.type;
        for (var i = ancestors.length - 1; !evt.propagationStopped_ && 0 <= i; i--) {
          evt.currentTarget = ancestors[i];
          var result = goog.events.fireListeners_(ancestors[i], type, !0, evt);
          retval = retval && result;
        }
        for (i = 0; !evt.propagationStopped_ && i < ancestors.length; i++) {
          evt.currentTarget = ancestors[i], result = goog.events.fireListeners_(ancestors[i], type, !1, evt), retval = retval && result;
        }
      }
    } else {
      retval = goog.events.fireListener(listener, evt);
    }
    return retval;
  }
  return goog.events.fireListener(listener, new goog.events.BrowserEvent(opt_evt, this));
};
goog.events.markIeEvent_ = function(e) {
  var useReturnValue = !1;
  if (0 == e.keyCode) {
    try {
      e.keyCode = -1;
      return;
    } catch (ex) {
      useReturnValue = !0;
    }
  }
  if (useReturnValue || void 0 == e.returnValue) {
    e.returnValue = !0;
  }
};
goog.events.isMarkedIeEvent_ = function(e) {
  return 0 > e.keyCode || void 0 != e.returnValue;
};
goog.events.uniqueIdCounter_ = 0;
goog.events.getUniqueId = function(identifier) {
  return identifier + "_" + goog.events.uniqueIdCounter_++;
};
goog.events.getListenerMap_ = function(src) {
  var listenerMap = src[goog.events.LISTENER_MAP_PROP_];
  return listenerMap instanceof goog.events.ListenerMap ? listenerMap : null;
};
goog.events.LISTENER_WRAPPER_PROP_ = "__closure_events_fn_" + (1e9 * Math.random() >>> 0);
goog.events.wrapListener = function(listener) {
  goog.asserts.assert(listener, "Listener can not be null.");
  if (goog.isFunction(listener)) {
    return listener;
  }
  goog.asserts.assert(listener.handleEvent, "An object listener must have handleEvent method.");
  listener[goog.events.LISTENER_WRAPPER_PROP_] || (listener[goog.events.LISTENER_WRAPPER_PROP_] = function(e) {
    return listener.handleEvent(e);
  });
  return listener[goog.events.LISTENER_WRAPPER_PROP_];
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.events.handleBrowserEvent_ = transformer(goog.events.handleBrowserEvent_);
});
goog.events.EventTarget = function() {
  goog.Disposable.call(this);
  this.eventTargetListeners_ = new goog.events.ListenerMap(this);
  this.actualEventTarget_ = this;
  this.parentEventTarget_ = null;
};
goog.inherits(goog.events.EventTarget, goog.Disposable);
goog.events.Listenable.addImplementation(goog.events.EventTarget);
goog.events.EventTarget.MAX_ANCESTORS_ = 1000;
goog.events.EventTarget.prototype.addEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.listen(this, type, handler, opt_capture, opt_handlerScope);
};
goog.events.EventTarget.prototype.removeEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.unlisten(this, type, handler, opt_capture, opt_handlerScope);
};
goog.events.EventTarget.prototype.dispatchEvent = function(e) {
  this.assertInitialized_();
  var ancestor = this.parentEventTarget_;
  if (ancestor) {
    var ancestorsTree = [];
    for (var ancestorCount = 1; ancestor; ancestor = ancestor.parentEventTarget_) {
      ancestorsTree.push(ancestor), goog.asserts.assert(++ancestorCount < goog.events.EventTarget.MAX_ANCESTORS_, "infinite loop");
    }
  }
  return goog.events.EventTarget.dispatchEventInternal_(this.actualEventTarget_, e, ancestorsTree);
};
goog.events.EventTarget.prototype.disposeInternal = function() {
  goog.events.EventTarget.superClass_.disposeInternal.call(this);
  this.removeAllListeners();
  this.parentEventTarget_ = null;
};
goog.events.EventTarget.prototype.listen = function(type, listener, opt_useCapture, opt_listenerScope) {
  this.assertInitialized_();
  return this.eventTargetListeners_.add(String(type), listener, !1, opt_useCapture, opt_listenerScope);
};
goog.events.EventTarget.prototype.listenOnce = function(type, listener, opt_useCapture, opt_listenerScope) {
  return this.eventTargetListeners_.add(String(type), listener, !0, opt_useCapture, opt_listenerScope);
};
goog.events.EventTarget.prototype.unlisten = function(type, listener, opt_useCapture, opt_listenerScope) {
  return this.eventTargetListeners_.remove(String(type), listener, opt_useCapture, opt_listenerScope);
};
goog.events.EventTarget.prototype.unlistenByKey = function(key) {
  return this.eventTargetListeners_.removeByKey(key);
};
goog.events.EventTarget.prototype.removeAllListeners = function(opt_type) {
  return this.eventTargetListeners_ ? this.eventTargetListeners_.removeAll(opt_type) : 0;
};
goog.events.EventTarget.prototype.fireListeners = function(type, capture, eventObject) {
  var listenerArray = this.eventTargetListeners_.listeners[String(type)];
  if (!listenerArray) {
    return !0;
  }
  listenerArray = listenerArray.concat();
  var rv = !0;
  for (var i = 0; i < listenerArray.length; ++i) {
    var listener = listenerArray[i];
    if (listener && !listener.removed && listener.capture == capture) {
      var listenerFn = listener.listener;
      var listenerHandler = listener.handler || listener.src;
      listener.callOnce && this.unlistenByKey(listener);
      rv = !1 !== listenerFn.call(listenerHandler, eventObject) && rv;
    }
  }
  return rv && 0 != eventObject.returnValue_;
};
goog.events.EventTarget.prototype.getListeners = function(type, capture) {
  return this.eventTargetListeners_.getListeners(String(type), capture);
};
goog.events.EventTarget.prototype.getListener = function(type, listener, capture, opt_listenerScope) {
  return this.eventTargetListeners_.getListener(String(type), listener, capture, opt_listenerScope);
};
goog.events.EventTarget.prototype.hasListener = function(opt_type, opt_capture) {
  var id = goog.isDef(opt_type) ? String(opt_type) : void 0;
  return this.eventTargetListeners_.hasListener(id, opt_capture);
};
goog.events.EventTarget.prototype.assertInitialized_ = function() {
  goog.asserts.assert(this.eventTargetListeners_, "Event target is not initialized. Did you call the superclass (goog.events.EventTarget) constructor?");
};
goog.events.EventTarget.dispatchEventInternal_ = function(target, e, opt_ancestorsTree) {
  var type = e.type || e;
  if (goog.isString(e)) {
    e = new goog.events.Event(e, target);
  } else {
    if (e instanceof goog.events.Event) {
      e.target = e.target || target;
    } else {
      var oldEvent = e;
      e = new goog.events.Event(type, target);
      goog.object.extend(e, oldEvent);
    }
  }
  var rv = !0;
  if (opt_ancestorsTree) {
    for (var i = opt_ancestorsTree.length - 1; !e.propagationStopped_ && 0 <= i; i--) {
      var currentTarget = e.currentTarget = opt_ancestorsTree[i];
      rv = currentTarget.fireListeners(type, !0, e) && rv;
    }
  }
  e.propagationStopped_ || (currentTarget = e.currentTarget = target, rv = currentTarget.fireListeners(type, !0, e) && rv, e.propagationStopped_ || (rv = currentTarget.fireListeners(type, !1, e) && rv));
  if (opt_ancestorsTree) {
    for (i = 0; !e.propagationStopped_ && i < opt_ancestorsTree.length; i++) {
      currentTarget = e.currentTarget = opt_ancestorsTree[i], rv = currentTarget.fireListeners(type, !1, e) && rv;
    }
  }
  return rv;
};
goog.events.KeyCodes = {WIN_KEY_FF_LINUX:0, MAC_ENTER:3, BACKSPACE:8, TAB:9, NUM_CENTER:12, ENTER:13, SHIFT:16, CTRL:17, ALT:18, PAUSE:19, CAPS_LOCK:20, ESC:27, SPACE:32, PAGE_UP:33, PAGE_DOWN:34, END:35, HOME:36, LEFT:37, UP:38, RIGHT:39, DOWN:40, PLUS_SIGN:43, PRINT_SCREEN:44, INSERT:45, DELETE:46, ZERO:48, ONE:49, TWO:50, THREE:51, FOUR:52, FIVE:53, SIX:54, SEVEN:55, EIGHT:56, NINE:57, FF_SEMICOLON:59, FF_EQUALS:61, FF_DASH:173, QUESTION_MARK:63, AT_SIGN:64, A:65, B:66, C:67, D:68, E:69, F:70, 
G:71, H:72, I:73, J:74, K:75, L:76, M:77, N:78, O:79, P:80, Q:81, R:82, S:83, T:84, U:85, V:86, W:87, X:88, Y:89, Z:90, META:91, WIN_KEY_RIGHT:92, CONTEXT_MENU:93, NUM_ZERO:96, NUM_ONE:97, NUM_TWO:98, NUM_THREE:99, NUM_FOUR:100, NUM_FIVE:101, NUM_SIX:102, NUM_SEVEN:103, NUM_EIGHT:104, NUM_NINE:105, NUM_MULTIPLY:106, NUM_PLUS:107, NUM_MINUS:109, NUM_PERIOD:110, NUM_DIVISION:111, F1:112, F2:113, F3:114, F4:115, F5:116, F6:117, F7:118, F8:119, F9:120, F10:121, F11:122, F12:123, NUMLOCK:144, SCROLL_LOCK:145, 
FIRST_MEDIA_KEY:166, LAST_MEDIA_KEY:183, SEMICOLON:186, DASH:189, EQUALS:187, COMMA:188, PERIOD:190, SLASH:191, APOSTROPHE:192, TILDE:192, SINGLE_QUOTE:222, OPEN_SQUARE_BRACKET:219, BACKSLASH:220, CLOSE_SQUARE_BRACKET:221, WIN_KEY:224, MAC_FF_META:224, MAC_WK_CMD_LEFT:91, MAC_WK_CMD_RIGHT:93, WIN_IME:229, VK_NONAME:252, PHANTOM:255};
goog.events.KeyCodes.isTextModifyingKeyEvent = function(e) {
  if (e.altKey && !e.ctrlKey || e.metaKey || e.keyCode >= goog.events.KeyCodes.F1 && e.keyCode <= goog.events.KeyCodes.F12) {
    return !1;
  }
  switch(e.keyCode) {
    case goog.events.KeyCodes.ALT:
    case goog.events.KeyCodes.CAPS_LOCK:
    case goog.events.KeyCodes.CONTEXT_MENU:
    case goog.events.KeyCodes.CTRL:
    case goog.events.KeyCodes.DOWN:
    case goog.events.KeyCodes.END:
    case goog.events.KeyCodes.ESC:
    case goog.events.KeyCodes.HOME:
    case goog.events.KeyCodes.INSERT:
    case goog.events.KeyCodes.LEFT:
    case goog.events.KeyCodes.MAC_FF_META:
    case goog.events.KeyCodes.META:
    case goog.events.KeyCodes.NUMLOCK:
    case goog.events.KeyCodes.NUM_CENTER:
    case goog.events.KeyCodes.PAGE_DOWN:
    case goog.events.KeyCodes.PAGE_UP:
    case goog.events.KeyCodes.PAUSE:
    case goog.events.KeyCodes.PHANTOM:
    case goog.events.KeyCodes.PRINT_SCREEN:
    case goog.events.KeyCodes.RIGHT:
    case goog.events.KeyCodes.SCROLL_LOCK:
    case goog.events.KeyCodes.SHIFT:
    case goog.events.KeyCodes.UP:
    case goog.events.KeyCodes.VK_NONAME:
    case goog.events.KeyCodes.WIN_KEY:
    case goog.events.KeyCodes.WIN_KEY_RIGHT:
      return !1;
    case goog.events.KeyCodes.WIN_KEY_FF_LINUX:
      return !goog.userAgent.GECKO;
    default:
      return e.keyCode < goog.events.KeyCodes.FIRST_MEDIA_KEY || e.keyCode > goog.events.KeyCodes.LAST_MEDIA_KEY;
  }
};
goog.events.KeyCodes.firesKeyPressEvent = function(keyCode, opt_heldKeyCode, opt_shiftKey, opt_ctrlKey, opt_altKey, opt_metaKey) {
  if (!(goog.userAgent.IE || goog.userAgent.EDGE || goog.userAgent.WEBKIT && goog.userAgent.isVersionOrHigher("525"))) {
    return !0;
  }
  if (goog.userAgent.MAC && opt_altKey) {
    return goog.events.KeyCodes.isCharacterKey(keyCode);
  }
  if (opt_altKey && !opt_ctrlKey) {
    return !1;
  }
  goog.isNumber(opt_heldKeyCode) && (opt_heldKeyCode = goog.events.KeyCodes.normalizeKeyCode(opt_heldKeyCode));
  var heldKeyIsModifier = opt_heldKeyCode == goog.events.KeyCodes.CTRL || opt_heldKeyCode == goog.events.KeyCodes.ALT || goog.userAgent.MAC && opt_heldKeyCode == goog.events.KeyCodes.META;
  var modifiedShiftKey = opt_heldKeyCode == goog.events.KeyCodes.SHIFT && (opt_ctrlKey || opt_metaKey);
  if ((!opt_shiftKey || goog.userAgent.MAC) && heldKeyIsModifier || goog.userAgent.MAC && modifiedShiftKey) {
    return !1;
  }
  if ((goog.userAgent.WEBKIT || goog.userAgent.EDGE) && opt_ctrlKey && opt_shiftKey) {
    switch(keyCode) {
      case goog.events.KeyCodes.BACKSLASH:
      case goog.events.KeyCodes.OPEN_SQUARE_BRACKET:
      case goog.events.KeyCodes.CLOSE_SQUARE_BRACKET:
      case goog.events.KeyCodes.TILDE:
      case goog.events.KeyCodes.SEMICOLON:
      case goog.events.KeyCodes.DASH:
      case goog.events.KeyCodes.EQUALS:
      case goog.events.KeyCodes.COMMA:
      case goog.events.KeyCodes.PERIOD:
      case goog.events.KeyCodes.SLASH:
      case goog.events.KeyCodes.APOSTROPHE:
      case goog.events.KeyCodes.SINGLE_QUOTE:
        return !1;
    }
  }
  if (goog.userAgent.IE && opt_ctrlKey && opt_heldKeyCode == keyCode) {
    return !1;
  }
  switch(keyCode) {
    case goog.events.KeyCodes.ENTER:
      return !0;
    case goog.events.KeyCodes.ESC:
      return !(goog.userAgent.WEBKIT || goog.userAgent.EDGE);
  }
  return goog.events.KeyCodes.isCharacterKey(keyCode);
};
goog.events.KeyCodes.isCharacterKey = function(keyCode) {
  if (keyCode >= goog.events.KeyCodes.ZERO && keyCode <= goog.events.KeyCodes.NINE || keyCode >= goog.events.KeyCodes.NUM_ZERO && keyCode <= goog.events.KeyCodes.NUM_MULTIPLY || keyCode >= goog.events.KeyCodes.A && keyCode <= goog.events.KeyCodes.Z || (goog.userAgent.WEBKIT || goog.userAgent.EDGE) && 0 == keyCode) {
    return !0;
  }
  switch(keyCode) {
    case goog.events.KeyCodes.SPACE:
    case goog.events.KeyCodes.PLUS_SIGN:
    case goog.events.KeyCodes.QUESTION_MARK:
    case goog.events.KeyCodes.AT_SIGN:
    case goog.events.KeyCodes.NUM_PLUS:
    case goog.events.KeyCodes.NUM_MINUS:
    case goog.events.KeyCodes.NUM_PERIOD:
    case goog.events.KeyCodes.NUM_DIVISION:
    case goog.events.KeyCodes.SEMICOLON:
    case goog.events.KeyCodes.FF_SEMICOLON:
    case goog.events.KeyCodes.DASH:
    case goog.events.KeyCodes.EQUALS:
    case goog.events.KeyCodes.FF_EQUALS:
    case goog.events.KeyCodes.COMMA:
    case goog.events.KeyCodes.PERIOD:
    case goog.events.KeyCodes.SLASH:
    case goog.events.KeyCodes.APOSTROPHE:
    case goog.events.KeyCodes.SINGLE_QUOTE:
    case goog.events.KeyCodes.OPEN_SQUARE_BRACKET:
    case goog.events.KeyCodes.BACKSLASH:
    case goog.events.KeyCodes.CLOSE_SQUARE_BRACKET:
      return !0;
    default:
      return !1;
  }
};
goog.events.KeyCodes.normalizeKeyCode = function(keyCode) {
  return goog.userAgent.GECKO ? goog.events.KeyCodes.normalizeGeckoKeyCode(keyCode) : goog.userAgent.MAC && goog.userAgent.WEBKIT ? goog.events.KeyCodes.normalizeMacWebKitKeyCode(keyCode) : keyCode;
};
goog.events.KeyCodes.normalizeGeckoKeyCode = function(keyCode) {
  switch(keyCode) {
    case goog.events.KeyCodes.FF_EQUALS:
      return goog.events.KeyCodes.EQUALS;
    case goog.events.KeyCodes.FF_SEMICOLON:
      return goog.events.KeyCodes.SEMICOLON;
    case goog.events.KeyCodes.FF_DASH:
      return goog.events.KeyCodes.DASH;
    case goog.events.KeyCodes.MAC_FF_META:
      return goog.events.KeyCodes.META;
    case goog.events.KeyCodes.WIN_KEY_FF_LINUX:
      return goog.events.KeyCodes.WIN_KEY;
    default:
      return keyCode;
  }
};
goog.events.KeyCodes.normalizeMacWebKitKeyCode = function(keyCode) {
  switch(keyCode) {
    case goog.events.KeyCodes.MAC_WK_CMD_RIGHT:
      return goog.events.KeyCodes.META;
    default:
      return keyCode;
  }
};
goog.events.KeyNames = {8:"backspace", 9:"tab", 13:"enter", 16:"shift", 17:"ctrl", 18:"alt", 19:"pause", 20:"caps-lock", 27:"esc", 32:"space", 33:"pg-up", 34:"pg-down", 35:"end", 36:"home", 37:"left", 38:"up", 39:"right", 40:"down", 45:"insert", 46:"delete", 48:"0", 49:"1", 50:"2", 51:"3", 52:"4", 53:"5", 54:"6", 55:"7", 56:"8", 57:"9", 59:"semicolon", 61:"equals", 65:"a", 66:"b", 67:"c", 68:"d", 69:"e", 70:"f", 71:"g", 72:"h", 73:"i", 74:"j", 75:"k", 76:"l", 77:"m", 78:"n", 79:"o", 80:"p", 81:"q", 
82:"r", 83:"s", 84:"t", 85:"u", 86:"v", 87:"w", 88:"x", 89:"y", 90:"z", 93:"context", 96:"num-0", 97:"num-1", 98:"num-2", 99:"num-3", 100:"num-4", 101:"num-5", 102:"num-6", 103:"num-7", 104:"num-8", 105:"num-9", 106:"num-multiply", 107:"num-plus", 109:"num-minus", 110:"num-period", 111:"num-division", 112:"f1", 113:"f2", 114:"f3", 115:"f4", 116:"f5", 117:"f6", 118:"f7", 119:"f8", 120:"f9", 121:"f10", 122:"f11", 123:"f12", 186:"semicolon", 187:"equals", 189:"dash", 188:",", 190:".", 191:"/", 192:"`", 
219:"open-square-bracket", 220:"\\", 221:"close-square-bracket", 222:"single-quote", 224:"win"};
goog.events.Keys = {CTRL:"Control", SHIFT:"Shift", ALT:"Meta", ALTGRAPH:"AltGraph"};
goog.html.sanitizer = {};
goog.html.sanitizer.AttributeWhitelist = {"* ARIA-CHECKED":!0, "* ARIA-COLCOUNT":!0, "* ARIA-COLINDEX":!0, "* ARIA-DESCRIBEDBY":!0, "* ARIA-DISABLED":!0, "* ARIA-LABEL":!0, "* ARIA-LABELLEDBY":!0, "* ARIA-READONLY":!0, "* ARIA-REQUIRED":!0, "* ARIA-ROWCOUNT":!0, "* ARIA-ROWINDEX":!0, "* ARIA-SELECTED":!0, "* ABBR":!0, "* ACCEPT":!0, "* ACCESSKEY":!0, "* ALIGN":!0, "* ALT":!0, "* AUTOCOMPLETE":!0, "* AXIS":!0, "* BGCOLOR":!0, "* BORDER":!0, "* CELLPADDING":!0, "* CELLSPACING":!0, "* CHAROFF":!0, "* CHAR":!0, 
"* CHECKED":!0, "* CLEAR":!0, "* COLOR":!0, "* COLSPAN":!0, "* COLS":!0, "* COMPACT":!0, "* COORDS":!0, "* DATETIME":!0, "* DIR":!0, "* DISABLED":!0, "* ENCTYPE":!0, "* FACE":!0, "* FRAME":!0, "* HEIGHT":!0, "* HREFLANG":!0, "* HSPACE":!0, "* ISMAP":!0, "* LABEL":!0, "* LANG":!0, "* MAXLENGTH":!0, "* METHOD":!0, "* MULTIPLE":!0, "* NOHREF":!0, "* NOSHADE":!0, "* NOWRAP":!0, "* READONLY":!0, "* REL":!0, "* REV":!0, "* ROLE":!0, "* ROWSPAN":!0, "* ROWS":!0, "* RULES":!0, "* SCOPE":!0, "* SELECTED":!0, 
"* SHAPE":!0, "* SIZE":!0, "* SPAN":!0, "* START":!0, "* SUMMARY":!0, "* TABINDEX":!0, "* TITLE":!0, "* TYPE":!0, "* VALIGN":!0, "* VALUE":!0, "* VSPACE":!0, "* WIDTH":!0};
goog.html.sanitizer.AttributeSanitizedWhitelist = {"* USEMAP":!0, "* ACTION":!0, "* CITE":!0, "* HREF":!0, "* LONGDESC":!0, "* SRC":!0, "LINK HREF":!0, "* FOR":!0, "* HEADERS":!0, "* NAME":!0, "A TARGET":!0, "* CLASS":!0, "* ID":!0, "* STYLE":!0};
goog.html.sanitizer.CssSanitizer = {};
goog.html.sanitizer.CssSanitizer.NORM_URL_REGEXP_ = /[\n\f\r\"\'()*<>]/g;
goog.html.sanitizer.CssSanitizer.NORM_URL_REPLACEMENTS_ = {"\n":"%0a", "\f":"%0c", "\r":"%0d", '"':"%22", "'":"%27", "(":"%28", ")":"%29", "*":"%2a", "<":"%3c", ">":"%3e"};
goog.html.sanitizer.CssSanitizer.normalizeUrlChar_ = function(ch) {
  return goog.html.sanitizer.CssSanitizer.NORM_URL_REPLACEMENTS_[ch] || null;
};
goog.html.sanitizer.CssSanitizer.getSafeUri_ = function(uri, propName, uriRewriter) {
  if (!uriRewriter) {
    return null;
  }
  var safeUri = uriRewriter(uri, propName);
  return safeUri && goog.html.SafeUrl.unwrap(safeUri) != goog.html.SafeUrl.INNOCUOUS_STRING ? 'url("' + goog.html.SafeUrl.unwrap(safeUri).replace(goog.html.sanitizer.CssSanitizer.NORM_URL_REGEXP_, goog.html.sanitizer.CssSanitizer.normalizeUrlChar_) + '")' : null;
};
goog.html.sanitizer.CssSanitizer.FUNCTION_ARGUMENTS_BEGIN_ = "(";
goog.html.sanitizer.CssSanitizer.FUNCTION_ARGUMENTS_END_ = ")";
goog.html.sanitizer.CssSanitizer.ALLOWED_FUNCTIONS_ = "rgb rgba alpha rect image linear-gradient radial-gradient repeating-linear-gradient repeating-radial-gradient cubic-bezier matrix perspective rotate rotate3d rotatex rotatey steps rotatez scale scale3d scalex scaley scalez skew skewx skewy translate translate3d translatex translatey translatez".split(" ");
goog.html.sanitizer.CssSanitizer.withoutVendorPrefix_ = function(propName) {
  return propName.replace(/^-(?:apple|css|epub|khtml|moz|mso?|o|rim|wap|webkit|xv)-(?=[a-z])/i, "");
};
goog.html.sanitizer.CssSanitizer.sanitizeProperty_ = function(propName, propValue, opt_uriRewriter) {
  var outputPropValue = goog.string.trim(propValue);
  if ("" == outputPropValue) {
    return null;
  }
  if (goog.string.caseInsensitiveStartsWith(outputPropValue, "url(")) {
    if (!opt_uriRewriter) {
      return null;
    }
    var uri = goog.string.stripQuotes(outputPropValue.substring(4, outputPropValue.length - 1), "\"'");
    return goog.html.sanitizer.CssSanitizer.getSafeUri_(uri, propName, opt_uriRewriter);
  }
  return 0 < outputPropValue.indexOf("(") ? 1 < goog.string.countOf(outputPropValue, goog.html.sanitizer.CssSanitizer.FUNCTION_ARGUMENTS_BEGIN_) || !goog.array.contains(goog.html.sanitizer.CssSanitizer.ALLOWED_FUNCTIONS_, outputPropValue.substring(0, outputPropValue.indexOf(goog.html.sanitizer.CssSanitizer.FUNCTION_ARGUMENTS_BEGIN_)).toLowerCase()) || !goog.string.endsWith(outputPropValue, goog.html.sanitizer.CssSanitizer.FUNCTION_ARGUMENTS_END_) ? null : outputPropValue : outputPropValue;
};
goog.html.sanitizer.CssSanitizer.sanitizeInlineStyle = function(cssStyle, opt_uriRewriter) {
  if (!cssStyle) {
    return goog.html.SafeStyle.EMPTY;
  }
  var cleanCssStyle = document.createElement("div").style;
  var cssPropNames = goog.html.sanitizer.CssSanitizer.getCssPropNames_(cssStyle);
  for (var i = 0; i < cssPropNames.length; i++) {
    var propName = goog.html.sanitizer.CssSanitizer.withoutVendorPrefix_(cssPropNames[i]);
    if (!goog.html.sanitizer.CssSanitizer.isDisallowedPropertyName_(propName)) {
      var propValue = goog.html.sanitizer.CssSanitizer.getCssValue_(cssStyle, propName);
      var sanitizedValue = goog.html.sanitizer.CssSanitizer.sanitizeProperty_(propName, propValue, opt_uriRewriter);
      goog.html.sanitizer.CssSanitizer.setCssValue_(cleanCssStyle, propName, sanitizedValue);
    }
  }
  return goog.html.uncheckedconversions.safeStyleFromStringKnownToSatisfyTypeContract(goog.string.Const.from("Output of CSS sanitizer"), cleanCssStyle.cssText || "");
};
goog.html.sanitizer.CssSanitizer.sanitizeInlineStyleString = function(cssText, opt_uriRewriter) {
  if (goog.userAgent.IE && 10 > document.documentMode) {
    return new goog.html.SafeStyle;
  }
  var div = goog.html.sanitizer.CssSanitizer.createInertDocument_().createElement("DIV");
  div.style.cssText = cssText;
  return goog.html.sanitizer.CssSanitizer.sanitizeInlineStyle(div.style, opt_uriRewriter);
};
goog.html.sanitizer.CssSanitizer.createInertDocument_ = function() {
  var doc = document;
  "function" === typeof HTMLTemplateElement && (doc = goog.dom.createElement("TEMPLATE").content.ownerDocument);
  return doc.implementation.createHTMLDocument("");
};
goog.html.sanitizer.CssSanitizer.getCssPropNames_ = function(cssStyle) {
  if (goog.isArrayLike(cssStyle)) {
    var propNames = goog.array.toArray(cssStyle);
  } else {
    propNames = goog.object.getKeys(cssStyle), goog.array.remove(propNames, "cssText");
  }
  return propNames;
};
goog.html.sanitizer.CssSanitizer.getCssValue_ = function(cssStyle, propName) {
  var getPropDescriptor = Object.getOwnPropertyDescriptor(CSSStyleDeclaration.prototype, "getPropertyValue");
  return getPropDescriptor && cssStyle.getPropertyValue ? getPropDescriptor.value.call(cssStyle, propName) || "" : cssStyle.getAttribute ? String(cssStyle.getAttribute(propName) || "") : "";
};
goog.html.sanitizer.CssSanitizer.setCssValue_ = function(cssStyle, propName, sanitizedValue) {
  if (sanitizedValue) {
    var setPropDescriptor = Object.getOwnPropertyDescriptor(CSSStyleDeclaration.prototype, "setProperty");
    setPropDescriptor && cssStyle.setProperty ? setPropDescriptor.value.call(cssStyle, propName, sanitizedValue) : cssStyle.setAttribute && cssStyle.setAttribute(propName, sanitizedValue);
  }
};
goog.html.sanitizer.CssSanitizer.isDisallowedPropertyName_ = function(propName) {
  return goog.string.startsWith(propName, "--") || goog.string.startsWith(propName, "var");
};
goog.html.sanitizer.TagBlacklist = {APPLET:!0, AUDIO:!0, BASE:!0, BGSOUND:!0, EMBED:!0, FORM:!0, IFRAME:!0, ISINDEX:!0, KEYGEN:!0, LAYER:!0, LINK:!0, META:!0, OBJECT:!0, SCRIPT:!0, SVG:!0, STYLE:!0, TEMPLATE:!0, VIDEO:!0};
goog.html.sanitizer.TagWhitelist = {A:!0, ABBR:!0, ACRONYM:!0, ADDRESS:!0, AREA:!0, ARTICLE:!0, ASIDE:!0, B:!0, BDI:!0, BDO:!0, BIG:!0, BLOCKQUOTE:!0, BR:!0, BUTTON:!0, CAPTION:!0, CENTER:!0, CITE:!0, CODE:!0, COL:!0, COLGROUP:!0, DATA:!0, DATALIST:!0, DD:!0, DEL:!0, DETAILS:!0, DFN:!0, DIALOG:!0, DIR:!0, DIV:!0, DL:!0, DT:!0, EM:!0, FIELDSET:!0, FIGCAPTION:!0, FIGURE:!0, FONT:!0, FOOTER:!0, FORM:!0, H1:!0, H2:!0, H3:!0, H4:!0, H5:!0, H6:!0, HEADER:!0, HGROUP:!0, HR:!0, I:!0, IMG:!0, INPUT:!0, INS:!0, 
KBD:!0, LABEL:!0, LEGEND:!0, LI:!0, MAIN:!0, MAP:!0, MARK:!0, MENU:!0, METER:!0, NAV:!0, NOSCRIPT:!0, OL:!0, OPTGROUP:!0, OPTION:!0, OUTPUT:!0, P:!0, PRE:!0, PROGRESS:!0, Q:!0, S:!0, SAMP:!0, SECTION:!0, SELECT:!0, SMALL:!0, SOURCE:!0, SPAN:!0, STRIKE:!0, STRONG:!0, SUB:!0, SUMMARY:!0, SUP:!0, TABLE:!0, TBODY:!0, TD:!0, TEXTAREA:!0, TFOOT:!0, TH:!0, THEAD:!0, TIME:!0, TR:!0, TT:!0, U:!0, UL:!0, VAR:!0, WBR:!0};
goog.html.sanitizer.HTML_SANITIZER_SUPPORTED_ = !goog.userAgent.IE || 10 <= document.documentMode;
goog.html.sanitizer.HTML_SANITIZER_TEMPLATE_SUPPORTED = !goog.userAgent.IE || null == document.documentMode;
goog.html.sanitizer.HTML_SANITIZER_BOOKKEEPING_PREFIX_ = "data-sanitizer-";
goog.html.sanitizer.HTML_SANITIZER_BOOKKEEPING_ATTR_NAME_ = goog.html.sanitizer.HTML_SANITIZER_BOOKKEEPING_PREFIX_ + "elem-num";
goog.html.sanitizer.HTML_SANITIZER_SANITIZED_ATTR_NAME_ = goog.html.sanitizer.HTML_SANITIZER_BOOKKEEPING_PREFIX_ + "original-tag";
goog.html.sanitizer.HTML_SANITIZER_BLACKLISTED_TAG_ = goog.html.sanitizer.HTML_SANITIZER_BOOKKEEPING_PREFIX_ + "blacklisted-tag";
goog.html.sanitizer.HTML_SANITIZER_PROPERTY_DESCRIPTORS_ = goog.html.sanitizer.HTML_SANITIZER_SUPPORTED_ ? {attributes:Object.getOwnPropertyDescriptor(Element.prototype, "attributes"), setAttribute:Object.getOwnPropertyDescriptor(Element.prototype, "setAttribute"), innerHTML:Object.getOwnPropertyDescriptor(Element.prototype, "innerHTML"), nodeName:Object.getOwnPropertyDescriptor(Node.prototype, "nodeName"), parentNode:Object.getOwnPropertyDescriptor(Node.prototype, "parentNode"), childNodes:Object.getOwnPropertyDescriptor(Node.prototype, 
"childNodes"), style:Object.getOwnPropertyDescriptor(HTMLElement.prototype, "style")} : {};
goog.html.sanitizer.HtmlSanitizer = function(opt_builder) {
  var builder = opt_builder || new goog.html.sanitizer.HtmlSanitizer.Builder;
  builder.installPolicies_();
  this.shouldSanitizeTemplateContents_ = builder.shouldSanitizeTemplateContents_;
  this.attributeHandlers_ = goog.object.clone(builder.attributeWhitelist_);
  this.tagBlacklist_ = goog.object.clone(builder.tagBlacklist_);
  this.tagWhitelist_ = goog.object.clone(builder.tagWhitelist_);
  this.shouldAddOriginalTagNames_ = builder.shouldAddOriginalTagNames_;
  goog.array.forEach(builder.dataAttributeWhitelist_, function(dataAttr) {
    goog.asserts.assert(goog.string.startsWith(dataAttr, "data-"));
    goog.asserts.assert(!goog.string.startsWith(dataAttr, goog.html.sanitizer.HTML_SANITIZER_BOOKKEEPING_PREFIX_));
    this.attributeHandlers_["* " + dataAttr.toUpperCase()] = goog.html.sanitizer.HtmlSanitizer.cleanUpAttribute_;
  }, this);
};
goog.html.sanitizer.HtmlSanitizer.wrapUrlPolicy_ = function(urlPolicy) {
  return function(url, policyHints) {
    var trimmed = goog.html.sanitizer.HtmlSanitizer.cleanUpAttribute_(url, policyHints);
    var safeUrl = urlPolicy(trimmed, policyHints);
    return safeUrl && goog.html.SafeUrl.unwrap(safeUrl) != goog.html.SafeUrl.INNOCUOUS_STRING ? goog.html.SafeUrl.unwrap(safeUrl) : null;
  };
};
goog.html.sanitizer.HtmlSanitizer.Builder = function() {
  this.attributeWhitelist_ = {};
  goog.array.forEach([goog.html.sanitizer.AttributeWhitelist, goog.html.sanitizer.AttributeSanitizedWhitelist], function(wl) {
    goog.array.forEach(goog.object.getKeys(wl), function(attr) {
      this.attributeWhitelist_[attr] = goog.html.sanitizer.HtmlSanitizer.cleanUpAttribute_;
    }, this);
  }, this);
  this.attributeOverrideList_ = {};
  this.shouldSanitizeTemplateContents_ = !0;
  this.dataAttributeWhitelist_ = [];
  this.tagBlacklist_ = goog.object.clone(goog.html.sanitizer.TagBlacklist);
  this.tagWhitelist_ = goog.object.clone(goog.html.sanitizer.TagWhitelist);
  this.shouldAddOriginalTagNames_ = !1;
  this.urlPolicy_ = goog.html.sanitizer.HtmlSanitizer.defaultUrlPolicy_;
  this.networkRequestUrlPolicy_ = goog.html.sanitizer.HtmlSanitizer.defaultNetworkRequestUrlPolicy_;
  this.namePolicy_ = goog.html.sanitizer.HtmlSanitizer.defaultNamePolicy_;
  this.tokenPolicy_ = goog.html.sanitizer.HtmlSanitizer.defaultTokenPolicy_;
  this.sanitizeCssPolicy_ = void 0;
  this.policiesInstalled_ = !1;
};
goog.html.sanitizer.HtmlSanitizer.wrapPolicy_ = function(customPolicy, defaultPolicy) {
  return function(value, hints, ctx, policy) {
    var result = customPolicy(value, hints, ctx, policy);
    return null == result ? null : defaultPolicy(result, hints, ctx, policy);
  };
};
goog.html.sanitizer.HtmlSanitizer.installDefaultPolicy_ = function(whitelist, overrideList, key, defaultPolicy) {
  whitelist[key] && !overrideList[key] && (whitelist[key] = goog.html.sanitizer.HtmlSanitizer.wrapPolicy_(whitelist[key], defaultPolicy));
};
goog.html.sanitizer.HtmlSanitizer.Builder.prototype.build = function() {
  return new goog.html.sanitizer.HtmlSanitizer(this);
};
goog.html.sanitizer.HtmlSanitizer.Builder.prototype.installPolicies_ = function() {
  if (this.policiesInstalled_) {
    throw Error("HtmlSanitizer.Builder.build() can only be used once.");
  }
  var installPolicy = goog.html.sanitizer.HtmlSanitizer.installDefaultPolicy_;
  installPolicy(this.attributeWhitelist_, this.attributeOverrideList_, "* USEMAP", goog.html.sanitizer.HtmlSanitizer.sanitizeUrlFragment_);
  var urlAttributes = ["* ACTION", "* CITE", "* HREF"];
  var urlPolicy = goog.html.sanitizer.HtmlSanitizer.wrapUrlPolicy_(this.urlPolicy_);
  goog.array.forEach(urlAttributes, function(attribute) {
    installPolicy(this.attributeWhitelist_, this.attributeOverrideList_, attribute, urlPolicy);
  }, this);
  var networkUrlAttributes = ["* LONGDESC", "* SRC", "LINK HREF"];
  var networkRequestUrlPolicy = goog.html.sanitizer.HtmlSanitizer.wrapUrlPolicy_(this.networkRequestUrlPolicy_);
  goog.array.forEach(networkUrlAttributes, function(attribute) {
    installPolicy(this.attributeWhitelist_, this.attributeOverrideList_, attribute, networkRequestUrlPolicy);
  }, this);
  var nameAttributes = ["* FOR", "* HEADERS", "* NAME"];
  goog.array.forEach(nameAttributes, function(attribute) {
    installPolicy(this.attributeWhitelist_, this.attributeOverrideList_, attribute, goog.partial(goog.html.sanitizer.HtmlSanitizer.sanitizeName_, this.namePolicy_));
  }, this);
  installPolicy(this.attributeWhitelist_, this.attributeOverrideList_, "A TARGET", goog.partial(goog.html.sanitizer.HtmlSanitizer.allowedAttributeValues_, ["_blank", "_self"]));
  installPolicy(this.attributeWhitelist_, this.attributeOverrideList_, "* CLASS", goog.partial(goog.html.sanitizer.HtmlSanitizer.sanitizeClasses_, this.tokenPolicy_));
  installPolicy(this.attributeWhitelist_, this.attributeOverrideList_, "* ID", goog.partial(goog.html.sanitizer.HtmlSanitizer.sanitizeId_, this.tokenPolicy_));
  this.sanitizeCssPolicy_ ? installPolicy(this.attributeWhitelist_, this.attributeOverrideList_, "* STYLE", goog.partial(this.sanitizeCssPolicy_, networkRequestUrlPolicy)) : installPolicy(this.attributeWhitelist_, this.attributeOverrideList_, "* STYLE", goog.functions.NULL);
  this.policiesInstalled_ = !0;
};
goog.html.sanitizer.HtmlSanitizer.defaultUrlPolicy_ = goog.html.SafeUrl.sanitize;
goog.html.sanitizer.HtmlSanitizer.defaultNetworkRequestUrlPolicy_ = goog.functions.NULL;
goog.html.sanitizer.HtmlSanitizer.defaultNamePolicy_ = goog.functions.NULL;
goog.html.sanitizer.HtmlSanitizer.defaultTokenPolicy_ = goog.functions.NULL;
goog.html.sanitizer.HtmlSanitizer.attrIdentifier_ = function(nodeName, attributeName) {
  nodeName || (nodeName = "*");
  return (nodeName + " " + attributeName).toUpperCase();
};
goog.html.sanitizer.HtmlSanitizer.sanitizeCssBlock_ = function(policySanitizeUrl, attrValue, policyHints, policyContext) {
  if (!policyContext.cssStyle) {
    return null;
  }
  var naiveUriRewriter = function(uri, prop) {
    policyHints.cssProperty = prop;
    return goog.html.uncheckedconversions.safeUrlFromStringKnownToSatisfyTypeContract(goog.string.Const.from("HtmlSanitizerPolicy created with networkRequestUrlPolicy_ when installing '* STYLE' handler."), policySanitizeUrl(uri, policyHints) || "");
  };
  var sanitizedStyle = goog.html.SafeStyle.unwrap(goog.html.sanitizer.CssSanitizer.sanitizeInlineStyle(policyContext.cssStyle, naiveUriRewriter));
  return "" == sanitizedStyle ? null : sanitizedStyle;
};
goog.html.sanitizer.HtmlSanitizer.cleanUpAttribute_ = function(attrValue) {
  return goog.string.trim(attrValue);
};
goog.html.sanitizer.HtmlSanitizer.allowedAttributeValues_ = function(allowedValues, attrValue) {
  var trimmed = goog.string.trim(attrValue);
  return goog.array.contains(allowedValues, trimmed.toLowerCase()) ? trimmed : null;
};
goog.html.sanitizer.HtmlSanitizer.sanitizeUrlFragment_ = function(urlFragment) {
  var trimmed = goog.string.trim(urlFragment);
  return trimmed && "#" == trimmed.charAt(0) ? trimmed : null;
};
goog.html.sanitizer.HtmlSanitizer.sanitizeName_ = function(namePolicy, attrName, policyHints) {
  var trimmed = goog.string.trim(attrName);
  return namePolicy(trimmed, policyHints);
};
goog.html.sanitizer.HtmlSanitizer.sanitizeClasses_ = function(tokenPolicy, attrValue, policyHints) {
  var classes = attrValue.split(/(?:\s+)/);
  var sanitizedClasses = [];
  for (var i = 0; i < classes.length; i++) {
    var sanitizedClass = tokenPolicy(classes[i], policyHints);
    sanitizedClass && sanitizedClasses.push(sanitizedClass);
  }
  return 0 == sanitizedClasses.length ? null : sanitizedClasses.join(" ");
};
goog.html.sanitizer.HtmlSanitizer.sanitizeId_ = function(tokenPolicy, attrValue, policyHints) {
  var trimmed = goog.string.trim(attrValue);
  return tokenPolicy(trimmed, policyHints);
};
goog.html.sanitizer.HtmlSanitizer.getDomTreeWalker_ = function(unsanitizedHtml) {
  var templateElement = document.createElement("template");
  if ("content" in templateElement) {
    templateElement.innerHTML = unsanitizedHtml;
    var iteratorParent = templateElement.content;
  } else {
    var doc = document.implementation.createHTMLDocument("x");
    iteratorParent = doc.body;
    doc.body.innerHTML = unsanitizedHtml;
  }
  return document.createTreeWalker(iteratorParent, NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_TEXT, null, !1);
};
goog.html.sanitizer.HtmlSanitizer.getAttributes_ = function(node) {
  var attrDescriptor = goog.html.sanitizer.HTML_SANITIZER_PROPERTY_DESCRIPTORS_.attributes;
  return attrDescriptor && attrDescriptor.get ? attrDescriptor.get.apply(node) : node.attributes instanceof NamedNodeMap ? node.attributes : null;
};
goog.html.sanitizer.HtmlSanitizer.getAttribute_ = function(node, attrName) {
  var protoFn = Element.prototype.getAttribute;
  if (protoFn && node instanceof Element) {
    var ret = protoFn.call(node, attrName);
    return ret || "";
  }
  return "";
};
goog.html.sanitizer.HtmlSanitizer.setAttribute_ = function(node, name, value) {
  var attrDescriptor = goog.html.sanitizer.HTML_SANITIZER_PROPERTY_DESCRIPTORS_.setAttribute;
  if (attrDescriptor && attrDescriptor.value) {
    try {
      attrDescriptor.value.call(node, name, value);
    } catch (e) {
      if (-1 == e.message.indexOf("A security problem occurred")) {
        throw e;
      }
    }
  }
};
goog.html.sanitizer.HtmlSanitizer.getInnerHTML_ = function(node) {
  var descriptor = goog.html.sanitizer.HTML_SANITIZER_PROPERTY_DESCRIPTORS_.innerHTML;
  return descriptor && descriptor.get ? descriptor.get.apply(node) : "string" == typeof node.innerHTML ? node.innerHTML : "";
};
goog.html.sanitizer.HtmlSanitizer.getStyle_ = function(node) {
  var styleDescriptor = goog.html.sanitizer.HTML_SANITIZER_PROPERTY_DESCRIPTORS_.style;
  return node instanceof HTMLElement && styleDescriptor && styleDescriptor.get ? styleDescriptor.get.apply(node) : node.style instanceof CSSStyleDeclaration ? node.style : null;
};
goog.html.sanitizer.HtmlSanitizer.getNodeName_ = function(node) {
  var nodeNameDescriptor = goog.html.sanitizer.HTML_SANITIZER_PROPERTY_DESCRIPTORS_.nodeName;
  return nodeNameDescriptor && nodeNameDescriptor.get ? nodeNameDescriptor.get.apply(node) : "string" == typeof node.nodeName ? node.nodeName : "unknown";
};
goog.html.sanitizer.HtmlSanitizer.getParentNode_ = function(node) {
  if (null == node) {
    return null;
  }
  var parentNodeDescriptor = goog.html.sanitizer.HTML_SANITIZER_PROPERTY_DESCRIPTORS_.parentNode;
  if (parentNodeDescriptor && parentNodeDescriptor.get) {
    return parentNodeDescriptor.get.apply(node);
  }
  var parentNode = node.parentNode;
  return parentNode && parentNode.name && "string" == typeof parentNode.name && "parentnode" == parentNode.name.toLowerCase() ? null : parentNode;
};
goog.html.sanitizer.HtmlSanitizer.getChildNodes_ = function(node) {
  var descriptor = goog.html.sanitizer.HTML_SANITIZER_PROPERTY_DESCRIPTORS_.childNodes;
  return goog.dom.isElement(node) && descriptor && descriptor.get ? descriptor.get.apply(node) : node.childNodes instanceof NodeList ? node.childNodes : null;
};
goog.html.sanitizer.HtmlSanitizer.prototype.sanitize = function(unsanitizedHtml) {
  var sanitizedParent = this.sanitizeToDomNode(unsanitizedHtml);
  var sanitizedString = (new XMLSerializer).serializeToString(sanitizedParent);
  goog.string.startsWith(sanitizedString, "<span") && (goog.string.endsWith(sanitizedString, "</span>") ? sanitizedString = sanitizedString.slice(sanitizedString.indexOf(">") + 1, -7) : goog.string.endsWith(sanitizedString, "/>") && (sanitizedString = ""));
  return goog.html.uncheckedconversions.safeHtmlFromStringKnownToSatisfyTypeContract(goog.string.Const.from("Output of HTML sanitizer"), sanitizedString);
};
goog.html.sanitizer.HtmlSanitizer.prototype.sanitizeToDomNode = function(unsanitizedHtml) {
  var sanitizedParent = document.createElement("span");
  if (!goog.html.sanitizer.HTML_SANITIZER_SUPPORTED_ || !unsanitizedHtml) {
    return sanitizedParent;
  }
  try {
    var treeWalker = goog.html.sanitizer.HtmlSanitizer.getDomTreeWalker_(unsanitizedHtml);
  } catch (e) {
    return sanitizedParent;
  }
  var elementMap = {};
  var elemNum = 0;
  for (var dirtyNode; dirtyNode = treeWalker.nextNode();) {
    elemNum++;
    var cleanNode = this.sanitizeElement_(dirtyNode);
    cleanNode.nodeType != goog.dom.NodeType.TEXT && (this.sanitizeAttrs_(dirtyNode, cleanNode), elementMap[elemNum] = cleanNode, goog.html.sanitizer.HtmlSanitizer.setAttribute_(dirtyNode, goog.html.sanitizer.HTML_SANITIZER_BOOKKEEPING_ATTR_NAME_, String(elemNum)));
    var dirtyNodeName = goog.html.sanitizer.HtmlSanitizer.getNodeName_(dirtyNode);
    goog.html.sanitizer.HTML_SANITIZER_TEMPLATE_SUPPORTED && "template" === dirtyNodeName.toLowerCase() && !cleanNode.hasAttribute(goog.html.sanitizer.HTML_SANITIZER_BLACKLISTED_TAG_) && this.processTemplateContents_(dirtyNode, cleanNode);
    var dirtyParent = goog.html.sanitizer.HtmlSanitizer.getParentNode_(dirtyNode);
    var isSanitizedParent = !1;
    if (goog.isNull(dirtyParent)) {
      isSanitizedParent = !0;
    } else {
      if ("body" == goog.html.sanitizer.HtmlSanitizer.getNodeName_(dirtyParent).toLowerCase() || dirtyParent.nodeType == goog.dom.NodeType.DOCUMENT_FRAGMENT) {
        var dirtyGrandParent = goog.html.sanitizer.HtmlSanitizer.getParentNode_(dirtyParent);
        if (dirtyParent.nodeType == goog.dom.NodeType.DOCUMENT_FRAGMENT && goog.isNull(dirtyGrandParent)) {
          isSanitizedParent = !0;
        } else {
          if ("body" == goog.html.sanitizer.HtmlSanitizer.getNodeName_(dirtyParent).toLowerCase()) {
            var dirtyGrtGrandParent = goog.html.sanitizer.HtmlSanitizer.getParentNode_(dirtyGrandParent);
            goog.isNull(goog.html.sanitizer.HtmlSanitizer.getParentNode_(dirtyGrtGrandParent)) && (isSanitizedParent = !0);
          }
        }
      }
    }
    var target = isSanitizedParent || !dirtyParent ? sanitizedParent : elementMap[goog.html.sanitizer.HtmlSanitizer.getAttribute_(dirtyParent, goog.html.sanitizer.HTML_SANITIZER_BOOKKEEPING_ATTR_NAME_)];
    target.content && (target = target.content);
    goog.dom.isElement(cleanNode) && cleanNode.hasAttribute(goog.html.sanitizer.HTML_SANITIZER_BLACKLISTED_TAG_) || target.appendChild(cleanNode);
  }
  return sanitizedParent;
};
goog.html.sanitizer.HtmlSanitizer.prototype.sanitizeElement_ = function(dirtyNode) {
  if (dirtyNode.nodeType == goog.dom.NodeType.TEXT) {
    return document.createTextNode(dirtyNode.data);
  }
  var elemName = goog.html.sanitizer.HtmlSanitizer.getNodeName_(dirtyNode).toUpperCase();
  var sanitized = !1;
  var blacklisted = !1;
  if (elemName in this.tagBlacklist_) {
    var cleanElemName = "template";
    blacklisted = !0;
  } else {
    this.tagWhitelist_[elemName] ? cleanElemName = elemName : (cleanElemName = "span", sanitized = !0);
  }
  var cleanElem = document.createElement(cleanElemName);
  this.shouldAddOriginalTagNames_ && sanitized && goog.html.sanitizer.HtmlSanitizer.setAttribute_(cleanElem, goog.html.sanitizer.HTML_SANITIZER_SANITIZED_ATTR_NAME_, elemName.toLowerCase());
  blacklisted && goog.html.sanitizer.HtmlSanitizer.setAttribute_(cleanElem, goog.html.sanitizer.HTML_SANITIZER_BLACKLISTED_TAG_, "");
  return cleanElem;
};
goog.html.sanitizer.HtmlSanitizer.prototype.sanitizeAttrs_ = function(dirtyNode, cleanNode) {
  var attributes = goog.html.sanitizer.HtmlSanitizer.getAttributes_(dirtyNode);
  if (null == attributes) {
    return cleanNode;
  }
  var i = 0;
  for (var attribute; attribute = attributes[i]; i++) {
    if (attribute.specified) {
      var cleanValue = this.sanitizeAttribute_(dirtyNode, attribute);
      goog.isNull(cleanValue) || goog.html.sanitizer.HtmlSanitizer.setAttribute_(cleanNode, attribute.name, cleanValue);
    }
  }
  return cleanNode;
};
goog.html.sanitizer.HtmlSanitizer.prototype.sanitizeAttribute_ = function(dirtyNode, attribute) {
  var attributeName = attribute.name;
  if (goog.string.startsWith(attributeName, goog.html.sanitizer.HTML_SANITIZER_BOOKKEEPING_PREFIX_)) {
    return null;
  }
  var nodeName = goog.html.sanitizer.HtmlSanitizer.getNodeName_(dirtyNode);
  var unsanitizedAttrValue = attribute.value;
  var policyHints = {tagName:goog.string.trim(nodeName).toLowerCase(), attributeName:goog.string.trim(attributeName).toLowerCase()};
  var policyContext = goog.html.sanitizer.HtmlSanitizer.getContext_(policyHints.attributeName, dirtyNode);
  var tagHandlerIndex = goog.html.sanitizer.HtmlSanitizer.attrIdentifier_(nodeName, attributeName);
  if (tagHandlerIndex in this.attributeHandlers_) {
    var handler = this.attributeHandlers_[tagHandlerIndex];
    return handler(unsanitizedAttrValue, policyHints, policyContext);
  }
  var genericHandlerIndex = goog.html.sanitizer.HtmlSanitizer.attrIdentifier_(null, attributeName);
  return genericHandlerIndex in this.attributeHandlers_ ? (handler = this.attributeHandlers_[genericHandlerIndex], handler(unsanitizedAttrValue, policyHints, policyContext)) : null;
};
goog.html.sanitizer.HtmlSanitizer.prototype.processTemplateContents_ = function(dirtyNode, cleanNode) {
  if (this.shouldSanitizeTemplateContents_ || "template" !== cleanNode.nodeName.toLowerCase()) {
    var dirtyNodeHTML = goog.html.sanitizer.HtmlSanitizer.getInnerHTML_(dirtyNode);
    var templateSpan = this.sanitizeToDomNode(dirtyNodeHTML);
    goog.array.forEach(templateSpan.childNodes, function(node) {
      cleanNode.appendChild(node);
    });
  } else {
    var templateDoc = cleanNode.content.ownerDocument;
    var dirtyCopy = goog.asserts.assert(templateDoc.importNode(dirtyNode, !0));
    var dirtyCopyChildren = goog.html.sanitizer.HtmlSanitizer.getChildNodes_(dirtyCopy);
    goog.array.forEach(dirtyCopyChildren, function(node) {
      cleanNode.appendChild(node);
    });
  }
};
goog.html.sanitizer.HtmlSanitizer.getContext_ = function(attributeName, dirtyNode) {
  var policyContext = {cssStyle:void 0};
  "style" == attributeName && (policyContext.cssStyle = goog.html.sanitizer.HtmlSanitizer.getStyle_(dirtyNode));
  return policyContext;
};
goog.html.sanitizer.HtmlSanitizer.sanitize = function(unsanitizedHtml) {
  var sanitizer = (new goog.html.sanitizer.HtmlSanitizer.Builder).build();
  return sanitizer.sanitize(unsanitizedHtml);
};
goog.i18n.CompactNumberFormatSymbols_af = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0"}, 1E4:{other:"0"}, 1E5:{other:"0"}, 1E6:{other:"0\u00a0m"}, 1E7:{other:"00\u00a0m"}, 1E8:{other:"000\u00a0m"}, 1E9:{other:"0\u00a0mjd"}, 1E10:{other:"00\u00a0mjd"}, 1E11:{other:"000\u00a0mjd"}, 1E12:{other:"0\u00a0bn"}, 1E13:{other:"00\u00a0bn"}, 1E14:{other:"000\u00a0bn"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 duisend"}, 1E4:{other:"00 duisend"}, 1E5:{other:"000 duisend"}, 1E6:{other:"0 miljoen"}, 1E7:{other:"00 miljoen"}, 
1E8:{other:"000 miljoen"}, 1E9:{other:"0 miljard"}, 1E10:{other:"00 miljard"}, 1E11:{other:"000 miljard"}, 1E12:{other:"0 biljoen"}, 1E13:{other:"00 biljoen"}, 1E14:{other:"000 biljoen"}}};
goog.i18n.CompactNumberFormatSymbols_am = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0\u123a"}, 1E4:{other:"00\u00a0\u123a"}, 1E5:{other:"000\u00a0\u123a"}, 1E6:{other:"0\u00a0\u121c\u1275\u122d"}, 1E7:{other:"00\u00a0\u121c\u1275\u122d"}, 1E8:{other:"000\u121c"}, 1E9:{other:"0\u00a0\u1262"}, 1E10:{other:"00\u00a0\u1262"}, 1E11:{other:"000\u00a0\u1262"}, 1E12:{other:"0\u00a0\u1275"}, 1E13:{other:"00\u00a0\u1275"}, 1E14:{other:"000\u00a0\u1275"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 \u123a"}, 
1E4:{other:"00 \u123a"}, 1E5:{other:"000 \u123a"}, 1E6:{other:"0 \u121a\u120a\u12ee\u1295"}, 1E7:{other:"00 \u121a\u120a\u12ee\u1295"}, 1E8:{other:"000 \u121a\u120a\u12ee\u1295"}, 1E9:{other:"0 \u1262\u120a\u12ee\u1295"}, 1E10:{other:"00 \u1262\u120a\u12ee\u1295"}, 1E11:{other:"000 \u1262\u120a\u12ee\u1295"}, 1E12:{other:"0 \u1275\u122a\u120a\u12ee\u1295"}, 1E13:{other:"00 \u1275\u122a\u120a\u12ee\u1295"}, 1E14:{other:"000 \u1275\u122a\u120a\u12ee\u1295"}}};
goog.i18n.CompactNumberFormatSymbols_ar = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0\u0623\u0644\u0641"}, 1E4:{other:"00\u00a0\u0623\u0644\u0641"}, 1E5:{other:"000\u00a0\u0623\u0644\u0641"}, 1E6:{other:"0\u00a0\u0645\u0644\u064a\u0648"}, 1E7:{other:"00\u00a0\u0645\u0644\u064a\u0648"}, 1E8:{other:"000\u00a0\u0645\u0644\u064a\u0648"}, 1E9:{other:"0\u00a0\u0645\u0644\u064a\u0627"}, 1E10:{other:"00\u00a0\u0645\u0644\u064a\u0627"}, 1E11:{other:"000\u00a0\u0645\u0644\u064a\u0627"}, 1E12:{other:"0\u00a0\u062a\u0631\u0644\u064a\u0648"}, 
1E13:{other:"00\u00a0\u062a\u0631\u0644\u064a\u0648"}, 1E14:{other:"000\u00a0\u062a\u0631\u0644\u064a\u0648"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 \u0623\u0644\u0641"}, 1E4:{other:"00 \u0623\u0644\u0641"}, 1E5:{other:"000 \u0623\u0644\u0641"}, 1E6:{other:"0 \u0645\u0644\u064a\u0648\u0646"}, 1E7:{other:"00 \u0645\u0644\u064a\u0648\u0646"}, 1E8:{other:"000 \u0645\u0644\u064a\u0648\u0646"}, 1E9:{other:"0 \u0645\u0644\u064a\u0627\u0631"}, 1E10:{other:"00 \u0645\u0644\u064a\u0627\u0631"}, 1E11:{other:"000 \u0645\u0644\u064a\u0627\u0631"}, 
1E12:{other:"0 \u062a\u0631\u064a\u0644\u064a\u0648\u0646"}, 1E13:{other:"00 \u062a\u0631\u064a\u0644\u064a\u0648\u0646"}, 1E14:{other:"000 \u062a\u0631\u064a\u0644\u064a\u0648\u0646"}}};
goog.i18n.CompactNumberFormatSymbols_ar_DZ = goog.i18n.CompactNumberFormatSymbols_ar;
goog.i18n.CompactNumberFormatSymbols_az = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0K"}, 1E4:{other:"00K"}, 1E5:{other:"000K"}, 1E6:{other:"0M"}, 1E7:{other:"00M"}, 1E8:{other:"000M"}, 1E9:{other:"0G"}, 1E10:{other:"00G"}, 1E11:{other:"000G"}, 1E12:{other:"0T"}, 1E13:{other:"00T"}, 1E14:{other:"000T"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0K"}, 1E4:{other:"00K"}, 1E5:{other:"000K"}, 1E6:{other:"0M"}, 1E7:{other:"00M"}, 1E8:{other:"000M"}, 1E9:{other:"0G"}, 1E10:{other:"00G"}, 1E11:{other:"000G"}, 
1E12:{other:"0T"}, 1E13:{other:"00T"}, 1E14:{other:"000T"}}};
goog.i18n.CompactNumberFormatSymbols_be = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0\u0442\u044b\u0441."}, 1E4:{other:"00\u00a0\u0442\u044b\u0441."}, 1E5:{other:"000\u00a0\u0442\u044b\u0441."}, 1E6:{other:"0\u00a0\u043c\u043b\u043d"}, 1E7:{other:"00\u00a0\u043c\u043b\u043d"}, 1E8:{other:"000\u00a0\u043c\u043b\u043d"}, 1E9:{other:"0\u00a0\u043c\u043b\u0440\u0434"}, 1E10:{other:"00\u00a0\u043c\u043b\u0440\u0434"}, 1E11:{other:"000\u00a0\u043c\u043b\u0440\u0434"}, 1E12:{other:"0\u00a0\u0442\u0440\u043b\u043d"}, 
1E13:{other:"00\u00a0\u0442\u0440\u043b\u043d"}, 1E14:{other:"000\u00a0\u0442\u0440\u043b\u043d"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 \u0442\u044b\u0441\u044f\u0447\u044b"}, 1E4:{other:"00 \u0442\u044b\u0441\u044f\u0447\u044b"}, 1E5:{other:"000 \u0442\u044b\u0441\u044f\u0447\u044b"}, 1E6:{other:"0 \u043c\u0456\u043b\u044c\u0451\u043d\u0430"}, 1E7:{other:"00 \u043c\u0456\u043b\u044c\u0451\u043d\u0430"}, 1E8:{other:"000 \u043c\u0456\u043b\u044c\u0451\u043d\u0430"}, 1E9:{other:"0 \u043c\u0456\u043b\u044c\u044f\u0440\u0434\u0430"}, 
1E10:{other:"00 \u043c\u0456\u043b\u044c\u044f\u0440\u0434\u0430"}, 1E11:{other:"000 \u043c\u0456\u043b\u044c\u044f\u0440\u0434\u0430"}, 1E12:{other:"0 \u0442\u0440\u044b\u043b\u044c\u0451\u043d\u0430"}, 1E13:{other:"00 \u0442\u0440\u044b\u043b\u044c\u0451\u043d\u0430"}, 1E14:{other:"000 \u0442\u0440\u044b\u043b\u044c\u0451\u043d\u0430"}}};
goog.i18n.CompactNumberFormatSymbols_bg = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0\u0445\u0438\u043b."}, 1E4:{other:"00\u00a0\u0445\u0438\u043b."}, 1E5:{other:"000\u00a0\u0445\u0438\u043b."}, 1E6:{other:"0\u00a0\u043c\u043b\u043d."}, 1E7:{other:"00\u00a0\u043c\u043b\u043d."}, 1E8:{other:"000\u00a0\u043c\u043b\u043d"}, 1E9:{other:"0\u00a0\u043c\u043b\u0440\u0434."}, 1E10:{other:"00\u00a0\u043c\u043b\u0440\u0434."}, 1E11:{other:"000\u00a0\u043c\u043b\u0440\u0434."}, 1E12:{other:"0\u00a0\u0442\u0440\u043b\u043d."}, 
1E13:{other:"00\u00a0\u0442\u0440\u043b\u043d."}, 1E14:{other:"000\u00a0\u0442\u0440\u043b\u043d."}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 \u0445\u0438\u043b\u044f\u0434\u0438"}, 1E4:{other:"00 \u0445\u0438\u043b\u044f\u0434\u0438"}, 1E5:{other:"000 \u0445\u0438\u043b\u044f\u0434\u0438"}, 1E6:{other:"0 \u043c\u0438\u043b\u0438\u043e\u043d\u0430"}, 1E7:{other:"00 \u043c\u0438\u043b\u0438\u043e\u043d\u0430"}, 1E8:{other:"000 \u043c\u0438\u043b\u0438\u043e\u043d\u0430"}, 1E9:{other:"0 \u043c\u0438\u043b\u0438\u0430\u0440\u0434\u0430"}, 
1E10:{other:"00 \u043c\u0438\u043b\u0438\u0430\u0440\u0434\u0430"}, 1E11:{other:"000 \u043c\u0438\u043b\u0438\u0430\u0440\u0434\u0430"}, 1E12:{other:"0 \u0442\u0440\u0438\u043b\u0438\u043e\u043d\u0430"}, 1E13:{other:"00 \u0442\u0440\u0438\u043b\u0438\u043e\u043d\u0430"}, 1E14:{other:"000 \u0442\u0440\u0438\u043b\u0438\u043e\u043d\u0430"}}};
goog.i18n.CompactNumberFormatSymbols_bn = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0\u09b9\u09be\u099c\u09be\u09b0"}, 1E4:{other:"00\u00a0\u09b9\u09be\u099c\u09be\u09b0"}, 1E5:{other:"0\u00a0\u09b2\u09be\u0996"}, 1E6:{other:"0M"}, 1E7:{other:"00M"}, 1E8:{other:"000M"}, 1E9:{other:"0B"}, 1E10:{other:"00B"}, 1E11:{other:"000B"}, 1E12:{other:"0T"}, 1E13:{other:"00T"}, 1E14:{other:"000T"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 \u09b9\u09be\u099c\u09be\u09b0"}, 1E4:{other:"00 \u09b9\u09be\u099c\u09be\u09b0"}, 
1E5:{other:"0 \u09b2\u09be\u0996"}, 1E6:{other:"0 \u09ae\u09bf\u09b2\u09bf\u09af\u09bc\u09a8"}, 1E7:{other:"00 \u09ae\u09bf\u09b2\u09bf\u09af\u09bc\u09a8"}, 1E8:{other:"000 \u09ae\u09bf\u09b2\u09bf\u09af\u09bc\u09a8"}, 1E9:{other:"0 \u09ac\u09bf\u09b2\u09bf\u09af\u09bc\u09a8"}, 1E10:{other:"00 \u09ac\u09bf\u09b2\u09bf\u09af\u09bc\u09a8"}, 1E11:{other:"000 \u09ac\u09bf\u09b2\u09bf\u09af\u09bc\u09a8"}, 1E12:{other:"0 \u099f\u09cd\u09b0\u09bf\u09b2\u09bf\u09af\u09bc\u09a8"}, 1E13:{other:"00 \u099f\u09cd\u09b0\u09bf\u09b2\u09bf\u09af\u09bc\u09a8"}, 
1E14:{other:"000 \u099f\u09cd\u09b0\u09bf\u09b2\u09bf\u09af\u09bc\u09a8"}}};
goog.i18n.CompactNumberFormatSymbols_br = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0K"}, 1E4:{other:"00K"}, 1E5:{other:"000K"}, 1E6:{other:"0M"}, 1E7:{other:"00M"}, 1E8:{other:"000M"}, 1E9:{other:"0G"}, 1E10:{other:"00G"}, 1E11:{other:"000G"}, 1E12:{other:"0T"}, 1E13:{other:"00T"}, 1E14:{other:"000T"}}};
goog.i18n.CompactNumberFormatSymbols_bs = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0hilj."}, 1E4:{other:"00\u00a0hilj."}, 1E5:{other:"000\u00a0hilj."}, 1E6:{other:"0\u00a0mil."}, 1E7:{other:"00\u00a0mil."}, 1E8:{other:"000\u00a0mil."}, 1E9:{other:"0\u00a0mlr."}, 1E10:{other:"00\u00a0mlr."}, 1E11:{other:"000\u00a0mlr."}, 1E12:{other:"0\u00a0bil."}, 1E13:{other:"00\u00a0bil."}, 1E14:{other:"000\u00a0bil."}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 hiljada"}, 1E4:{other:"00 hiljada"}, 1E5:{other:"000 hiljada"}, 
1E6:{other:"0 miliona"}, 1E7:{other:"00 miliona"}, 1E8:{other:"000 miliona"}, 1E9:{other:"0 milijardi"}, 1E10:{other:"00 milijardi"}, 1E11:{other:"000 milijardi"}, 1E12:{other:"0 biliona"}, 1E13:{other:"00 biliona"}, 1E14:{other:"000 biliona"}}};
goog.i18n.CompactNumberFormatSymbols_ca = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0m"}, 1E4:{other:"00m"}, 1E5:{other:"000m"}, 1E6:{other:"0M"}, 1E7:{other:"00\u00a0M"}, 1E8:{other:"000\u00a0M"}, 1E9:{other:"0000\u00a0M"}, 1E10:{other:"00mM"}, 1E11:{other:"000mM"}, 1E12:{other:"0B"}, 1E13:{other:"00\u00a0B"}, 1E14:{other:"000\u00a0B"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 milers"}, 1E4:{other:"00 milers"}, 1E5:{other:"000 milers"}, 1E6:{other:"0 milions"}, 1E7:{other:"00 milions"}, 1E8:{other:"000 milions"}, 
1E9:{other:"0 milers de milions"}, 1E10:{other:"00 milers de milions"}, 1E11:{other:"000 milers de milions"}, 1E12:{other:"0 bilions"}, 1E13:{other:"00 bilions"}, 1E14:{other:"000 bilions"}}};
goog.i18n.CompactNumberFormatSymbols_chr = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0K"}, 1E4:{other:"00K"}, 1E5:{other:"000K"}, 1E6:{other:"0M"}, 1E7:{other:"00M"}, 1E8:{other:"000M"}, 1E9:{other:"0B"}, 1E10:{other:"00B"}, 1E11:{other:"000B"}, 1E12:{other:"0T"}, 1E13:{other:"00T"}, 1E14:{other:"000T"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 \u13a2\u13ef\u13a6\u13f4\u13b5"}, 1E4:{other:"00 \u13a2\u13ef\u13a6\u13f4\u13b5"}, 1E5:{other:"000 \u13a2\u13ef\u13a6\u13f4\u13b5"}, 1E6:{other:"0 \u13a2\u13f3\u13c6\u13d7\u13c5\u13db"}, 
1E7:{other:"00 \u13a2\u13f3\u13c6\u13d7\u13c5\u13db"}, 1E8:{other:"000 \u13a2\u13f3\u13c6\u13d7\u13c5\u13db"}, 1E9:{other:"0 \u13a2\u13ef\u13d4\u13b3\u13d7\u13c5\u13db"}, 1E10:{other:"00 \u13a2\u13ef\u13d4\u13b3\u13d7\u13c5\u13db"}, 1E11:{other:"000 \u13a2\u13ef\u13d4\u13b3\u13d7\u13c5\u13db"}, 1E12:{other:"0 \u13a2\u13ef\u13e6\u13a0\u13d7\u13c5\u13db"}, 1E13:{other:"00 \u13a2\u13ef\u13e6\u13a0\u13d7\u13c5\u13db"}, 1E14:{other:"000 \u13a2\u13ef\u13e6\u13a0\u13d7\u13c5\u13db"}}};
goog.i18n.CompactNumberFormatSymbols_cs = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0tis."}, 1E4:{other:"00\u00a0tis."}, 1E5:{other:"000\u00a0tis."}, 1E6:{other:"0\u00a0mil."}, 1E7:{other:"00\u00a0mil."}, 1E8:{other:"000\u00a0mil."}, 1E9:{other:"0\u00a0mld."}, 1E10:{other:"00\u00a0mld."}, 1E11:{other:"000\u00a0mld."}, 1E12:{other:"0\u00a0bil."}, 1E13:{other:"00\u00a0bil."}, 1E14:{other:"000\u00a0bil."}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 tis\u00edc"}, 1E4:{other:"00 tis\u00edc"}, 
1E5:{other:"000 tis\u00edc"}, 1E6:{other:"0 milion\u016f"}, 1E7:{other:"00 milion\u016f"}, 1E8:{other:"000 milion\u016f"}, 1E9:{other:"0 miliard"}, 1E10:{other:"00 miliard"}, 1E11:{other:"000 miliard"}, 1E12:{other:"0 bilion\u016f"}, 1E13:{other:"00 bilion\u016f"}, 1E14:{other:"000 bilion\u016f"}}};
goog.i18n.CompactNumberFormatSymbols_cy = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0K"}, 1E4:{other:"00K"}, 1E5:{other:"000K"}, 1E6:{other:"0M"}, 1E7:{other:"00M"}, 1E8:{other:"000M"}, 1E9:{other:"0B"}, 1E10:{other:"00B"}, 1E11:{other:"000B"}, 1E12:{other:"0T"}, 1E13:{other:"00T"}, 1E14:{other:"000T"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 mil"}, 1E4:{other:"00 mil"}, 1E5:{other:"000 mil"}, 1E6:{other:"0 miliwn"}, 1E7:{other:"00 miliwn"}, 1E8:{other:"000 miliwn"}, 1E9:{other:"0 biliwn"}, 
1E10:{other:"00 biliwn"}, 1E11:{other:"000 biliwn"}, 1E12:{other:"0 triliwn"}, 1E13:{other:"00 triliwn"}, 1E14:{other:"000 triliwn"}}};
goog.i18n.CompactNumberFormatSymbols_da = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0td"}, 1E4:{other:"00\u00a0td"}, 1E5:{other:"000\u00a0td"}, 1E6:{other:"0\u00a0mio"}, 1E7:{other:"00\u00a0mio"}, 1E8:{other:"000\u00a0mio"}, 1E9:{other:"0\u00a0mia"}, 1E10:{other:"00\u00a0mia"}, 1E11:{other:"000\u00a0mia"}, 1E12:{other:"0\u00a0bio"}, 1E13:{other:"00\u00a0bio"}, 1E14:{other:"000\u00a0bio"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 tusind"}, 1E4:{other:"00 tusind"}, 1E5:{other:"000 tusind"}, 
1E6:{other:"0 millioner"}, 1E7:{other:"00 millioner"}, 1E8:{other:"000 millioner"}, 1E9:{other:"0 milliarder"}, 1E10:{other:"00 milliarder"}, 1E11:{other:"000 milliarder"}, 1E12:{other:"0 billioner"}, 1E13:{other:"00 billioner"}, 1E14:{other:"000 billioner"}}};
goog.i18n.CompactNumberFormatSymbols_de = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0"}, 1E4:{other:"0"}, 1E5:{other:"0"}, 1E6:{other:"0\u00a0Mio."}, 1E7:{other:"00\u00a0Mio."}, 1E8:{other:"000\u00a0Mio."}, 1E9:{other:"0\u00a0Mrd."}, 1E10:{other:"00\u00a0Mrd."}, 1E11:{other:"000\u00a0Mrd."}, 1E12:{other:"0\u00a0Bio."}, 1E13:{other:"00\u00a0Bio."}, 1E14:{other:"000\u00a0Bio."}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 Tausend"}, 1E4:{other:"00 Tausend"}, 1E5:{other:"000 Tausend"}, 1E6:{other:"0 Millionen"}, 
1E7:{other:"00 Millionen"}, 1E8:{other:"000 Millionen"}, 1E9:{other:"0 Milliarden"}, 1E10:{other:"00 Milliarden"}, 1E11:{other:"000 Milliarden"}, 1E12:{other:"0 Billionen"}, 1E13:{other:"00 Billionen"}, 1E14:{other:"000 Billionen"}}};
goog.i18n.CompactNumberFormatSymbols_de_AT = goog.i18n.CompactNumberFormatSymbols_de;
goog.i18n.CompactNumberFormatSymbols_de_CH = goog.i18n.CompactNumberFormatSymbols_de;
goog.i18n.CompactNumberFormatSymbols_el = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0\u03c7\u03b9\u03bb."}, 1E4:{other:"00\u00a0\u03c7\u03b9\u03bb."}, 1E5:{other:"000\u00a0\u03c7\u03b9\u03bb."}, 1E6:{other:"0\u00a0\u03b5\u03ba."}, 1E7:{other:"00\u00a0\u03b5\u03ba."}, 1E8:{other:"000\u00a0\u03b5\u03ba."}, 1E9:{other:"0\u00a0\u03b4\u03b9\u03c3."}, 1E10:{other:"00\u00a0\u03b4\u03b9\u03c3."}, 1E11:{other:"000\u00a0\u03b4\u03b9\u03c3."}, 1E12:{other:"0\u00a0\u03c4\u03c1\u03b9\u03c3."}, 1E13:{other:"00\u00a0\u03c4\u03c1\u03b9\u03c3."}, 
1E14:{other:"000\u00a0\u03c4\u03c1\u03b9\u03c3."}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 \u03c7\u03b9\u03bb\u03b9\u03ac\u03b4\u03b5\u03c2"}, 1E4:{other:"00 \u03c7\u03b9\u03bb\u03b9\u03ac\u03b4\u03b5\u03c2"}, 1E5:{other:"000 \u03c7\u03b9\u03bb\u03b9\u03ac\u03b4\u03b5\u03c2"}, 1E6:{other:"0 \u03b5\u03ba\u03b1\u03c4\u03bf\u03bc\u03bc\u03cd\u03c1\u03b9\u03b1"}, 1E7:{other:"00 \u03b5\u03ba\u03b1\u03c4\u03bf\u03bc\u03bc\u03cd\u03c1\u03b9\u03b1"}, 1E8:{other:"000 \u03b5\u03ba\u03b1\u03c4\u03bf\u03bc\u03bc\u03cd\u03c1\u03b9\u03b1"}, 
1E9:{other:"0 \u03b4\u03b9\u03c3\u03b5\u03ba\u03b1\u03c4\u03bf\u03bc\u03bc\u03cd\u03c1\u03b9\u03b1"}, 1E10:{other:"00 \u03b4\u03b9\u03c3\u03b5\u03ba\u03b1\u03c4\u03bf\u03bc\u03bc\u03cd\u03c1\u03b9\u03b1"}, 1E11:{other:"000 \u03b4\u03b9\u03c3\u03b5\u03ba\u03b1\u03c4\u03bf\u03bc\u03bc\u03cd\u03c1\u03b9\u03b1"}, 1E12:{other:"0 \u03c4\u03c1\u03b9\u03c3\u03b5\u03ba\u03b1\u03c4\u03bf\u03bc\u03bc\u03cd\u03c1\u03b9\u03b1"}, 1E13:{other:"00 \u03c4\u03c1\u03b9\u03c3\u03b5\u03ba\u03b1\u03c4\u03bf\u03bc\u03bc\u03cd\u03c1\u03b9\u03b1"}, 
1E14:{other:"000 \u03c4\u03c1\u03b9\u03c3\u03b5\u03ba\u03b1\u03c4\u03bf\u03bc\u03bc\u03cd\u03c1\u03b9\u03b1"}}};
goog.i18n.CompactNumberFormatSymbols_en = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0K"}, 1E4:{other:"00K"}, 1E5:{other:"000K"}, 1E6:{other:"0M"}, 1E7:{other:"00M"}, 1E8:{other:"000M"}, 1E9:{other:"0B"}, 1E10:{other:"00B"}, 1E11:{other:"000B"}, 1E12:{other:"0T"}, 1E13:{other:"00T"}, 1E14:{other:"000T"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 thousand"}, 1E4:{other:"00 thousand"}, 1E5:{other:"000 thousand"}, 1E6:{other:"0 million"}, 1E7:{other:"00 million"}, 1E8:{other:"000 million"}, 1E9:{other:"0 billion"}, 
1E10:{other:"00 billion"}, 1E11:{other:"000 billion"}, 1E12:{other:"0 trillion"}, 1E13:{other:"00 trillion"}, 1E14:{other:"000 trillion"}}};
goog.i18n.CompactNumberFormatSymbols_en_AU = goog.i18n.CompactNumberFormatSymbols_en;
goog.i18n.CompactNumberFormatSymbols_en_CA = goog.i18n.CompactNumberFormatSymbols_en;
goog.i18n.CompactNumberFormatSymbols_en_GB = goog.i18n.CompactNumberFormatSymbols_en;
goog.i18n.CompactNumberFormatSymbols_en_IE = goog.i18n.CompactNumberFormatSymbols_en;
goog.i18n.CompactNumberFormatSymbols_en_IN = goog.i18n.CompactNumberFormatSymbols_en;
goog.i18n.CompactNumberFormatSymbols_en_SG = goog.i18n.CompactNumberFormatSymbols_en;
goog.i18n.CompactNumberFormatSymbols_en_US = goog.i18n.CompactNumberFormatSymbols_en;
goog.i18n.CompactNumberFormatSymbols_en_ZA = goog.i18n.CompactNumberFormatSymbols_en;
goog.i18n.CompactNumberFormatSymbols_es = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0K"}, 1E4:{other:"00\u00a0K"}, 1E5:{other:"000\u00a0K"}, 1E6:{other:"0\u00a0M"}, 1E7:{other:"00\u00a0M"}, 1E8:{other:"000\u00a0M"}, 1E9:{other:"0000\u00a0M"}, 1E10:{other:"00\u00a0MRD"}, 1E11:{other:"000\u00a0MRD"}, 1E12:{other:"0\u00a0B"}, 1E13:{other:"00\u00a0B"}, 1E14:{other:"000\u00a0B"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 mil"}, 1E4:{other:"00 mil"}, 1E5:{other:"000 mil"}, 1E6:{other:"0 millones"}, 
1E7:{other:"00 millones"}, 1E8:{other:"000 millones"}, 1E9:{other:"0 mil millones"}, 1E10:{other:"00 mil millones"}, 1E11:{other:"000 mil millones"}, 1E12:{other:"0 billones"}, 1E13:{other:"00 billones"}, 1E14:{other:"000 billones"}}};
goog.i18n.CompactNumberFormatSymbols_es_419 = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0k"}, 1E4:{other:"00k"}, 1E5:{other:"000k"}, 1E9:{other:"0k\u00a0M"}, 1E10:{other:"00k\u00a0M"}, 1E11:{other:"000k\u00a0M"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 mil"}, 1E4:{other:"00 mil"}, 1E5:{other:"000 mil"}, 1E6:{other:"0 millones"}, 1E7:{other:"00 millones"}, 1E8:{other:"000 millones"}, 1E9:{other:"0 mil millones"}, 1E10:{other:"00 mil millones"}, 1E11:{other:"000 mil millones"}, 1E12:{other:"0 billones"}, 
1E13:{other:"00 billones"}, 1E14:{other:"000 billones"}}};
goog.i18n.CompactNumberFormatSymbols_es_ES = goog.i18n.CompactNumberFormatSymbols_es;
goog.i18n.CompactNumberFormatSymbols_es_MX = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0k"}, 1E4:{other:"00k"}, 1E5:{other:"000k"}, 1E9:{other:"0k\u00a0M"}, 1E10:{other:"00k\u00a0M"}, 1E11:{other:"000k\u00a0M"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 mil"}, 1E4:{other:"00 mil"}, 1E5:{other:"000 mil"}, 1E6:{other:"0 millones"}, 1E7:{other:"00 millones"}, 1E8:{other:"000 millones"}, 1E9:{other:"0 mil millones"}, 1E10:{other:"00 mil millones"}, 1E11:{other:"000 mil millones"}, 1E12:{other:"0 billones"}, 
1E13:{other:"00 billones"}, 1E14:{other:"000 billones"}}};
goog.i18n.CompactNumberFormatSymbols_es_US = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0"}, 1E4:{other:"00k"}, 1E5:{other:"000k"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 mil"}, 1E4:{other:"00 mil"}, 1E5:{other:"000 mil"}, 1E6:{other:"0 millones"}, 1E7:{other:"00 millones"}, 1E8:{other:"000 millones"}, 1E9:{other:"0 mil millones"}, 1E10:{other:"00 mil millones"}, 1E11:{other:"000 mil millones"}, 1E12:{other:"0 billones"}, 1E13:{other:"00 billones"}, 1E14:{other:"000 billones"}}};
goog.i18n.CompactNumberFormatSymbols_et = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0tuh"}, 1E4:{other:"00\u00a0tuh"}, 1E5:{other:"000\u00a0tuh"}, 1E6:{other:"0\u00a0mln"}, 1E7:{other:"00\u00a0mln"}, 1E8:{other:"000\u00a0mln"}, 1E9:{other:"0\u00a0mld"}, 1E10:{other:"00\u00a0mld"}, 1E11:{other:"000\u00a0mld"}, 1E12:{other:"0\u00a0trl"}, 1E13:{other:"00\u00a0trl"}, 1E14:{other:"000\u00a0trl"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 tuhat"}, 1E4:{other:"00 tuhat"}, 1E5:{other:"000 tuhat"}, 
1E6:{other:"0 miljonit"}, 1E7:{other:"00 miljonit"}, 1E8:{other:"000 miljonit"}, 1E9:{other:"0 miljardit"}, 1E10:{other:"00 miljardit"}, 1E11:{other:"000 miljardit"}, 1E12:{other:"0 triljonit"}, 1E13:{other:"00 triljonit"}, 1E14:{other:"000 triljonit"}}};
goog.i18n.CompactNumberFormatSymbols_eu = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0000"}, 1E4:{other:"00000"}, 1E5:{other:"000000"}, 1E6:{other:"0\u00a0M"}, 1E7:{other:"00\u00a0M"}, 1E8:{other:"000\u00a0M"}, 1E9:{other:"0000\u00a0M"}, 1E10:{other:"00000\u00a0M"}, 1E11:{other:"000000\u00a0M"}, 1E12:{other:"0\u00a0B"}, 1E13:{other:"00\u00a0B"}, 1E14:{other:"000\u00a0B"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0000"}, 1E4:{other:"00000"}, 1E5:{other:"000000"}, 1E6:{other:"0 milioi"}, 1E7:{other:"00 milioi"}, 
1E8:{other:"000 milioi"}, 1E9:{other:"0000 milioi"}, 1E10:{other:"00000 milioi"}, 1E11:{other:"000000 milioi"}, 1E12:{other:"0 bilioi"}, 1E13:{other:"00 bilioi"}, 1E14:{other:"000 bilioi"}}};
goog.i18n.CompactNumberFormatSymbols_fa = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0\u0647\u0632\u0627\u0631"}, 1E4:{other:"00\u00a0\u0647\u0632\u0627\u0631"}, 1E5:{other:"000\u00a0\u0647\u0632\u0627\u0631"}, 1E6:{other:"0\u00a0\u0645\u06cc\u0644\u06cc\u0648\u0646"}, 1E7:{other:"00\u00a0\u0645\u06cc\u0644\u06cc\u0648\u0646"}, 1E8:{other:"000\u00a0\u0645"}, 1E9:{other:"0\u00a0\u0645"}, 1E10:{other:"00\u00a0\u0645"}, 1E11:{other:"000\u00a0\u0645\u06cc\u0644\u06cc\u0627\u0631\u062f"}, 1E12:{other:"0\u00a0\u062a\u0631\u06cc\u0644\u06cc\u0648\u0646"}, 
1E13:{other:"00\u00a0\u062a"}, 1E14:{other:"000\u00a0\u062a"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 \u0647\u0632\u0627\u0631"}, 1E4:{other:"00 \u0647\u0632\u0627\u0631"}, 1E5:{other:"000 \u0647\u0632\u0627\u0631"}, 1E6:{other:"0 \u0645\u06cc\u0644\u06cc\u0648\u0646"}, 1E7:{other:"00 \u0645\u06cc\u0644\u06cc\u0648\u0646"}, 1E8:{other:"000 \u0645\u06cc\u0644\u06cc\u0648\u0646"}, 1E9:{other:"0 \u0645\u06cc\u0644\u06cc\u0627\u0631\u062f"}, 1E10:{other:"00 \u0645\u06cc\u0644\u06cc\u0627\u0631\u062f"}, 
1E11:{other:"000 \u0645\u06cc\u0644\u06cc\u0627\u0631\u062f"}, 1E12:{other:"0 \u0647\u0632\u0627\u0631\u0645\u06cc\u0644\u06cc\u0627\u0631\u062f"}, 1E13:{other:"00 \u0647\u0632\u0627\u0631\u0645\u06cc\u0644\u06cc\u0627\u0631\u062f"}, 1E14:{other:"000 \u0647\u0632\u0627\u0631\u0645\u06cc\u0644\u06cc\u0627\u0631\u062f"}}};
goog.i18n.CompactNumberFormatSymbols_fi = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0t."}, 1E4:{other:"00\u00a0t."}, 1E5:{other:"000\u00a0t."}, 1E6:{other:"0\u00a0milj."}, 1E7:{other:"00\u00a0milj."}, 1E8:{other:"000\u00a0milj."}, 1E9:{other:"0\u00a0mrd."}, 1E10:{other:"00\u00a0mrd."}, 1E11:{other:"000\u00a0mrd."}, 1E12:{other:"0\u00a0bilj."}, 1E13:{other:"00\u00a0bilj."}, 1E14:{other:"000\u00a0bilj."}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 tuhatta"}, 1E4:{other:"00 tuhatta"}, 1E5:{other:"000 tuhatta"}, 
1E6:{other:"0 miljoonaa"}, 1E7:{other:"00 miljoonaa"}, 1E8:{other:"000 miljoonaa"}, 1E9:{other:"0 miljardia"}, 1E10:{other:"00 miljardia"}, 1E11:{other:"000 miljardia"}, 1E12:{other:"0 biljoonaa"}, 1E13:{other:"00 biljoonaa"}, 1E14:{other:"000 biljoonaa"}}};
goog.i18n.CompactNumberFormatSymbols_fil = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0K"}, 1E4:{other:"00K"}, 1E5:{other:"000K"}, 1E6:{other:"0M"}, 1E7:{other:"00M"}, 1E8:{other:"000M"}, 1E9:{other:"0B"}, 1E10:{other:"00B"}, 1E11:{other:"000B"}, 1E12:{other:"0T"}, 1E13:{other:"00T"}, 1E14:{other:"000T"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 na libo"}, 1E4:{other:"00 na libo"}, 1E5:{other:"000 na libo"}, 1E6:{other:"0 na milyon"}, 1E7:{other:"00 na milyon"}, 1E8:{other:"000 na milyon"}, 
1E9:{other:"0 na bilyon"}, 1E10:{other:"00 na bilyon"}, 1E11:{other:"000 na bilyon"}, 1E12:{other:"0 na trilyon"}, 1E13:{other:"00 na trilyon"}, 1E14:{other:"000 na trilyon"}}};
goog.i18n.CompactNumberFormatSymbols_fr = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0k"}, 1E4:{other:"00\u00a0k"}, 1E5:{other:"000\u00a0k"}, 1E6:{other:"0\u00a0M"}, 1E7:{other:"00\u00a0M"}, 1E8:{other:"000\u00a0M"}, 1E9:{other:"0\u00a0Md"}, 1E10:{other:"00\u00a0Md"}, 1E11:{other:"000\u00a0Md"}, 1E12:{other:"0\u00a0Bn"}, 1E13:{other:"00\u00a0Bn"}, 1E14:{other:"000\u00a0Bn"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 mille"}, 1E4:{other:"00 mille"}, 1E5:{other:"000 mille"}, 1E6:{other:"0 millions"}, 
1E7:{other:"00 millions"}, 1E8:{other:"000 millions"}, 1E9:{other:"0 milliards"}, 1E10:{other:"00 milliards"}, 1E11:{other:"000 milliards"}, 1E12:{other:"0 billions"}, 1E13:{other:"00 billions"}, 1E14:{other:"000 billions"}}};
goog.i18n.CompactNumberFormatSymbols_fr_CA = {COMPACT_DECIMAL_SHORT_PATTERN:{1E9:{other:"0\u00a0G"}, 1E10:{other:"00\u00a0G"}, 1E11:{other:"000\u00a0G"}, 1E12:{other:"0\u00a0T"}, 1E13:{other:"00\u00a0T"}, 1E14:{other:"000\u00a0T"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E9:{other:"0 milliards"}, 1E10:{other:"00 milliards"}, 1E11:{other:"000 milliards"}, 1E12:{other:"0 billions"}, 1E13:{other:"00 billions"}, 1E14:{other:"000 billions"}}};
goog.i18n.CompactNumberFormatSymbols_ga = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0k"}, 1E4:{other:"00k"}, 1E5:{other:"000k"}, 1E6:{other:"0M"}, 1E7:{other:"00M"}, 1E8:{other:"000M"}, 1E9:{other:"0B"}, 1E10:{other:"00B"}, 1E11:{other:"000B"}, 1E12:{other:"0T"}, 1E13:{other:"00T"}, 1E14:{other:"000T"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 m\u00edle"}, 1E4:{other:"00 m\u00edle"}, 1E5:{other:"000 m\u00edle"}, 1E6:{other:"0 milli\u00fan"}, 1E7:{other:"00 milli\u00fan"}, 1E8:{other:"000 milli\u00fan"}, 
1E9:{other:"0 billi\u00fan"}, 1E10:{other:"00 billi\u00fan"}, 1E11:{other:"000 billi\u00fan"}, 1E12:{other:"0 trilli\u00fan"}, 1E13:{other:"00 trilli\u00fan"}, 1E14:{other:"000 trilli\u00fan"}}};
goog.i18n.CompactNumberFormatSymbols_gl = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0"}, 1E4:{other:"0"}, 1E5:{other:"0"}, 1E6:{other:"0\u00a0mill."}, 1E7:{other:"00\u00a0mill."}, 1E8:{other:"000\u00a0mill"}, 1E9:{other:"0"}, 1E10:{other:"0"}, 1E11:{other:"0"}, 1E12:{other:"0\u00a0bill."}, 1E13:{other:"00\u00a0bill."}, 1E14:{other:"000\u00a0bill."}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0"}, 1E4:{other:"0"}, 1E5:{other:"0"}, 1E6:{other:"0 mill\u00f3ns"}, 1E7:{other:"00 mill\u00f3ns"}, 1E8:{other:"000 mill\u00f3ns"}, 
1E9:{other:"0"}, 1E10:{other:"0"}, 1E11:{other:"0"}, 1E12:{other:"0 bill\u00f3ns"}, 1E13:{other:"00 bill\u00f3ns"}, 1E14:{other:"000 bill\u00f3ns"}}};
goog.i18n.CompactNumberFormatSymbols_gsw = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0Tsg."}, 1E4:{other:"00\u00a0Tsg."}, 1E5:{other:"000\u00a0Tsg."}, 1E6:{other:"0\u00a0Mio."}, 1E7:{other:"00\u00a0Mio."}, 1E8:{other:"000\u00a0Mio."}, 1E9:{other:"0\u00a0Mrd."}, 1E10:{other:"00\u00a0Mrd."}, 1E11:{other:"000\u00a0Mrd."}, 1E12:{other:"0\u00a0Bio."}, 1E13:{other:"00\u00a0Bio."}, 1E14:{other:"000\u00a0Bio."}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 Tuusig"}, 1E4:{other:"00 Tuusig"}, 1E5:{other:"000 Tuusig"}, 
1E6:{other:"0 Millioone"}, 1E7:{other:"00 Millioone"}, 1E8:{other:"000 Millioone"}, 1E9:{other:"0 Milliarde"}, 1E10:{other:"00 Milliarde"}, 1E11:{other:"000 Milliarde"}, 1E12:{other:"0 Billioone"}, 1E13:{other:"00 Billioone"}, 1E14:{other:"000 Billioone"}}};
goog.i18n.CompactNumberFormatSymbols_gu = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0\u0ab9\u0a9c\u0abe\u0ab0"}, 1E4:{other:"00\u00a0\u0ab9\u0a9c\u0abe\u0ab0"}, 1E5:{other:"0\u00a0\u0ab2\u0abe\u0a96"}, 1E6:{other:"00\u00a0\u0ab2\u0abe\u0a96"}, 1E7:{other:"0\u00a0\u0a95\u0ab0\u0acb\u0aa1"}, 1E8:{other:"00\u00a0\u0a95\u0ab0\u0acb\u0aa1"}, 1E9:{other:"0\u00a0\u0a85\u0aac\u0a9c"}, 1E10:{other:"00\u00a0\u0a85\u0aac\u0a9c"}, 1E11:{other:"0\u00a0\u0aa8\u0abf\u0a96\u0ab0\u0acd\u0ab5"}, 1E12:{other:"0\u00a0\u0aae\u0ab9\u0abe\u0aaa\u0aa6\u0acd\u0aae"}, 
1E13:{other:"0\u00a0\u0ab6\u0a82\u0a95\u0ac1"}, 1E14:{other:"0\u00a0\u0a9c\u0ab2\u0aa7\u0abf"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 \u0ab9\u0a9c\u0abe\u0ab0"}, 1E4:{other:"00 \u0ab9\u0a9c\u0abe\u0ab0"}, 1E5:{other:"0 \u0ab2\u0abe\u0a96"}, 1E6:{other:"00 \u0ab2\u0abe\u0a96"}, 1E7:{other:"0 \u0a95\u0ab0\u0acb\u0aa1"}, 1E8:{other:"00 \u0a95\u0ab0\u0acb\u0aa1"}, 1E9:{other:"0 \u0a85\u0aac\u0a9c"}, 1E10:{other:"00 \u0a85\u0aac\u0a9c"}, 1E11:{other:"0 \u0aa8\u0abf\u0a96\u0ab0\u0acd\u0ab5"}, 1E12:{other:"0 \u0aae\u0ab9\u0abe\u0aaa\u0aa6\u0acd\u0aae"}, 
1E13:{other:"0 \u0ab6\u0a82\u0a95\u0ac1"}, 1E14:{other:"0 \u0a9c\u0ab2\u0aa7\u0abf"}}};
goog.i18n.CompactNumberFormatSymbols_haw = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0K"}, 1E4:{other:"00K"}, 1E5:{other:"000K"}, 1E6:{other:"0M"}, 1E7:{other:"00M"}, 1E8:{other:"000M"}, 1E9:{other:"0G"}, 1E10:{other:"00G"}, 1E11:{other:"000G"}, 1E12:{other:"0T"}, 1E13:{other:"00T"}, 1E14:{other:"000T"}}};
goog.i18n.CompactNumberFormatSymbols_he = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0K"}, 1E4:{other:"00K"}, 1E5:{other:"000K"}, 1E6:{other:"0M"}, 1E7:{other:"00M"}, 1E8:{other:"000M"}, 1E9:{other:"0B"}, 1E10:{other:"00B"}, 1E11:{other:"000B"}, 1E12:{other:"0T"}, 1E13:{other:"00T"}, 1E14:{other:"000T"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"\u200f0 \u05d0\u05dc\u05e3"}, 1E4:{other:"\u200f00 \u05d0\u05dc\u05e3"}, 1E5:{other:"\u200f000 \u05d0\u05dc\u05e3"}, 1E6:{other:"\u200f0 \u05de\u05d9\u05dc\u05d9\u05d5\u05df"}, 
1E7:{other:"\u200f00 \u05de\u05d9\u05dc\u05d9\u05d5\u05df"}, 1E8:{other:"\u200f000 \u05de\u05d9\u05dc\u05d9\u05d5\u05df"}, 1E9:{other:"\u200f0 \u05de\u05d9\u05dc\u05d9\u05d0\u05e8\u05d3"}, 1E10:{other:"\u200f00 \u05de\u05d9\u05dc\u05d9\u05d0\u05e8\u05d3"}, 1E11:{other:"\u200f000 \u05de\u05d9\u05dc\u05d9\u05d0\u05e8\u05d3"}, 1E12:{other:"\u200f0 \u05d8\u05e8\u05d9\u05dc\u05d9\u05d5\u05df"}, 1E13:{other:"\u200f00 \u05d8\u05e8\u05d9\u05dc\u05d9\u05d5\u05df"}, 1E14:{other:"\u200f000 \u05d8\u05e8\u05d9\u05dc\u05d9\u05d5\u05df"}}};
goog.i18n.CompactNumberFormatSymbols_hi = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0\u0939\u091c\u093c\u093e\u0930"}, 1E4:{other:"00\u00a0\u0939\u091c\u093c\u093e\u0930"}, 1E5:{other:"0\u00a0\u0932\u093e\u0916"}, 1E6:{other:"00\u00a0\u0932\u093e\u0916"}, 1E7:{other:"0\u00a0\u0915."}, 1E8:{other:"00\u00a0\u0915."}, 1E9:{other:"0\u00a0\u0905."}, 1E10:{other:"00\u00a0\u0905."}, 1E11:{other:"0\u00a0\u0916."}, 1E12:{other:"00\u00a0\u0916."}, 1E13:{other:"0\u00a0\u0928\u0940\u0932"}, 1E14:{other:"00\u00a0\u0928\u0940\u0932"}}, 
COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 \u0939\u091c\u093c\u093e\u0930"}, 1E4:{other:"00 \u0939\u091c\u093c\u093e\u0930"}, 1E5:{other:"0 \u0932\u093e\u0916"}, 1E6:{other:"00 \u0932\u093e\u0916"}, 1E7:{other:"0 \u0915\u0930\u094b\u0921\u093c"}, 1E8:{other:"00 \u0915\u0930\u094b\u0921\u093c"}, 1E9:{other:"0 \u0905\u0930\u092c"}, 1E10:{other:"00 \u0905\u0930\u092c"}, 1E11:{other:"0 \u0916\u0930\u092c"}, 1E12:{other:"00 \u0916\u0930\u092c"}, 1E13:{other:"000 \u0916\u0930\u092c"}, 1E14:{other:"0000 \u0916\u0930\u092c"}}};
goog.i18n.CompactNumberFormatSymbols_hr = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0tis."}, 1E4:{other:"00\u00a0tis."}, 1E5:{other:"000\u00a0tis."}, 1E6:{other:"0\u00a0mil."}, 1E7:{other:"00\u00a0mil."}, 1E8:{other:"000\u00a0mil."}, 1E9:{other:"0\u00a0mlr."}, 1E10:{other:"00\u00a0mlr."}, 1E11:{other:"000\u00a0mlr."}, 1E12:{other:"0\u00a0bil."}, 1E13:{other:"00\u00a0bil."}, 1E14:{other:"000\u00a0bil."}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 tisu\u0107a"}, 1E4:{other:"00 tisu\u0107a"}, 
1E5:{other:"000 tisu\u0107a"}, 1E6:{other:"0 milijuna"}, 1E7:{other:"00 milijuna"}, 1E8:{other:"000 milijuna"}, 1E9:{other:"0 milijardi"}, 1E10:{other:"00 milijardi"}, 1E11:{other:"000 milijardi"}, 1E12:{other:"0 bilijuna"}, 1E13:{other:"00 bilijuna"}, 1E14:{other:"000 bilijuna"}}};
goog.i18n.CompactNumberFormatSymbols_hu = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0E"}, 1E4:{other:"00\u00a0E"}, 1E5:{other:"000\u00a0E"}, 1E6:{other:"0\u00a0M"}, 1E7:{other:"00\u00a0M"}, 1E8:{other:"000\u00a0M"}, 1E9:{other:"0\u00a0Mrd"}, 1E10:{other:"00\u00a0Mrd"}, 1E11:{other:"000\u00a0Mrd"}, 1E12:{other:"0\u00a0B"}, 1E13:{other:"00\u00a0B"}, 1E14:{other:"000\u00a0B"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 ezer"}, 1E4:{other:"00 ezer"}, 1E5:{other:"000 ezer"}, 1E6:{other:"0 milli\u00f3"}, 
1E7:{other:"00 milli\u00f3"}, 1E8:{other:"000 milli\u00f3"}, 1E9:{other:"0 milli\u00e1rd"}, 1E10:{other:"00 milli\u00e1rd"}, 1E11:{other:"000 milli\u00e1rd"}, 1E12:{other:"0 billi\u00f3"}, 1E13:{other:"00 billi\u00f3"}, 1E14:{other:"000 billi\u00f3"}}};
goog.i18n.CompactNumberFormatSymbols_hy = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0\u0570\u0566\u0580"}, 1E4:{other:"00\u00a0\u0570\u0566\u0580"}, 1E5:{other:"000\u00a0\u0570\u0566\u0580"}, 1E6:{other:"0\u00a0\u0574\u056c\u0576"}, 1E7:{other:"00\u00a0\u0574\u056c\u0576"}, 1E8:{other:"000\u00a0\u0574\u056c\u0576"}, 1E9:{other:"0\u00a0\u0574\u056c\u0580\u0564"}, 1E10:{other:"00\u00a0\u0574\u056c\u0580\u0564"}, 1E11:{other:"000\u00a0\u0574\u056c\u0580\u0564"}, 1E12:{other:"0\u00a0\u057f\u0580\u056c\u0576"}, 
1E13:{other:"00\u00a0\u057f\u0580\u056c\u0576"}, 1E14:{other:"000\u00a0\u057f\u0580\u056c\u0576"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 \u0570\u0561\u0566\u0561\u0580"}, 1E4:{other:"00 \u0570\u0561\u0566\u0561\u0580"}, 1E5:{other:"000 \u0570\u0561\u0566\u0561\u0580"}, 1E6:{other:"0 \u0574\u056b\u056c\u056b\u0578\u0576"}, 1E7:{other:"00 \u0574\u056b\u056c\u056b\u0578\u0576"}, 1E8:{other:"000 \u0574\u056b\u056c\u056b\u0578\u0576"}, 1E9:{other:"0 \u0574\u056b\u056c\u056b\u0561\u0580\u0564"}, 
1E10:{other:"00 \u0574\u056b\u056c\u056b\u0561\u0580\u0564"}, 1E11:{other:"000 \u0574\u056b\u056c\u056b\u0561\u0580\u0564"}, 1E12:{other:"0 \u057f\u0580\u056b\u056c\u056b\u0578\u0576"}, 1E13:{other:"00 \u057f\u0580\u056b\u056c\u056b\u0578\u0576"}, 1E14:{other:"000 \u057f\u0580\u056b\u056c\u056b\u0578\u0576"}}};
goog.i18n.CompactNumberFormatSymbols_id = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0rb"}, 1E4:{other:"00\u00a0rb"}, 1E5:{other:"000\u00a0rb"}, 1E6:{other:"0\u00a0jt"}, 1E7:{other:"00\u00a0jt"}, 1E8:{other:"000\u00a0jt"}, 1E9:{other:"0\u00a0M"}, 1E10:{other:"00\u00a0M"}, 1E11:{other:"000\u00a0M"}, 1E12:{other:"0\u00a0T"}, 1E13:{other:"00\u00a0T"}, 1E14:{other:"000\u00a0T"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 ribu"}, 1E4:{other:"00 ribu"}, 1E5:{other:"000 ribu"}, 1E6:{other:"0 juta"}, 
1E7:{other:"00 juta"}, 1E8:{other:"000 juta"}, 1E9:{other:"0 miliar"}, 1E10:{other:"00 miliar"}, 1E11:{other:"000 miliar"}, 1E12:{other:"0 triliun"}, 1E13:{other:"00 triliun"}, 1E14:{other:"000 triliun"}}};
goog.i18n.CompactNumberFormatSymbols_in = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0rb"}, 1E4:{other:"00\u00a0rb"}, 1E5:{other:"000\u00a0rb"}, 1E6:{other:"0\u00a0jt"}, 1E7:{other:"00\u00a0jt"}, 1E8:{other:"000\u00a0jt"}, 1E9:{other:"0\u00a0M"}, 1E10:{other:"00\u00a0M"}, 1E11:{other:"000\u00a0M"}, 1E12:{other:"0\u00a0T"}, 1E13:{other:"00\u00a0T"}, 1E14:{other:"000\u00a0T"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 ribu"}, 1E4:{other:"00 ribu"}, 1E5:{other:"000 ribu"}, 1E6:{other:"0 juta"}, 
1E7:{other:"00 juta"}, 1E8:{other:"000 juta"}, 1E9:{other:"0 miliar"}, 1E10:{other:"00 miliar"}, 1E11:{other:"000 miliar"}, 1E12:{other:"0 triliun"}, 1E13:{other:"00 triliun"}, 1E14:{other:"000 triliun"}}};
goog.i18n.CompactNumberFormatSymbols_is = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0\u00fe."}, 1E4:{other:"00\u00a0\u00fe."}, 1E5:{other:"000\u00a0\u00fe."}, 1E6:{other:"0\u00a0m."}, 1E7:{other:"00\u00a0m."}, 1E8:{other:"000\u00a0m."}, 1E9:{other:"0\u00a0ma."}, 1E10:{other:"00\u00a0ma."}, 1E11:{other:"000\u00a0ma."}, 1E12:{other:"0\u00a0bn"}, 1E13:{other:"00\u00a0bn"}, 1E14:{other:"000\u00a0bn"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 \u00fe\u00fasund"}, 1E4:{other:"00 \u00fe\u00fasund"}, 
1E5:{other:"000 \u00fe\u00fasund"}, 1E6:{other:"0 millj\u00f3nir"}, 1E7:{other:"00 millj\u00f3nir"}, 1E8:{other:"000 millj\u00f3nir"}, 1E9:{other:"0 milljar\u00f0ar"}, 1E10:{other:"00 milljar\u00f0ar"}, 1E11:{other:"000 milljar\u00f0ar"}, 1E12:{other:"0 billj\u00f3nir"}, 1E13:{other:"00 billj\u00f3nir"}, 1E14:{other:"000 billj\u00f3nir"}}};
goog.i18n.CompactNumberFormatSymbols_it = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0"}, 1E4:{other:"0"}, 1E5:{other:"0"}, 1E6:{other:"0\u00a0Mln"}, 1E7:{other:"00\u00a0Mln"}, 1E8:{other:"000\u00a0Mln"}, 1E9:{other:"0\u00a0Mld"}, 1E10:{other:"00\u00a0Mld"}, 1E11:{other:"000\u00a0Mld"}, 1E12:{other:"0\u00a0Bln"}, 1E13:{other:"00\u00a0Bln"}, 1E14:{other:"000\u00a0Bln"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 mila"}, 1E4:{other:"00 mila"}, 1E5:{other:"000 mila"}, 1E6:{other:"0 milioni"}, 1E7:{other:"00 milioni"}, 
1E8:{other:"000 milioni"}, 1E9:{other:"0 miliardi"}, 1E10:{other:"00 miliardi"}, 1E11:{other:"000 miliardi"}, 1E12:{other:"0 mila miliardi"}, 1E13:{other:"00 mila miliardi"}, 1E14:{other:"000 mila miliardi"}}};
goog.i18n.CompactNumberFormatSymbols_iw = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0K"}, 1E4:{other:"00K"}, 1E5:{other:"000K"}, 1E6:{other:"0M"}, 1E7:{other:"00M"}, 1E8:{other:"000M"}, 1E9:{other:"0B"}, 1E10:{other:"00B"}, 1E11:{other:"000B"}, 1E12:{other:"0T"}, 1E13:{other:"00T"}, 1E14:{other:"000T"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"\u200f0 \u05d0\u05dc\u05e3"}, 1E4:{other:"\u200f00 \u05d0\u05dc\u05e3"}, 1E5:{other:"\u200f000 \u05d0\u05dc\u05e3"}, 1E6:{other:"\u200f0 \u05de\u05d9\u05dc\u05d9\u05d5\u05df"}, 
1E7:{other:"\u200f00 \u05de\u05d9\u05dc\u05d9\u05d5\u05df"}, 1E8:{other:"\u200f000 \u05de\u05d9\u05dc\u05d9\u05d5\u05df"}, 1E9:{other:"\u200f0 \u05de\u05d9\u05dc\u05d9\u05d0\u05e8\u05d3"}, 1E10:{other:"\u200f00 \u05de\u05d9\u05dc\u05d9\u05d0\u05e8\u05d3"}, 1E11:{other:"\u200f000 \u05de\u05d9\u05dc\u05d9\u05d0\u05e8\u05d3"}, 1E12:{other:"\u200f0 \u05d8\u05e8\u05d9\u05dc\u05d9\u05d5\u05df"}, 1E13:{other:"\u200f00 \u05d8\u05e8\u05d9\u05dc\u05d9\u05d5\u05df"}, 1E14:{other:"\u200f000 \u05d8\u05e8\u05d9\u05dc\u05d9\u05d5\u05df"}}};
goog.i18n.CompactNumberFormatSymbols_ja = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0"}, 1E4:{other:"0\u4e07"}, 1E5:{other:"00\u4e07"}, 1E6:{other:"000\u4e07"}, 1E7:{other:"0000\u4e07"}, 1E8:{other:"0\u5104"}, 1E9:{other:"00\u5104"}, 1E10:{other:"000\u5104"}, 1E11:{other:"0000\u5104"}, 1E12:{other:"0\u5146"}, 1E13:{other:"00\u5146"}, 1E14:{other:"000\u5146"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0"}, 1E4:{other:"0\u4e07"}, 1E5:{other:"00\u4e07"}, 1E6:{other:"000\u4e07"}, 1E7:{other:"0000\u4e07"}, 
1E8:{other:"0\u5104"}, 1E9:{other:"00\u5104"}, 1E10:{other:"000\u5104"}, 1E11:{other:"0000\u5104"}, 1E12:{other:"0\u5146"}, 1E13:{other:"00\u5146"}, 1E14:{other:"000\u5146"}}};
goog.i18n.CompactNumberFormatSymbols_ka = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0\u10d0\u10d7."}, 1E4:{other:"00\u00a0\u10d0\u10d7."}, 1E5:{other:"000\u00a0\u10d0\u10d7."}, 1E6:{other:"0\u00a0\u10db\u10da\u10dc."}, 1E7:{other:"00\u00a0\u10db\u10da\u10dc."}, 1E8:{other:"000\u00a0\u10db\u10da\u10dc."}, 1E9:{other:"0\u00a0\u10db\u10da\u10e0\u10d3."}, 1E10:{other:"00\u00a0\u10db\u10da\u10e0\u10d3."}, 1E11:{other:"000\u00a0\u10db\u10da\u10e0."}, 1E12:{other:"0\u00a0\u10e2\u10e0\u10da."}, 1E13:{other:"00\u00a0\u10e2\u10e0\u10da."}, 
1E14:{other:"000\u00a0\u10e2\u10e0\u10da."}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 \u10d0\u10d7\u10d0\u10e1\u10d8"}, 1E4:{other:"00 \u10d0\u10d7\u10d0\u10e1\u10d8"}, 1E5:{other:"000 \u10d0\u10d7\u10d0\u10e1\u10d8"}, 1E6:{other:"0 \u10db\u10d8\u10da\u10d8\u10dd\u10dc\u10d8"}, 1E7:{other:"00 \u10db\u10d8\u10da\u10d8\u10dd\u10dc\u10d8"}, 1E8:{other:"000 \u10db\u10d8\u10da\u10d8\u10dd\u10dc\u10d8"}, 1E9:{other:"0 \u10db\u10d8\u10da\u10d8\u10d0\u10e0\u10d3\u10d8"}, 1E10:{other:"00 \u10db\u10d8\u10da\u10d8\u10d0\u10e0\u10d3\u10d8"}, 
1E11:{other:"000 \u10db\u10d8\u10da\u10d8\u10d0\u10e0\u10d3\u10d8"}, 1E12:{other:"0 \u10e2\u10e0\u10d8\u10da\u10d8\u10dd\u10dc\u10d8"}, 1E13:{other:"00 \u10e2\u10e0\u10d8\u10da\u10d8\u10dd\u10dc\u10d8"}, 1E14:{other:"000 \u10e2\u10e0\u10d8\u10da\u10d8\u10dd\u10dc\u10d8"}}};
goog.i18n.CompactNumberFormatSymbols_kk = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0\u043c\u044b\u04a3"}, 1E4:{other:"00\u00a0\u043c\u044b\u04a3"}, 1E5:{other:"000\u00a0\u043c."}, 1E6:{other:"0\u00a0\u043c\u043b\u043d"}, 1E7:{other:"00\u00a0\u043c\u043b\u043d"}, 1E8:{other:"000\u00a0\u043c\u043b\u043d"}, 1E9:{other:"0\u00a0\u043c\u043b\u0440\u0434"}, 1E10:{other:"00\u00a0\u043c\u043b\u0440\u0434"}, 1E11:{other:"000\u00a0\u043c\u043b\u0440\u0434"}, 1E12:{other:"0\u00a0\u0442\u0440\u043b\u043d"}, 
1E13:{other:"00\u00a0\u0442\u0440\u043b\u043d"}, 1E14:{other:"000\u00a0\u0442\u0440\u043b\u043d"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 \u043c\u044b\u04a3"}, 1E4:{other:"00 \u043c\u044b\u04a3"}, 1E5:{other:"000 \u043c\u044b\u04a3"}, 1E6:{other:"0 \u043c\u0438\u043b\u043b\u0438\u043e\u043d"}, 1E7:{other:"00 \u043c\u0438\u043b\u043b\u0438\u043e\u043d"}, 1E8:{other:"000 \u043c\u0438\u043b\u043b\u0438\u043e\u043d"}, 1E9:{other:"0 \u043c\u0438\u043b\u043b\u0438\u0430\u0440\u0434"}, 1E10:{other:"00 \u043c\u0438\u043b\u043b\u0438\u0430\u0440\u0434"}, 
1E11:{other:"000 \u043c\u0438\u043b\u043b\u0438\u0430\u0440\u0434"}, 1E12:{other:"0 \u0442\u0440\u0438\u043b\u043b\u0438\u043e\u043d"}, 1E13:{other:"00 \u0442\u0440\u0438\u043b\u043b\u0438\u043e\u043d"}, 1E14:{other:"000 \u0442\u0440\u0438\u043b\u043b\u0438\u043e\u043d"}}};
goog.i18n.CompactNumberFormatSymbols_km = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u1796\u17b6\u1793\u17cb"}, 1E4:{other:"0\u200b\u1798\u17ba\u17bb\u1793"}, 1E5:{other:"0\u179f\u17c2\u1793"}, 1E6:{other:"0\u179b\u17b6\u1793"}, 1E7:{other:"0\u200b\u178a\u1794\u17cb\u200b\u179b\u17b6\u1793"}, 1E8:{other:"0\u200b\u179a\u1799\u179b\u17b6\u1793"}, 1E9:{other:"0\u200b\u1780\u17c4\u178a\u17b7"}, 1E10:{other:"0\u200b\u178a\u1794\u17cb\u200b\u1780\u17c4\u178a\u17b7"}, 1E11:{other:"0\u200b\u179a\u1799\u200b\u1780\u17c4\u178a\u17b7"}, 
1E12:{other:"0\u200b\u1796\u17b6\u1793\u17cb\u200b\u1780\u17c4\u178a\u17b7"}, 1E13:{other:"0\u200b\u1798\u17ba\u17bb\u1793\u200b\u1780\u17c4\u178a\u17b7"}, 1E14:{other:"0\u200b\u179f\u17c2\u1793\u200b\u1780\u17c4\u178a\u17b7"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0\u1796\u17b6\u1793\u17cb"}, 1E4:{other:"0\u200b\u1798\u17ba\u17bb\u1793"}, 1E5:{other:"0\u179f\u17c2\u1793"}, 1E6:{other:"0\u179b\u17b6\u1793"}, 1E7:{other:"0\u200b\u178a\u1794\u17cb\u200b\u179b\u17b6\u1793"}, 1E8:{other:"0\u200b\u179a\u1799\u179b\u17b6\u1793"}, 
1E9:{other:"0\u200b\u1780\u17c4\u178a\u17b7"}, 1E10:{other:"0\u200b\u178a\u1794\u17cb\u200b\u1780\u17c4\u178a\u17b7"}, 1E11:{other:"0\u200b\u179a\u1799\u200b\u1780\u17c4\u178a\u17b7"}, 1E12:{other:"0\u200b\u1796\u17b6\u1793\u17cb\u200b\u1780\u17c4\u178a\u17b7"}, 1E13:{other:"0\u200b\u1798\u17ba\u17bb\u1793\u200b\u1780\u17c4\u178a\u17b7"}, 1E14:{other:"0\u200b\u179f\u17c2\u1793\u200b\u1780\u17c4\u178a\u17b7"}}};
goog.i18n.CompactNumberFormatSymbols_kn = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u0cb8\u0cbe"}, 1E4:{other:"00\u0cb8\u0cbe"}, 1E5:{other:"000\u0cb8\u0cbe"}, 1E6:{other:"0\u0cae\u0cbf"}, 1E7:{other:"00\u0cae\u0cbf"}, 1E8:{other:"000\u0cae\u0cbf"}, 1E9:{other:"0\u0cac\u0cbf"}, 1E10:{other:"00\u0cac\u0cbf"}, 1E11:{other:"000\u0cac\u0cbf"}, 1E12:{other:"0\u0c9f\u0ccd\u0cb0\u0cbf"}, 1E13:{other:"00\u0c9f\u0ccd\u0cb0\u0cbf"}, 1E14:{other:"000\u0c9f\u0ccd\u0cb0\u0cbf"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 \u0cb8\u0cbe\u0cb5\u0cbf\u0cb0"}, 
1E4:{other:"00 \u0cb8\u0cbe\u0cb5\u0cbf\u0cb0"}, 1E5:{other:"000 \u0cb8\u0cbe\u0cb5\u0cbf\u0cb0"}, 1E6:{other:"0 \u0cae\u0cbf\u0cb2\u0cbf\u0caf\u0ca8\u0ccd"}, 1E7:{other:"00 \u0cae\u0cbf\u0cb2\u0cbf\u0caf\u0ca8\u0ccd"}, 1E8:{other:"000 \u0cae\u0cbf\u0cb2\u0cbf\u0caf\u0ca8\u0ccd"}, 1E9:{other:"0 \u0cac\u0cbf\u0cb2\u0cbf\u0caf\u0ca8\u0ccd"}, 1E10:{other:"00 \u0cac\u0cbf\u0cb2\u0cbf\u0caf\u0ca8\u0ccd"}, 1E11:{other:"000 \u0cac\u0cbf\u0cb2\u0cbf\u0caf\u0ca8\u0ccd"}, 1E12:{other:"0 \u0c9f\u0ccd\u0cb0\u0cbf\u0cb2\u0cbf\u0caf\u0ca8\u0ccd\u200c"}, 
1E13:{other:"00 \u0c9f\u0ccd\u0cb0\u0cbf\u0cb2\u0cbf\u0caf\u0ca8\u0ccd\u200c"}, 1E14:{other:"000 \u0c9f\u0ccd\u0cb0\u0cbf\u0cb2\u0cbf\u0caf\u0ca8\u0ccd\u200c"}}};
goog.i18n.CompactNumberFormatSymbols_ko = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\ucc9c"}, 1E4:{other:"0\ub9cc"}, 1E5:{other:"00\ub9cc"}, 1E6:{other:"000\ub9cc"}, 1E7:{other:"0000\ub9cc"}, 1E8:{other:"0\uc5b5"}, 1E9:{other:"00\uc5b5"}, 1E10:{other:"000\uc5b5"}, 1E11:{other:"0000\uc5b5"}, 1E12:{other:"0\uc870"}, 1E13:{other:"00\uc870"}, 1E14:{other:"000\uc870"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0\ucc9c"}, 1E4:{other:"0\ub9cc"}, 1E5:{other:"00\ub9cc"}, 1E6:{other:"000\ub9cc"}, 1E7:{other:"0000\ub9cc"}, 
1E8:{other:"0\uc5b5"}, 1E9:{other:"00\uc5b5"}, 1E10:{other:"000\uc5b5"}, 1E11:{other:"0000\uc5b5"}, 1E12:{other:"0\uc870"}, 1E13:{other:"00\uc870"}, 1E14:{other:"000\uc870"}}};
goog.i18n.CompactNumberFormatSymbols_ky = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0\u043c\u0438\u04ca"}, 1E4:{other:"00\u00a0\u043c\u0438\u04ca"}, 1E5:{other:"000\u00a0\u043c\u0438\u04ca"}, 1E6:{other:"0\u00a0\u043c\u043b\u043d"}, 1E7:{other:"00\u00a0\u043c\u043b\u043d"}, 1E8:{other:"000\u00a0\u043c\u043b\u043d"}, 1E9:{other:"0\u00a0\u043c\u043b\u0434"}, 1E10:{other:"00\u00a0\u043c\u043b\u0434"}, 1E11:{other:"000\u00a0\u043c\u043b\u0434"}, 1E12:{other:"0\u00a0\u0442\u0440\u043b\u043d"}, 
1E13:{other:"00\u00a0\u0442\u0440\u043b\u043d"}, 1E14:{other:"000\u00a0\u0442\u0440\u043b\u043d"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 \u043c\u0438\u04ca"}, 1E4:{other:"00 \u043c\u0438\u04ca"}, 1E5:{other:"000 \u043c\u0438\u04ca"}, 1E6:{other:"0 \u043c\u0438\u043b\u043b\u0438\u043e\u043d"}, 1E7:{other:"00 \u043c\u0438\u043b\u043b\u0438\u043e\u043d"}, 1E8:{other:"000 \u043c\u0438\u043b\u043b\u0438\u043e\u043d"}, 1E9:{other:"0 \u043c\u0438\u043b\u043b\u0438\u0430\u0440\u0434"}, 1E10:{other:"00 \u043c\u0438\u043b\u043b\u0438\u0430\u0440\u0434"}, 
1E11:{other:"000 \u043c\u0438\u043b\u043b\u0438\u0430\u0440\u0434"}, 1E12:{other:"0 \u0442\u0440\u0438\u043b\u043b\u0438\u043e\u043d"}, 1E13:{other:"00 \u0442\u0440\u0438\u043b\u043b\u0438\u043e\u043d"}, 1E14:{other:"000 \u0442\u0440\u0438\u043b\u043b\u0438\u043e\u043d"}}};
goog.i18n.CompactNumberFormatSymbols_ln = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0K"}, 1E4:{other:"00K"}, 1E5:{other:"000K"}, 1E6:{other:"0M"}, 1E7:{other:"00M"}, 1E8:{other:"000M"}, 1E9:{other:"0G"}, 1E10:{other:"00G"}, 1E11:{other:"000G"}, 1E12:{other:"0T"}, 1E13:{other:"00T"}, 1E14:{other:"000T"}}};
goog.i18n.CompactNumberFormatSymbols_lo = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0\u0e9e\u0eb1\u0e99"}, 1E4:{other:"00\u00a0\u0e9e\u0eb1\u0e99"}, 1E5:{other:"000\u00a0\u0e81\u0eb5\u0e9a"}, 1E6:{other:"0\u00a0\u0ea5\u0ec9\u0eb2\u0e99"}, 1E7:{other:"00\u00a0\u0ea5\u0ec9\u0eb2\u0e99"}, 1E8:{other:"000\u00a0\u0ea5\u0ec9\u0eb2\u0e99"}, 1E9:{other:"0\u00a0\u0e95\u0eb7\u0ec9"}, 1E10:{other:"00\u00a0\u0e95\u0eb7\u0ec9"}, 1E11:{other:"000\u00a0\u0e95\u0eb7\u0ec9"}, 1E12:{other:"0\u00a0\u0ea5\u0ec9\u0eb2\u0e99\u0ea5\u0ec9\u0eb2\u0e99"}, 
1E13:{other:"00\u0ea5\u0ea5"}, 1E14:{other:"000\u0ea5\u0ea5"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 \u0e9e\u0eb1\u0e99"}, 1E4:{other:"00 \u0e9e\u0eb1\u0e99"}, 1E5:{other:"0 \u0ec1\u0eaa\u0e99"}, 1E6:{other:"0 \u0ea5\u0ec9\u0eb2\u0e99"}, 1E7:{other:"00 \u0ea5\u0ec9\u0eb2\u0e99"}, 1E8:{other:"000 \u0ea5\u0ec9\u0eb2\u0e99"}, 1E9:{other:"0 \u0e95\u0eb7\u0ec9"}, 1E10:{other:"00 \u0e95\u0eb7\u0ec9"}, 1E11:{other:"000 \u0e95\u0eb7\u0ec9"}, 1E12:{other:"0 \u0ea5\u0ec9\u0eb2\u0e99\u0ea5\u0ec9\u0eb2\u0e99"}, 
1E13:{other:"00 \u0ea5\u0ec9\u0eb2\u0e99\u0ea5\u0ec9\u0eb2\u0e99"}, 1E14:{other:"000 \u0ea5\u0ec9\u0eb2\u0e99\u0ea5\u0ec9\u0eb2\u0e99"}}};
goog.i18n.CompactNumberFormatSymbols_lt = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0t\u016bkst."}, 1E4:{other:"00\u00a0t\u016bkst."}, 1E5:{other:"000\u00a0t\u016bkst."}, 1E6:{other:"0\u00a0mln."}, 1E7:{other:"00\u00a0mln."}, 1E8:{other:"000\u00a0mln."}, 1E9:{other:"0\u00a0mlrd."}, 1E10:{other:"00\u00a0mlrd."}, 1E11:{other:"000\u00a0mlrd."}, 1E12:{other:"0\u00a0trln."}, 1E13:{other:"00\u00a0trln."}, 1E14:{other:"000\u00a0trln."}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 t\u016bkstan\u010di\u0173"}, 
1E4:{other:"00 t\u016bkstan\u010di\u0173"}, 1E5:{other:"000 t\u016bkstan\u010di\u0173"}, 1E6:{other:"0 milijon\u0173"}, 1E7:{other:"00 milijon\u0173"}, 1E8:{other:"000 milijon\u0173"}, 1E9:{other:"0 milijard\u0173"}, 1E10:{other:"00 milijard\u0173"}, 1E11:{other:"000 milijard\u0173"}, 1E12:{other:"0 trilijon\u0173"}, 1E13:{other:"00 trilijon\u0173"}, 1E14:{other:"000 trilijon\u0173"}}};
goog.i18n.CompactNumberFormatSymbols_lv = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0t\u016bkst."}, 1E4:{other:"00\u00a0t\u016bkst."}, 1E5:{other:"000\u00a0t\u016bkst."}, 1E6:{other:"0\u00a0milj."}, 1E7:{other:"00\u00a0milj."}, 1E8:{other:"000\u00a0milj."}, 1E9:{other:"0\u00a0mljrd."}, 1E10:{other:"00\u00a0mljrd."}, 1E11:{other:"000\u00a0mljrd."}, 1E12:{other:"0\u00a0trilj."}, 1E13:{other:"00\u00a0trilj."}, 1E14:{other:"000\u00a0trilj."}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 t\u016bksto\u0161i"}, 
1E4:{other:"00 t\u016bksto\u0161i"}, 1E5:{other:"000 t\u016bksto\u0161i"}, 1E6:{other:"0 miljoni"}, 1E7:{other:"00 miljoni"}, 1E8:{other:"000 miljoni"}, 1E9:{other:"0 miljardi"}, 1E10:{other:"00 miljardi"}, 1E11:{other:"000 miljardi"}, 1E12:{other:"0 triljoni"}, 1E13:{other:"00 triljoni"}, 1E14:{other:"000 triljoni"}}};
goog.i18n.CompactNumberFormatSymbols_mk = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0\u0438\u043b\u0458."}, 1E4:{other:"00\u00a0\u0438\u043b\u0458."}, 1E5:{other:"000\u00a0\u0438\u043b\u0458."}, 1E6:{other:"0\u00a0\u043c\u0438\u043b."}, 1E7:{other:"00\u00a0\u043c\u0438\u043b."}, 1E8:{other:"000\u00a0\u041c"}, 1E9:{other:"0\u00a0\u043c\u0438\u043b\u0458."}, 1E10:{other:"00\u00a0\u043c\u0438\u043b\u0458."}, 1E11:{other:"000\u00a0\u043c\u0438\u043b\u0458."}, 1E12:{other:"0\u00a0\u0442\u0440\u0438\u043b."}, 
1E13:{other:"00\u00a0\u0442\u0440\u0438\u043b."}, 1E14:{other:"000\u00a0\u0442\u0440\u0438\u043b."}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 \u0438\u043b\u0458\u0430\u0434\u0438"}, 1E4:{other:"00 \u0438\u043b\u0458\u0430\u0434\u0438"}, 1E5:{other:"000 \u0438\u043b\u0458\u0430\u0434\u0438"}, 1E6:{other:"0 \u043c\u0438\u043b\u0438\u043e\u043d\u0438"}, 1E7:{other:"00 \u043c\u0438\u043b\u0438\u043e\u043d\u0438"}, 1E8:{other:"000 \u043c\u0438\u043b\u0438\u043e\u043d\u0438"}, 1E9:{other:"0 \u043c\u0438\u043b\u0438\u0458\u0430\u0440\u0434\u0438"}, 
1E10:{other:"00 \u043c\u0438\u043b\u0438\u0458\u0430\u0440\u0434\u0438"}, 1E11:{other:"000 \u043c\u0438\u043b\u0438\u0458\u0430\u0440\u0434\u0438"}, 1E12:{other:"0 \u0442\u0440\u0438\u043b\u0438\u043e\u043d\u0438"}, 1E13:{other:"00 \u0442\u0440\u0438\u043b\u0438\u043e\u043d\u0438"}, 1E14:{other:"000 \u0442\u0440\u0438\u043b\u0438\u043e\u043d\u0438"}}};
goog.i18n.CompactNumberFormatSymbols_ml = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0K"}, 1E4:{other:"00K"}, 1E5:{other:"000K"}, 1E6:{other:"0M"}, 1E7:{other:"00M"}, 1E8:{other:"000M"}, 1E9:{other:"0B"}, 1E10:{other:"00B"}, 1E11:{other:"000B"}, 1E12:{other:"0T"}, 1E13:{other:"00T"}, 1E14:{other:"000T"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 \u0d06\u0d2f\u0d3f\u0d30\u0d02"}, 1E4:{other:"00 \u0d06\u0d2f\u0d3f\u0d30\u0d02"}, 1E5:{other:"000 \u0d06\u0d2f\u0d3f\u0d30\u0d02"}, 1E6:{other:"0 \u0d26\u0d36\u0d32\u0d15\u0d4d\u0d37\u0d02"}, 
1E7:{other:"00 \u0d26\u0d36\u0d32\u0d15\u0d4d\u0d37\u0d02"}, 1E8:{other:"000 \u0d26\u0d36\u0d32\u0d15\u0d4d\u0d37\u0d02"}, 1E9:{other:"0 \u0d32\u0d15\u0d4d\u0d37\u0d02 \u0d15\u0d4b\u0d1f\u0d3f"}, 1E10:{other:"00 \u0d32\u0d15\u0d4d\u0d37\u0d02 \u0d15\u0d4b\u0d1f\u0d3f"}, 1E11:{other:"000 \u0d32\u0d15\u0d4d\u0d37\u0d02 \u0d15\u0d4b\u0d1f\u0d3f"}, 1E12:{other:"0 \u0d1f\u0d4d\u0d30\u0d3f\u0d32\u0d4d\u0d2f\u0d7a"}, 1E13:{other:"00 \u0d1f\u0d4d\u0d30\u0d3f\u0d32\u0d4d\u0d2f\u0d7a"}, 1E14:{other:"000 \u0d1f\u0d4d\u0d30\u0d3f\u0d32\u0d4d\u0d2f\u0d7a"}}};
goog.i18n.CompactNumberFormatSymbols_mn = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u043c\u044f\u043d\u0433\u0430"}, 1E4:{other:"00\u043c\u044f\u043d\u0433\u0430"}, 1E5:{other:"000\u041c"}, 1E6:{other:"0\u0441\u0430\u044f"}, 1E7:{other:"00\u0441\u0430\u044f"}, 1E8:{other:"000\u0441\u0430\u044f"}, 1E9:{other:"0\u0442\u044d\u0440\u0431\u0443\u043c"}, 1E10:{other:"00\u0422"}, 1E11:{other:"000\u0422"}, 1E12:{other:"0\u0418\u041d"}, 1E13:{other:"00\u0418\u041d"}, 1E14:{other:"000\u0418\u041d"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 \u043c\u044f\u043d\u0433\u0430"}, 
1E4:{other:"00 \u043c\u044f\u043d\u0433\u0430"}, 1E5:{other:"000 \u043c\u044f\u043d\u0433\u0430"}, 1E6:{other:"0 \u0441\u0430\u044f"}, 1E7:{other:"00 \u0441\u0430\u044f"}, 1E8:{other:"000 \u0441\u0430\u044f"}, 1E9:{other:"0 \u0442\u044d\u0440\u0431\u0443\u043c"}, 1E10:{other:"00 \u0442\u044d\u0440\u0431\u0443\u043c"}, 1E11:{other:"000 \u0442\u044d\u0440\u0431\u0443\u043c"}, 1E12:{other:"0 \u0438\u0445 \u043d\u0430\u044f\u0434"}, 1E13:{other:"00 \u0438\u0445 \u043d\u0430\u044f\u0434"}, 1E14:{other:"000 \u0438\u0445 \u043d\u0430\u044f\u0434"}}};
goog.i18n.CompactNumberFormatSymbols_mo = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0K"}, 1E4:{other:"00\u00a0K"}, 1E5:{other:"000\u00a0K"}, 1E6:{other:"0\u00a0mil."}, 1E7:{other:"00\u00a0mil."}, 1E8:{other:"000\u00a0mil."}, 1E9:{other:"0\u00a0mld."}, 1E10:{other:"00\u00a0mld."}, 1E11:{other:"000\u00a0mld."}, 1E12:{other:"0\u00a0tril."}, 1E13:{other:"00\u00a0tril."}, 1E14:{other:"000\u00a0tril."}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 de mii"}, 1E4:{other:"00 de mii"}, 1E5:{other:"000 de mii"}, 
1E6:{other:"0 de milioane"}, 1E7:{other:"00 de milioane"}, 1E8:{other:"000 de milioane"}, 1E9:{other:"0 de miliarde"}, 1E10:{other:"00 de miliarde"}, 1E11:{other:"000 de miliarde"}, 1E12:{other:"0 de trilioane"}, 1E13:{other:"00 de trilioane"}, 1E14:{other:"000 de trilioane"}}};
goog.i18n.CompactNumberFormatSymbols_mr = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0\u0939"}, 1E4:{other:"00\u00a0\u0939"}, 1E5:{other:"0\u00a0\u0932\u093e\u0916"}, 1E6:{other:"00\u00a0\u0932\u093e\u0916"}, 1E7:{other:"0\u00a0\u0915\u094b\u091f\u0940"}, 1E8:{other:"00\u00a0\u0915\u094b\u091f\u0940"}, 1E9:{other:"0\u00a0\u0905\u092c\u094d\u091c"}, 1E10:{other:"00\u00a0\u0905\u092c\u094d\u091c"}, 1E11:{other:"0\u00a0\u0916\u0930\u094d\u0935"}, 1E12:{other:"00\u00a0\u0916\u0930\u094d\u0935"}, 
1E13:{other:"0\u00a0\u092a\u0926\u094d\u092e"}, 1E14:{other:"00\u00a0\u092a\u0926\u094d\u092e"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 \u0939\u091c\u093e\u0930"}, 1E4:{other:"00 \u0939\u091c\u093e\u0930"}, 1E5:{other:"0 \u0932\u093e\u0916"}, 1E6:{other:"00 \u0932\u093e\u0916"}, 1E7:{other:"0 \u0915\u094b\u091f\u0940"}, 1E8:{other:"00 \u0915\u094b\u091f\u0940"}, 1E9:{other:"0 \u0905\u092c\u094d\u091c"}, 1E10:{other:"00 \u0905\u092c\u094d\u091c"}, 1E11:{other:"0 \u0916\u0930\u094d\u0935"}, 1E12:{other:"00 \u0916\u0930\u094d\u0935"}, 
1E13:{other:"0 \u092a\u0926\u094d\u092e"}, 1E14:{other:"00 \u092a\u0926\u094d\u092e"}}};
goog.i18n.CompactNumberFormatSymbols_ms = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0K"}, 1E4:{other:"00K"}, 1E5:{other:"000K"}, 1E6:{other:"0J"}, 1E7:{other:"00J"}, 1E8:{other:"000J"}, 1E9:{other:"0B"}, 1E10:{other:"00B"}, 1E11:{other:"000B"}, 1E12:{other:"0T"}, 1E13:{other:"00T"}, 1E14:{other:"000T"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 ribu"}, 1E4:{other:"00 ribu"}, 1E5:{other:"000 ribu"}, 1E6:{other:"0 juta"}, 1E7:{other:"00 juta"}, 1E8:{other:"000 juta"}, 1E9:{other:"0 bilion"}, 1E10:{other:"00 bilion"}, 
1E11:{other:"000 bilion"}, 1E12:{other:"0 trilion"}, 1E13:{other:"00 trilion"}, 1E14:{other:"000 trilion"}}};
goog.i18n.CompactNumberFormatSymbols_mt = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0K"}, 1E4:{other:"00K"}, 1E5:{other:"000K"}, 1E6:{other:"0M"}, 1E7:{other:"00M"}, 1E8:{other:"000M"}, 1E9:{other:"0G"}, 1E10:{other:"00G"}, 1E11:{other:"000G"}, 1E12:{other:"0T"}, 1E13:{other:"00T"}, 1E14:{other:"000T"}}};
goog.i18n.CompactNumberFormatSymbols_my = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u1011\u1031\u102c\u1004\u103a"}, 1E4:{other:"0\u101e\u1031\u102c\u1004\u103a\u1038"}, 1E5:{other:"0\u101e\u102d\u1014\u103a\u1038"}, 1E6:{other:"0\u101e\u1014\u103a\u1038"}, 1E7:{other:"0\u1000\u102f\u100b\u1031"}, 1E8:{other:"00\u1000\u102f\u100b\u1031"}, 1E9:{other:"\u1000\u102f\u100b\u1031000"}, 1E10:{other:"\u1000\u102f\u100b\u10310\u1011"}, 1E11:{other:"\u1000\u102f\u100b\u10310\u101e"}, 1E12:{other:"\u100b\u10310\u101e\u102d\u1014\u103a\u1038"}, 
1E13:{other:"\u100b\u10310\u101e\u1014\u103a\u1038"}, 1E14:{other:"0\u1000\u1031\u102c\u100b\u102d"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0\u1011\u1031\u102c\u1004\u103a"}, 1E4:{other:"0\u101e\u1031\u102c\u1004\u103a\u1038"}, 1E5:{other:"0\u101e\u102d\u1014\u103a\u1038"}, 1E6:{other:"0\u101e\u1014\u103a\u1038"}, 1E7:{other:"0\u1000\u102f\u100b\u1031"}, 1E8:{other:"00\u1000\u102f\u100b\u1031"}, 1E9:{other:"\u1000\u102f\u100b\u1031000"}, 1E10:{other:"\u1000\u102f\u100b\u10310000"}, 1E11:{other:"\u1000\u102f\u100b\u10310\u101e\u1031\u102c\u1004\u103a\u1038"}, 
1E12:{other:"\u1000\u102f\u100b\u10310\u101e\u102d\u1014\u103a\u1038"}, 1E13:{other:"\u1000\u102f\u100b\u10310\u101e\u1014\u103a\u1038"}, 1E14:{other:"0\u1000\u1031\u102c\u100b\u102d"}}};
goog.i18n.CompactNumberFormatSymbols_nb = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0k"}, 1E4:{other:"00k"}, 1E5:{other:"000k"}, 1E6:{other:"0\u00a0mill"}, 1E7:{other:"00\u00a0mill"}, 1E8:{other:"000\u00a0mill"}, 1E9:{other:"0\u00a0mrd"}, 1E10:{other:"00\u00a0mrd"}, 1E11:{other:"000\u00a0mrd"}, 1E12:{other:"0\u00a0bill"}, 1E13:{other:"00\u00a0bill"}, 1E14:{other:"000\u00a0bill"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 tusen"}, 1E4:{other:"00 tusen"}, 1E5:{other:"000 tusen"}, 1E6:{other:"0 millioner"}, 
1E7:{other:"00 millioner"}, 1E8:{other:"000 millioner"}, 1E9:{other:"0 milliarder"}, 1E10:{other:"00 milliarder"}, 1E11:{other:"000 milliarder"}, 1E12:{other:"0 billioner"}, 1E13:{other:"00 billioner"}, 1E14:{other:"000 billioner"}}};
goog.i18n.CompactNumberFormatSymbols_ne = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0\u0939\u091c\u093e\u0930"}, 1E4:{other:"00\u00a0\u0939\u091c\u093e\u0930"}, 1E5:{other:"0\u00a0\u0932\u093e\u0916"}, 1E6:{other:"00\u00a0\u0932\u093e\u0916"}, 1E7:{other:"0\u00a0\u0915\u0930\u094b\u0921"}, 1E8:{other:"00\u00a0\u0915\u0930\u094b\u0921"}, 1E9:{other:"0\u00a0\u0905\u0930\u092c"}, 1E10:{other:"00\u00a0\u0905\u0930\u092c"}, 1E11:{other:"0\u00a0\u0916\u0930\u092c"}, 1E12:{other:"00\u00a0\u0916\u0930\u092c"}, 
1E13:{other:"0\u00a0\u0936\u0902\u0916"}, 1E14:{other:"00\u00a0\u0936\u0902\u0916"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 \u0939\u091c\u093e\u0930"}, 1E4:{other:"00 \u0939\u091c\u093e\u0930"}, 1E5:{other:"0 \u0932\u093e\u0916"}, 1E6:{other:"0 \u0915\u0930\u094b\u0921"}, 1E7:{other:"00 \u0915\u0930\u094b\u0921"}, 1E8:{other:"000 \u0915\u0930\u094b\u0921"}, 1E9:{other:"0 \u0905\u0930\u094d\u092c"}, 1E10:{other:"00 \u0905\u0930\u094d\u092c"}, 1E11:{other:"000 \u0905\u0930\u092c"}, 1E12:{other:"0 \u0916\u0930\u094d\u092c"}, 
1E13:{other:"0 \u0936\u0902\u0916"}, 1E14:{other:"00 \u0936\u0902\u0916"}}};
goog.i18n.CompactNumberFormatSymbols_nl = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0K"}, 1E4:{other:"00K"}, 1E5:{other:"000K"}, 1E6:{other:"0\u00a0mln."}, 1E7:{other:"00\u00a0mln."}, 1E8:{other:"000\u00a0mln."}, 1E9:{other:"0\u00a0mld."}, 1E10:{other:"00\u00a0mld."}, 1E11:{other:"000\u00a0mld."}, 1E12:{other:"0\u00a0bln."}, 1E13:{other:"00\u00a0bln."}, 1E14:{other:"000\u00a0bln."}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 duizend"}, 1E4:{other:"00 duizend"}, 1E5:{other:"000 duizend"}, 1E6:{other:"0 miljoen"}, 
1E7:{other:"00 miljoen"}, 1E8:{other:"000 miljoen"}, 1E9:{other:"0 miljard"}, 1E10:{other:"00 miljard"}, 1E11:{other:"000 miljard"}, 1E12:{other:"0 biljoen"}, 1E13:{other:"00 biljoen"}, 1E14:{other:"000 biljoen"}}};
goog.i18n.CompactNumberFormatSymbols_no = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0k"}, 1E4:{other:"00k"}, 1E5:{other:"000k"}, 1E6:{other:"0\u00a0mill"}, 1E7:{other:"00\u00a0mill"}, 1E8:{other:"000\u00a0mill"}, 1E9:{other:"0\u00a0mrd"}, 1E10:{other:"00\u00a0mrd"}, 1E11:{other:"000\u00a0mrd"}, 1E12:{other:"0\u00a0bill"}, 1E13:{other:"00\u00a0bill"}, 1E14:{other:"000\u00a0bill"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 tusen"}, 1E4:{other:"00 tusen"}, 1E5:{other:"000 tusen"}, 1E6:{other:"0 millioner"}, 
1E7:{other:"00 millioner"}, 1E8:{other:"000 millioner"}, 1E9:{other:"0 milliarder"}, 1E10:{other:"00 milliarder"}, 1E11:{other:"000 milliarder"}, 1E12:{other:"0 billioner"}, 1E13:{other:"00 billioner"}, 1E14:{other:"000 billioner"}}};
goog.i18n.CompactNumberFormatSymbols_no_NO = goog.i18n.CompactNumberFormatSymbols_no;
goog.i18n.CompactNumberFormatSymbols_or = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0K"}, 1E4:{other:"00K"}, 1E5:{other:"000K"}, 1E6:{other:"0M"}, 1E7:{other:"00M"}, 1E8:{other:"000M"}, 1E9:{other:"0G"}, 1E10:{other:"00G"}, 1E11:{other:"000G"}, 1E12:{other:"0T"}, 1E13:{other:"00T"}, 1E14:{other:"000T"}}};
goog.i18n.CompactNumberFormatSymbols_pa = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0\u0a39\u0a1c\u0a3c\u0a3e\u0a30"}, 1E4:{other:"00\u00a0\u0a39\u0a1c\u0a3c\u0a3e\u0a30"}, 1E5:{other:"0\u00a0\u0a32\u0a71\u0a16"}, 1E6:{other:"00\u00a0\u0a32\u0a71\u0a16"}, 1E7:{other:"0\u00a0\u0a15\u0a30\u0a4b\u0a5c"}, 1E8:{other:"00\u00a0\u0a15\u0a30\u0a4b\u0a5c"}, 1E9:{other:"0\u00a0\u0a05\u0a30\u0a2c"}, 1E10:{other:"00\u00a0\u0a05\u0a30\u0a2c"}, 1E11:{other:"0\u00a0\u0a16\u0a30\u0a2c"}, 1E12:{other:"00\u00a0\u0a16\u0a30\u0a2c"}, 
1E13:{other:"0\u00a0\u0a28\u0a40\u0a32"}, 1E14:{other:"00\u00a0\u0a28\u0a40\u0a32"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 \u0a39\u0a1c\u0a3c\u0a3e\u0a30"}, 1E4:{other:"00 \u0a39\u0a1c\u0a3c\u0a3e\u0a30"}, 1E5:{other:"0 \u0a32\u0a71\u0a16"}, 1E6:{other:"00 \u0a32\u0a71\u0a16"}, 1E7:{other:"0 \u0a15\u0a30\u0a4b\u0a5c"}, 1E8:{other:"00 \u0a15\u0a30\u0a4b\u0a5c"}, 1E9:{other:"0 \u0a05\u0a30\u0a2c"}, 1E10:{other:"00 \u0a05\u0a30\u0a2c"}, 1E11:{other:"0 \u0a16\u0a30\u0a2c"}, 1E12:{other:"00 \u0a16\u0a30\u0a2c"}, 
1E13:{other:"0 \u0a28\u0a40\u0a32"}, 1E14:{other:"00 \u0a28\u0a40\u0a32"}}};
goog.i18n.CompactNumberFormatSymbols_pl = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0tys."}, 1E4:{other:"00\u00a0tys."}, 1E5:{other:"000\u00a0tys."}, 1E6:{other:"0\u00a0mln"}, 1E7:{other:"00\u00a0mln"}, 1E8:{other:"000\u00a0mln"}, 1E9:{other:"0\u00a0mld"}, 1E10:{other:"00\u00a0mld"}, 1E11:{other:"000\u00a0mld"}, 1E12:{other:"0\u00a0bln"}, 1E13:{other:"00\u00a0bln"}, 1E14:{other:"000\u00a0bln"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 tysi\u0105ca"}, 1E4:{other:"00 tysi\u0105ca"}, 1E5:{other:"000 tysi\u0105ca"}, 
1E6:{other:"0 miliona"}, 1E7:{other:"00 miliona"}, 1E8:{other:"000 miliona"}, 1E9:{other:"0 miliarda"}, 1E10:{other:"00 miliarda"}, 1E11:{other:"000 miliarda"}, 1E12:{other:"0 biliona"}, 1E13:{other:"00 biliona"}, 1E14:{other:"000 biliona"}}};
goog.i18n.CompactNumberFormatSymbols_pt = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0mil"}, 1E4:{other:"00\u00a0mil"}, 1E5:{other:"000\u00a0mil"}, 1E6:{other:"0\u00a0mi"}, 1E7:{other:"00\u00a0mi"}, 1E8:{other:"000\u00a0mi"}, 1E9:{other:"0\u00a0bi"}, 1E10:{other:"00\u00a0bi"}, 1E11:{other:"000\u00a0bi"}, 1E12:{other:"0\u00a0tri"}, 1E13:{other:"00\u00a0tri"}, 1E14:{other:"000\u00a0tri"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 mil"}, 1E4:{other:"00 mil"}, 1E5:{other:"000 mil"}, 1E6:{other:"0 milh\u00f5es"}, 
1E7:{other:"00 milh\u00f5es"}, 1E8:{other:"000 milh\u00f5es"}, 1E9:{other:"0 bilh\u00f5es"}, 1E10:{other:"00 bilh\u00f5es"}, 1E11:{other:"000 bilh\u00f5es"}, 1E12:{other:"0 trilh\u00f5es"}, 1E13:{other:"00 trilh\u00f5es"}, 1E14:{other:"000 trilh\u00f5es"}}};
goog.i18n.CompactNumberFormatSymbols_pt_BR = goog.i18n.CompactNumberFormatSymbols_pt;
goog.i18n.CompactNumberFormatSymbols_pt_PT = {COMPACT_DECIMAL_SHORT_PATTERN:{1E6:{other:"0\u00a0M"}, 1E7:{other:"00\u00a0M"}, 1E8:{other:"000\u00a0M"}, 1E9:{other:"0\u00a0mM"}, 1E10:{other:"00\u00a0mM"}, 1E11:{other:"000\u00a0mM"}, 1E12:{other:"0\u00a0Bi"}, 1E13:{other:"00\u00a0Bi"}, 1E14:{other:"000\u00a0Bi"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E6:{other:"0 milh\u00f5es"}, 1E7:{other:"00 milh\u00f5es"}, 1E8:{other:"000 milh\u00f5es"}, 1E9:{other:"0 mil milh\u00f5es"}, 1E10:{other:"00 mil milh\u00f5es"}, 
1E11:{other:"000 mil milh\u00f5es"}, 1E12:{other:"0 bili\u00f5es"}, 1E13:{other:"00 bili\u00f5es"}, 1E14:{other:"000 bili\u00f5es"}}};
goog.i18n.CompactNumberFormatSymbols_ro = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0K"}, 1E4:{other:"00\u00a0K"}, 1E5:{other:"000\u00a0K"}, 1E6:{other:"0\u00a0mil."}, 1E7:{other:"00\u00a0mil."}, 1E8:{other:"000\u00a0mil."}, 1E9:{other:"0\u00a0mld."}, 1E10:{other:"00\u00a0mld."}, 1E11:{other:"000\u00a0mld."}, 1E12:{other:"0\u00a0tril."}, 1E13:{other:"00\u00a0tril."}, 1E14:{other:"000\u00a0tril."}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 de mii"}, 1E4:{other:"00 de mii"}, 1E5:{other:"000 de mii"}, 
1E6:{other:"0 de milioane"}, 1E7:{other:"00 de milioane"}, 1E8:{other:"000 de milioane"}, 1E9:{other:"0 de miliarde"}, 1E10:{other:"00 de miliarde"}, 1E11:{other:"000 de miliarde"}, 1E12:{other:"0 de trilioane"}, 1E13:{other:"00 de trilioane"}, 1E14:{other:"000 de trilioane"}}};
goog.i18n.CompactNumberFormatSymbols_ru = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0\u0442\u044b\u0441."}, 1E4:{other:"00\u00a0\u0442\u044b\u0441."}, 1E5:{other:"000\u00a0\u0442\u044b\u0441."}, 1E6:{other:"0\u00a0\u043c\u043b\u043d"}, 1E7:{other:"00\u00a0\u043c\u043b\u043d"}, 1E8:{other:"000\u00a0\u043c\u043b\u043d"}, 1E9:{other:"0\u00a0\u043c\u043b\u0440\u0434"}, 1E10:{other:"00\u00a0\u043c\u043b\u0440\u0434"}, 1E11:{other:"000\u00a0\u043c\u043b\u0440\u0434"}, 1E12:{other:"0\u00a0\u0442\u0440\u043b\u043d"}, 
1E13:{other:"00\u00a0\u0442\u0440\u043b\u043d"}, 1E14:{other:"000\u00a0\u0442\u0440\u043b\u043d"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 \u0442\u044b\u0441\u044f\u0447\u0438"}, 1E4:{other:"00 \u0442\u044b\u0441\u044f\u0447\u0438"}, 1E5:{other:"000 \u0442\u044b\u0441\u044f\u0447\u0438"}, 1E6:{other:"0 \u043c\u0438\u043b\u043b\u0438\u043e\u043d\u0430"}, 1E7:{other:"00 \u043c\u0438\u043b\u043b\u0438\u043e\u043d\u0430"}, 1E8:{other:"000 \u043c\u0438\u043b\u043b\u0438\u043e\u043d\u0430"}, 1E9:{other:"0 \u043c\u0438\u043b\u043b\u0438\u0430\u0440\u0434\u0430"}, 
1E10:{other:"00 \u043c\u0438\u043b\u043b\u0438\u0430\u0440\u0434\u0430"}, 1E11:{other:"000 \u043c\u0438\u043b\u043b\u0438\u0430\u0440\u0434\u0430"}, 1E12:{other:"0 \u0442\u0440\u0438\u043b\u043b\u0438\u043e\u043d\u0430"}, 1E13:{other:"00 \u0442\u0440\u0438\u043b\u043b\u0438\u043e\u043d\u0430"}, 1E14:{other:"000 \u0442\u0440\u0438\u043b\u043b\u0438\u043e\u043d\u0430"}}};
goog.i18n.CompactNumberFormatSymbols_sh = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0hilj."}, 1E4:{other:"00\u00a0hilj."}, 1E5:{other:"000\u00a0hilj."}, 1E6:{other:"0\u00a0mil."}, 1E7:{other:"00\u00a0mil."}, 1E8:{other:"000\u00a0mil."}, 1E9:{other:"0\u00a0mlrd."}, 1E10:{other:"00\u00a0mlrd."}, 1E11:{other:"000\u00a0mlrd."}, 1E12:{other:"0\u00a0bil."}, 1E13:{other:"00\u00a0bil."}, 1E14:{other:"000\u00a0bil."}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 hiljada"}, 1E4:{other:"00 hiljada"}, 
1E5:{other:"000 hiljada"}, 1E6:{other:"0 miliona"}, 1E7:{other:"00 miliona"}, 1E8:{other:"000 miliona"}, 1E9:{other:"0 milijardi"}, 1E10:{other:"00 milijardi"}, 1E11:{other:"000 milijardi"}, 1E12:{other:"0 biliona"}, 1E13:{other:"00 biliona"}, 1E14:{other:"000 biliona"}}};
goog.i18n.CompactNumberFormatSymbols_si = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"\u0daf0"}, 1E4:{other:"\u0daf00"}, 1E5:{other:"\u0daf000"}, 1E6:{other:"\u0db8\u0dd20"}, 1E7:{other:"\u0db8\u0dd200"}, 1E8:{other:"\u0db8\u0dd2000"}, 1E9:{other:"\u0db6\u0dd20"}, 1E10:{other:"\u0db6\u0dd200"}, 1E11:{other:"\u0db6\u0dd2000"}, 1E12:{other:"\u0da7\u0dca\u200d\u0dbb\u0dd20"}, 1E13:{other:"\u0da7\u0dca\u200d\u0dbb\u0dd200"}, 1E14:{other:"\u0da7\u0dca\u200d\u0dbb\u0dd2000"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"\u0daf\u0dc4\u0dc3 0"}, 
1E4:{other:"\u0daf\u0dc4\u0dc3 00"}, 1E5:{other:"\u0daf\u0dc4\u0dc3 000"}, 1E6:{other:"\u0db8\u0dd2\u0dbd\u0dd2\u0dba\u0db1 0"}, 1E7:{other:"\u0db8\u0dd2\u0dbd\u0dd2\u0dba\u0db1 00"}, 1E8:{other:"\u0db8\u0dd2\u0dbd\u0dd2\u0dba\u0db1 000"}, 1E9:{other:"\u0db6\u0dd2\u0dbd\u0dd2\u0dba\u0db1 0"}, 1E10:{other:"\u0db6\u0dd2\u0dbd\u0dd2\u0dba\u0db1 00"}, 1E11:{other:"\u0db6\u0dd2\u0dbd\u0dd2\u0dba\u0db1 000"}, 1E12:{other:"\u0da7\u0dca\u200d\u0dbb\u0dd2\u0dbd\u0dd2\u0dba\u0db1 0"}, 1E13:{other:"\u0da7\u0dca\u200d\u0dbb\u0dd2\u0dbd\u0dd2\u0dba\u0db1 00"}, 
1E14:{other:"\u0da7\u0dca\u200d\u0dbb\u0dd2\u0dbd\u0dd2\u0dba\u0db1 000"}}};
goog.i18n.CompactNumberFormatSymbols_sk = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0tis."}, 1E4:{other:"00\u00a0tis."}, 1E5:{other:"000\u00a0tis."}, 1E6:{other:"0\u00a0mil."}, 1E7:{other:"00\u00a0mil."}, 1E8:{other:"000\u00a0mil."}, 1E9:{other:"0\u00a0mld."}, 1E10:{other:"00\u00a0mld."}, 1E11:{other:"000\u00a0mld."}, 1E12:{other:"0\u00a0bil."}, 1E13:{other:"00\u00a0bil."}, 1E14:{other:"000\u00a0bil."}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 tis\u00edc"}, 1E4:{other:"00 tis\u00edc"}, 
1E5:{other:"000 tis\u00edc"}, 1E6:{other:"0 mili\u00f3nov"}, 1E7:{other:"00 mili\u00f3nov"}, 1E8:{other:"000 mili\u00f3nov"}, 1E9:{other:"0 mili\u00e1rd"}, 1E10:{other:"00 mili\u00e1rd"}, 1E11:{other:"000 mili\u00e1rd"}, 1E12:{other:"0 bili\u00f3nov"}, 1E13:{other:"00 bili\u00f3nov"}, 1E14:{other:"000 bili\u00f3nov"}}};
goog.i18n.CompactNumberFormatSymbols_sl = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0tis."}, 1E4:{other:"00\u00a0tis."}, 1E5:{other:"000\u00a0tis."}, 1E6:{other:"0\u00a0mio."}, 1E7:{other:"00\u00a0mio."}, 1E8:{other:"000\u00a0mio."}, 1E9:{other:"0\u00a0mrd."}, 1E10:{other:"00\u00a0mrd."}, 1E11:{other:"000\u00a0mrd."}, 1E12:{other:"0\u00a0bil."}, 1E13:{other:"00\u00a0bil."}, 1E14:{other:"000\u00a0bil."}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 tiso\u010d"}, 1E4:{other:"00 tiso\u010d"}, 
1E5:{other:"000 tiso\u010d"}, 1E6:{other:"0 milijonov"}, 1E7:{other:"00 milijonov"}, 1E8:{other:"000 milijonov"}, 1E9:{other:"0 milijard"}, 1E10:{other:"00 milijard"}, 1E11:{other:"000 milijard"}, 1E12:{other:"0 bilijonov"}, 1E13:{other:"00 bilijonov"}, 1E14:{other:"000 bilijonov"}}};
goog.i18n.CompactNumberFormatSymbols_sq = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0mij\u00eb"}, 1E4:{other:"00\u00a0mij\u00eb"}, 1E5:{other:"000\u00a0mij\u00eb"}, 1E6:{other:"0\u00a0Mln"}, 1E7:{other:"00\u00a0Mln"}, 1E8:{other:"000\u00a0Mln"}, 1E9:{other:"0\u00a0Mld"}, 1E10:{other:"00\u00a0Mld"}, 1E11:{other:"000\u00a0Mld"}, 1E12:{other:"0\u00a0Bln"}, 1E13:{other:"00\u00a0Bln"}, 1E14:{other:"000\u00a0Bln"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 mij\u00eb"}, 1E4:{other:"00 mij\u00eb"}, 
1E5:{other:"000 mij\u00eb"}, 1E6:{other:"0 milion"}, 1E7:{other:"00 milion"}, 1E8:{other:"000 milion"}, 1E9:{other:"0 miliard"}, 1E10:{other:"00 miliard"}, 1E11:{other:"000 miliard"}, 1E12:{other:"0 bilion"}, 1E13:{other:"00 bilion"}, 1E14:{other:"000 bilion"}}};
goog.i18n.CompactNumberFormatSymbols_sr = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0\u0445\u0438\u0459."}, 1E4:{other:"00\u00a0\u0445\u0438\u0459."}, 1E5:{other:"000\u00a0\u0445\u0438\u0459."}, 1E6:{other:"0\u00a0\u043c\u0438\u043b."}, 1E7:{other:"00\u00a0\u043c\u0438\u043b."}, 1E8:{other:"000\u00a0\u043c\u0438\u043b."}, 1E9:{other:"0\u00a0\u043c\u043b\u0440\u0434."}, 1E10:{other:"00\u00a0\u043c\u043b\u0440\u0434."}, 1E11:{other:"000\u00a0\u043c\u043b\u0440\u0434."}, 1E12:{other:"0\u00a0\u0431\u0438\u043b."}, 
1E13:{other:"00\u00a0\u0431\u0438\u043b."}, 1E14:{other:"000\u00a0\u0431\u0438\u043b."}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 \u0445\u0438\u0459\u0430\u0434\u0430"}, 1E4:{other:"00 \u0445\u0438\u0459\u0430\u0434\u0430"}, 1E5:{other:"000 \u0445\u0438\u0459\u0430\u0434\u0430"}, 1E6:{other:"0 \u043c\u0438\u043b\u0438\u043e\u043d\u0430"}, 1E7:{other:"00 \u043c\u0438\u043b\u0438\u043e\u043d\u0430"}, 1E8:{other:"000 \u043c\u0438\u043b\u0438\u043e\u043d\u0430"}, 1E9:{other:"0 \u043c\u0438\u043b\u0438\u0458\u0430\u0440\u0434\u0438"}, 
1E10:{other:"00 \u043c\u0438\u043b\u0438\u0458\u0430\u0440\u0434\u0438"}, 1E11:{other:"000 \u043c\u0438\u043b\u0438\u0458\u0430\u0440\u0434\u0438"}, 1E12:{other:"0 \u0431\u0438\u043b\u0438\u043e\u043d\u0430"}, 1E13:{other:"00 \u0431\u0438\u043b\u0438\u043e\u043d\u0430"}, 1E14:{other:"000 \u0431\u0438\u043b\u0438\u043e\u043d\u0430"}}};
goog.i18n.CompactNumberFormatSymbols_sr_Latn = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0hilj."}, 1E4:{other:"00\u00a0hilj."}, 1E5:{other:"000\u00a0hilj."}, 1E6:{other:"0\u00a0mil."}, 1E7:{other:"00\u00a0mil."}, 1E8:{other:"000\u00a0mil."}, 1E9:{other:"0\u00a0mlrd."}, 1E10:{other:"00\u00a0mlrd."}, 1E11:{other:"000\u00a0mlrd."}, 1E12:{other:"0\u00a0bil."}, 1E13:{other:"00\u00a0bil."}, 1E14:{other:"000\u00a0bil."}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 hiljada"}, 1E4:{other:"00 hiljada"}, 
1E5:{other:"000 hiljada"}, 1E6:{other:"0 miliona"}, 1E7:{other:"00 miliona"}, 1E8:{other:"000 miliona"}, 1E9:{other:"0 milijardi"}, 1E10:{other:"00 milijardi"}, 1E11:{other:"000 milijardi"}, 1E12:{other:"0 biliona"}, 1E13:{other:"00 biliona"}, 1E14:{other:"000 biliona"}}};
goog.i18n.CompactNumberFormatSymbols_sv = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0tn"}, 1E4:{other:"00\u00a0tn"}, 1E5:{other:"000\u00a0tn"}, 1E6:{other:"0\u00a0mn"}, 1E7:{other:"00\u00a0mn"}, 1E8:{other:"000\u00a0mn"}, 1E9:{other:"0\u00a0md"}, 1E10:{other:"00\u00a0md"}, 1E11:{other:"000\u00a0md"}, 1E12:{other:"0\u00a0bn"}, 1E13:{other:"00\u00a0bn"}, 1E14:{other:"000\u00a0bn"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 tusen"}, 1E4:{other:"00 tusen"}, 1E5:{other:"000 tusen"}, 1E6:{other:"0 miljoner"}, 
1E7:{other:"00 miljoner"}, 1E8:{other:"000 miljoner"}, 1E9:{other:"0 miljarder"}, 1E10:{other:"00 miljarder"}, 1E11:{other:"000 miljarder"}, 1E12:{other:"0 biljoner"}, 1E13:{other:"00 biljoner"}, 1E14:{other:"000 biljoner"}}};
goog.i18n.CompactNumberFormatSymbols_sw = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"elfu\u00a00;elfu\u00a0-0"}, 1E4:{other:"elfu\u00a000;elfu\u00a0-00"}, 1E5:{other:"elfu\u00a0000;elfu\u00a0-000"}, 1E6:{other:"M0;M-0"}, 1E7:{other:"M00;M-00"}, 1E8:{other:"M000;M-000"}, 1E9:{other:"B0;B-0"}, 1E10:{other:"B00;B-00"}, 1E11:{other:"B000;B-000"}, 1E12:{other:"T0;T-0"}, 1E13:{other:"T00;T-00"}, 1E14:{other:"T000;T-000"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"Elfu 0;Elfu -0"}, 1E4:{other:"Elfu 00;Elfu -00"}, 
1E5:{other:"Elfu 000;Elfu -000"}, 1E6:{other:"Milioni 0;Milioni -0"}, 1E7:{other:"Milioni 00;Milioni -00"}, 1E8:{other:"Milioni 000;Milioni -000"}, 1E9:{other:"Bilioni 0;Bilioni -0"}, 1E10:{other:"Bilioni 00;Bilioni -00"}, 1E11:{other:"Bilioni 000;Bilioni -000"}, 1E12:{other:"Trilioni 0;Trilioni -0"}, 1E13:{other:"Trilioni 00;Trilioni -00"}, 1E14:{other:"Trilioni 000;Trilioni -000"}}};
goog.i18n.CompactNumberFormatSymbols_ta = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u0b86"}, 1E4:{other:"00\u0b86"}, 1E5:{other:"000\u0b86"}, 1E6:{other:"0\u0bae\u0bbf"}, 1E7:{other:"00\u0bae\u0bbf"}, 1E8:{other:"000\u0bae\u0bbf"}, 1E9:{other:"0\u0baa\u0bbf"}, 1E10:{other:"00\u0baa\u0bbf"}, 1E11:{other:"000\u0baa\u0bbf"}, 1E12:{other:"0\u0b9f\u0bbf"}, 1E13:{other:"00\u0b9f\u0bbf"}, 1E14:{other:"000\u0b9f\u0bbf"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 \u0b86\u0baf\u0bbf\u0bb0\u0bae\u0bcd"}, 
1E4:{other:"00 \u0b86\u0baf\u0bbf\u0bb0\u0bae\u0bcd"}, 1E5:{other:"000 \u0b86\u0baf\u0bbf\u0bb0\u0bae\u0bcd"}, 1E6:{other:"0 \u0bae\u0bbf\u0bb2\u0bcd\u0bb2\u0bbf\u0baf\u0ba9\u0bcd"}, 1E7:{other:"00 \u0bae\u0bbf\u0bb2\u0bcd\u0bb2\u0bbf\u0baf\u0ba9\u0bcd"}, 1E8:{other:"000 \u0bae\u0bbf\u0bb2\u0bcd\u0bb2\u0bbf\u0baf\u0ba9\u0bcd"}, 1E9:{other:"0 \u0baa\u0bbf\u0bb2\u0bcd\u0bb2\u0bbf\u0baf\u0ba9\u0bcd"}, 1E10:{other:"00 \u0baa\u0bbf\u0bb2\u0bcd\u0bb2\u0bbf\u0baf\u0ba9\u0bcd"}, 1E11:{other:"000 \u0baa\u0bbf\u0bb2\u0bcd\u0bb2\u0bbf\u0baf\u0ba9\u0bcd"}, 
1E12:{other:"0 \u0b9f\u0bbf\u0bb0\u0bbf\u0bb2\u0bcd\u0bb2\u0bbf\u0baf\u0ba9\u0bcd"}, 1E13:{other:"00 \u0b9f\u0bbf\u0bb0\u0bbf\u0bb2\u0bcd\u0bb2\u0bbf\u0baf\u0ba9\u0bcd"}, 1E14:{other:"000 \u0b9f\u0bbf\u0bb0\u0bbf\u0bb2\u0bcd\u0bb2\u0bbf\u0baf\u0ba9\u0bcd"}}};
goog.i18n.CompactNumberFormatSymbols_te = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u0c35\u0c47"}, 1E4:{other:"00\u0c35\u0c47"}, 1E5:{other:"000\u0c35\u0c47"}, 1E6:{other:"0\u0c2e\u0c3f"}, 1E7:{other:"00\u0c2e\u0c3f"}, 1E8:{other:"000\u0c2e\u0c3f"}, 1E9:{other:"0\u0c2c\u0c3f"}, 1E10:{other:"00\u0c2c\u0c3f"}, 1E11:{other:"000\u0c2c\u0c3f"}, 1E12:{other:"0\u0c1f\u0c4d\u0c30\u0c3f"}, 1E13:{other:"00\u0c1f\u0c4d\u0c30\u0c3f"}, 1E14:{other:"000\u0c1f\u0c4d\u0c30\u0c3f"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 \u0c35\u0c47\u0c32\u0c41"}, 
1E4:{other:"00 \u0c35\u0c47\u0c32\u0c41"}, 1E5:{other:"000 \u0c35\u0c47\u0c32\u0c41"}, 1E6:{other:"0 \u0c2e\u0c3f\u0c32\u0c3f\u0c2f\u0c28\u0c4d\u0c32\u0c41"}, 1E7:{other:"00 \u0c2e\u0c3f\u0c32\u0c3f\u0c2f\u0c28\u0c4d\u0c32\u0c41"}, 1E8:{other:"000 \u0c2e\u0c3f\u0c32\u0c3f\u0c2f\u0c28\u0c4d\u0c32\u0c41"}, 1E9:{other:"0 \u0c2c\u0c3f\u0c32\u0c3f\u0c2f\u0c28\u0c4d\u0c32\u0c41"}, 1E10:{other:"00 \u0c2c\u0c3f\u0c32\u0c3f\u0c2f\u0c28\u0c4d\u0c32\u0c41"}, 1E11:{other:"000 \u0c2c\u0c3f\u0c32\u0c3f\u0c2f\u0c28\u0c4d\u0c32\u0c41"}, 
1E12:{other:"0 \u0c1f\u0c4d\u0c30\u0c3f\u0c32\u0c3f\u0c2f\u0c28\u0c4d\u0c32\u0c41"}, 1E13:{other:"00 \u0c1f\u0c4d\u0c30\u0c3f\u0c32\u0c3f\u0c2f\u0c28\u0c4d\u0c32\u0c41"}, 1E14:{other:"000 \u0c1f\u0c4d\u0c30\u0c3f\u0c32\u0c3f\u0c2f\u0c28\u0c4d\u0c32\u0c41"}}};
goog.i18n.CompactNumberFormatSymbols_th = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0K"}, 1E4:{other:"00K"}, 1E5:{other:"000K"}, 1E6:{other:"0M"}, 1E7:{other:"00M"}, 1E8:{other:"000M"}, 1E9:{other:"0B"}, 1E10:{other:"00B"}, 1E11:{other:"000B"}, 1E12:{other:"0T"}, 1E13:{other:"00T"}, 1E14:{other:"000T"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 \u0e1e\u0e31\u0e19"}, 1E4:{other:"0 \u0e2b\u0e21\u0e37\u0e48\u0e19"}, 1E5:{other:"0 \u0e41\u0e2a\u0e19"}, 1E6:{other:"0 \u0e25\u0e49\u0e32\u0e19"}, 1E7:{other:"00 \u0e25\u0e49\u0e32\u0e19"}, 
1E8:{other:"000 \u0e25\u0e49\u0e32\u0e19"}, 1E9:{other:"0 \u0e1e\u0e31\u0e19\u0e25\u0e49\u0e32\u0e19"}, 1E10:{other:"0 \u0e2b\u0e21\u0e37\u0e48\u0e19\u0e25\u0e49\u0e32\u0e19"}, 1E11:{other:"0 \u0e41\u0e2a\u0e19\u0e25\u0e49\u0e32\u0e19"}, 1E12:{other:"0 \u0e25\u0e49\u0e32\u0e19\u0e25\u0e49\u0e32\u0e19"}, 1E13:{other:"00 \u0e25\u0e49\u0e32\u0e19\u0e25\u0e49\u0e32\u0e19"}, 1E14:{other:"000 \u0e25\u0e49\u0e32\u0e19\u0e25\u0e49\u0e32\u0e19"}}};
goog.i18n.CompactNumberFormatSymbols_tl = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0K"}, 1E4:{other:"00K"}, 1E5:{other:"000K"}, 1E6:{other:"0M"}, 1E7:{other:"00M"}, 1E8:{other:"000M"}, 1E9:{other:"0B"}, 1E10:{other:"00B"}, 1E11:{other:"000B"}, 1E12:{other:"0T"}, 1E13:{other:"00T"}, 1E14:{other:"000T"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 na libo"}, 1E4:{other:"00 na libo"}, 1E5:{other:"000 na libo"}, 1E6:{other:"0 na milyon"}, 1E7:{other:"00 na milyon"}, 1E8:{other:"000 na milyon"}, 1E9:{other:"0 na bilyon"}, 
1E10:{other:"00 na bilyon"}, 1E11:{other:"000 na bilyon"}, 1E12:{other:"0 na trilyon"}, 1E13:{other:"00 na trilyon"}, 1E14:{other:"000 na trilyon"}}};
goog.i18n.CompactNumberFormatSymbols_tr = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0B"}, 1E4:{other:"00\u00a0B"}, 1E5:{other:"000\u00a0B"}, 1E6:{other:"0\u00a0Mn"}, 1E7:{other:"00\u00a0Mn"}, 1E8:{other:"000\u00a0Mn"}, 1E9:{other:"0\u00a0Mr"}, 1E10:{other:"00\u00a0Mr"}, 1E11:{other:"000\u00a0Mr"}, 1E12:{other:"0\u00a0Tn"}, 1E13:{other:"00\u00a0Tn"}, 1E14:{other:"000\u00a0Tn"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 bin"}, 1E4:{other:"00 bin"}, 1E5:{other:"000 bin"}, 1E6:{other:"0 milyon"}, 
1E7:{other:"00 milyon"}, 1E8:{other:"000 milyon"}, 1E9:{other:"0 milyar"}, 1E10:{other:"00 milyar"}, 1E11:{other:"000 milyar"}, 1E12:{other:"0 trilyon"}, 1E13:{other:"00 trilyon"}, 1E14:{other:"000 trilyon"}}};
goog.i18n.CompactNumberFormatSymbols_uk = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0\u0442\u0438\u0441."}, 1E4:{other:"00\u00a0\u0442\u0438\u0441."}, 1E5:{other:"000\u00a0\u0442\u0438\u0441."}, 1E6:{other:"0\u00a0\u043c\u043b\u043d"}, 1E7:{other:"00\u00a0\u043c\u043b\u043d"}, 1E8:{other:"000\u00a0\u043c\u043b\u043d"}, 1E9:{other:"0\u00a0\u043c\u043b\u0440\u0434"}, 1E10:{other:"00\u00a0\u043c\u043b\u0440\u0434"}, 1E11:{other:"000\u00a0\u043c\u043b\u0440\u0434"}, 1E12:{other:"0\u00a0\u0442\u0440\u043b\u043d"}, 
1E13:{other:"00\u00a0\u0442\u0440\u043b\u043d"}, 1E14:{other:"000\u00a0\u0442\u0440\u043b\u043d"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 \u0442\u0438\u0441\u044f\u0447\u0456"}, 1E4:{other:"00 \u0442\u0438\u0441\u044f\u0447\u0456"}, 1E5:{other:"000 \u0442\u0438\u0441\u044f\u0447\u0456"}, 1E6:{other:"0 \u043c\u0456\u043b\u044c\u0439\u043e\u043d\u0430"}, 1E7:{other:"00 \u043c\u0456\u043b\u044c\u0439\u043e\u043d\u0430"}, 1E8:{other:"000 \u043c\u0456\u043b\u044c\u0439\u043e\u043d\u0430"}, 1E9:{other:"0 \u043c\u0456\u043b\u044c\u044f\u0440\u0434\u0430"}, 
1E10:{other:"00 \u043c\u0456\u043b\u044c\u044f\u0440\u0434\u0430"}, 1E11:{other:"000 \u043c\u0456\u043b\u044c\u044f\u0440\u0434\u0430"}, 1E12:{other:"0 \u0442\u0440\u0438\u043b\u044c\u0439\u043e\u043d\u0430"}, 1E13:{other:"00 \u0442\u0440\u0438\u043b\u044c\u0439\u043e\u043d\u0430"}, 1E14:{other:"000 \u0442\u0440\u0438\u043b\u044c\u0439\u043e\u043d\u0430"}}};
goog.i18n.CompactNumberFormatSymbols_ur = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0\u06c1\u0632\u0627\u0631"}, 1E4:{other:"00\u00a0\u06c1\u0632\u0627\u0631"}, 1E5:{other:"0\u00a0\u0644\u0627\u06a9\u06be"}, 1E6:{other:"00\u00a0\u0644\u0627\u06a9\u06be"}, 1E7:{other:"0\u00a0\u06a9\u0631\u0648\u0691"}, 1E8:{other:"00\u00a0\u06a9\u0631\u0648\u0691"}, 1E9:{other:"0\u00a0\u0627\u0631\u0628"}, 1E10:{other:"00\u00a0\u0627\u0631\u0628"}, 1E11:{other:"0\u00a0\u06a9\u06be\u0631\u0628"}, 1E12:{other:"00\u00a0\u06a9\u06be\u0631\u0628"}, 
1E13:{other:"00\u00a0\u0679\u0631\u06cc\u0644\u06cc\u0646"}, 1E14:{other:"000\u00a0\u0679\u0631\u06cc\u0644\u06cc\u0646"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 \u06c1\u0632\u0627\u0631"}, 1E4:{other:"00 \u06c1\u0632\u0627\u0631"}, 1E5:{other:"0 \u0644\u0627\u06a9\u06be"}, 1E6:{other:"00 \u0644\u0627\u06a9\u06be"}, 1E7:{other:"0 \u06a9\u0631\u0648\u0691"}, 1E8:{other:"00 \u06a9\u0631\u0648\u0691"}, 1E9:{other:"0 \u0627\u0631\u0628"}, 1E10:{other:"00 \u0627\u0631\u0628"}, 1E11:{other:"0 \u06a9\u06be\u0631\u0628"}, 
1E12:{other:"00 \u06a9\u06be\u0631\u0628"}, 1E13:{other:"00 \u0679\u0631\u06cc\u0644\u06cc\u0646"}, 1E14:{other:"000 \u0679\u0631\u06cc\u0644\u06cc\u0646"}}};
goog.i18n.CompactNumberFormatSymbols_uz = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0ming"}, 1E4:{other:"00\u00a0ming"}, 1E5:{other:"000\u00a0ming"}, 1E6:{other:"0\u00a0mln"}, 1E7:{other:"00\u00a0mln"}, 1E8:{other:"000\u00a0mln"}, 1E9:{other:"0\u00a0mlrd"}, 1E10:{other:"00\u00a0mlrd"}, 1E11:{other:"000\u00a0mlrd"}, 1E12:{other:"0\u00a0trln"}, 1E13:{other:"00\u00a0trln"}, 1E14:{other:"000\u00a0trln"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 ming"}, 1E4:{other:"00 ming"}, 1E5:{other:"000 ming"}, 
1E6:{other:"0 million"}, 1E7:{other:"00 million"}, 1E8:{other:"000 million"}, 1E9:{other:"0 milliard"}, 1E10:{other:"00 milliard"}, 1E11:{other:"000 milliard"}, 1E12:{other:"0 trillion"}, 1E13:{other:"00 trillion"}, 1E14:{other:"000 trillion"}}};
goog.i18n.CompactNumberFormatSymbols_vi = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0\u00a0N"}, 1E4:{other:"00\u00a0N"}, 1E5:{other:"000\u00a0N"}, 1E6:{other:"0\u00a0Tr"}, 1E7:{other:"00\u00a0Tr"}, 1E8:{other:"000\u00a0Tr"}, 1E9:{other:"0\u00a0T"}, 1E10:{other:"00\u00a0T"}, 1E11:{other:"000\u00a0T"}, 1E12:{other:"0\u00a0NT"}, 1E13:{other:"00\u00a0NT"}, 1E14:{other:"000\u00a0NT"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 ngh\u00ecn"}, 1E4:{other:"00 ngh\u00ecn"}, 1E5:{other:"000 ngh\u00ecn"}, 
1E6:{other:"0 tri\u1ec7u"}, 1E7:{other:"00 tri\u1ec7u"}, 1E8:{other:"000 tri\u1ec7u"}, 1E9:{other:"0 t\u1ef7"}, 1E10:{other:"00 t\u1ef7"}, 1E11:{other:"000 t\u1ef7"}, 1E12:{other:"0 ngh\u00ecn t\u1ef7"}, 1E13:{other:"00 ngh\u00ecn t\u1ef7"}, 1E14:{other:"000 ngh\u00ecn t\u1ef7"}}};
goog.i18n.CompactNumberFormatSymbols_zh = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0"}, 1E4:{other:"0\u4e07"}, 1E5:{other:"00\u4e07"}, 1E6:{other:"000\u4e07"}, 1E7:{other:"0000\u4e07"}, 1E8:{other:"0\u4ebf"}, 1E9:{other:"00\u4ebf"}, 1E10:{other:"000\u4ebf"}, 1E11:{other:"0000\u4ebf"}, 1E12:{other:"0\u5146"}, 1E13:{other:"00\u5146"}, 1E14:{other:"000\u5146"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0"}, 1E4:{other:"0\u4e07"}, 1E5:{other:"00\u4e07"}, 1E6:{other:"000\u4e07"}, 1E7:{other:"0000\u4e07"}, 
1E8:{other:"0\u4ebf"}, 1E9:{other:"00\u4ebf"}, 1E10:{other:"000\u4ebf"}, 1E11:{other:"0000\u4ebf"}, 1E12:{other:"0\u5146"}, 1E13:{other:"00\u5146"}, 1E14:{other:"000\u5146"}}};
goog.i18n.CompactNumberFormatSymbols_zh_CN = goog.i18n.CompactNumberFormatSymbols_zh;
goog.i18n.CompactNumberFormatSymbols_zh_HK = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0K"}, 1E4:{other:"00K"}, 1E5:{other:"000K"}, 1E6:{other:"0M"}, 1E7:{other:"00M"}, 1E8:{other:"000M"}, 1E9:{other:"0B"}, 1E10:{other:"00B"}, 1E11:{other:"000B"}, 1E12:{other:"0T"}, 1E13:{other:"00T"}, 1E14:{other:"000T"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0"}, 1E4:{other:"0\u842c"}, 1E5:{other:"00\u842c"}, 1E6:{other:"000\u842c"}, 1E7:{other:"0000\u842c"}, 1E8:{other:"0\u5104"}, 1E9:{other:"00\u5104"}, 
1E10:{other:"000\u5104"}, 1E11:{other:"0000\u5104"}, 1E12:{other:"0\u5146"}, 1E13:{other:"00\u5146"}, 1E14:{other:"000\u5146"}}};
goog.i18n.CompactNumberFormatSymbols_zh_TW = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0"}, 1E4:{other:"0\u842c"}, 1E5:{other:"00\u842c"}, 1E6:{other:"000\u842c"}, 1E7:{other:"0000\u842c"}, 1E8:{other:"0\u5104"}, 1E9:{other:"00\u5104"}, 1E10:{other:"000\u5104"}, 1E11:{other:"0000\u5104"}, 1E12:{other:"0\u5146"}, 1E13:{other:"00\u5146"}, 1E14:{other:"000\u5146"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0"}, 1E4:{other:"0\u842c"}, 1E5:{other:"00\u842c"}, 1E6:{other:"000\u842c"}, 1E7:{other:"0000\u842c"}, 
1E8:{other:"0\u5104"}, 1E9:{other:"00\u5104"}, 1E10:{other:"000\u5104"}, 1E11:{other:"0000\u5104"}, 1E12:{other:"0\u5146"}, 1E13:{other:"00\u5146"}, 1E14:{other:"000\u5146"}}};
goog.i18n.CompactNumberFormatSymbols_zu = {COMPACT_DECIMAL_SHORT_PATTERN:{1E3:{other:"0K"}, 1E4:{other:"00K"}, 1E5:{other:"000K"}, 1E6:{other:"0M"}, 1E7:{other:"00M"}, 1E8:{other:"000M"}, 1E9:{other:"0B"}, 1E10:{other:"00B"}, 1E11:{other:"000B"}, 1E12:{other:"0T"}, 1E13:{other:"00T"}, 1E14:{other:"000T"}}, COMPACT_DECIMAL_LONG_PATTERN:{1E3:{other:"0 inkulungwane"}, 1E4:{other:"00 inkulungwane"}, 1E5:{other:"000 inkulungwane"}, 1E6:{other:"0 isigidi"}, 1E7:{other:"00 isigidi"}, 1E8:{other:"000 isigidi"}, 
1E9:{other:"0 isigidi sezigidi"}, 1E10:{other:"00 isigidi sezigidi"}, 1E11:{other:"000 isigidi sezigidi"}, 1E12:{other:"0 isigidintathu"}, 1E13:{other:"00 isigidintathu"}, 1E14:{other:"000 isigidintathu"}}};
goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_en;
switch(goog.LOCALE) {
  case "af":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_af;
    break;
  case "am":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_am;
    break;
  case "ar":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_ar;
    break;
  case "ar_DZ":
  case "ar-DZ":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_ar_DZ;
    break;
  case "az":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_az;
    break;
  case "be":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_be;
    break;
  case "bg":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_bg;
    break;
  case "bn":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_bn;
    break;
  case "br":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_br;
    break;
  case "bs":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_bs;
    break;
  case "ca":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_ca;
    break;
  case "chr":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_chr;
    break;
  case "cs":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_cs;
    break;
  case "cy":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_cy;
    break;
  case "da":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_da;
    break;
  case "de":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_de;
    break;
  case "de_AT":
  case "de-AT":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_de_AT;
    break;
  case "de_CH":
  case "de-CH":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_de_CH;
    break;
  case "el":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_el;
    break;
  case "en":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_en;
    break;
  case "en_AU":
  case "en-AU":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_en_AU;
    break;
  case "en_CA":
  case "en-CA":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_en_CA;
    break;
  case "en_GB":
  case "en-GB":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_en_GB;
    break;
  case "en_IE":
  case "en-IE":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_en_IE;
    break;
  case "en_IN":
  case "en-IN":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_en_IN;
    break;
  case "en_SG":
  case "en-SG":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_en_SG;
    break;
  case "en_US":
  case "en-US":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_en_US;
    break;
  case "en_ZA":
  case "en-ZA":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_en_ZA;
    break;
  case "es":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_es;
    break;
  case "es_419":
  case "es-419":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_es_419;
    break;
  case "es_ES":
  case "es-ES":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_es_ES;
    break;
  case "es_MX":
  case "es-MX":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_es_MX;
    break;
  case "es_US":
  case "es-US":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_es_US;
    break;
  case "et":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_et;
    break;
  case "eu":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_eu;
    break;
  case "fa":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_fa;
    break;
  case "fi":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_fi;
    break;
  case "fil":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_fil;
    break;
  case "fr":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_fr;
    break;
  case "fr_CA":
  case "fr-CA":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_fr_CA;
    break;
  case "ga":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_ga;
    break;
  case "gl":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_gl;
    break;
  case "gsw":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_gsw;
    break;
  case "gu":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_gu;
    break;
  case "haw":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_haw;
    break;
  case "he":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_he;
    break;
  case "hi":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_hi;
    break;
  case "hr":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_hr;
    break;
  case "hu":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_hu;
    break;
  case "hy":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_hy;
    break;
  case "id":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_id;
    break;
  case "in":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_in;
    break;
  case "is":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_is;
    break;
  case "it":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_it;
    break;
  case "iw":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_iw;
    break;
  case "ja":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_ja;
    break;
  case "ka":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_ka;
    break;
  case "kk":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_kk;
    break;
  case "km":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_km;
    break;
  case "kn":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_kn;
    break;
  case "ko":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_ko;
    break;
  case "ky":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_ky;
    break;
  case "ln":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_ln;
    break;
  case "lo":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_lo;
    break;
  case "lt":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_lt;
    break;
  case "lv":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_lv;
    break;
  case "mk":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_mk;
    break;
  case "ml":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_ml;
    break;
  case "mn":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_mn;
    break;
  case "mo":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_mo;
    break;
  case "mr":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_mr;
    break;
  case "ms":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_ms;
    break;
  case "mt":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_mt;
    break;
  case "my":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_my;
    break;
  case "nb":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_nb;
    break;
  case "ne":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_ne;
    break;
  case "nl":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_nl;
    break;
  case "no":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_no;
    break;
  case "no_NO":
  case "no-NO":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_no_NO;
    break;
  case "or":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_or;
    break;
  case "pa":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_pa;
    break;
  case "pl":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_pl;
    break;
  case "pt":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_pt;
    break;
  case "pt_BR":
  case "pt-BR":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_pt_BR;
    break;
  case "pt_PT":
  case "pt-PT":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_pt_PT;
    break;
  case "ro":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_ro;
    break;
  case "ru":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_ru;
    break;
  case "sh":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_sh;
    break;
  case "si":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_si;
    break;
  case "sk":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_sk;
    break;
  case "sl":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_sl;
    break;
  case "sq":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_sq;
    break;
  case "sr":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_sr;
    break;
  case "sr_Latn":
  case "sr-Latn":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_sr_Latn;
    break;
  case "sv":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_sv;
    break;
  case "sw":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_sw;
    break;
  case "ta":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_ta;
    break;
  case "te":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_te;
    break;
  case "th":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_th;
    break;
  case "tl":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_tl;
    break;
  case "tr":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_tr;
    break;
  case "uk":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_uk;
    break;
  case "ur":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_ur;
    break;
  case "uz":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_uz;
    break;
  case "vi":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_vi;
    break;
  case "zh":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_zh;
    break;
  case "zh_CN":
  case "zh-CN":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_zh_CN;
    break;
  case "zh_HK":
  case "zh-HK":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_zh_HK;
    break;
  case "zh_TW":
  case "zh-TW":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_zh_TW;
    break;
  case "zu":
    goog.i18n.CompactNumberFormatSymbols = goog.i18n.CompactNumberFormatSymbols_zu;
}
;goog.i18n.currency = {};
goog.i18n.currency.PRECISION_MASK_ = 7;
goog.i18n.currency.POSITION_FLAG_ = 16;
goog.i18n.currency.SPACE_FLAG_ = 32;
goog.i18n.currency.tier2Enabled_ = !1;
goog.i18n.currency.isAvailable = function(currencyCode) {
  return currencyCode in goog.i18n.currency.CurrencyInfo;
};
goog.i18n.currency.addTier2Support = function() {
  if (!goog.i18n.currency.tier2Enabled_) {
    for (var key in goog.i18n.currency.CurrencyInfoTier2) {
      goog.i18n.currency.CurrencyInfo[key] = goog.i18n.currency.CurrencyInfoTier2[key];
    }
    goog.i18n.currency.tier2Enabled_ = !0;
  }
};
goog.i18n.currency.getGlobalCurrencyPattern = function(currencyCode) {
  var info = goog.i18n.currency.CurrencyInfo[currencyCode];
  var patternNum = info[0];
  return currencyCode == info[1] ? goog.i18n.currency.getCurrencyPattern_(patternNum, info[1]) : currencyCode + " " + goog.i18n.currency.getCurrencyPattern_(patternNum, info[1]);
};
goog.i18n.currency.getGlobalCurrencySign = function(currencyCode) {
  var info = goog.i18n.currency.CurrencyInfo[currencyCode];
  return currencyCode == info[1] ? currencyCode : currencyCode + " " + info[1];
};
goog.i18n.currency.getLocalCurrencyPattern = function(currencyCode) {
  var info = goog.i18n.currency.CurrencyInfo[currencyCode];
  return goog.i18n.currency.getCurrencyPattern_(info[0], info[1]);
};
goog.i18n.currency.getLocalCurrencySign = function(currencyCode) {
  return goog.i18n.currency.CurrencyInfo[currencyCode][1];
};
goog.i18n.currency.getPortableCurrencyPattern = function(currencyCode) {
  var info = goog.i18n.currency.CurrencyInfo[currencyCode];
  return goog.i18n.currency.getCurrencyPattern_(info[0], info[2]);
};
goog.i18n.currency.getPortableCurrencySign = function(currencyCode) {
  return goog.i18n.currency.CurrencyInfo[currencyCode][2];
};
goog.i18n.currency.isPrefixSignPosition = function(currencyCode) {
  return 0 == (goog.i18n.currency.CurrencyInfo[currencyCode][0] & goog.i18n.currency.POSITION_FLAG_);
};
goog.i18n.currency.getCurrencyPattern_ = function(patternNum, sign) {
  var strParts = ["#,##0"];
  var precision = patternNum & goog.i18n.currency.PRECISION_MASK_;
  if (0 < precision) {
    strParts.push(".");
    for (var i = 0; i < precision; i++) {
      strParts.push("0");
    }
  }
  0 == (patternNum & goog.i18n.currency.POSITION_FLAG_) ? (strParts.unshift(patternNum & goog.i18n.currency.SPACE_FLAG_ ? "' " : "'"), strParts.unshift(sign), strParts.unshift("'")) : strParts.push(patternNum & goog.i18n.currency.SPACE_FLAG_ ? " '" : "'", sign, "'");
  return strParts.join("");
};
goog.i18n.currency.adjustPrecision = function(pattern, currencyCode) {
  var strParts = ["0"];
  var info = goog.i18n.currency.CurrencyInfo[currencyCode];
  var precision = info[0] & goog.i18n.currency.PRECISION_MASK_;
  if (0 < precision) {
    strParts.push(".");
    for (var i = 0; i < precision; i++) {
      strParts.push("0");
    }
  }
  return pattern.replace(/0.00/g, strParts.join(""));
};
goog.i18n.currency.CurrencyInfo = {AED:[2, "dh", "\u062f.\u0625.", "DH"], ALL:[0, "Lek", "Lek"], AUD:[2, "$", "AU$"], BDT:[2, "\u09f3", "Tk"], BGN:[2, "lev", "lev"], BRL:[2, "R$", "R$"], CAD:[2, "$", "C$"], CDF:[2, "FrCD", "CDF"], CHF:[2, "CHF", "CHF"], CLP:[0, "$", "CL$"], CNY:[2, "\u00a5", "RMB\u00a5"], COP:[32, "$", "COL$"], CRC:[0, "\u20a1", "CR\u20a1"], CZK:[50, "K\u010d", "K\u010d"], DKK:[50, "kr.", "kr."], DOP:[2, "RD$", "RD$"], EGP:[2, "\u00a3", "LE"], ETB:[2, "Birr", "Birr"], EUR:[2, "\u20ac", 
"\u20ac"], GBP:[2, "\u00a3", "GB\u00a3"], HKD:[2, "$", "HK$"], HRK:[2, "kn", "kn"], HUF:[34, "Ft", "Ft"], IDR:[0, "Rp", "Rp"], ILS:[34, "\u20aa", "IL\u20aa"], INR:[2, "\u20b9", "Rs"], IRR:[0, "Rial", "IRR"], ISK:[0, "kr", "kr"], JMD:[2, "$", "JA$"], JPY:[0, "\u00a5", "JP\u00a5"], KRW:[0, "\u20a9", "KR\u20a9"], LKR:[2, "Rs", "SLRs"], LTL:[2, "Lt", "Lt"], MNT:[0, "\u20ae", "MN\u20ae"], MVR:[2, "Rf", "MVR"], MXN:[2, "$", "Mex$"], MYR:[2, "RM", "RM"], NOK:[50, "kr", "NOkr"], PAB:[2, "B/.", "B/."], PEN:[2, 
"S/.", "S/."], PHP:[2, "\u20b1", "PHP"], PKR:[0, "Rs", "PKRs."], PLN:[50, "z\u0142", "z\u0142"], RON:[2, "RON", "RON"], RSD:[0, "din", "RSD"], RUB:[50, "\u20bd", "RUB"], SAR:[2, "Rial", "Rial"], SEK:[50, "kr", "kr"], SGD:[2, "$", "S$"], THB:[2, "\u0e3f", "THB"], TRY:[2, "TL", "YTL"], TWD:[2, "NT$", "NT$"], TZS:[0, "TSh", "TSh"], UAH:[2, "\u0433\u0440\u043d.", "UAH"], USD:[2, "$", "US$"], UYU:[2, "$", "$U"], VND:[48, "\u20ab", "VN\u20ab"], YER:[0, "Rial", "Rial"], ZAR:[2, "R", "ZAR"]};
goog.i18n.currency.CurrencyInfoTier2 = {AFN:[48, "Af.", "AFN"], AMD:[32, "Dram", "dram"], ANG:[2, "NAf.", "ANG"], AOA:[2, "Kz", "Kz"], ARS:[34, "$", "AR$"], AWG:[2, "Afl.", "Afl."], AZN:[34, "\u20bc", "AZN"], BAM:[2, "KM", "KM"], BBD:[2, "$", "Bds$"], BHD:[3, "din", "din"], BIF:[0, "FBu", "FBu"], BMD:[2, "$", "BD$"], BND:[2, "$", "B$"], BOB:[2, "Bs", "Bs"], BSD:[2, "$", "BS$"], BTN:[2, "Nu.", "Nu."], BWP:[2, "P", "pula"], BYN:[50, "\u0440.", "BYN"], BYR:[48, "\u0440.", "BYR"], BZD:[2, "$", "BZ$"], 
CNH:[2, "\u00a5", "RMB\u00a5"], CUC:[1, "$", "CUC$"], CUP:[2, "$", "CU$"], CVE:[2, "CVE", "Esc"], DJF:[0, "Fdj", "Fdj"], DZD:[2, "din", "din"], ERN:[2, "Nfk", "Nfk"], FJD:[2, "$", "FJ$"], FKP:[2, "\u00a3", "FK\u00a3"], GEL:[2, "GEL", "GEL"], GHS:[2, "GHS", "GHS"], GIP:[2, "\u00a3", "GI\u00a3"], GMD:[2, "GMD", "GMD"], GNF:[0, "FG", "FG"], GTQ:[2, "Q", "GTQ"], GYD:[0, "$", "GY$"], HNL:[2, "L", "HNL"], HTG:[2, "HTG", "HTG"], IQD:[0, "din", "IQD"], JOD:[3, "din", "JOD"], KES:[2, "Ksh", "Ksh"], KGS:[2, 
"KGS", "KGS"], KHR:[2, "Riel", "KHR"], KMF:[0, "CF", "KMF"], KPW:[0, "\u20a9KP", "KPW"], KWD:[3, "din", "KWD"], KYD:[2, "$", "KY$"], KZT:[2, "\u20b8", "KZT"], LAK:[0, "\u20ad", "\u20ad"], LBP:[0, "L\u00a3", "LBP"], LRD:[2, "$", "L$"], LSL:[2, "LSL", "LSL"], LYD:[3, "din", "LD"], MAD:[2, "dh", "MAD"], MDL:[2, "MDL", "MDL"], MGA:[0, "Ar", "MGA"], MKD:[2, "din", "MKD"], MMK:[0, "K", "MMK"], MOP:[2, "MOP", "MOP$"], MRO:[0, "MRO", "MRO"], MUR:[0, "MURs", "MURs"], MWK:[2, "MWK", "MWK"], MZN:[2, "MTn", 
"MTn"], NAD:[2, "$", "N$"], NGN:[2, "\u20a6", "NG\u20a6"], NIO:[2, "C$", "C$"], NPR:[2, "Rs", "NPRs"], NZD:[2, "$", "NZ$"], OMR:[3, "Rial", "OMR"], PGK:[2, "PGK", "PGK"], PYG:[16, "Gs.", "PYG"], QAR:[2, "Rial", "QR"], RWF:[0, "RF", "RF"], SBD:[2, "$", "SI$"], SCR:[2, "SCR", "SCR"], SDG:[2, "SDG", "SDG"], SHP:[2, "\u00a3", "SH\u00a3"], SLL:[0, "SLL", "SLL"], SOS:[0, "SOS", "SOS"], SRD:[2, "$", "SR$"], SSP:[2, "\u00a3", "SSP"], STD:[0, "Db", "Db"], SYP:[0, "\u00a3", "SY\u00a3"], SZL:[2, "SZL", "SZL"], 
TJS:[2, "Som", "TJS"], TND:[3, "din", "DT"], TOP:[2, "T$", "T$"], TTD:[2, "$", "TT$"], UGX:[0, "UGX", "UGX"], UZS:[0, "so\u02bcm", "UZS"], VEF:[2, "Bs", "Bs"], VUV:[0, "VUV", "VUV"], WST:[2, "WST", "WST"], XAF:[0, "FCFA", "FCFA"], XCD:[2, "$", "EC$"], XOF:[0, "CFA", "CFA"], XPF:[48, "FCFP", "FCFP"], ZMW:[0, "ZMW", "ZMW"], ZWD:[0, "$", "Z$"]};
goog.i18n.NumberFormatSymbols_af = {DECIMAL_SEP:",", GROUP_SEP:"\u00a0", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00", DEF_CURRENCY_CODE:"ZAR"};
goog.i18n.NumberFormatSymbols_am = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00", DEF_CURRENCY_CODE:"ETB"};
goog.i18n.NumberFormatSymbols_ar = {DECIMAL_SEP:"\u066b", GROUP_SEP:"\u066c", PERCENT:"\u066a\u061c", ZERO_DIGIT:"\u0660", PLUS_SIGN:"\u061c+", MINUS_SIGN:"\u061c-", EXP_SYMBOL:"\u0627\u0633", PERMILL:"\u0609", INFINITY:"\u221e", NAN:"\u0644\u064a\u0633\u00a0\u0631\u0642\u0645", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0\u00a0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"EGP"};
goog.i18n.NumberFormatSymbols_ar_u_nu_latn = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"\u200e%\u200e", ZERO_DIGIT:"0", PLUS_SIGN:"\u200e+", MINUS_SIGN:"\u200e-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"\u0644\u064a\u0633\u00a0\u0631\u0642\u0645\u064b\u0627", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4\u00a0#,##0.00", DEF_CURRENCY_CODE:"EGP"};
goog.i18n.NumberFormatSymbols_ar_DZ = {DECIMAL_SEP:",", GROUP_SEP:".", PERCENT:"\u200e%\u200e", ZERO_DIGIT:"0", PLUS_SIGN:"\u200e+", MINUS_SIGN:"\u200e-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"\u0644\u064a\u0633\u00a0\u0631\u0642\u0645\u064b\u0627", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4\u00a0#,##0.00", DEF_CURRENCY_CODE:"DZD"};
goog.i18n.NumberFormatSymbols_az = {DECIMAL_SEP:",", GROUP_SEP:".", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4\u00a0#,##0.00", DEF_CURRENCY_CODE:"AZN"};
goog.i18n.NumberFormatSymbols_be = {DECIMAL_SEP:",", GROUP_SEP:"\u00a0", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0\u00a0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"BYN"};
goog.i18n.NumberFormatSymbols_bg = {DECIMAL_SEP:",", GROUP_SEP:"\u00a0", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"BGN"};
goog.i18n.NumberFormatSymbols_bn = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"\u09e6", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"#,##,##0.00\u00a4", DEF_CURRENCY_CODE:"BDT"};
goog.i18n.NumberFormatSymbols_bn_u_nu_latn = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##,##0%", CURRENCY_PATTERN:"#,##,##0.00\u00a4", DEF_CURRENCY_CODE:"BDT"};
goog.i18n.NumberFormatSymbols_br = {DECIMAL_SEP:",", GROUP_SEP:"\u00a0", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0\u00a0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"EUR"};
goog.i18n.NumberFormatSymbols_bs = {DECIMAL_SEP:",", GROUP_SEP:".", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0\u00a0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"BAM"};
goog.i18n.NumberFormatSymbols_ca = {DECIMAL_SEP:",", GROUP_SEP:".", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"EUR"};
goog.i18n.NumberFormatSymbols_chr = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00", DEF_CURRENCY_CODE:"USD"};
goog.i18n.NumberFormatSymbols_cs = {DECIMAL_SEP:",", GROUP_SEP:"\u00a0", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0\u00a0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"CZK"};
goog.i18n.NumberFormatSymbols_cy = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00", DEF_CURRENCY_CODE:"GBP"};
goog.i18n.NumberFormatSymbols_da = {DECIMAL_SEP:",", GROUP_SEP:".", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0\u00a0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"DKK"};
goog.i18n.NumberFormatSymbols_de = {DECIMAL_SEP:",", GROUP_SEP:".", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0\u00a0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"EUR"};
goog.i18n.NumberFormatSymbols_de_AT = {DECIMAL_SEP:",", GROUP_SEP:"\u00a0", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0\u00a0%", CURRENCY_PATTERN:"\u00a4\u00a0#,##0.00", DEF_CURRENCY_CODE:"EUR"};
goog.i18n.NumberFormatSymbols_de_CH = {DECIMAL_SEP:".", GROUP_SEP:"\u2019", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4\u00a0#,##0.00;\u00a4-#,##0.00", DEF_CURRENCY_CODE:"CHF"};
goog.i18n.NumberFormatSymbols_el = {DECIMAL_SEP:",", GROUP_SEP:".", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"e", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"EUR"};
goog.i18n.NumberFormatSymbols_en = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00", DEF_CURRENCY_CODE:"USD"};
goog.i18n.NumberFormatSymbols_en_AU = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"e", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00", DEF_CURRENCY_CODE:"AUD"};
goog.i18n.NumberFormatSymbols_en_CA = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00", DEF_CURRENCY_CODE:"CAD"};
goog.i18n.NumberFormatSymbols_en_GB = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00", DEF_CURRENCY_CODE:"GBP"};
goog.i18n.NumberFormatSymbols_en_IE = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00", DEF_CURRENCY_CODE:"EUR"};
goog.i18n.NumberFormatSymbols_en_IN = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##,##0%", CURRENCY_PATTERN:"\u00a4\u00a0#,##,##0.00", DEF_CURRENCY_CODE:"INR"};
goog.i18n.NumberFormatSymbols_en_SG = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00", DEF_CURRENCY_CODE:"SGD"};
goog.i18n.NumberFormatSymbols_en_US = goog.i18n.NumberFormatSymbols_en;
goog.i18n.NumberFormatSymbols_en_ZA = {DECIMAL_SEP:",", GROUP_SEP:"\u00a0", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00", DEF_CURRENCY_CODE:"ZAR"};
goog.i18n.NumberFormatSymbols_es = {DECIMAL_SEP:",", GROUP_SEP:".", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0\u00a0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"EUR"};
goog.i18n.NumberFormatSymbols_es_419 = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0\u00a0%", CURRENCY_PATTERN:"\u00a4#,##0.00", DEF_CURRENCY_CODE:"MXN"};
goog.i18n.NumberFormatSymbols_es_ES = goog.i18n.NumberFormatSymbols_es;
goog.i18n.NumberFormatSymbols_es_MX = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00", DEF_CURRENCY_CODE:"MXN"};
goog.i18n.NumberFormatSymbols_es_US = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0\u00a0%", CURRENCY_PATTERN:"\u00a4#,##0.00", DEF_CURRENCY_CODE:"USD"};
goog.i18n.NumberFormatSymbols_et = {DECIMAL_SEP:",", GROUP_SEP:"\u00a0", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"\u2212", EXP_SYMBOL:"\u00d710^", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"EUR"};
goog.i18n.NumberFormatSymbols_eu = {DECIMAL_SEP:",", GROUP_SEP:".", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"%\u00a0#,##0", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"EUR"};
goog.i18n.NumberFormatSymbols_fa = {DECIMAL_SEP:"\u066b", GROUP_SEP:"\u066c", PERCENT:"\u200e\u066a", ZERO_DIGIT:"\u06f0", PLUS_SIGN:"\u200e+", MINUS_SIGN:"\u200e\u2212", EXP_SYMBOL:"\u00d7\u06f1\u06f0^", PERMILL:"\u0609", INFINITY:"\u221e", NAN:"\u0646\u0627\u0639\u062f\u062f", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"%\u00a0#,##0;%\u00a0-#,##0", CURRENCY_PATTERN:"#,##0.00\u00a0\u061c\u00a4;\u061c-#,##0.00\u00a0\u061c\u00a4", DEF_CURRENCY_CODE:"IRR"};
goog.i18n.NumberFormatSymbols_fa_u_nu_latn = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"\u200e+", MINUS_SIGN:"\u200e\u2212", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"\u0646\u0627\u0639\u062f\u062f", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u200e\u00a4\u00a0#,##0.00", DEF_CURRENCY_CODE:"IRR"};
goog.i18n.NumberFormatSymbols_fi = {DECIMAL_SEP:",", GROUP_SEP:"\u00a0", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"\u2212", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"ep\u00e4luku", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0\u00a0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"EUR"};
goog.i18n.NumberFormatSymbols_fil = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00", DEF_CURRENCY_CODE:"PHP"};
goog.i18n.NumberFormatSymbols_fr = {DECIMAL_SEP:",", GROUP_SEP:"\u00a0", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0\u00a0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"EUR"};
goog.i18n.NumberFormatSymbols_fr_CA = {DECIMAL_SEP:",", GROUP_SEP:"\u00a0", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0\u00a0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"CAD"};
goog.i18n.NumberFormatSymbols_ga = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00", DEF_CURRENCY_CODE:"EUR"};
goog.i18n.NumberFormatSymbols_gl = {DECIMAL_SEP:",", GROUP_SEP:".", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0\u00a0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"EUR"};
goog.i18n.NumberFormatSymbols_gsw = {DECIMAL_SEP:".", GROUP_SEP:"\u2019", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"\u2212", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0\u00a0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"CHF"};
goog.i18n.NumberFormatSymbols_gu = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##,##0.###", SCIENTIFIC_PATTERN:"[#E0]", PERCENT_PATTERN:"#,##,##0%", CURRENCY_PATTERN:"\u00a4#,##,##0.00", DEF_CURRENCY_CODE:"INR"};
goog.i18n.NumberFormatSymbols_haw = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00", DEF_CURRENCY_CODE:"USD"};
goog.i18n.NumberFormatSymbols_he = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"\u200e+", MINUS_SIGN:"\u200e-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u200f#,##0.00\u00a0\u00a4;\u200f-#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"ILS"};
goog.i18n.NumberFormatSymbols_hi = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##,##0.###", SCIENTIFIC_PATTERN:"[#E0]", PERCENT_PATTERN:"#,##,##0%", CURRENCY_PATTERN:"\u00a4#,##,##0.00", DEF_CURRENCY_CODE:"INR"};
goog.i18n.NumberFormatSymbols_hr = {DECIMAL_SEP:",", GROUP_SEP:".", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"HRK"};
goog.i18n.NumberFormatSymbols_hu = {DECIMAL_SEP:",", GROUP_SEP:"\u00a0", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"HUF"};
goog.i18n.NumberFormatSymbols_hy = {DECIMAL_SEP:",", GROUP_SEP:"\u00a0", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"\u0548\u0579\u0539", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4\u00a0#,##0.00", DEF_CURRENCY_CODE:"AMD"};
goog.i18n.NumberFormatSymbols_id = {DECIMAL_SEP:",", GROUP_SEP:".", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00", DEF_CURRENCY_CODE:"IDR"};
goog.i18n.NumberFormatSymbols_in = {DECIMAL_SEP:",", GROUP_SEP:".", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00", DEF_CURRENCY_CODE:"IDR"};
goog.i18n.NumberFormatSymbols_is = {DECIMAL_SEP:",", GROUP_SEP:".", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"ISK"};
goog.i18n.NumberFormatSymbols_it = {DECIMAL_SEP:",", GROUP_SEP:".", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"EUR"};
goog.i18n.NumberFormatSymbols_iw = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"\u200e+", MINUS_SIGN:"\u200e-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u200f#,##0.00\u00a0\u00a4;\u200f-#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"ILS"};
goog.i18n.NumberFormatSymbols_ja = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00", DEF_CURRENCY_CODE:"JPY"};
goog.i18n.NumberFormatSymbols_ka = {DECIMAL_SEP:",", GROUP_SEP:"\u00a0", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"\u10d0\u10e0\u00a0\u10d0\u10e0\u10d8\u10e1\u00a0\u10e0\u10d8\u10ea\u10ee\u10d5\u10d8", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0\u00a0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"GEL"};
goog.i18n.NumberFormatSymbols_kk = {DECIMAL_SEP:",", GROUP_SEP:"\u00a0", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"\u0441\u0430\u043d\u00a0\u0435\u043c\u0435\u0441", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"KZT"};
goog.i18n.NumberFormatSymbols_km = {DECIMAL_SEP:",", GROUP_SEP:".", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"#,##0.00\u00a4", DEF_CURRENCY_CODE:"KHR"};
goog.i18n.NumberFormatSymbols_kn = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00", DEF_CURRENCY_CODE:"INR"};
goog.i18n.NumberFormatSymbols_ko = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00", DEF_CURRENCY_CODE:"KRW"};
goog.i18n.NumberFormatSymbols_ky = {DECIMAL_SEP:",", GROUP_SEP:"\u00a0", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"\u0441\u0430\u043d\u00a0\u044d\u043c\u0435\u0441", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"KGS"};
goog.i18n.NumberFormatSymbols_ln = {DECIMAL_SEP:",", GROUP_SEP:".", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"CDF"};
goog.i18n.NumberFormatSymbols_lo = {DECIMAL_SEP:",", GROUP_SEP:".", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"\u0e9a\u0ecd\u0ec8\u200b\u0ec1\u0ea1\u0ec8\u0e99\u200b\u0ec2\u0e95\u200b\u0ec0\u0ea5\u0e81", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00;\u00a4-#,##0.00", DEF_CURRENCY_CODE:"LAK"};
goog.i18n.NumberFormatSymbols_lt = {DECIMAL_SEP:",", GROUP_SEP:"\u00a0", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"\u2212", EXP_SYMBOL:"\u00d710^", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0\u00a0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"EUR"};
goog.i18n.NumberFormatSymbols_lv = {DECIMAL_SEP:",", GROUP_SEP:"\u00a0", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NS", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"EUR"};
goog.i18n.NumberFormatSymbols_mk = {DECIMAL_SEP:",", GROUP_SEP:".", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"MKD"};
goog.i18n.NumberFormatSymbols_ml = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00", DEF_CURRENCY_CODE:"INR"};
goog.i18n.NumberFormatSymbols_mn = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4\u00a0#,##0.00", DEF_CURRENCY_CODE:"MNT"};
goog.i18n.NumberFormatSymbols_mo = {DECIMAL_SEP:",", GROUP_SEP:".", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0\u00a0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"MDL"};
goog.i18n.NumberFormatSymbols_mr = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"\u0966", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##,##0.###", SCIENTIFIC_PATTERN:"[#E0]", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00", DEF_CURRENCY_CODE:"INR"};
goog.i18n.NumberFormatSymbols_mr_u_nu_latn = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##,##0.###", SCIENTIFIC_PATTERN:"[#E0]", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00", DEF_CURRENCY_CODE:"INR"};
goog.i18n.NumberFormatSymbols_ms = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00", DEF_CURRENCY_CODE:"MYR"};
goog.i18n.NumberFormatSymbols_mt = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00", DEF_CURRENCY_CODE:"EUR"};
goog.i18n.NumberFormatSymbols_my = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"\u1040", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"\u1002\u100f\u1014\u103a\u1038\u1019\u101f\u102f\u1010\u103a\u101e\u1031\u102c", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"MMK"};
goog.i18n.NumberFormatSymbols_my_u_nu_latn = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"\u1002\u100f\u1014\u103a\u1038\u1019\u101f\u102f\u1010\u103a\u101e\u1031\u102c", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"MMK"};
goog.i18n.NumberFormatSymbols_nb = {DECIMAL_SEP:",", GROUP_SEP:"\u00a0", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"\u2212", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0\u00a0%", CURRENCY_PATTERN:"\u00a4\u00a0#,##0.00", DEF_CURRENCY_CODE:"NOK"};
goog.i18n.NumberFormatSymbols_ne = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"\u0966", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4\u00a0#,##0.00", DEF_CURRENCY_CODE:"NPR"};
goog.i18n.NumberFormatSymbols_ne_u_nu_latn = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4\u00a0#,##0.00", DEF_CURRENCY_CODE:"NPR"};
goog.i18n.NumberFormatSymbols_nl = {DECIMAL_SEP:",", GROUP_SEP:".", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4\u00a0#,##0.00;\u00a4\u00a0-#,##0.00", DEF_CURRENCY_CODE:"EUR"};
goog.i18n.NumberFormatSymbols_no = {DECIMAL_SEP:",", GROUP_SEP:"\u00a0", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"\u2212", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0\u00a0%", CURRENCY_PATTERN:"\u00a4\u00a0#,##0.00", DEF_CURRENCY_CODE:"NOK"};
goog.i18n.NumberFormatSymbols_no_NO = goog.i18n.NumberFormatSymbols_no;
goog.i18n.NumberFormatSymbols_or = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##,##0%", CURRENCY_PATTERN:"\u00a4\u00a0#,##,##0.00", DEF_CURRENCY_CODE:"INR"};
goog.i18n.NumberFormatSymbols_pa = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##,##0.###", SCIENTIFIC_PATTERN:"[#E0]", PERCENT_PATTERN:"#,##,##0%", CURRENCY_PATTERN:"\u00a4\u00a0#,##,##0.00", DEF_CURRENCY_CODE:"INR"};
goog.i18n.NumberFormatSymbols_pl = {DECIMAL_SEP:",", GROUP_SEP:"\u00a0", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"PLN"};
goog.i18n.NumberFormatSymbols_pt = {DECIMAL_SEP:",", GROUP_SEP:".", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00", DEF_CURRENCY_CODE:"BRL"};
goog.i18n.NumberFormatSymbols_pt_BR = goog.i18n.NumberFormatSymbols_pt;
goog.i18n.NumberFormatSymbols_pt_PT = {DECIMAL_SEP:",", GROUP_SEP:"\u00a0", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"EUR"};
goog.i18n.NumberFormatSymbols_ro = {DECIMAL_SEP:",", GROUP_SEP:".", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0\u00a0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"RON"};
goog.i18n.NumberFormatSymbols_ru = {DECIMAL_SEP:",", GROUP_SEP:"\u00a0", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"\u043d\u0435\u00a0\u0447\u0438\u0441\u043b\u043e", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0\u00a0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"RUB"};
goog.i18n.NumberFormatSymbols_sh = {DECIMAL_SEP:",", GROUP_SEP:".", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"RSD"};
goog.i18n.NumberFormatSymbols_si = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00", DEF_CURRENCY_CODE:"LKR"};
goog.i18n.NumberFormatSymbols_sk = {DECIMAL_SEP:",", GROUP_SEP:"\u00a0", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"e", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0\u00a0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"EUR"};
goog.i18n.NumberFormatSymbols_sl = {DECIMAL_SEP:",", GROUP_SEP:".", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"\u2212", EXP_SYMBOL:"e", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0\u00a0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"EUR"};
goog.i18n.NumberFormatSymbols_sq = {DECIMAL_SEP:",", GROUP_SEP:"\u00a0", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"ALL"};
goog.i18n.NumberFormatSymbols_sr = {DECIMAL_SEP:",", GROUP_SEP:".", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"RSD"};
goog.i18n.NumberFormatSymbols_sr_Latn = goog.i18n.NumberFormatSymbols_sr;
goog.i18n.NumberFormatSymbols_sv = {DECIMAL_SEP:",", GROUP_SEP:"\u00a0", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"\u2212", EXP_SYMBOL:"\u00d710^", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"\u00a4\u00a4\u00a4", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0\u00a0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"SEK"};
goog.i18n.NumberFormatSymbols_sw = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00", DEF_CURRENCY_CODE:"TZS"};
goog.i18n.NumberFormatSymbols_ta = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##,##0%", CURRENCY_PATTERN:"\u00a4\u00a0#,##,##0.00", DEF_CURRENCY_CODE:"INR"};
goog.i18n.NumberFormatSymbols_te = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##,##0.00", DEF_CURRENCY_CODE:"INR"};
goog.i18n.NumberFormatSymbols_th = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00", DEF_CURRENCY_CODE:"THB"};
goog.i18n.NumberFormatSymbols_tl = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00", DEF_CURRENCY_CODE:"PHP"};
goog.i18n.NumberFormatSymbols_tr = {DECIMAL_SEP:",", GROUP_SEP:".", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"%#,##0", CURRENCY_PATTERN:"\u00a4#,##0.00", DEF_CURRENCY_CODE:"TRY"};
goog.i18n.NumberFormatSymbols_uk = {DECIMAL_SEP:",", GROUP_SEP:"\u00a0", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"\u0415", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"UAH"};
goog.i18n.NumberFormatSymbols_ur = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"\u200e+", MINUS_SIGN:"\u200e-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##,##0%", CURRENCY_PATTERN:"\u00a4\u00a0#,##,##0.00", DEF_CURRENCY_CODE:"PKR"};
goog.i18n.NumberFormatSymbols_uz = {DECIMAL_SEP:",", GROUP_SEP:"\u00a0", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"haqiqiy\u00a0son\u00a0emas", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"#,##0.00\u00a0\u00a4", DEF_CURRENCY_CODE:"UZS"};
goog.i18n.NumberFormatSymbols_vi = {DECIMAL_SEP:",", GROUP_SEP:".", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4\u00a0#,##0.00", DEF_CURRENCY_CODE:"VND"};
goog.i18n.NumberFormatSymbols_zh = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00", DEF_CURRENCY_CODE:"CNY"};
goog.i18n.NumberFormatSymbols_zh_CN = goog.i18n.NumberFormatSymbols_zh;
goog.i18n.NumberFormatSymbols_zh_HK = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"\u975e\u6578\u503c", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00", DEF_CURRENCY_CODE:"HKD"};
goog.i18n.NumberFormatSymbols_zh_TW = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"\u975e\u6578\u503c", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00", DEF_CURRENCY_CODE:"TWD"};
goog.i18n.NumberFormatSymbols_zu = {DECIMAL_SEP:".", GROUP_SEP:",", PERCENT:"%", ZERO_DIGIT:"0", PLUS_SIGN:"+", MINUS_SIGN:"-", EXP_SYMBOL:"E", PERMILL:"\u2030", INFINITY:"\u221e", NAN:"NaN", DECIMAL_PATTERN:"#,##0.###", SCIENTIFIC_PATTERN:"#E0", PERCENT_PATTERN:"#,##0%", CURRENCY_PATTERN:"\u00a4#,##0.00", DEF_CURRENCY_CODE:"ZAR"};
goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_en;
goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_en;
switch(goog.LOCALE) {
  case "af":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_af;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_af;
    break;
  case "am":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_am;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_am;
    break;
  case "ar":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ar;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_ar_u_nu_latn;
    break;
  case "ar_DZ":
  case "ar-DZ":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ar_DZ;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_ar_DZ;
    break;
  case "az":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_az;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_az;
    break;
  case "be":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_be;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_be;
    break;
  case "bg":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_bg;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_bg;
    break;
  case "bn":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_bn;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_bn_u_nu_latn;
    break;
  case "br":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_br;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_br;
    break;
  case "bs":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_bs;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_bs;
    break;
  case "ca":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ca;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_ca;
    break;
  case "chr":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_chr;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_chr;
    break;
  case "cs":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_cs;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_cs;
    break;
  case "cy":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_cy;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_cy;
    break;
  case "da":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_da;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_da;
    break;
  case "de":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_de;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_de;
    break;
  case "de_AT":
  case "de-AT":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_de_AT;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_de_AT;
    break;
  case "de_CH":
  case "de-CH":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_de_CH;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_de_CH;
    break;
  case "el":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_el;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_el;
    break;
  case "en":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_en;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_en;
    break;
  case "en_AU":
  case "en-AU":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_en_AU;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_en_AU;
    break;
  case "en_CA":
  case "en-CA":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_en_CA;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_en_CA;
    break;
  case "en_GB":
  case "en-GB":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_en_GB;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_en_GB;
    break;
  case "en_IE":
  case "en-IE":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_en_IE;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_en_IE;
    break;
  case "en_IN":
  case "en-IN":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_en_IN;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_en_IN;
    break;
  case "en_SG":
  case "en-SG":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_en_SG;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_en_SG;
    break;
  case "en_US":
  case "en-US":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_en_US;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_en_US;
    break;
  case "en_ZA":
  case "en-ZA":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_en_ZA;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_en_ZA;
    break;
  case "es":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_es;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_es;
    break;
  case "es_419":
  case "es-419":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_es_419;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_es_419;
    break;
  case "es_ES":
  case "es-ES":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_es_ES;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_es_ES;
    break;
  case "es_MX":
  case "es-MX":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_es_MX;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_es_MX;
    break;
  case "es_US":
  case "es-US":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_es_US;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_es_US;
    break;
  case "et":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_et;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_et;
    break;
  case "eu":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_eu;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_eu;
    break;
  case "fa":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_fa;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_fa_u_nu_latn;
    break;
  case "fi":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_fi;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_fi;
    break;
  case "fil":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_fil;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_fil;
    break;
  case "fr":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_fr;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_fr;
    break;
  case "fr_CA":
  case "fr-CA":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_fr_CA;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_fr_CA;
    break;
  case "ga":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ga;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_ga;
    break;
  case "gl":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_gl;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_gl;
    break;
  case "gsw":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_gsw;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_gsw;
    break;
  case "gu":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_gu;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_gu;
    break;
  case "haw":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_haw;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_haw;
    break;
  case "he":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_he;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_he;
    break;
  case "hi":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_hi;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_hi;
    break;
  case "hr":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_hr;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_hr;
    break;
  case "hu":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_hu;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_hu;
    break;
  case "hy":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_hy;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_hy;
    break;
  case "id":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_id;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_id;
    break;
  case "in":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_in;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_in;
    break;
  case "is":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_is;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_is;
    break;
  case "it":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_it;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_it;
    break;
  case "iw":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_iw;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_iw;
    break;
  case "ja":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ja;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_ja;
    break;
  case "ka":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ka;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_ka;
    break;
  case "kk":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_kk;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_kk;
    break;
  case "km":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_km;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_km;
    break;
  case "kn":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_kn;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_kn;
    break;
  case "ko":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ko;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_ko;
    break;
  case "ky":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ky;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_ky;
    break;
  case "ln":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ln;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_ln;
    break;
  case "lo":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_lo;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_lo;
    break;
  case "lt":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_lt;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_lt;
    break;
  case "lv":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_lv;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_lv;
    break;
  case "mk":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_mk;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_mk;
    break;
  case "ml":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ml;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_ml;
    break;
  case "mn":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_mn;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_mn;
    break;
  case "mo":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_mo;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_mo;
    break;
  case "mr":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_mr;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_mr_u_nu_latn;
    break;
  case "ms":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ms;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_ms;
    break;
  case "mt":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_mt;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_mt;
    break;
  case "my":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_my;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_my_u_nu_latn;
    break;
  case "nb":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_nb;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_nb;
    break;
  case "ne":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ne;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_ne_u_nu_latn;
    break;
  case "nl":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_nl;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_nl;
    break;
  case "no":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_no;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_no;
    break;
  case "no_NO":
  case "no-NO":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_no_NO;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_no_NO;
    break;
  case "or":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_or;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_or;
    break;
  case "pa":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_pa;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_pa;
    break;
  case "pl":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_pl;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_pl;
    break;
  case "pt":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_pt;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_pt;
    break;
  case "pt_BR":
  case "pt-BR":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_pt_BR;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_pt_BR;
    break;
  case "pt_PT":
  case "pt-PT":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_pt_PT;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_pt_PT;
    break;
  case "ro":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ro;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_ro;
    break;
  case "ru":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ru;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_ru;
    break;
  case "sh":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_sh;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_sh;
    break;
  case "si":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_si;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_si;
    break;
  case "sk":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_sk;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_sk;
    break;
  case "sl":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_sl;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_sl;
    break;
  case "sq":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_sq;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_sq;
    break;
  case "sr":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_sr;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_sr;
    break;
  case "sr_Latn":
  case "sr-Latn":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_sr_Latn;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_sr_Latn;
    break;
  case "sv":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_sv;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_sv;
    break;
  case "sw":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_sw;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_sw;
    break;
  case "ta":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ta;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_ta;
    break;
  case "te":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_te;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_te;
    break;
  case "th":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_th;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_th;
    break;
  case "tl":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_tl;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_tl;
    break;
  case "tr":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_tr;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_tr;
    break;
  case "uk":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_uk;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_uk;
    break;
  case "ur":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_ur;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_ur;
    break;
  case "uz":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_uz;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_uz;
    break;
  case "vi":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_vi;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_vi;
    break;
  case "zh":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_zh;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_zh;
    break;
  case "zh_CN":
  case "zh-CN":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_zh_CN;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_zh_CN;
    break;
  case "zh_HK":
  case "zh-HK":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_zh_HK;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_zh_HK;
    break;
  case "zh_TW":
  case "zh-TW":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_zh_TW;
    goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_zh_TW;
    break;
  case "zu":
    goog.i18n.NumberFormatSymbols = goog.i18n.NumberFormatSymbols_zu, goog.i18n.NumberFormatSymbols_u_nu_latn = goog.i18n.NumberFormatSymbols_zu;
}
;goog.i18n.NumberFormat = function(pattern, opt_currency, opt_currencyStyle) {
  this.intlCurrencyCode_ = opt_currency;
  this.currencyStyle_ = opt_currencyStyle || goog.i18n.NumberFormat.CurrencyStyle.LOCAL;
  this.maximumIntegerDigits_ = 40;
  this.minimumIntegerDigits_ = 1;
  this.significantDigits_ = 0;
  this.maximumFractionDigits_ = 3;
  this.minimumFractionDigits_ = 0;
  this.minExponentDigits_ = 0;
  this.useSignForPositiveExponent_ = !1;
  this.showTrailingZeros_ = !1;
  this.positivePrefix_ = "";
  this.positiveSuffix_ = "";
  this.negativePrefix_ = goog.i18n.NumberFormat.getNumberFormatSymbols_().MINUS_SIGN;
  this.negativeSuffix_ = "";
  this.multiplier_ = 1;
  this.negativePercentSignExpected_ = !1;
  this.groupingArray_ = [];
  this.decimalSeparatorAlwaysShown_ = !1;
  this.useExponentialNotation_ = !1;
  this.compactStyle_ = goog.i18n.NumberFormat.CompactStyle.NONE;
  this.baseFormattingNumber_ = null;
  "number" == typeof pattern ? this.applyStandardPattern_(pattern) : this.applyPattern_(pattern);
};
goog.i18n.NumberFormat.Format = {DECIMAL:1, SCIENTIFIC:2, PERCENT:3, CURRENCY:4, COMPACT_SHORT:5, COMPACT_LONG:6};
goog.i18n.NumberFormat.CurrencyStyle = {LOCAL:0, PORTABLE:1, GLOBAL:2};
goog.i18n.NumberFormat.CompactStyle = {NONE:0, SHORT:1, LONG:2};
goog.i18n.NumberFormat.enforceAsciiDigits_ = !1;
goog.i18n.NumberFormat.setEnforceAsciiDigits = function(doEnforce) {
  goog.i18n.NumberFormat.enforceAsciiDigits_ = doEnforce;
};
goog.i18n.NumberFormat.isEnforceAsciiDigits = function() {
  return goog.i18n.NumberFormat.enforceAsciiDigits_;
};
goog.i18n.NumberFormat.getNumberFormatSymbols_ = function() {
  return goog.i18n.NumberFormat.enforceAsciiDigits_ ? goog.i18n.NumberFormatSymbols_u_nu_latn : goog.i18n.NumberFormatSymbols;
};
goog.i18n.NumberFormat.prototype.getCurrencyCode_ = function() {
  return this.intlCurrencyCode_ || goog.i18n.NumberFormat.getNumberFormatSymbols_().DEF_CURRENCY_CODE;
};
goog.i18n.NumberFormat.prototype.setMinimumFractionDigits = function(min) {
  if (0 < this.significantDigits_ && 0 < min) {
    throw Error("Can't combine significant digits and minimum fraction digits");
  }
  this.minimumFractionDigits_ = min;
  return this;
};
goog.i18n.NumberFormat.prototype.setMaximumFractionDigits = function(max) {
  if (308 < max) {
    throw Error("Unsupported maximum fraction digits: " + max);
  }
  this.maximumFractionDigits_ = max;
  return this;
};
goog.i18n.NumberFormat.prototype.setSignificantDigits = function(number) {
  if (0 < this.minimumFractionDigits_ && 0 <= number) {
    throw Error("Can't combine significant digits and minimum fraction digits");
  }
  this.significantDigits_ = number;
  return this;
};
goog.i18n.NumberFormat.prototype.applyPattern_ = function(pattern) {
  pattern.replace(/ /g, "\u00a0");
  var pos = [0];
  this.positivePrefix_ = this.parseAffix_(pattern, pos);
  var trunkStart = pos[0];
  this.parseTrunk_(pattern, pos);
  var trunkLen = pos[0] - trunkStart;
  this.positiveSuffix_ = this.parseAffix_(pattern, pos);
  pos[0] < pattern.length && pattern.charAt(pos[0]) == goog.i18n.NumberFormat.PATTERN_SEPARATOR_ ? (pos[0]++, 1 != this.multiplier_ && (this.negativePercentSignExpected_ = !0), this.negativePrefix_ = this.parseAffix_(pattern, pos), pos[0] += trunkLen, this.negativeSuffix_ = this.parseAffix_(pattern, pos)) : (this.negativePrefix_ += this.positivePrefix_, this.negativeSuffix_ += this.positiveSuffix_);
};
goog.i18n.NumberFormat.prototype.applyStandardPattern_ = function(patternType) {
  switch(patternType) {
    case goog.i18n.NumberFormat.Format.DECIMAL:
      this.applyPattern_(goog.i18n.NumberFormat.getNumberFormatSymbols_().DECIMAL_PATTERN);
      break;
    case goog.i18n.NumberFormat.Format.SCIENTIFIC:
      this.applyPattern_(goog.i18n.NumberFormat.getNumberFormatSymbols_().SCIENTIFIC_PATTERN);
      break;
    case goog.i18n.NumberFormat.Format.PERCENT:
      this.applyPattern_(goog.i18n.NumberFormat.getNumberFormatSymbols_().PERCENT_PATTERN);
      break;
    case goog.i18n.NumberFormat.Format.CURRENCY:
      this.applyPattern_(goog.i18n.currency.adjustPrecision(goog.i18n.NumberFormat.getNumberFormatSymbols_().CURRENCY_PATTERN, this.getCurrencyCode_()));
      break;
    case goog.i18n.NumberFormat.Format.COMPACT_SHORT:
      this.applyCompactStyle_(goog.i18n.NumberFormat.CompactStyle.SHORT);
      break;
    case goog.i18n.NumberFormat.Format.COMPACT_LONG:
      this.applyCompactStyle_(goog.i18n.NumberFormat.CompactStyle.LONG);
      break;
    default:
      throw Error("Unsupported pattern type.");
  }
};
goog.i18n.NumberFormat.prototype.applyCompactStyle_ = function(style) {
  this.compactStyle_ = style;
  this.applyPattern_(goog.i18n.NumberFormat.getNumberFormatSymbols_().DECIMAL_PATTERN);
  this.setMinimumFractionDigits(0);
  this.setMaximumFractionDigits(2);
  this.setSignificantDigits(2);
};
goog.i18n.NumberFormat.prototype.parse = function(text, opt_pos) {
  var pos = opt_pos || [0];
  if (this.compactStyle_ != goog.i18n.NumberFormat.CompactStyle.NONE) {
    throw Error("Parsing of compact numbers is unimplemented");
  }
  text = text.replace(/ /g, "\u00a0");
  var gotPositive = text.indexOf(this.positivePrefix_, pos[0]) == pos[0];
  var gotNegative = text.indexOf(this.negativePrefix_, pos[0]) == pos[0];
  gotPositive && gotNegative && (this.positivePrefix_.length > this.negativePrefix_.length ? gotNegative = !1 : this.positivePrefix_.length < this.negativePrefix_.length && (gotPositive = !1));
  gotPositive ? pos[0] += this.positivePrefix_.length : gotNegative && (pos[0] += this.negativePrefix_.length);
  if (text.indexOf(goog.i18n.NumberFormat.getNumberFormatSymbols_().INFINITY, pos[0]) == pos[0]) {
    pos[0] += goog.i18n.NumberFormat.getNumberFormatSymbols_().INFINITY.length;
    var ret = Infinity;
  } else {
    ret = this.parseNumber_(text, pos);
  }
  if (gotPositive) {
    if (text.indexOf(this.positiveSuffix_, pos[0]) != pos[0]) {
      return NaN;
    }
    pos[0] += this.positiveSuffix_.length;
  } else {
    if (gotNegative) {
      if (text.indexOf(this.negativeSuffix_, pos[0]) != pos[0]) {
        return NaN;
      }
      pos[0] += this.negativeSuffix_.length;
    }
  }
  return gotNegative ? -ret : ret;
};
goog.i18n.NumberFormat.prototype.parseNumber_ = function(text, pos) {
  var sawDecimal = !1;
  var sawExponent = !1;
  var sawDigit = !1;
  var exponentPos = -1;
  var scale = 1;
  var decimal = goog.i18n.NumberFormat.getNumberFormatSymbols_().DECIMAL_SEP;
  var grouping = goog.i18n.NumberFormat.getNumberFormatSymbols_().GROUP_SEP;
  var exponentChar = goog.i18n.NumberFormat.getNumberFormatSymbols_().EXP_SYMBOL;
  if (this.compactStyle_ != goog.i18n.NumberFormat.CompactStyle.NONE) {
    throw Error("Parsing of compact style numbers is not implemented");
  }
  for (var normalizedText = ""; pos[0] < text.length; pos[0]++) {
    var ch = text.charAt(pos[0]);
    var digit = this.getDigit_(ch);
    if (0 <= digit && 9 >= digit) {
      normalizedText += digit, sawDigit = !0;
    } else {
      if (ch == decimal.charAt(0)) {
        if (sawDecimal || sawExponent) {
          break;
        }
        normalizedText += ".";
        sawDecimal = !0;
      } else {
        if (ch == grouping.charAt(0) && ("\u00a0" != grouping.charAt(0) || pos[0] + 1 < text.length && 0 <= this.getDigit_(text.charAt(pos[0] + 1)))) {
          if (sawDecimal || sawExponent) {
            break;
          }
        } else {
          if (ch == exponentChar.charAt(0)) {
            if (sawExponent) {
              break;
            }
            normalizedText += "E";
            sawExponent = !0;
            exponentPos = pos[0];
          } else {
            if ("+" == ch || "-" == ch) {
              if (sawDigit && exponentPos != pos[0] - 1) {
                break;
              }
              normalizedText += ch;
            } else {
              if (1 == this.multiplier_ && ch == goog.i18n.NumberFormat.getNumberFormatSymbols_().PERCENT.charAt(0)) {
                if (1 != scale) {
                  break;
                }
                scale = 100;
                if (sawDigit) {
                  pos[0]++;
                  break;
                }
              } else {
                if (1 == this.multiplier_ && ch == goog.i18n.NumberFormat.getNumberFormatSymbols_().PERMILL.charAt(0)) {
                  if (1 != scale) {
                    break;
                  }
                  scale = 1000;
                  if (sawDigit) {
                    pos[0]++;
                    break;
                  }
                } else {
                  break;
                }
              }
            }
          }
        }
      }
    }
  }
  1 != this.multiplier_ && (scale = this.multiplier_);
  return parseFloat(normalizedText) / scale;
};
goog.i18n.NumberFormat.prototype.format = function(number) {
  if (isNaN(number)) {
    return goog.i18n.NumberFormat.getNumberFormatSymbols_().NAN;
  }
  var parts = [];
  var baseFormattingNumber = goog.isNull(this.baseFormattingNumber_) ? number : this.baseFormattingNumber_;
  var unit = this.getUnitAfterRounding_(baseFormattingNumber, number);
  number /= Math.pow(10, unit.divisorBase);
  parts.push(unit.prefix);
  var isNegative = 0.0 > number || 0.0 == number && 0.0 > 1 / number;
  parts.push(isNegative ? this.negativePrefix_ : this.positivePrefix_);
  isFinite(number) ? (number *= isNegative ? -1 : 1, number *= this.multiplier_, this.useExponentialNotation_ ? this.subformatExponential_(number, parts) : this.subformatFixed_(number, this.minimumIntegerDigits_, parts)) : parts.push(goog.i18n.NumberFormat.getNumberFormatSymbols_().INFINITY);
  parts.push(isNegative ? this.negativeSuffix_ : this.positiveSuffix_);
  parts.push(unit.suffix);
  return parts.join("");
};
goog.i18n.NumberFormat.prototype.roundNumber_ = function(number) {
  var power = Math.pow(10, this.maximumFractionDigits_);
  var shiftedNumber = 0 >= this.significantDigits_ ? Math.round(number * power) : Math.round(this.roundToSignificantDigits_(number * power, this.significantDigits_, this.maximumFractionDigits_));
  if (isFinite(shiftedNumber)) {
    var intValue = Math.floor(shiftedNumber / power);
    var fracValue = Math.floor(shiftedNumber - intValue * power);
  } else {
    intValue = number, fracValue = 0;
  }
  return {intValue:intValue, fracValue:fracValue};
};
goog.i18n.NumberFormat.formatNumberGroupingRepeatingDigitsParts_ = function(parts, zeroCode, intPart, groupingArray, repeatedDigitLen) {
  var nonRepeatedGroupCompleteCount = 0;
  var currentGroupSizeIndex = 0;
  var grouping = goog.i18n.NumberFormat.getNumberFormatSymbols_().GROUP_SEP;
  var digitLen = intPart.length;
  for (var i = 0; i < digitLen; i++) {
    if (parts.push(String.fromCharCode(zeroCode + 1 * Number(intPart.charAt(i)))), 1 < digitLen - i) {
      var currentGroupSize = groupingArray[currentGroupSizeIndex];
      if (i < repeatedDigitLen) {
        var repeatedDigitIndex = repeatedDigitLen - i;
        (1 === currentGroupSize || 0 < currentGroupSize && 1 === repeatedDigitIndex % currentGroupSize) && parts.push(grouping);
      } else {
        currentGroupSizeIndex < groupingArray.length && (i === repeatedDigitLen ? currentGroupSizeIndex += 1 : currentGroupSize === i - repeatedDigitLen - nonRepeatedGroupCompleteCount + 1 && (parts.push(grouping), nonRepeatedGroupCompleteCount += currentGroupSize, currentGroupSizeIndex += 1));
      }
    }
  }
  return parts;
};
goog.i18n.NumberFormat.formatNumberGroupingNonRepeatingDigitsParts_ = function(parts, zeroCode, intPart, groupingArray) {
  var grouping = goog.i18n.NumberFormat.getNumberFormatSymbols_().GROUP_SEP;
  var currentGroupSizeIndex;
  var digitLenLeft = intPart.length;
  var rightToLeftParts = [];
  for (currentGroupSizeIndex = groupingArray.length - 1; 0 <= currentGroupSizeIndex && 0 < digitLenLeft; currentGroupSizeIndex--) {
    var currentGroupSize = groupingArray[currentGroupSizeIndex];
    for (var rightDigitIndex = 0; rightDigitIndex < currentGroupSize && 0 <= digitLenLeft - rightDigitIndex - 1; rightDigitIndex++) {
      rightToLeftParts.push(String.fromCharCode(zeroCode + 1 * Number(intPart.charAt(digitLenLeft - rightDigitIndex - 1))));
    }
    digitLenLeft -= currentGroupSize;
    0 < digitLenLeft && rightToLeftParts.push(grouping);
  }
  parts.push.apply(parts, rightToLeftParts.reverse());
  return parts;
};
goog.i18n.NumberFormat.prototype.subformatFixed_ = function(number, minIntDigits, parts) {
  if (this.minimumFractionDigits_ > this.maximumFractionDigits_) {
    throw Error("Min value must be less than max value");
  }
  parts || (parts = []);
  var rounded = this.roundNumber_(number);
  var intValue = rounded.intValue;
  var fracValue = rounded.fracValue;
  var numIntDigits = 0 == intValue ? 0 : this.intLog10_(intValue) + 1;
  var fractionPresent = 0 < this.minimumFractionDigits_ || 0 < fracValue || this.showTrailingZeros_ && numIntDigits < this.significantDigits_;
  var minimumFractionDigits = this.minimumFractionDigits_;
  fractionPresent && (minimumFractionDigits = this.showTrailingZeros_ && 0 < this.significantDigits_ ? this.significantDigits_ - numIntDigits : this.minimumFractionDigits_);
  var intPart = "";
  for (var translatableInt = intValue; 1E20 < translatableInt;) {
    intPart = "0" + intPart, translatableInt = Math.round(translatableInt / 10);
  }
  intPart = translatableInt + intPart;
  var decimal = goog.i18n.NumberFormat.getNumberFormatSymbols_().DECIMAL_SEP;
  var zeroCode = goog.i18n.NumberFormat.getNumberFormatSymbols_().ZERO_DIGIT.charCodeAt(0);
  var digitLen = intPart.length;
  var nonRepeatedGroupCount = 0;
  if (0 < intValue || 0 < minIntDigits) {
    for (var i = digitLen; i < minIntDigits; i++) {
      parts.push(String.fromCharCode(zeroCode));
    }
    if (2 <= this.groupingArray_.length) {
      for (var j = 1; j < this.groupingArray_.length; j++) {
        nonRepeatedGroupCount += this.groupingArray_[j];
      }
    }
    var repeatedDigitLen = digitLen - nonRepeatedGroupCount;
    parts = 0 < repeatedDigitLen ? goog.i18n.NumberFormat.formatNumberGroupingRepeatingDigitsParts_(parts, zeroCode, intPart, this.groupingArray_, repeatedDigitLen) : goog.i18n.NumberFormat.formatNumberGroupingNonRepeatingDigitsParts_(parts, zeroCode, intPart, this.groupingArray_);
  } else {
    fractionPresent || parts.push(String.fromCharCode(zeroCode));
  }
  (this.decimalSeparatorAlwaysShown_ || fractionPresent) && parts.push(decimal);
  var fracPart = String(fracValue);
  var fracPartSplit = fracPart.split("e+");
  if (2 == fracPartSplit.length) {
    var floatFrac = parseFloat(fracPartSplit[0]);
    fracPart = String(this.roundToSignificantDigits_(floatFrac, this.significantDigits_, 1));
    fracPart = fracPart.replace(".", "");
    var exp = parseInt(fracPartSplit[1], 10);
    fracPart += goog.string.repeat("0", exp - fracPart.length + 1);
  }
  if (this.maximumFractionDigits_ + 1 > fracPart.length) {
    var zeroesToAdd = this.maximumFractionDigits_ - fracPart.length;
    fracPart = "1" + goog.string.repeat("0", zeroesToAdd) + fracPart;
  }
  for (var fracLen = fracPart.length; "0" == fracPart.charAt(fracLen - 1) && fracLen > minimumFractionDigits + 1;) {
    fracLen--;
  }
  for (i = 1; i < fracLen; i++) {
    parts.push(String.fromCharCode(zeroCode + 1 * Number(fracPart.charAt(i))));
  }
};
goog.i18n.NumberFormat.prototype.addExponentPart_ = function(exponent, parts) {
  parts.push(goog.i18n.NumberFormat.getNumberFormatSymbols_().EXP_SYMBOL);
  0 > exponent ? (exponent = -exponent, parts.push(goog.i18n.NumberFormat.getNumberFormatSymbols_().MINUS_SIGN)) : this.useSignForPositiveExponent_ && parts.push(goog.i18n.NumberFormat.getNumberFormatSymbols_().PLUS_SIGN);
  var exponentDigits = "" + exponent;
  var zeroChar = goog.i18n.NumberFormat.getNumberFormatSymbols_().ZERO_DIGIT;
  for (var i = exponentDigits.length; i < this.minExponentDigits_; i++) {
    parts.push(zeroChar);
  }
  parts.push(exponentDigits);
};
goog.i18n.NumberFormat.prototype.getMantissa_ = function(value, exponent) {
  var divisor = Math.pow(10, exponent);
  if (isFinite(divisor) && 0 !== divisor) {
    return value / divisor;
  }
  divisor = Math.pow(10, Math.floor(exponent / 2));
  var result = value / divisor / divisor;
  1 == exponent % 2 && (result = 0 < exponent ? result / 10 : 10 * result);
  return result;
};
goog.i18n.NumberFormat.prototype.subformatExponential_ = function(number, parts) {
  if (0.0 == number) {
    this.subformatFixed_(number, this.minimumIntegerDigits_, parts), this.addExponentPart_(0, parts);
  } else {
    var exponent = goog.math.safeFloor(Math.log(number) / Math.log(10));
    number = this.getMantissa_(number, exponent);
    var minIntDigits = this.minimumIntegerDigits_;
    if (1 < this.maximumIntegerDigits_ && this.maximumIntegerDigits_ > this.minimumIntegerDigits_) {
      for (; 0 != exponent % this.maximumIntegerDigits_;) {
        number *= 10, exponent--;
      }
      minIntDigits = 1;
    } else {
      1 > this.minimumIntegerDigits_ ? (exponent++, number /= 10) : (exponent -= this.minimumIntegerDigits_ - 1, number *= Math.pow(10, this.minimumIntegerDigits_ - 1));
    }
    this.subformatFixed_(number, minIntDigits, parts);
    this.addExponentPart_(exponent, parts);
  }
};
goog.i18n.NumberFormat.prototype.getDigit_ = function(ch) {
  var code = ch.charCodeAt(0);
  if (48 <= code && 58 > code) {
    return code - 48;
  }
  var zeroCode = goog.i18n.NumberFormat.getNumberFormatSymbols_().ZERO_DIGIT.charCodeAt(0);
  return zeroCode <= code && code < zeroCode + 10 ? code - zeroCode : -1;
};
goog.i18n.NumberFormat.PATTERN_ZERO_DIGIT_ = "0";
goog.i18n.NumberFormat.PATTERN_GROUPING_SEPARATOR_ = ",";
goog.i18n.NumberFormat.PATTERN_DECIMAL_SEPARATOR_ = ".";
goog.i18n.NumberFormat.PATTERN_PER_MILLE_ = "\u2030";
goog.i18n.NumberFormat.PATTERN_PERCENT_ = "%";
goog.i18n.NumberFormat.PATTERN_DIGIT_ = "#";
goog.i18n.NumberFormat.PATTERN_SEPARATOR_ = ";";
goog.i18n.NumberFormat.PATTERN_EXPONENT_ = "E";
goog.i18n.NumberFormat.PATTERN_PLUS_ = "+";
goog.i18n.NumberFormat.PATTERN_CURRENCY_SIGN_ = "\u00a4";
goog.i18n.NumberFormat.QUOTE_ = "'";
goog.i18n.NumberFormat.prototype.parseAffix_ = function(pattern, pos) {
  var affix = "";
  var inQuote = !1;
  for (var len = pattern.length; pos[0] < len; pos[0]++) {
    var ch = pattern.charAt(pos[0]);
    if (ch == goog.i18n.NumberFormat.QUOTE_) {
      pos[0] + 1 < len && pattern.charAt(pos[0] + 1) == goog.i18n.NumberFormat.QUOTE_ ? (pos[0]++, affix += "'") : inQuote = !inQuote;
    } else {
      if (inQuote) {
        affix += ch;
      } else {
        switch(ch) {
          case goog.i18n.NumberFormat.PATTERN_DIGIT_:
          case goog.i18n.NumberFormat.PATTERN_ZERO_DIGIT_:
          case goog.i18n.NumberFormat.PATTERN_GROUPING_SEPARATOR_:
          case goog.i18n.NumberFormat.PATTERN_DECIMAL_SEPARATOR_:
          case goog.i18n.NumberFormat.PATTERN_SEPARATOR_:
            return affix;
          case goog.i18n.NumberFormat.PATTERN_CURRENCY_SIGN_:
            if (pos[0] + 1 < len && pattern.charAt(pos[0] + 1) == goog.i18n.NumberFormat.PATTERN_CURRENCY_SIGN_) {
              pos[0]++, affix += this.getCurrencyCode_();
            } else {
              switch(this.currencyStyle_) {
                case goog.i18n.NumberFormat.CurrencyStyle.LOCAL:
                  affix += goog.i18n.currency.getLocalCurrencySign(this.getCurrencyCode_());
                  break;
                case goog.i18n.NumberFormat.CurrencyStyle.GLOBAL:
                  affix += goog.i18n.currency.getGlobalCurrencySign(this.getCurrencyCode_());
                  break;
                case goog.i18n.NumberFormat.CurrencyStyle.PORTABLE:
                  affix += goog.i18n.currency.getPortableCurrencySign(this.getCurrencyCode_());
              }
            }
            break;
          case goog.i18n.NumberFormat.PATTERN_PERCENT_:
            if (!this.negativePercentSignExpected_ && 1 != this.multiplier_) {
              throw Error("Too many percent/permill");
            }
            if (this.negativePercentSignExpected_ && 100 != this.multiplier_) {
              throw Error("Inconsistent use of percent/permill characters");
            }
            this.multiplier_ = 100;
            this.negativePercentSignExpected_ = !1;
            affix += goog.i18n.NumberFormat.getNumberFormatSymbols_().PERCENT;
            break;
          case goog.i18n.NumberFormat.PATTERN_PER_MILLE_:
            if (!this.negativePercentSignExpected_ && 1 != this.multiplier_) {
              throw Error("Too many percent/permill");
            }
            if (this.negativePercentSignExpected_ && 1000 != this.multiplier_) {
              throw Error("Inconsistent use of percent/permill characters");
            }
            this.multiplier_ = 1000;
            this.negativePercentSignExpected_ = !1;
            affix += goog.i18n.NumberFormat.getNumberFormatSymbols_().PERMILL;
            break;
          default:
            affix += ch;
        }
      }
    }
  }
  return affix;
};
goog.i18n.NumberFormat.prototype.parseTrunk_ = function(pattern, pos) {
  var decimalPos = -1;
  var digitLeftCount = 0;
  var zeroDigitCount = 0;
  var digitRightCount = 0;
  var groupingCount = -1;
  var len = pattern.length;
  for (var loop = !0; pos[0] < len && loop; pos[0]++) {
    var ch = pattern.charAt(pos[0]);
    switch(ch) {
      case goog.i18n.NumberFormat.PATTERN_DIGIT_:
        0 < zeroDigitCount ? digitRightCount++ : digitLeftCount++;
        0 <= groupingCount && 0 > decimalPos && groupingCount++;
        break;
      case goog.i18n.NumberFormat.PATTERN_ZERO_DIGIT_:
        if (0 < digitRightCount) {
          throw Error('Unexpected "0" in pattern "' + pattern + '"');
        }
        zeroDigitCount++;
        0 <= groupingCount && 0 > decimalPos && groupingCount++;
        break;
      case goog.i18n.NumberFormat.PATTERN_GROUPING_SEPARATOR_:
        0 < groupingCount && this.groupingArray_.push(groupingCount);
        groupingCount = 0;
        break;
      case goog.i18n.NumberFormat.PATTERN_DECIMAL_SEPARATOR_:
        if (0 <= decimalPos) {
          throw Error('Multiple decimal separators in pattern "' + pattern + '"');
        }
        decimalPos = digitLeftCount + zeroDigitCount + digitRightCount;
        break;
      case goog.i18n.NumberFormat.PATTERN_EXPONENT_:
        if (this.useExponentialNotation_) {
          throw Error('Multiple exponential symbols in pattern "' + pattern + '"');
        }
        this.useExponentialNotation_ = !0;
        this.minExponentDigits_ = 0;
        pos[0] + 1 < len && pattern.charAt(pos[0] + 1) == goog.i18n.NumberFormat.PATTERN_PLUS_ && (pos[0]++, this.useSignForPositiveExponent_ = !0);
        for (; pos[0] + 1 < len && pattern.charAt(pos[0] + 1) == goog.i18n.NumberFormat.PATTERN_ZERO_DIGIT_;) {
          pos[0]++, this.minExponentDigits_++;
        }
        if (1 > digitLeftCount + zeroDigitCount || 1 > this.minExponentDigits_) {
          throw Error('Malformed exponential pattern "' + pattern + '"');
        }
        loop = !1;
        break;
      default:
        pos[0]--, loop = !1;
    }
  }
  if (0 == zeroDigitCount && 0 < digitLeftCount && 0 <= decimalPos) {
    var n = decimalPos;
    0 == n && n++;
    digitRightCount = digitLeftCount - n;
    digitLeftCount = n - 1;
    zeroDigitCount = 1;
  }
  if (0 > decimalPos && 0 < digitRightCount || 0 <= decimalPos && (decimalPos < digitLeftCount || decimalPos > digitLeftCount + zeroDigitCount) || 0 == groupingCount) {
    throw Error('Malformed pattern "' + pattern + '"');
  }
  var totalDigits = digitLeftCount + zeroDigitCount + digitRightCount;
  this.maximumFractionDigits_ = 0 <= decimalPos ? totalDigits - decimalPos : 0;
  0 <= decimalPos && (this.minimumFractionDigits_ = digitLeftCount + zeroDigitCount - decimalPos, 0 > this.minimumFractionDigits_ && (this.minimumFractionDigits_ = 0));
  var effectiveDecimalPos = 0 <= decimalPos ? decimalPos : totalDigits;
  this.minimumIntegerDigits_ = effectiveDecimalPos - digitLeftCount;
  this.useExponentialNotation_ && (this.maximumIntegerDigits_ = digitLeftCount + this.minimumIntegerDigits_, 0 == this.maximumFractionDigits_ && 0 == this.minimumIntegerDigits_ && (this.minimumIntegerDigits_ = 1));
  this.groupingArray_.push(Math.max(0, groupingCount));
  this.decimalSeparatorAlwaysShown_ = 0 == decimalPos || decimalPos == totalDigits;
};
goog.i18n.NumberFormat.NULL_UNIT_ = {prefix:"", suffix:"", divisorBase:0};
goog.i18n.NumberFormat.prototype.getUnitFor_ = function(base, plurality) {
  var table = this.compactStyle_ == goog.i18n.NumberFormat.CompactStyle.SHORT ? goog.i18n.CompactNumberFormatSymbols.COMPACT_DECIMAL_SHORT_PATTERN : goog.i18n.CompactNumberFormatSymbols.COMPACT_DECIMAL_LONG_PATTERN;
  goog.isDefAndNotNull(table) || (table = goog.i18n.CompactNumberFormatSymbols.COMPACT_DECIMAL_SHORT_PATTERN);
  if (3 > base) {
    return goog.i18n.NumberFormat.NULL_UNIT_;
  }
  base = Math.min(14, base);
  var patterns = table[Math.pow(10, base)];
  for (var previousNonNullBase = base - 1; !patterns && 3 <= previousNonNullBase;) {
    patterns = table[Math.pow(10, previousNonNullBase)], previousNonNullBase--;
  }
  if (!patterns) {
    return goog.i18n.NumberFormat.NULL_UNIT_;
  }
  var pattern = patterns[plurality];
  if (!pattern || "0" == pattern) {
    return goog.i18n.NumberFormat.NULL_UNIT_;
  }
  var parts = /([^0]*)(0+)(.*)/.exec(pattern);
  return parts ? {prefix:parts[1], suffix:parts[3], divisorBase:previousNonNullBase + 1 - (parts[2].length - 1)} : goog.i18n.NumberFormat.NULL_UNIT_;
};
goog.i18n.NumberFormat.prototype.getUnitAfterRounding_ = function(formattingNumber, pluralityNumber) {
  if (this.compactStyle_ == goog.i18n.NumberFormat.CompactStyle.NONE) {
    return goog.i18n.NumberFormat.NULL_UNIT_;
  }
  formattingNumber = Math.abs(formattingNumber);
  var base = 1 >= formattingNumber ? 0 : this.intLog10_(formattingNumber);
  var initialDivisor = this.getUnitFor_(base, "other").divisorBase;
  var formattingAttempt = formattingNumber / Math.pow(10, initialDivisor);
  var formattingRounded = this.roundNumber_(formattingAttempt);
  return this.getUnitFor_(initialDivisor + this.intLog10_(formattingRounded.intValue), "other");
};
goog.i18n.NumberFormat.prototype.intLog10_ = function(number) {
  if (!isFinite(number)) {
    return 0 < number ? number : 0;
  }
  for (var i = 0; 1 <= (number /= 10);) {
    i++;
  }
  return i;
};
goog.i18n.NumberFormat.prototype.roundToSignificantDigits_ = function(number, significantDigits, scale) {
  if (!number) {
    return number;
  }
  var digits = this.intLog10_(number);
  var magnitude = significantDigits - digits - 1;
  if (magnitude < -scale) {
    var point = Math.pow(10, scale);
    return Math.round(number / point) * point;
  }
  var power = Math.pow(10, magnitude);
  var shifted = Math.round(number * power);
  return shifted / power;
};
goog.i18n.pluralRules = {};
goog.i18n.pluralRules.Keyword = {ZERO:"zero", ONE:"one", TWO:"two", FEW:"few", MANY:"many", OTHER:"other"};
goog.i18n.pluralRules.defaultSelect_ = function() {
  return goog.i18n.pluralRules.Keyword.OTHER;
};
goog.i18n.pluralRules.decimals_ = function(n) {
  var str = n + "";
  var result = str.indexOf(".");
  return -1 == result ? 0 : str.length - result - 1;
};
goog.i18n.pluralRules.get_vf_ = function(n, opt_precision) {
  var v = void 0 === opt_precision ? Math.min(goog.i18n.pluralRules.decimals_(n), 3) : opt_precision;
  var base = Math.pow(10, v);
  var f = (n * base | 0) % base;
  return {v:v, f:f};
};
goog.i18n.pluralRules.get_wt_ = function(v, f) {
  if (0 === f) {
    return {w:0, t:0};
  }
  for (; 0 === f % 10;) {
    f /= 10, v--;
  }
  return {w:v, t:f};
};
goog.i18n.pluralRules.filSelect_ = function(n, opt_precision) {
  var i = n | 0;
  var vf = goog.i18n.pluralRules.get_vf_(n, opt_precision);
  return 0 == vf.v && (1 == i || 2 == i || 3 == i) || 0 == vf.v && 4 != i % 10 && 6 != i % 10 && 9 != i % 10 || 0 != vf.v && 4 != vf.f % 10 && 6 != vf.f % 10 && 9 != vf.f % 10 ? goog.i18n.pluralRules.Keyword.ONE : goog.i18n.pluralRules.Keyword.OTHER;
};
goog.i18n.pluralRules.brSelect_ = function(n) {
  return 1 == n % 10 && 11 != n % 100 && 71 != n % 100 && 91 != n % 100 ? goog.i18n.pluralRules.Keyword.ONE : 2 == n % 10 && 12 != n % 100 && 72 != n % 100 && 92 != n % 100 ? goog.i18n.pluralRules.Keyword.TWO : (3 <= n % 10 && 4 >= n % 10 || 9 == n % 10) && (10 > n % 100 || 19 < n % 100) && (70 > n % 100 || 79 < n % 100) && (90 > n % 100 || 99 < n % 100) ? goog.i18n.pluralRules.Keyword.FEW : 0 != n && 0 == n % 1000000 ? goog.i18n.pluralRules.Keyword.MANY : goog.i18n.pluralRules.Keyword.OTHER;
};
goog.i18n.pluralRules.srSelect_ = function(n, opt_precision) {
  var i = n | 0;
  var vf = goog.i18n.pluralRules.get_vf_(n, opt_precision);
  return 0 == vf.v && 1 == i % 10 && 11 != i % 100 || 1 == vf.f % 10 && 11 != vf.f % 100 ? goog.i18n.pluralRules.Keyword.ONE : 0 == vf.v && 2 <= i % 10 && 4 >= i % 10 && (12 > i % 100 || 14 < i % 100) || 2 <= vf.f % 10 && 4 >= vf.f % 10 && (12 > vf.f % 100 || 14 < vf.f % 100) ? goog.i18n.pluralRules.Keyword.FEW : goog.i18n.pluralRules.Keyword.OTHER;
};
goog.i18n.pluralRules.roSelect_ = function(n, opt_precision) {
  var i = n | 0;
  var vf = goog.i18n.pluralRules.get_vf_(n, opt_precision);
  return 1 == i && 0 == vf.v ? goog.i18n.pluralRules.Keyword.ONE : 0 != vf.v || 0 == n || 1 != n && 1 <= n % 100 && 19 >= n % 100 ? goog.i18n.pluralRules.Keyword.FEW : goog.i18n.pluralRules.Keyword.OTHER;
};
goog.i18n.pluralRules.hiSelect_ = function(n) {
  var i = n | 0;
  return 0 == i || 1 == n ? goog.i18n.pluralRules.Keyword.ONE : goog.i18n.pluralRules.Keyword.OTHER;
};
goog.i18n.pluralRules.frSelect_ = function(n) {
  var i = n | 0;
  return 0 == i || 1 == i ? goog.i18n.pluralRules.Keyword.ONE : goog.i18n.pluralRules.Keyword.OTHER;
};
goog.i18n.pluralRules.ptSelect_ = function(n) {
  var i = n | 0;
  return 0 <= i && 1 >= i ? goog.i18n.pluralRules.Keyword.ONE : goog.i18n.pluralRules.Keyword.OTHER;
};
goog.i18n.pluralRules.csSelect_ = function(n, opt_precision) {
  var i = n | 0;
  var vf = goog.i18n.pluralRules.get_vf_(n, opt_precision);
  return 1 == i && 0 == vf.v ? goog.i18n.pluralRules.Keyword.ONE : 2 <= i && 4 >= i && 0 == vf.v ? goog.i18n.pluralRules.Keyword.FEW : 0 != vf.v ? goog.i18n.pluralRules.Keyword.MANY : goog.i18n.pluralRules.Keyword.OTHER;
};
goog.i18n.pluralRules.plSelect_ = function(n, opt_precision) {
  var i = n | 0;
  var vf = goog.i18n.pluralRules.get_vf_(n, opt_precision);
  return 1 == i && 0 == vf.v ? goog.i18n.pluralRules.Keyword.ONE : 0 == vf.v && 2 <= i % 10 && 4 >= i % 10 && (12 > i % 100 || 14 < i % 100) ? goog.i18n.pluralRules.Keyword.FEW : 0 == vf.v && 1 != i && 0 <= i % 10 && 1 >= i % 10 || 0 == vf.v && 5 <= i % 10 && 9 >= i % 10 || 0 == vf.v && 12 <= i % 100 && 14 >= i % 100 ? goog.i18n.pluralRules.Keyword.MANY : goog.i18n.pluralRules.Keyword.OTHER;
};
goog.i18n.pluralRules.shiSelect_ = function(n) {
  var i = n | 0;
  return 0 == i || 1 == n ? goog.i18n.pluralRules.Keyword.ONE : 2 <= n && 10 >= n ? goog.i18n.pluralRules.Keyword.FEW : goog.i18n.pluralRules.Keyword.OTHER;
};
goog.i18n.pluralRules.lvSelect_ = function(n, opt_precision) {
  var vf = goog.i18n.pluralRules.get_vf_(n, opt_precision);
  return 0 == n % 10 || 11 <= n % 100 && 19 >= n % 100 || 2 == vf.v && 11 <= vf.f % 100 && 19 >= vf.f % 100 ? goog.i18n.pluralRules.Keyword.ZERO : 1 == n % 10 && 11 != n % 100 || 2 == vf.v && 1 == vf.f % 10 && 11 != vf.f % 100 || 2 != vf.v && 1 == vf.f % 10 ? goog.i18n.pluralRules.Keyword.ONE : goog.i18n.pluralRules.Keyword.OTHER;
};
goog.i18n.pluralRules.iuSelect_ = function(n) {
  return 1 == n ? goog.i18n.pluralRules.Keyword.ONE : 2 == n ? goog.i18n.pluralRules.Keyword.TWO : goog.i18n.pluralRules.Keyword.OTHER;
};
goog.i18n.pluralRules.heSelect_ = function(n, opt_precision) {
  var i = n | 0;
  var vf = goog.i18n.pluralRules.get_vf_(n, opt_precision);
  return 1 == i && 0 == vf.v ? goog.i18n.pluralRules.Keyword.ONE : 2 == i && 0 == vf.v ? goog.i18n.pluralRules.Keyword.TWO : 0 == vf.v && (0 > n || 10 < n) && 0 == n % 10 ? goog.i18n.pluralRules.Keyword.MANY : goog.i18n.pluralRules.Keyword.OTHER;
};
goog.i18n.pluralRules.mtSelect_ = function(n) {
  return 1 == n ? goog.i18n.pluralRules.Keyword.ONE : 0 == n || 2 <= n % 100 && 10 >= n % 100 ? goog.i18n.pluralRules.Keyword.FEW : 11 <= n % 100 && 19 >= n % 100 ? goog.i18n.pluralRules.Keyword.MANY : goog.i18n.pluralRules.Keyword.OTHER;
};
goog.i18n.pluralRules.siSelect_ = function(n, opt_precision) {
  var i = n | 0;
  var vf = goog.i18n.pluralRules.get_vf_(n, opt_precision);
  return 0 == n || 1 == n || 0 == i && 1 == vf.f ? goog.i18n.pluralRules.Keyword.ONE : goog.i18n.pluralRules.Keyword.OTHER;
};
goog.i18n.pluralRules.cySelect_ = function(n) {
  return 0 == n ? goog.i18n.pluralRules.Keyword.ZERO : 1 == n ? goog.i18n.pluralRules.Keyword.ONE : 2 == n ? goog.i18n.pluralRules.Keyword.TWO : 3 == n ? goog.i18n.pluralRules.Keyword.FEW : 6 == n ? goog.i18n.pluralRules.Keyword.MANY : goog.i18n.pluralRules.Keyword.OTHER;
};
goog.i18n.pluralRules.daSelect_ = function(n, opt_precision) {
  var i = n | 0;
  var vf = goog.i18n.pluralRules.get_vf_(n, opt_precision);
  var wt = goog.i18n.pluralRules.get_wt_(vf.v, vf.f);
  return 1 == n || 0 != wt.t && (0 == i || 1 == i) ? goog.i18n.pluralRules.Keyword.ONE : goog.i18n.pluralRules.Keyword.OTHER;
};
goog.i18n.pluralRules.ruSelect_ = function(n, opt_precision) {
  var i = n | 0;
  var vf = goog.i18n.pluralRules.get_vf_(n, opt_precision);
  return 0 == vf.v && 1 == i % 10 && 11 != i % 100 ? goog.i18n.pluralRules.Keyword.ONE : 0 == vf.v && 2 <= i % 10 && 4 >= i % 10 && (12 > i % 100 || 14 < i % 100) ? goog.i18n.pluralRules.Keyword.FEW : 0 == vf.v && 0 == i % 10 || 0 == vf.v && 5 <= i % 10 && 9 >= i % 10 || 0 == vf.v && 11 <= i % 100 && 14 >= i % 100 ? goog.i18n.pluralRules.Keyword.MANY : goog.i18n.pluralRules.Keyword.OTHER;
};
goog.i18n.pluralRules.gvSelect_ = function(n, opt_precision) {
  var i = n | 0;
  var vf = goog.i18n.pluralRules.get_vf_(n, opt_precision);
  return 0 == vf.v && 1 == i % 10 ? goog.i18n.pluralRules.Keyword.ONE : 0 == vf.v && 2 == i % 10 ? goog.i18n.pluralRules.Keyword.TWO : 0 != vf.v || 0 != i % 100 && 20 != i % 100 && 40 != i % 100 && 60 != i % 100 && 80 != i % 100 ? 0 != vf.v ? goog.i18n.pluralRules.Keyword.MANY : goog.i18n.pluralRules.Keyword.OTHER : goog.i18n.pluralRules.Keyword.FEW;
};
goog.i18n.pluralRules.beSelect_ = function(n) {
  return 1 == n % 10 && 11 != n % 100 ? goog.i18n.pluralRules.Keyword.ONE : 2 <= n % 10 && 4 >= n % 10 && (12 > n % 100 || 14 < n % 100) ? goog.i18n.pluralRules.Keyword.FEW : 0 == n % 10 || 5 <= n % 10 && 9 >= n % 10 || 11 <= n % 100 && 14 >= n % 100 ? goog.i18n.pluralRules.Keyword.MANY : goog.i18n.pluralRules.Keyword.OTHER;
};
goog.i18n.pluralRules.mkSelect_ = function(n, opt_precision) {
  var i = n | 0;
  var vf = goog.i18n.pluralRules.get_vf_(n, opt_precision);
  return 0 == vf.v && 1 == i % 10 || 1 == vf.f % 10 ? goog.i18n.pluralRules.Keyword.ONE : goog.i18n.pluralRules.Keyword.OTHER;
};
goog.i18n.pluralRules.gaSelect_ = function(n) {
  return 1 == n ? goog.i18n.pluralRules.Keyword.ONE : 2 == n ? goog.i18n.pluralRules.Keyword.TWO : 3 <= n && 6 >= n ? goog.i18n.pluralRules.Keyword.FEW : 7 <= n && 10 >= n ? goog.i18n.pluralRules.Keyword.MANY : goog.i18n.pluralRules.Keyword.OTHER;
};
goog.i18n.pluralRules.esSelect_ = function(n) {
  return 1 == n ? goog.i18n.pluralRules.Keyword.ONE : goog.i18n.pluralRules.Keyword.OTHER;
};
goog.i18n.pluralRules.dsbSelect_ = function(n, opt_precision) {
  var i = n | 0;
  var vf = goog.i18n.pluralRules.get_vf_(n, opt_precision);
  return 0 == vf.v && 1 == i % 100 || 1 == vf.f % 100 ? goog.i18n.pluralRules.Keyword.ONE : 0 == vf.v && 2 == i % 100 || 2 == vf.f % 100 ? goog.i18n.pluralRules.Keyword.TWO : 0 == vf.v && 3 <= i % 100 && 4 >= i % 100 || 3 <= vf.f % 100 && 4 >= vf.f % 100 ? goog.i18n.pluralRules.Keyword.FEW : goog.i18n.pluralRules.Keyword.OTHER;
};
goog.i18n.pluralRules.lagSelect_ = function(n) {
  var i = n | 0;
  return 0 == n ? goog.i18n.pluralRules.Keyword.ZERO : 0 != i && 1 != i || 0 == n ? goog.i18n.pluralRules.Keyword.OTHER : goog.i18n.pluralRules.Keyword.ONE;
};
goog.i18n.pluralRules.isSelect_ = function(n, opt_precision) {
  var i = n | 0;
  var vf = goog.i18n.pluralRules.get_vf_(n, opt_precision);
  var wt = goog.i18n.pluralRules.get_wt_(vf.v, vf.f);
  return 0 == wt.t && 1 == i % 10 && 11 != i % 100 || 0 != wt.t ? goog.i18n.pluralRules.Keyword.ONE : goog.i18n.pluralRules.Keyword.OTHER;
};
goog.i18n.pluralRules.kshSelect_ = function(n) {
  return 0 == n ? goog.i18n.pluralRules.Keyword.ZERO : 1 == n ? goog.i18n.pluralRules.Keyword.ONE : goog.i18n.pluralRules.Keyword.OTHER;
};
goog.i18n.pluralRules.arSelect_ = function(n) {
  return 0 == n ? goog.i18n.pluralRules.Keyword.ZERO : 1 == n ? goog.i18n.pluralRules.Keyword.ONE : 2 == n ? goog.i18n.pluralRules.Keyword.TWO : 3 <= n % 100 && 10 >= n % 100 ? goog.i18n.pluralRules.Keyword.FEW : 11 <= n % 100 && 99 >= n % 100 ? goog.i18n.pluralRules.Keyword.MANY : goog.i18n.pluralRules.Keyword.OTHER;
};
goog.i18n.pluralRules.gdSelect_ = function(n) {
  return 1 == n || 11 == n ? goog.i18n.pluralRules.Keyword.ONE : 2 == n || 12 == n ? goog.i18n.pluralRules.Keyword.TWO : 3 <= n && 10 >= n || 13 <= n && 19 >= n ? goog.i18n.pluralRules.Keyword.FEW : goog.i18n.pluralRules.Keyword.OTHER;
};
goog.i18n.pluralRules.slSelect_ = function(n, opt_precision) {
  var i = n | 0;
  var vf = goog.i18n.pluralRules.get_vf_(n, opt_precision);
  return 0 == vf.v && 1 == i % 100 ? goog.i18n.pluralRules.Keyword.ONE : 0 == vf.v && 2 == i % 100 ? goog.i18n.pluralRules.Keyword.TWO : 0 == vf.v && 3 <= i % 100 && 4 >= i % 100 || 0 != vf.v ? goog.i18n.pluralRules.Keyword.FEW : goog.i18n.pluralRules.Keyword.OTHER;
};
goog.i18n.pluralRules.ltSelect_ = function(n, opt_precision) {
  var vf = goog.i18n.pluralRules.get_vf_(n, opt_precision);
  return 1 == n % 10 && (11 > n % 100 || 19 < n % 100) ? goog.i18n.pluralRules.Keyword.ONE : 2 <= n % 10 && 9 >= n % 10 && (11 > n % 100 || 19 < n % 100) ? goog.i18n.pluralRules.Keyword.FEW : 0 != vf.f ? goog.i18n.pluralRules.Keyword.MANY : goog.i18n.pluralRules.Keyword.OTHER;
};
goog.i18n.pluralRules.tzmSelect_ = function(n) {
  return 0 <= n && 1 >= n || 11 <= n && 99 >= n ? goog.i18n.pluralRules.Keyword.ONE : goog.i18n.pluralRules.Keyword.OTHER;
};
goog.i18n.pluralRules.enSelect_ = function(n, opt_precision) {
  var i = n | 0;
  var vf = goog.i18n.pluralRules.get_vf_(n, opt_precision);
  return 1 == i && 0 == vf.v ? goog.i18n.pluralRules.Keyword.ONE : goog.i18n.pluralRules.Keyword.OTHER;
};
goog.i18n.pluralRules.akSelect_ = function(n) {
  return 0 <= n && 1 >= n ? goog.i18n.pluralRules.Keyword.ONE : goog.i18n.pluralRules.Keyword.OTHER;
};
goog.i18n.pluralRules.select = goog.i18n.pluralRules.enSelect_;
"af" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.esSelect_);
"am" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.hiSelect_);
"ar" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.arSelect_);
if ("ar_DZ" == goog.LOCALE || "ar-DZ" == goog.LOCALE) {
  goog.i18n.pluralRules.select = goog.i18n.pluralRules.arSelect_;
}
"az" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.esSelect_);
"be" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.beSelect_);
"bg" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.esSelect_);
"bn" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.hiSelect_);
"br" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.brSelect_);
"bs" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.srSelect_);
"ca" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.enSelect_);
"chr" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.esSelect_);
"cs" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.csSelect_);
"cy" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.cySelect_);
"da" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.daSelect_);
"de" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.enSelect_);
if ("de_AT" == goog.LOCALE || "de-AT" == goog.LOCALE) {
  goog.i18n.pluralRules.select = goog.i18n.pluralRules.enSelect_;
}
if ("de_CH" == goog.LOCALE || "de-CH" == goog.LOCALE) {
  goog.i18n.pluralRules.select = goog.i18n.pluralRules.enSelect_;
}
"el" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.esSelect_);
"en" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.enSelect_);
if ("en_AU" == goog.LOCALE || "en-AU" == goog.LOCALE) {
  goog.i18n.pluralRules.select = goog.i18n.pluralRules.enSelect_;
}
if ("en_CA" == goog.LOCALE || "en-CA" == goog.LOCALE) {
  goog.i18n.pluralRules.select = goog.i18n.pluralRules.enSelect_;
}
if ("en_GB" == goog.LOCALE || "en-GB" == goog.LOCALE) {
  goog.i18n.pluralRules.select = goog.i18n.pluralRules.enSelect_;
}
if ("en_IE" == goog.LOCALE || "en-IE" == goog.LOCALE) {
  goog.i18n.pluralRules.select = goog.i18n.pluralRules.enSelect_;
}
if ("en_IN" == goog.LOCALE || "en-IN" == goog.LOCALE) {
  goog.i18n.pluralRules.select = goog.i18n.pluralRules.enSelect_;
}
if ("en_SG" == goog.LOCALE || "en-SG" == goog.LOCALE) {
  goog.i18n.pluralRules.select = goog.i18n.pluralRules.enSelect_;
}
if ("en_US" == goog.LOCALE || "en-US" == goog.LOCALE) {
  goog.i18n.pluralRules.select = goog.i18n.pluralRules.enSelect_;
}
if ("en_ZA" == goog.LOCALE || "en-ZA" == goog.LOCALE) {
  goog.i18n.pluralRules.select = goog.i18n.pluralRules.enSelect_;
}
"es" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.esSelect_);
if ("es_419" == goog.LOCALE || "es-419" == goog.LOCALE) {
  goog.i18n.pluralRules.select = goog.i18n.pluralRules.esSelect_;
}
if ("es_ES" == goog.LOCALE || "es-ES" == goog.LOCALE) {
  goog.i18n.pluralRules.select = goog.i18n.pluralRules.esSelect_;
}
if ("es_MX" == goog.LOCALE || "es-MX" == goog.LOCALE) {
  goog.i18n.pluralRules.select = goog.i18n.pluralRules.esSelect_;
}
if ("es_US" == goog.LOCALE || "es-US" == goog.LOCALE) {
  goog.i18n.pluralRules.select = goog.i18n.pluralRules.esSelect_;
}
"et" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.enSelect_);
"eu" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.esSelect_);
"fa" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.hiSelect_);
"fi" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.enSelect_);
"fil" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.filSelect_);
"fr" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.frSelect_);
if ("fr_CA" == goog.LOCALE || "fr-CA" == goog.LOCALE) {
  goog.i18n.pluralRules.select = goog.i18n.pluralRules.frSelect_;
}
"ga" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.gaSelect_);
"gl" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.enSelect_);
"gsw" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.esSelect_);
"gu" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.hiSelect_);
"haw" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.esSelect_);
"he" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.heSelect_);
"hi" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.hiSelect_);
"hr" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.srSelect_);
"hu" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.esSelect_);
"hy" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.frSelect_);
"id" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.defaultSelect_);
"in" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.defaultSelect_);
"is" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.isSelect_);
"it" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.enSelect_);
"iw" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.heSelect_);
"ja" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.defaultSelect_);
"ka" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.esSelect_);
"kk" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.esSelect_);
"km" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.defaultSelect_);
"kn" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.hiSelect_);
"ko" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.defaultSelect_);
"ky" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.esSelect_);
"ln" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.akSelect_);
"lo" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.defaultSelect_);
"lt" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.ltSelect_);
"lv" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.lvSelect_);
"mk" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.mkSelect_);
"ml" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.esSelect_);
"mn" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.esSelect_);
"mo" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.roSelect_);
"mr" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.hiSelect_);
"ms" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.defaultSelect_);
"mt" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.mtSelect_);
"my" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.defaultSelect_);
"nb" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.esSelect_);
"ne" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.esSelect_);
"nl" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.enSelect_);
"no" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.esSelect_);
if ("no_NO" == goog.LOCALE || "no-NO" == goog.LOCALE) {
  goog.i18n.pluralRules.select = goog.i18n.pluralRules.esSelect_;
}
"or" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.esSelect_);
"pa" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.akSelect_);
"pl" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.plSelect_);
"pt" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.ptSelect_);
if ("pt_BR" == goog.LOCALE || "pt-BR" == goog.LOCALE) {
  goog.i18n.pluralRules.select = goog.i18n.pluralRules.ptSelect_;
}
if ("pt_PT" == goog.LOCALE || "pt-PT" == goog.LOCALE) {
  goog.i18n.pluralRules.select = goog.i18n.pluralRules.ptSelect_;
}
"ro" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.roSelect_);
"ru" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.ruSelect_);
"sh" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.srSelect_);
"si" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.siSelect_);
"sk" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.csSelect_);
"sl" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.slSelect_);
"sq" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.esSelect_);
"sr" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.srSelect_);
if ("sr_Latn" == goog.LOCALE || "sr-Latn" == goog.LOCALE) {
  goog.i18n.pluralRules.select = goog.i18n.pluralRules.srSelect_;
}
"sv" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.enSelect_);
"sw" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.enSelect_);
"ta" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.esSelect_);
"te" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.esSelect_);
"th" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.defaultSelect_);
"tl" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.filSelect_);
"tr" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.esSelect_);
"uk" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.ruSelect_);
"ur" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.enSelect_);
"uz" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.esSelect_);
"vi" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.defaultSelect_);
"zh" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.defaultSelect_);
if ("zh_CN" == goog.LOCALE || "zh-CN" == goog.LOCALE) {
  goog.i18n.pluralRules.select = goog.i18n.pluralRules.defaultSelect_;
}
if ("zh_HK" == goog.LOCALE || "zh-HK" == goog.LOCALE) {
  goog.i18n.pluralRules.select = goog.i18n.pluralRules.defaultSelect_;
}
if ("zh_TW" == goog.LOCALE || "zh-TW" == goog.LOCALE) {
  goog.i18n.pluralRules.select = goog.i18n.pluralRules.defaultSelect_;
}
"zu" == goog.LOCALE && (goog.i18n.pluralRules.select = goog.i18n.pluralRules.hiSelect_);
goog.iter = {};
goog.iter.StopIteration = "StopIteration" in goog.global ? goog.global.StopIteration : {message:"StopIteration", stack:""};
goog.iter.Iterator = function() {
};
goog.iter.Iterator.prototype.next = function() {
  throw goog.iter.StopIteration;
};
goog.iter.Iterator.prototype.__iterator__ = function() {
  return this;
};
goog.iter.toIterator = function(iterable) {
  if (iterable instanceof goog.iter.Iterator) {
    return iterable;
  }
  if ("function" == typeof iterable.__iterator__) {
    return iterable.__iterator__(!1);
  }
  if (goog.isArrayLike(iterable)) {
    var i = 0;
    var newIter = new goog.iter.Iterator;
    newIter.next = function() {
      for (;;) {
        if (i >= iterable.length) {
          throw goog.iter.StopIteration;
        }
        if (i in iterable) {
          return iterable[i++];
        }
        i++;
      }
    };
    return newIter;
  }
  throw Error("Not implemented");
};
goog.iter.forEach = function(iterable, f, opt_obj) {
  if (goog.isArrayLike(iterable)) {
    try {
      goog.array.forEach(iterable, f, opt_obj);
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  } else {
    iterable = goog.iter.toIterator(iterable);
    try {
      for (;;) {
        f.call(opt_obj, iterable.next(), void 0, iterable);
      }
    } catch (ex$2) {
      if (ex$2 !== goog.iter.StopIteration) {
        throw ex$2;
      }
    }
  }
};
goog.iter.filter = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    for (;;) {
      var val = iterator.next();
      if (f.call(opt_obj, val, void 0, iterator)) {
        return val;
      }
    }
  };
  return newIter;
};
goog.iter.filterFalse = function(iterable, f, opt_obj) {
  return goog.iter.filter(iterable, goog.functions.not(f), opt_obj);
};
goog.iter.range = function(startOrStop, opt_stop, opt_step) {
  var start = 0;
  var stop = startOrStop;
  var step = opt_step || 1;
  1 < arguments.length && (start = startOrStop, stop = opt_stop);
  if (0 == step) {
    throw Error("Range step argument must not be zero");
  }
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    if (0 < step && start >= stop || 0 > step && start <= stop) {
      throw goog.iter.StopIteration;
    }
    var rv = start;
    start += step;
    return rv;
  };
  return newIter;
};
goog.iter.join = function(iterable, deliminator) {
  return goog.iter.toArray(iterable).join(deliminator);
};
goog.iter.map = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    var val = iterator.next();
    return f.call(opt_obj, val, void 0, iterator);
  };
  return newIter;
};
goog.iter.reduce = function(iterable, f, val$jscomp$0, opt_obj) {
  var rval = val$jscomp$0;
  goog.iter.forEach(iterable, function(val) {
    rval = f.call(opt_obj, rval, val);
  });
  return rval;
};
goog.iter.some = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    for (;;) {
      if (f.call(opt_obj, iterable.next(), void 0, iterable)) {
        return !0;
      }
    }
  } catch (ex) {
    if (ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return !1;
};
goog.iter.every = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    for (;;) {
      if (!f.call(opt_obj, iterable.next(), void 0, iterable)) {
        return !1;
      }
    }
  } catch (ex) {
    if (ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return !0;
};
goog.iter.chain = function(var_args) {
  return goog.iter.chainFromIterable(arguments);
};
goog.iter.chainFromIterable = function(iterable) {
  var iterator = goog.iter.toIterator(iterable);
  var iter = new goog.iter.Iterator;
  var current = null;
  iter.next = function() {
    for (;;) {
      if (null == current) {
        var it = iterator.next();
        current = goog.iter.toIterator(it);
      }
      try {
        return current.next();
      } catch (ex) {
        if (ex !== goog.iter.StopIteration) {
          throw ex;
        }
        current = null;
      }
    }
  };
  return iter;
};
goog.iter.dropWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var dropping = !0;
  newIter.next = function() {
    for (;;) {
      var val = iterator.next();
      if (!dropping || !f.call(opt_obj, val, void 0, iterator)) {
        return dropping = !1, val;
      }
    }
  };
  return newIter;
};
goog.iter.takeWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    var val = iterator.next();
    if (f.call(opt_obj, val, void 0, iterator)) {
      return val;
    }
    throw goog.iter.StopIteration;
  };
  return iter;
};
goog.iter.toArray = function(iterable) {
  if (goog.isArrayLike(iterable)) {
    return goog.array.toArray(iterable);
  }
  iterable = goog.iter.toIterator(iterable);
  var array = [];
  goog.iter.forEach(iterable, function(val) {
    array.push(val);
  });
  return array;
};
goog.iter.equals = function(iterable1, iterable2, opt_equalsFn) {
  var fillValue = {};
  var pairs = goog.iter.zipLongest(fillValue, iterable1, iterable2);
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  return goog.iter.every(pairs, function(pair) {
    return equalsFn(pair[0], pair[1]);
  });
};
goog.iter.nextOrValue = function(iterable, defaultValue) {
  try {
    return goog.iter.toIterator(iterable).next();
  } catch (e) {
    if (e != goog.iter.StopIteration) {
      throw e;
    }
    return defaultValue;
  }
};
goog.iter.product = function(var_args) {
  var someArrayEmpty = goog.array.some(arguments, function(arr) {
    return !arr.length;
  });
  if (someArrayEmpty || !arguments.length) {
    return new goog.iter.Iterator;
  }
  var iter = new goog.iter.Iterator;
  var arrays = arguments;
  var indicies = goog.array.repeat(0, arrays.length);
  iter.next = function() {
    if (indicies) {
      var retVal = goog.array.map(indicies, function(valueIndex, arrayIndex) {
        return arrays[arrayIndex][valueIndex];
      });
      for (var i = indicies.length - 1; 0 <= i; i--) {
        goog.asserts.assert(indicies);
        if (indicies[i] < arrays[i].length - 1) {
          indicies[i]++;
          break;
        }
        if (0 == i) {
          indicies = null;
          break;
        }
        indicies[i] = 0;
      }
      return retVal;
    }
    throw goog.iter.StopIteration;
  };
  return iter;
};
goog.iter.cycle = function(iterable) {
  var baseIterator = goog.iter.toIterator(iterable);
  var cache = [];
  var cacheIndex = 0;
  var iter = new goog.iter.Iterator;
  var useCache = !1;
  iter.next = function() {
    var returnElement = null;
    if (!useCache) {
      try {
        return returnElement = baseIterator.next(), cache.push(returnElement), returnElement;
      } catch (e) {
        if (e != goog.iter.StopIteration || goog.array.isEmpty(cache)) {
          throw e;
        }
        useCache = !0;
      }
    }
    returnElement = cache[cacheIndex];
    cacheIndex = (cacheIndex + 1) % cache.length;
    return returnElement;
  };
  return iter;
};
goog.iter.count = function(opt_start, opt_step) {
  var counter = opt_start || 0;
  var step = goog.isDef(opt_step) ? opt_step : 1;
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    var returnValue = counter;
    counter += step;
    return returnValue;
  };
  return iter;
};
goog.iter.repeat = function(value) {
  var iter = new goog.iter.Iterator;
  iter.next = goog.functions.constant(value);
  return iter;
};
goog.iter.accumulate = function(iterable) {
  var iterator = goog.iter.toIterator(iterable);
  var total = 0;
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    total += iterator.next();
    return total;
  };
  return iter;
};
goog.iter.zip = function(var_args) {
  var args = arguments;
  var iter = new goog.iter.Iterator;
  if (0 < args.length) {
    var iterators = goog.array.map(args, goog.iter.toIterator);
    iter.next = function() {
      var arr = goog.array.map(iterators, function(it) {
        return it.next();
      });
      return arr;
    };
  }
  return iter;
};
goog.iter.zipLongest = function(fillValue, var_args) {
  var args = goog.array.slice(arguments, 1);
  var iter = new goog.iter.Iterator;
  if (0 < args.length) {
    var iterators = goog.array.map(args, goog.iter.toIterator);
    iter.next = function() {
      var iteratorsHaveValues = !1;
      var arr = goog.array.map(iterators, function(it) {
        try {
          var returnValue = it.next();
          iteratorsHaveValues = !0;
        } catch (ex) {
          if (ex !== goog.iter.StopIteration) {
            throw ex;
          }
          returnValue = fillValue;
        }
        return returnValue;
      });
      if (!iteratorsHaveValues) {
        throw goog.iter.StopIteration;
      }
      return arr;
    };
  }
  return iter;
};
goog.iter.compress = function(iterable, selectors) {
  var selectorIterator = goog.iter.toIterator(selectors);
  return goog.iter.filter(iterable, function() {
    return !!selectorIterator.next();
  });
};
goog.iter.GroupByIterator_ = function(iterable, opt_keyFunc) {
  this.iterator = goog.iter.toIterator(iterable);
  this.keyFunc = opt_keyFunc || goog.functions.identity;
};
goog.inherits(goog.iter.GroupByIterator_, goog.iter.Iterator);
goog.iter.GroupByIterator_.prototype.next = function() {
  for (; this.currentKey == this.targetKey;) {
    this.currentValue = this.iterator.next(), this.currentKey = this.keyFunc(this.currentValue);
  }
  this.targetKey = this.currentKey;
  return [this.currentKey, this.groupItems_(this.targetKey)];
};
goog.iter.GroupByIterator_.prototype.groupItems_ = function(targetKey) {
  for (var arr = []; this.currentKey == targetKey;) {
    arr.push(this.currentValue);
    try {
      this.currentValue = this.iterator.next();
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
      break;
    }
    this.currentKey = this.keyFunc(this.currentValue);
  }
  return arr;
};
goog.iter.groupBy = function(iterable, opt_keyFunc) {
  return new goog.iter.GroupByIterator_(iterable, opt_keyFunc);
};
goog.iter.starMap = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    var args = goog.iter.toArray(iterator.next());
    return f.apply(opt_obj, goog.array.concat(args, void 0, iterator));
  };
  return iter;
};
goog.iter.tee = function(iterable, opt_num) {
  var iterator = goog.iter.toIterator(iterable);
  var num = goog.isNumber(opt_num) ? opt_num : 2;
  var buffers = goog.array.map(goog.array.range(num), function() {
    return [];
  });
  var addNextIteratorValueToBuffers = function() {
    var val = iterator.next();
    goog.array.forEach(buffers, function(buffer) {
      buffer.push(val);
    });
  };
  var createIterator = function(buffer) {
    var iter = new goog.iter.Iterator;
    iter.next = function() {
      goog.array.isEmpty(buffer) && addNextIteratorValueToBuffers();
      goog.asserts.assert(!goog.array.isEmpty(buffer));
      return buffer.shift();
    };
    return iter;
  };
  return goog.array.map(buffers, createIterator);
};
goog.iter.enumerate = function(iterable, opt_start) {
  return goog.iter.zip(goog.iter.count(opt_start), iterable);
};
goog.iter.limit = function(iterable, limitSize) {
  goog.asserts.assert(goog.math.isInt(limitSize) && 0 <= limitSize);
  var iterator = goog.iter.toIterator(iterable);
  var iter = new goog.iter.Iterator;
  var remaining = limitSize;
  iter.next = function() {
    if (0 < remaining--) {
      return iterator.next();
    }
    throw goog.iter.StopIteration;
  };
  return iter;
};
goog.iter.consume = function(iterable, count) {
  goog.asserts.assert(goog.math.isInt(count) && 0 <= count);
  for (var iterator = goog.iter.toIterator(iterable); 0 < count--;) {
    goog.iter.nextOrValue(iterator, null);
  }
  return iterator;
};
goog.iter.slice = function(iterable, start, opt_end) {
  goog.asserts.assert(goog.math.isInt(start) && 0 <= start);
  var iterator = goog.iter.consume(iterable, start);
  goog.isNumber(opt_end) && (goog.asserts.assert(goog.math.isInt(opt_end) && opt_end >= start), iterator = goog.iter.limit(iterator, opt_end - start));
  return iterator;
};
goog.iter.hasDuplicates_ = function(arr) {
  var deduped = [];
  goog.array.removeDuplicates(arr, deduped);
  return arr.length != deduped.length;
};
goog.iter.permutations = function(iterable, opt_length) {
  var elements = goog.iter.toArray(iterable);
  var length = goog.isNumber(opt_length) ? opt_length : elements.length;
  var sets = goog.array.repeat(elements, length);
  var product = goog.iter.product.apply(void 0, sets);
  return goog.iter.filter(product, function(arr) {
    return !goog.iter.hasDuplicates_(arr);
  });
};
goog.iter.combinations = function(iterable, length) {
  function getIndexFromElements(index) {
    return elements[index];
  }
  var elements = goog.iter.toArray(iterable);
  var indexes = goog.iter.range(elements.length);
  var indexIterator = goog.iter.permutations(indexes, length);
  var sortedIndexIterator = goog.iter.filter(indexIterator, function(arr) {
    return goog.array.isSorted(arr);
  });
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    return goog.array.map(sortedIndexIterator.next(), getIndexFromElements);
  };
  return iter;
};
goog.iter.combinationsWithReplacement = function(iterable, length) {
  function getIndexFromElements(index) {
    return elements[index];
  }
  var elements = goog.iter.toArray(iterable);
  var indexes = goog.array.range(elements.length);
  var sets = goog.array.repeat(indexes, length);
  var indexIterator = goog.iter.product.apply(void 0, sets);
  var sortedIndexIterator = goog.iter.filter(indexIterator, function(arr) {
    return goog.array.isSorted(arr);
  });
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    return goog.array.map(sortedIndexIterator.next(), getIndexFromElements);
  };
  return iter;
};
goog.json = {};
goog.json.USE_NATIVE_JSON = !1;
goog.json.TRY_NATIVE_JSON = !1;
goog.json.isValid = function(s) {
  if (/^\s*$/.test(s)) {
    return !1;
  }
  var backslashesRe = /\\["\\\/bfnrtu]/g;
  var simpleValuesRe = /(?:"[^"\\\n\r\u2028\u2029\x00-\x08\x0a-\x1f]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?)[\s\u2028\u2029]*(?=:|,|]|}|$)/g;
  var openBracketsRe = /(?:^|:|,)(?:[\s\u2028\u2029]*\[)+/g;
  var remainderRe = /^[\],:{}\s\u2028\u2029]*$/;
  return remainderRe.test(s.replace(backslashesRe, "@").replace(simpleValuesRe, "]").replace(openBracketsRe, ""));
};
goog.json.errorLogger_ = goog.nullFunction;
goog.json.setErrorLogger = function(errorLogger) {
  goog.json.errorLogger_ = errorLogger;
};
goog.json.parse = goog.json.USE_NATIVE_JSON ? goog.global.JSON.parse : function(s) {
  if (goog.json.TRY_NATIVE_JSON) {
    try {
      return goog.global.JSON.parse(s);
    } catch (ex) {
      var error = ex;
    }
  }
  var o = String(s);
  if (goog.json.isValid(o)) {
    try {
      var result = eval("(" + o + ")");
      error && goog.json.errorLogger_("Invalid JSON: " + o, error);
      return result;
    } catch (ex$3) {
    }
  }
  throw Error("Invalid JSON string: " + o);
};
goog.json.serialize = goog.json.USE_NATIVE_JSON ? goog.global.JSON.stringify : function(object, opt_replacer) {
  return (new goog.json.Serializer(opt_replacer)).serialize(object);
};
goog.json.Serializer = function(opt_replacer) {
  this.replacer_ = opt_replacer;
};
goog.json.Serializer.prototype.serialize = function(object) {
  var sb = [];
  this.serializeInternal(object, sb);
  return sb.join("");
};
goog.json.Serializer.prototype.serializeInternal = function(object, sb) {
  if (null == object) {
    sb.push("null");
  } else {
    if ("object" == typeof object) {
      if (goog.isArray(object)) {
        this.serializeArray(object, sb);
        return;
      }
      if (object instanceof String || object instanceof Number || object instanceof Boolean) {
        object = object.valueOf();
      } else {
        this.serializeObject_(object, sb);
        return;
      }
    }
    switch(typeof object) {
      case "string":
        this.serializeString_(object, sb);
        break;
      case "number":
        this.serializeNumber_(object, sb);
        break;
      case "boolean":
        sb.push(String(object));
        break;
      case "function":
        sb.push("null");
        break;
      default:
        throw Error("Unknown type: " + typeof object);
    }
  }
};
goog.json.Serializer.charToJsonCharCache_ = {'"':'\\"', "\\":"\\\\", "/":"\\/", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\u000b"};
goog.json.Serializer.charsToReplace_ = /\uffff/.test("\uffff") ? /[\\\"\x00-\x1f\x7f-\uffff]/g : /[\\\"\x00-\x1f\x7f-\xff]/g;
goog.json.Serializer.prototype.serializeString_ = function(s, sb) {
  sb.push('"', s.replace(goog.json.Serializer.charsToReplace_, function(c) {
    var rv = goog.json.Serializer.charToJsonCharCache_[c];
    rv || (rv = "\\u" + (c.charCodeAt(0) | 65536).toString(16).substr(1), goog.json.Serializer.charToJsonCharCache_[c] = rv);
    return rv;
  }), '"');
};
goog.json.Serializer.prototype.serializeNumber_ = function(n, sb) {
  sb.push(isFinite(n) && !isNaN(n) ? String(n) : "null");
};
goog.json.Serializer.prototype.serializeArray = function(arr, sb) {
  var l = arr.length;
  sb.push("[");
  var sep = "";
  for (var i = 0; i < l; i++) {
    sb.push(sep);
    var value = arr[i];
    this.serializeInternal(this.replacer_ ? this.replacer_.call(arr, String(i), value) : value, sb);
    sep = ",";
  }
  sb.push("]");
};
goog.json.Serializer.prototype.serializeObject_ = function(obj, sb) {
  sb.push("{");
  var sep = "";
  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      var value = obj[key];
      "function" != typeof value && (sb.push(sep), this.serializeString_(key, sb), sb.push(":"), this.serializeInternal(this.replacer_ ? this.replacer_.call(obj, key, value) : value, sb), sep = ",");
    }
  }
  sb.push("}");
};
goog.json.hybrid = {};
goog.json.hybrid.stringify = goog.json.USE_NATIVE_JSON ? goog.global.JSON.stringify : function(obj) {
  if (goog.global.JSON) {
    try {
      return goog.global.JSON.stringify(obj);
    } catch (e) {
    }
  }
  return goog.json.serialize(obj);
};
goog.json.hybrid.parse_ = function(jsonString, fallbackParser) {
  if (goog.global.JSON) {
    try {
      var obj = goog.global.JSON.parse(jsonString);
      goog.asserts.assert("object" == typeof obj);
      return obj;
    } catch (e) {
    }
  }
  return fallbackParser(jsonString);
};
goog.json.hybrid.parse = goog.json.USE_NATIVE_JSON ? goog.global.JSON.parse : function(jsonString) {
  return goog.json.hybrid.parse_(jsonString, goog.json.parse);
};
goog.log = {};
goog.log.ENABLED = goog.debug.LOGGING_ENABLED;
goog.log.ROOT_LOGGER_NAME = goog.debug.Logger.ROOT_LOGGER_NAME;
goog.log.Logger = goog.debug.Logger;
goog.log.Level = goog.debug.Logger.Level;
goog.log.LogRecord = goog.debug.LogRecord;
goog.log.getLogger = function(name, opt_level) {
  if (goog.log.ENABLED) {
    var logger = goog.debug.LogManager.getLogger(name);
    opt_level && logger && logger.setLevel(opt_level);
    return logger;
  }
  return null;
};
goog.log.addHandler = function(logger, handler) {
  goog.log.ENABLED && logger && logger.addHandler(handler);
};
goog.log.removeHandler = function(logger, handler) {
  return goog.log.ENABLED && logger ? logger.removeHandler(handler) : !1;
};
goog.log.log = function(logger, level, msg, opt_exception) {
  goog.log.ENABLED && logger && logger.log(level, msg, opt_exception);
};
goog.log.error = function(logger, msg, opt_exception) {
  goog.log.ENABLED && logger && logger.severe(msg, opt_exception);
};
goog.log.warning = function(logger, msg, opt_exception) {
  goog.log.ENABLED && logger && logger.warning(msg, opt_exception);
};
goog.log.info = function(logger, msg, opt_exception) {
  goog.log.ENABLED && logger && logger.info(msg, opt_exception);
};
goog.log.fine = function(logger, msg, opt_exception) {
  goog.log.ENABLED && logger && logger.fine(msg, opt_exception);
};
goog.math.Box = function(top, right, bottom, left) {
  this.top = top;
  this.right = right;
  this.bottom = bottom;
  this.left = left;
};
goog.math.Box.boundingBox = function(var_args) {
  var box = new goog.math.Box(arguments[0].y, arguments[0].x, arguments[0].y, arguments[0].x);
  for (var i = 1; i < arguments.length; i++) {
    box.expandToIncludeCoordinate(arguments[i]);
  }
  return box;
};
goog.math.Box.prototype.getWidth = function() {
  return this.right - this.left;
};
goog.math.Box.prototype.clone = function() {
  return new goog.math.Box(this.top, this.right, this.bottom, this.left);
};
goog.DEBUG && (goog.math.Box.prototype.toString = function() {
  return "(" + this.top + "t, " + this.right + "r, " + this.bottom + "b, " + this.left + "l)";
});
goog.math.Box.prototype.contains = function(other) {
  return goog.math.Box.contains(this, other);
};
goog.math.Box.prototype.expand = function(top, opt_right, opt_bottom, opt_left) {
  goog.isObject(top) ? (this.top -= top.top, this.right += top.right, this.bottom += top.bottom, this.left -= top.left) : (this.top -= top, this.right += Number(opt_right), this.bottom += Number(opt_bottom), this.left -= Number(opt_left));
  return this;
};
goog.math.Box.prototype.expandToIncludeCoordinate = function(coord) {
  this.top = Math.min(this.top, coord.y);
  this.right = Math.max(this.right, coord.x);
  this.bottom = Math.max(this.bottom, coord.y);
  this.left = Math.min(this.left, coord.x);
};
goog.math.Box.equals = function(a, b) {
  return a == b ? !0 : a && b ? a.top == b.top && a.right == b.right && a.bottom == b.bottom && a.left == b.left : !1;
};
goog.math.Box.contains = function(box, other) {
  return box && other ? other instanceof goog.math.Box ? other.left >= box.left && other.right <= box.right && other.top >= box.top && other.bottom <= box.bottom : other.x >= box.left && other.x <= box.right && other.y >= box.top && other.y <= box.bottom : !1;
};
goog.math.Box.relativePositionX = function(box, coord) {
  return coord.x < box.left ? coord.x - box.left : coord.x > box.right ? coord.x - box.right : 0;
};
goog.math.Box.relativePositionY = function(box, coord) {
  return coord.y < box.top ? coord.y - box.top : coord.y > box.bottom ? coord.y - box.bottom : 0;
};
goog.math.Box.distance = function(box, coord) {
  var x = goog.math.Box.relativePositionX(box, coord);
  var y = goog.math.Box.relativePositionY(box, coord);
  return Math.sqrt(x * x + y * y);
};
goog.math.Box.intersects = function(a, b) {
  return a.left <= b.right && b.left <= a.right && a.top <= b.bottom && b.top <= a.bottom;
};
goog.math.Box.intersectsWithPadding = function(a, b, padding) {
  return a.left <= b.right + padding && b.left <= a.right + padding && a.top <= b.bottom + padding && b.top <= a.bottom + padding;
};
goog.math.Box.prototype.ceil = function() {
  this.top = Math.ceil(this.top);
  this.right = Math.ceil(this.right);
  this.bottom = Math.ceil(this.bottom);
  this.left = Math.ceil(this.left);
  return this;
};
goog.math.Box.prototype.floor = function() {
  this.top = Math.floor(this.top);
  this.right = Math.floor(this.right);
  this.bottom = Math.floor(this.bottom);
  this.left = Math.floor(this.left);
  return this;
};
goog.math.Box.prototype.round = function() {
  this.top = Math.round(this.top);
  this.right = Math.round(this.right);
  this.bottom = Math.round(this.bottom);
  this.left = Math.round(this.left);
  return this;
};
goog.math.Box.prototype.translate = function(tx, opt_ty) {
  tx instanceof goog.math.Coordinate ? (this.left += tx.x, this.right += tx.x, this.top += tx.y, this.bottom += tx.y) : (goog.asserts.assertNumber(tx), this.left += tx, this.right += tx, goog.isNumber(opt_ty) && (this.top += opt_ty, this.bottom += opt_ty));
  return this;
};
goog.math.Box.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.left *= sx;
  this.right *= sx;
  this.top *= sy;
  this.bottom *= sy;
  return this;
};
goog.math.IRect = function() {
};
goog.math.Rect = function(x, y, w, h) {
  this.left = x;
  this.top = y;
  this.width = w;
  this.height = h;
};
goog.math.Rect.prototype.clone = function() {
  return new goog.math.Rect(this.left, this.top, this.width, this.height);
};
goog.math.Rect.createFromPositionAndSize = function(position, size) {
  return new goog.math.Rect(position.x, position.y, size.width, size.height);
};
goog.math.Rect.createFromBox = function(box) {
  return new goog.math.Rect(box.left, box.top, box.right - box.left, box.bottom - box.top);
};
goog.DEBUG && (goog.math.Rect.prototype.toString = function() {
  return "(" + this.left + ", " + this.top + " - " + this.width + "w x " + this.height + "h)";
});
goog.math.Rect.equals = function(a, b) {
  return a == b ? !0 : a && b ? a.left == b.left && a.width == b.width && a.top == b.top && a.height == b.height : !1;
};
goog.math.Rect.prototype.intersection = function(rect) {
  var x0 = Math.max(this.left, rect.left);
  var x1 = Math.min(this.left + this.width, rect.left + rect.width);
  if (x0 <= x1) {
    var y0 = Math.max(this.top, rect.top);
    var y1 = Math.min(this.top + this.height, rect.top + rect.height);
    if (y0 <= y1) {
      return this.left = x0, this.top = y0, this.width = x1 - x0, this.height = y1 - y0, !0;
    }
  }
  return !1;
};
goog.math.Rect.intersection = function(a, b) {
  var x0 = Math.max(a.left, b.left);
  var x1 = Math.min(a.left + a.width, b.left + b.width);
  if (x0 <= x1) {
    var y0 = Math.max(a.top, b.top);
    var y1 = Math.min(a.top + a.height, b.top + b.height);
    if (y0 <= y1) {
      return new goog.math.Rect(x0, y0, x1 - x0, y1 - y0);
    }
  }
  return null;
};
goog.math.Rect.intersects = function(a, b) {
  return a.left <= b.left + b.width && b.left <= a.left + a.width && a.top <= b.top + b.height && b.top <= a.top + a.height;
};
goog.math.Rect.prototype.intersects = function(rect) {
  return goog.math.Rect.intersects(this, rect);
};
goog.math.Rect.difference = function(a, b) {
  var intersection = goog.math.Rect.intersection(a, b);
  if (!intersection || !intersection.height || !intersection.width) {
    return [a.clone()];
  }
  var result = [];
  var top = a.top;
  var height = a.height;
  var ar = a.left + a.width;
  var ab = a.top + a.height;
  var br = b.left + b.width;
  var bb = b.top + b.height;
  b.top > a.top && (result.push(new goog.math.Rect(a.left, a.top, a.width, b.top - a.top)), top = b.top, height -= b.top - a.top);
  bb < ab && (result.push(new goog.math.Rect(a.left, bb, a.width, ab - bb)), height = bb - top);
  b.left > a.left && result.push(new goog.math.Rect(a.left, top, b.left - a.left, height));
  br < ar && result.push(new goog.math.Rect(br, top, ar - br, height));
  return result;
};
goog.math.Rect.prototype.difference = function(rect) {
  return goog.math.Rect.difference(this, rect);
};
goog.math.Rect.prototype.boundingRect = function(rect) {
  var right = Math.max(this.left + this.width, rect.left + rect.width);
  var bottom = Math.max(this.top + this.height, rect.top + rect.height);
  this.left = Math.min(this.left, rect.left);
  this.top = Math.min(this.top, rect.top);
  this.width = right - this.left;
  this.height = bottom - this.top;
};
goog.math.Rect.boundingRect = function(a, b) {
  if (!a || !b) {
    return null;
  }
  var newRect = new goog.math.Rect(a.left, a.top, a.width, a.height);
  newRect.boundingRect(b);
  return newRect;
};
goog.math.Rect.prototype.contains = function(another) {
  return another instanceof goog.math.Coordinate ? another.x >= this.left && another.x <= this.left + this.width && another.y >= this.top && another.y <= this.top + this.height : this.left <= another.left && this.left + this.width >= another.left + another.width && this.top <= another.top && this.top + this.height >= another.top + another.height;
};
goog.math.Rect.prototype.squaredDistance = function(point) {
  var dx = point.x < this.left ? this.left - point.x : Math.max(point.x - (this.left + this.width), 0);
  var dy = point.y < this.top ? this.top - point.y : Math.max(point.y - (this.top + this.height), 0);
  return dx * dx + dy * dy;
};
goog.math.Rect.prototype.distance = function(point) {
  return Math.sqrt(this.squaredDistance(point));
};
goog.math.Rect.prototype.getSize = function() {
  return new goog.math.Size(this.width, this.height);
};
goog.math.Rect.prototype.ceil = function() {
  this.left = Math.ceil(this.left);
  this.top = Math.ceil(this.top);
  this.width = Math.ceil(this.width);
  this.height = Math.ceil(this.height);
  return this;
};
goog.math.Rect.prototype.floor = function() {
  this.left = Math.floor(this.left);
  this.top = Math.floor(this.top);
  this.width = Math.floor(this.width);
  this.height = Math.floor(this.height);
  return this;
};
goog.math.Rect.prototype.round = function() {
  this.left = Math.round(this.left);
  this.top = Math.round(this.top);
  this.width = Math.round(this.width);
  this.height = Math.round(this.height);
  return this;
};
goog.math.Rect.prototype.translate = function(tx, opt_ty) {
  tx instanceof goog.math.Coordinate ? (this.left += tx.x, this.top += tx.y) : (this.left += goog.asserts.assertNumber(tx), goog.isNumber(opt_ty) && (this.top += opt_ty));
  return this;
};
goog.math.Rect.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.left *= sx;
  this.width *= sx;
  this.top *= sy;
  this.height *= sy;
  return this;
};
goog.net = {};
goog.net.ErrorCode = {NO_ERROR:0, ACCESS_DENIED:1, FILE_NOT_FOUND:2, FF_SILENT_ERROR:3, CUSTOM_ERROR:4, EXCEPTION:5, HTTP_ERROR:6, ABORT:7, TIMEOUT:8, OFFLINE:9};
goog.net.ErrorCode.getDebugMessage = function(errorCode) {
  switch(errorCode) {
    case goog.net.ErrorCode.NO_ERROR:
      return "No Error";
    case goog.net.ErrorCode.ACCESS_DENIED:
      return "Access denied to content document";
    case goog.net.ErrorCode.FILE_NOT_FOUND:
      return "File not found";
    case goog.net.ErrorCode.FF_SILENT_ERROR:
      return "Firefox silently errored";
    case goog.net.ErrorCode.CUSTOM_ERROR:
      return "Application custom error";
    case goog.net.ErrorCode.EXCEPTION:
      return "An exception occurred";
    case goog.net.ErrorCode.HTTP_ERROR:
      return "Http response at 400 or 500 level";
    case goog.net.ErrorCode.ABORT:
      return "Request was aborted";
    case goog.net.ErrorCode.TIMEOUT:
      return "Request timed out";
    case goog.net.ErrorCode.OFFLINE:
      return "The resource is not available offline";
    default:
      return "Unrecognized error code";
  }
};
goog.net.EventType = {COMPLETE:"complete", SUCCESS:"success", ERROR:"error", ABORT:"abort", READY:"ready", READY_STATE_CHANGE:"readystatechange", TIMEOUT:"timeout", INCREMENTAL_DATA:"incrementaldata", PROGRESS:"progress", DOWNLOAD_PROGRESS:"downloadprogress", UPLOAD_PROGRESS:"uploadprogress"};
goog.net.HttpStatus = {CONTINUE:100, SWITCHING_PROTOCOLS:101, OK:200, CREATED:201, ACCEPTED:202, NON_AUTHORITATIVE_INFORMATION:203, NO_CONTENT:204, RESET_CONTENT:205, PARTIAL_CONTENT:206, MULTIPLE_CHOICES:300, MOVED_PERMANENTLY:301, FOUND:302, SEE_OTHER:303, NOT_MODIFIED:304, USE_PROXY:305, TEMPORARY_REDIRECT:307, BAD_REQUEST:400, UNAUTHORIZED:401, PAYMENT_REQUIRED:402, FORBIDDEN:403, NOT_FOUND:404, METHOD_NOT_ALLOWED:405, NOT_ACCEPTABLE:406, PROXY_AUTHENTICATION_REQUIRED:407, REQUEST_TIMEOUT:408, 
CONFLICT:409, GONE:410, LENGTH_REQUIRED:411, PRECONDITION_FAILED:412, REQUEST_ENTITY_TOO_LARGE:413, REQUEST_URI_TOO_LONG:414, UNSUPPORTED_MEDIA_TYPE:415, REQUEST_RANGE_NOT_SATISFIABLE:416, EXPECTATION_FAILED:417, PRECONDITION_REQUIRED:428, TOO_MANY_REQUESTS:429, REQUEST_HEADER_FIELDS_TOO_LARGE:431, INTERNAL_SERVER_ERROR:500, NOT_IMPLEMENTED:501, BAD_GATEWAY:502, SERVICE_UNAVAILABLE:503, GATEWAY_TIMEOUT:504, HTTP_VERSION_NOT_SUPPORTED:505, NETWORK_AUTHENTICATION_REQUIRED:511, QUIRK_IE_NO_CONTENT:1223};
goog.net.HttpStatus.isSuccess = function(status) {
  switch(status) {
    case goog.net.HttpStatus.OK:
    case goog.net.HttpStatus.CREATED:
    case goog.net.HttpStatus.ACCEPTED:
    case goog.net.HttpStatus.NO_CONTENT:
    case goog.net.HttpStatus.PARTIAL_CONTENT:
    case goog.net.HttpStatus.NOT_MODIFIED:
    case goog.net.HttpStatus.QUIRK_IE_NO_CONTENT:
      return !0;
    default:
      return !1;
  }
};
goog.net.XhrLike = function() {
};
goog.net.XhrLike.prototype.open = function() {
};
goog.net.XhrLike.prototype.send = function() {
};
goog.net.XhrLike.prototype.abort = function() {
};
goog.net.XhrLike.prototype.setRequestHeader = function() {
};
goog.net.XhrLike.prototype.getResponseHeader = function() {
};
goog.net.XhrLike.prototype.getAllResponseHeaders = function() {
};
goog.net.XmlHttpFactory = function() {
};
goog.net.XmlHttpFactory.prototype.cachedOptions_ = null;
goog.net.XmlHttpFactory.prototype.getOptions = function() {
  return this.cachedOptions_ || (this.cachedOptions_ = this.internalGetOptions());
};
goog.net.WrapperXmlHttpFactory = function(xhrFactory, optionsFactory) {
  this.xhrFactory_ = xhrFactory;
  this.optionsFactory_ = optionsFactory;
};
goog.inherits(goog.net.WrapperXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.WrapperXmlHttpFactory.prototype.createInstance = function() {
  return this.xhrFactory_();
};
goog.net.WrapperXmlHttpFactory.prototype.getOptions = function() {
  return this.optionsFactory_();
};
goog.net.XmlHttp = function() {
  return goog.net.XmlHttp.factory_.createInstance();
};
goog.net.XmlHttp.ASSUME_NATIVE_XHR = !1;
goog.net.XmlHttpDefines = {};
goog.net.XmlHttpDefines.ASSUME_NATIVE_XHR = !1;
goog.net.XmlHttp.getOptions = function() {
  return goog.net.XmlHttp.factory_.getOptions();
};
goog.net.XmlHttp.OptionType = {USE_NULL_FUNCTION:0, LOCAL_REQUEST_ERROR:1};
goog.net.XmlHttp.ReadyState = {UNINITIALIZED:0, LOADING:1, LOADED:2, INTERACTIVE:3, COMPLETE:4};
goog.net.XmlHttp.setFactory = function(factory, optionsFactory) {
  goog.net.XmlHttp.setGlobalFactory(new goog.net.WrapperXmlHttpFactory(goog.asserts.assert(factory), goog.asserts.assert(optionsFactory)));
};
goog.net.XmlHttp.setGlobalFactory = function(factory) {
  goog.net.XmlHttp.factory_ = factory;
};
goog.net.DefaultXmlHttpFactory = function() {
};
goog.inherits(goog.net.DefaultXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.DefaultXmlHttpFactory.prototype.createInstance = function() {
  var progId = this.getProgId_();
  return progId ? new ActiveXObject(progId) : new XMLHttpRequest;
};
goog.net.DefaultXmlHttpFactory.prototype.internalGetOptions = function() {
  var progId = this.getProgId_();
  var options = {};
  progId && (options[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] = !0, options[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] = !0);
  return options;
};
goog.net.DefaultXmlHttpFactory.prototype.getProgId_ = function() {
  if (goog.net.XmlHttp.ASSUME_NATIVE_XHR || goog.net.XmlHttpDefines.ASSUME_NATIVE_XHR) {
    return "";
  }
  if (!this.ieProgId_ && "undefined" == typeof XMLHttpRequest && "undefined" != typeof ActiveXObject) {
    var ACTIVE_X_IDENTS = ["MSXML2.XMLHTTP.6.0", "MSXML2.XMLHTTP.3.0", "MSXML2.XMLHTTP", "Microsoft.XMLHTTP"];
    for (var i = 0; i < ACTIVE_X_IDENTS.length; i++) {
      var candidate = ACTIVE_X_IDENTS[i];
      try {
        return new ActiveXObject(candidate), this.ieProgId_ = candidate, candidate;
      } catch (e) {
      }
    }
    throw Error("Could not create ActiveXObject. ActiveX might be disabled, or MSXML might not be installed");
  }
  return this.ieProgId_;
};
goog.net.XmlHttp.setGlobalFactory(new goog.net.DefaultXmlHttpFactory);
goog.structs = {};
goog.structs.Map = function(opt_map, var_args) {
  this.map_ = {};
  this.keys_ = [];
  this.count_ = 0;
  this.version_ = 0;
  var argLength = arguments.length;
  if (1 < argLength) {
    if (argLength % 2) {
      throw Error("Uneven number of arguments");
    }
    for (var i = 0; i < argLength; i += 2) {
      this.set(arguments[i], arguments[i + 1]);
    }
  } else {
    opt_map && this.addAll(opt_map);
  }
};
goog.structs.Map.prototype.getCount = function() {
  return this.count_;
};
goog.structs.Map.prototype.getValues = function() {
  this.cleanupKeysArray_();
  var rv = [];
  for (var i = 0; i < this.keys_.length; i++) {
    var key = this.keys_[i];
    rv.push(this.map_[key]);
  }
  return rv;
};
goog.structs.Map.prototype.getKeys = function() {
  this.cleanupKeysArray_();
  return this.keys_.concat();
};
goog.structs.Map.prototype.containsKey = function(key) {
  return goog.structs.Map.hasKey_(this.map_, key);
};
goog.structs.Map.prototype.containsValue = function(val) {
  for (var i = 0; i < this.keys_.length; i++) {
    var key = this.keys_[i];
    if (goog.structs.Map.hasKey_(this.map_, key) && this.map_[key] == val) {
      return !0;
    }
  }
  return !1;
};
goog.structs.Map.prototype.equals = function(otherMap, opt_equalityFn) {
  if (this === otherMap) {
    return !0;
  }
  if (this.count_ != otherMap.getCount()) {
    return !1;
  }
  var equalityFn = opt_equalityFn || goog.structs.Map.defaultEquals;
  this.cleanupKeysArray_();
  var key;
  for (var i = 0; key = this.keys_[i]; i++) {
    if (!equalityFn(this.get(key), otherMap.get(key))) {
      return !1;
    }
  }
  return !0;
};
goog.structs.Map.defaultEquals = function(a, b) {
  return a === b;
};
goog.structs.Map.prototype.isEmpty = function() {
  return 0 == this.count_;
};
goog.structs.Map.prototype.clear = function() {
  this.map_ = {};
  this.keys_.length = 0;
  this.count_ = 0;
  this.version_ = 0;
};
goog.structs.Map.prototype.remove = function(key) {
  return goog.structs.Map.hasKey_(this.map_, key) ? (delete this.map_[key], this.count_--, this.version_++, this.keys_.length > 2 * this.count_ && this.cleanupKeysArray_(), !0) : !1;
};
goog.structs.Map.prototype.cleanupKeysArray_ = function() {
  if (this.count_ != this.keys_.length) {
    var srcIndex = 0;
    for (var destIndex = 0; srcIndex < this.keys_.length;) {
      var key = this.keys_[srcIndex];
      goog.structs.Map.hasKey_(this.map_, key) && (this.keys_[destIndex++] = key);
      srcIndex++;
    }
    this.keys_.length = destIndex;
  }
  if (this.count_ != this.keys_.length) {
    var seen = {};
    srcIndex = 0;
    for (destIndex = 0; srcIndex < this.keys_.length;) {
      key = this.keys_[srcIndex], goog.structs.Map.hasKey_(seen, key) || (this.keys_[destIndex++] = key, seen[key] = 1), srcIndex++;
    }
    this.keys_.length = destIndex;
  }
};
goog.structs.Map.prototype.get = function(key, opt_val) {
  return goog.structs.Map.hasKey_(this.map_, key) ? this.map_[key] : opt_val;
};
goog.structs.Map.prototype.set = function(key, value) {
  goog.structs.Map.hasKey_(this.map_, key) || (this.count_++, this.keys_.push(key), this.version_++);
  this.map_[key] = value;
};
goog.structs.Map.prototype.addAll = function(map) {
  if (map instanceof goog.structs.Map) {
    var keys = map.getKeys();
    var values = map.getValues();
  } else {
    keys = goog.object.getKeys(map), values = goog.object.getValues(map);
  }
  for (var i = 0; i < keys.length; i++) {
    this.set(keys[i], values[i]);
  }
};
goog.structs.Map.prototype.forEach = function(f, opt_obj) {
  var keys = this.getKeys();
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    var value = this.get(key);
    f.call(opt_obj, value, key, this);
  }
};
goog.structs.Map.prototype.clone = function() {
  return new goog.structs.Map(this);
};
goog.structs.Map.prototype.transpose = function() {
  var transposed = new goog.structs.Map;
  for (var i = 0; i < this.keys_.length; i++) {
    var key = this.keys_[i];
    var value = this.map_[key];
    transposed.set(value, key);
  }
  return transposed;
};
goog.structs.Map.prototype.toObject = function() {
  this.cleanupKeysArray_();
  var obj = {};
  for (var i = 0; i < this.keys_.length; i++) {
    var key = this.keys_[i];
    obj[key] = this.map_[key];
  }
  return obj;
};
goog.structs.Map.prototype.__iterator__ = function(opt_keys) {
  this.cleanupKeysArray_();
  var i = 0;
  var version = this.version_;
  var selfObj = this;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    if (version != selfObj.version_) {
      throw Error("The map has changed since the iterator was created");
    }
    if (i >= selfObj.keys_.length) {
      throw goog.iter.StopIteration;
    }
    var key = selfObj.keys_[i++];
    return opt_keys ? key : selfObj.map_[key];
  };
  return newIter;
};
goog.structs.Map.hasKey_ = function(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key);
};
goog.structs.getCount = function(col) {
  return col.getCount && "function" == typeof col.getCount ? col.getCount() : goog.isArrayLike(col) || goog.isString(col) ? col.length : goog.object.getCount(col);
};
goog.structs.getValues = function(col) {
  if (col.getValues && "function" == typeof col.getValues) {
    return col.getValues();
  }
  if (goog.isString(col)) {
    return col.split("");
  }
  if (goog.isArrayLike(col)) {
    var rv = [];
    var l = col.length;
    for (var i = 0; i < l; i++) {
      rv.push(col[i]);
    }
    return rv;
  }
  return goog.object.getValues(col);
};
goog.structs.getKeys = function(col) {
  if (col.getKeys && "function" == typeof col.getKeys) {
    return col.getKeys();
  }
  if (!col.getValues || "function" != typeof col.getValues) {
    if (goog.isArrayLike(col) || goog.isString(col)) {
      var rv = [];
      var l = col.length;
      for (var i = 0; i < l; i++) {
        rv.push(i);
      }
      return rv;
    }
    return goog.object.getKeys(col);
  }
};
goog.structs.contains = function(col, val) {
  return col.contains && "function" == typeof col.contains ? col.contains(val) : col.containsValue && "function" == typeof col.containsValue ? col.containsValue(val) : goog.isArrayLike(col) || goog.isString(col) ? goog.array.contains(col, val) : goog.object.containsValue(col, val);
};
goog.structs.isEmpty = function(col) {
  return col.isEmpty && "function" == typeof col.isEmpty ? col.isEmpty() : goog.isArrayLike(col) || goog.isString(col) ? goog.array.isEmpty(col) : goog.object.isEmpty(col);
};
goog.structs.clear = function(col) {
  col.clear && "function" == typeof col.clear ? col.clear() : goog.isArrayLike(col) ? goog.array.clear(col) : goog.object.clear(col);
};
goog.structs.forEach = function(col, f, opt_obj) {
  if (col.forEach && "function" == typeof col.forEach) {
    col.forEach(f, opt_obj);
  } else {
    if (goog.isArrayLike(col) || goog.isString(col)) {
      goog.array.forEach(col, f, opt_obj);
    } else {
      var keys = goog.structs.getKeys(col);
      var values = goog.structs.getValues(col);
      var l = values.length;
      for (var i = 0; i < l; i++) {
        f.call(opt_obj, values[i], keys && keys[i], col);
      }
    }
  }
};
goog.structs.filter = function(col, f, opt_obj) {
  if ("function" == typeof col.filter) {
    return col.filter(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.filter(col, f, opt_obj);
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if (keys) {
    var rv = {};
    for (var i = 0; i < l; i++) {
      f.call(opt_obj, values[i], keys[i], col) && (rv[keys[i]] = values[i]);
    }
  } else {
    for (rv = [], i = 0; i < l; i++) {
      f.call(opt_obj, values[i], void 0, col) && rv.push(values[i]);
    }
  }
  return rv;
};
goog.structs.map = function(col, f, opt_obj) {
  if ("function" == typeof col.map) {
    return col.map(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.map(col, f, opt_obj);
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if (keys) {
    var rv = {};
    for (var i = 0; i < l; i++) {
      rv[keys[i]] = f.call(opt_obj, values[i], keys[i], col);
    }
  } else {
    for (rv = [], i = 0; i < l; i++) {
      rv[i] = f.call(opt_obj, values[i], void 0, col);
    }
  }
  return rv;
};
goog.structs.some = function(col, f, opt_obj) {
  if ("function" == typeof col.some) {
    return col.some(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.some(col, f, opt_obj);
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0; i < l; i++) {
    if (f.call(opt_obj, values[i], keys && keys[i], col)) {
      return !0;
    }
  }
  return !1;
};
goog.structs.every = function(col, f, opt_obj) {
  if ("function" == typeof col.every) {
    return col.every(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.every(col, f, opt_obj);
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0; i < l; i++) {
    if (!f.call(opt_obj, values[i], keys && keys[i], col)) {
      return !1;
    }
  }
  return !0;
};
goog.promise = {};
goog.promise.Resolver = function() {
};
goog.Thenable = function() {
};
goog.Thenable.prototype.then = function() {
};
goog.Thenable.IMPLEMENTED_BY_PROP = "$goog_Thenable";
goog.Thenable.addImplementation = function(ctor) {
  ctor.prototype.then = ctor.prototype.then;
  ctor.prototype[goog.Thenable.IMPLEMENTED_BY_PROP] = !0;
};
goog.Thenable.isImplementedBy = function(object) {
  if (!object) {
    return !1;
  }
  try {
    return !!object[goog.Thenable.IMPLEMENTED_BY_PROP];
  } catch (e) {
    return !1;
  }
};
goog.Promise = function(resolver, opt_context) {
  this.state_ = goog.Promise.State_.PENDING;
  this.result_ = void 0;
  this.parent_ = null;
  this.callbackEntries_ = null;
  this.callbackEntriesTail_ = null;
  this.executing_ = !1;
  0 < goog.Promise.UNHANDLED_REJECTION_DELAY ? this.unhandledRejectionId_ = 0 : 0 == goog.Promise.UNHANDLED_REJECTION_DELAY && (this.hadUnhandledRejection_ = !1);
  goog.Promise.LONG_STACK_TRACES && (this.stack_ = [], this.addStackTrace_(Error("created")), this.currentStep_ = 0);
  if (resolver != goog.nullFunction) {
    try {
      var self = this;
      resolver.call(opt_context, function(value) {
        self.resolve_(goog.Promise.State_.FULFILLED, value);
      }, function(reason) {
        if (goog.DEBUG && !(reason instanceof goog.Promise.CancellationError)) {
          try {
            if (reason instanceof Error) {
              throw reason;
            }
            throw Error("Promise rejected.");
          } catch (e) {
          }
        }
        self.resolve_(goog.Promise.State_.REJECTED, reason);
      });
    } catch (e) {
      this.resolve_(goog.Promise.State_.REJECTED, e);
    }
  }
};
goog.Promise.LONG_STACK_TRACES = !1;
goog.Promise.UNHANDLED_REJECTION_DELAY = 0;
goog.Promise.State_ = {PENDING:0, BLOCKED:1, FULFILLED:2, REJECTED:3};
goog.Promise.CallbackEntry_ = function() {
  this.child = null;
  this.onFulfilled = null;
  this.onRejected = null;
  this.context = null;
  this.next = null;
  this.always = !1;
};
goog.Promise.CallbackEntry_.prototype.reset = function() {
  this.child = null;
  this.onFulfilled = null;
  this.onRejected = null;
  this.context = null;
  this.always = !1;
};
goog.Promise.DEFAULT_MAX_UNUSED = 100;
goog.Promise.freelist_ = new goog.async.FreeList(function() {
  return new goog.Promise.CallbackEntry_;
}, function(item) {
  item.reset();
}, goog.Promise.DEFAULT_MAX_UNUSED);
goog.Promise.getCallbackEntry_ = function(onFulfilled, onRejected, context) {
  var entry = goog.Promise.freelist_.get();
  entry.onFulfilled = onFulfilled;
  entry.onRejected = onRejected;
  entry.context = context;
  return entry;
};
goog.Promise.returnEntry_ = function(entry) {
  goog.Promise.freelist_.put(entry);
};
goog.Promise.resolve = function(opt_value) {
  if (opt_value instanceof goog.Promise) {
    return opt_value;
  }
  var promise = new goog.Promise(goog.nullFunction);
  promise.resolve_(goog.Promise.State_.FULFILLED, opt_value);
  return promise;
};
goog.Promise.reject = function(opt_reason) {
  return new goog.Promise(function(resolve, reject) {
    reject(opt_reason);
  });
};
goog.Promise.resolveThen_ = function(value, onFulfilled, onRejected) {
  var isThenable = goog.Promise.maybeThen_(value, onFulfilled, onRejected, null);
  isThenable || goog.async.run(goog.partial(onFulfilled, value));
};
goog.Promise.race = function(promises) {
  return new goog.Promise(function(resolve, reject) {
    promises.length || resolve(void 0);
    var i = 0;
    for (var promise; i < promises.length; i++) {
      promise = promises[i], goog.Promise.resolveThen_(promise, resolve, reject);
    }
  });
};
goog.Promise.all = function(promises) {
  return new goog.Promise(function(resolve, reject) {
    var toFulfill = promises.length;
    var values = [];
    if (toFulfill) {
      var onFulfill = function(index, value) {
        toFulfill--;
        values[index] = value;
        0 == toFulfill && resolve(values);
      };
      var onReject = function(reason) {
        reject(reason);
      };
      var i = 0;
      for (var promise; i < promises.length; i++) {
        promise = promises[i], goog.Promise.resolveThen_(promise, goog.partial(onFulfill, i), onReject);
      }
    } else {
      resolve(values);
    }
  });
};
goog.Promise.allSettled = function(promises) {
  return new goog.Promise(function(resolve) {
    var toSettle = promises.length;
    var results = [];
    if (toSettle) {
      var onSettled = function(index, fulfilled, result) {
        toSettle--;
        results[index] = fulfilled ? {fulfilled:!0, value:result} : {fulfilled:!1, reason:result};
        0 == toSettle && resolve(results);
      };
      var i = 0;
      for (var promise; i < promises.length; i++) {
        promise = promises[i], goog.Promise.resolveThen_(promise, goog.partial(onSettled, i, !0), goog.partial(onSettled, i, !1));
      }
    } else {
      resolve(results);
    }
  });
};
goog.Promise.firstFulfilled = function(promises) {
  return new goog.Promise(function(resolve, reject) {
    var toReject = promises.length;
    var reasons = [];
    if (toReject) {
      var onFulfill = function(value) {
        resolve(value);
      };
      var onReject = function(index, reason) {
        toReject--;
        reasons[index] = reason;
        0 == toReject && reject(reasons);
      };
      var i = 0;
      for (var promise; i < promises.length; i++) {
        promise = promises[i], goog.Promise.resolveThen_(promise, onFulfill, goog.partial(onReject, i));
      }
    } else {
      resolve(void 0);
    }
  });
};
goog.Promise.withResolver = function() {
  var resolve;
  var reject;
  var promise = new goog.Promise(function(rs, rj) {
    resolve = rs;
    reject = rj;
  });
  return new goog.Promise.Resolver_(promise, resolve, reject);
};
goog.Promise.prototype.then = function(opt_onFulfilled, opt_onRejected, opt_context) {
  null != opt_onFulfilled && goog.asserts.assertFunction(opt_onFulfilled, "opt_onFulfilled should be a function.");
  null != opt_onRejected && goog.asserts.assertFunction(opt_onRejected, "opt_onRejected should be a function. Did you pass opt_context as the second argument instead of the third?");
  goog.Promise.LONG_STACK_TRACES && this.addStackTrace_(Error("then"));
  return this.addChildPromise_(goog.isFunction(opt_onFulfilled) ? opt_onFulfilled : null, goog.isFunction(opt_onRejected) ? opt_onRejected : null, opt_context);
};
goog.Thenable.addImplementation(goog.Promise);
goog.Promise.prototype.thenVoid = function(opt_onFulfilled, opt_onRejected, opt_context) {
  null != opt_onFulfilled && goog.asserts.assertFunction(opt_onFulfilled, "opt_onFulfilled should be a function.");
  null != opt_onRejected && goog.asserts.assertFunction(opt_onRejected, "opt_onRejected should be a function. Did you pass opt_context as the second argument instead of the third?");
  goog.Promise.LONG_STACK_TRACES && this.addStackTrace_(Error("then"));
  this.addCallbackEntry_(goog.Promise.getCallbackEntry_(opt_onFulfilled || goog.nullFunction, opt_onRejected || null, opt_context));
};
goog.Promise.prototype.thenCatch = function(onRejected, opt_context) {
  goog.Promise.LONG_STACK_TRACES && this.addStackTrace_(Error("thenCatch"));
  return this.addChildPromise_(null, onRejected, opt_context);
};
goog.Promise.prototype.cancel = function(opt_message) {
  this.state_ == goog.Promise.State_.PENDING && goog.async.run(function() {
    var err = new goog.Promise.CancellationError(opt_message);
    this.cancelInternal_(err);
  }, this);
};
goog.Promise.prototype.cancelInternal_ = function(err) {
  this.state_ == goog.Promise.State_.PENDING && (this.parent_ ? (this.parent_.cancelChild_(this, err), this.parent_ = null) : this.resolve_(goog.Promise.State_.REJECTED, err));
};
goog.Promise.prototype.cancelChild_ = function(childPromise, err) {
  if (this.callbackEntries_) {
    var childCount = 0;
    var childEntry = null;
    var beforeChildEntry = null;
    for (var entry = this.callbackEntries_; entry && (entry.always || (childCount++, entry.child == childPromise && (childEntry = entry), !(childEntry && 1 < childCount))); entry = entry.next) {
      childEntry || (beforeChildEntry = entry);
    }
    childEntry && (this.state_ == goog.Promise.State_.PENDING && 1 == childCount ? this.cancelInternal_(err) : (beforeChildEntry ? this.removeEntryAfter_(beforeChildEntry) : this.popEntry_(), this.executeCallback_(childEntry, goog.Promise.State_.REJECTED, err)));
  }
};
goog.Promise.prototype.addCallbackEntry_ = function(callbackEntry) {
  this.hasEntry_() || this.state_ != goog.Promise.State_.FULFILLED && this.state_ != goog.Promise.State_.REJECTED || this.scheduleCallbacks_();
  this.queueEntry_(callbackEntry);
};
goog.Promise.prototype.addChildPromise_ = function(onFulfilled, onRejected, opt_context) {
  var callbackEntry = goog.Promise.getCallbackEntry_(null, null, null);
  callbackEntry.child = new goog.Promise(function(resolve, reject) {
    callbackEntry.onFulfilled = onFulfilled ? function(value) {
      try {
        var result = onFulfilled.call(opt_context, value);
        resolve(result);
      } catch (err) {
        reject(err);
      }
    } : resolve;
    callbackEntry.onRejected = onRejected ? function(reason) {
      try {
        var result = onRejected.call(opt_context, reason);
        !goog.isDef(result) && reason instanceof goog.Promise.CancellationError ? reject(reason) : resolve(result);
      } catch (err) {
        reject(err);
      }
    } : reject;
  });
  callbackEntry.child.parent_ = this;
  this.addCallbackEntry_(callbackEntry);
  return callbackEntry.child;
};
goog.Promise.prototype.unblockAndFulfill_ = function(value) {
  goog.asserts.assert(this.state_ == goog.Promise.State_.BLOCKED);
  this.state_ = goog.Promise.State_.PENDING;
  this.resolve_(goog.Promise.State_.FULFILLED, value);
};
goog.Promise.prototype.unblockAndReject_ = function(reason) {
  goog.asserts.assert(this.state_ == goog.Promise.State_.BLOCKED);
  this.state_ = goog.Promise.State_.PENDING;
  this.resolve_(goog.Promise.State_.REJECTED, reason);
};
goog.Promise.prototype.resolve_ = function(state, x) {
  if (this.state_ == goog.Promise.State_.PENDING) {
    this === x && (state = goog.Promise.State_.REJECTED, x = new TypeError("Promise cannot resolve to itself"));
    this.state_ = goog.Promise.State_.BLOCKED;
    var isThenable = goog.Promise.maybeThen_(x, this.unblockAndFulfill_, this.unblockAndReject_, this);
    isThenable || (this.result_ = x, this.state_ = state, this.parent_ = null, this.scheduleCallbacks_(), state != goog.Promise.State_.REJECTED || x instanceof goog.Promise.CancellationError || goog.Promise.addUnhandledRejection_(this, x));
  }
};
goog.Promise.maybeThen_ = function(value, onFulfilled, onRejected, context) {
  if (value instanceof goog.Promise) {
    return value.thenVoid(onFulfilled, onRejected, context), !0;
  }
  if (goog.Thenable.isImplementedBy(value)) {
    return value.then(onFulfilled, onRejected, context), !0;
  }
  if (goog.isObject(value)) {
    try {
      var then = value.then;
      if (goog.isFunction(then)) {
        return goog.Promise.tryThen_(value, then, onFulfilled, onRejected, context), !0;
      }
    } catch (e) {
      return onRejected.call(context, e), !0;
    }
  }
  return !1;
};
goog.Promise.tryThen_ = function(thenable, then, onFulfilled, onRejected, context) {
  var called = !1;
  var resolve = function(value) {
    called || (called = !0, onFulfilled.call(context, value));
  };
  var reject = function(reason) {
    called || (called = !0, onRejected.call(context, reason));
  };
  try {
    then.call(thenable, resolve, reject);
  } catch (e) {
    reject(e);
  }
};
goog.Promise.prototype.scheduleCallbacks_ = function() {
  this.executing_ || (this.executing_ = !0, goog.async.run(this.executeCallbacks_, this));
};
goog.Promise.prototype.hasEntry_ = function() {
  return !!this.callbackEntries_;
};
goog.Promise.prototype.queueEntry_ = function(entry) {
  goog.asserts.assert(null != entry.onFulfilled);
  this.callbackEntriesTail_ ? this.callbackEntriesTail_.next = entry : this.callbackEntries_ = entry;
  this.callbackEntriesTail_ = entry;
};
goog.Promise.prototype.popEntry_ = function() {
  var entry = null;
  this.callbackEntries_ && (entry = this.callbackEntries_, this.callbackEntries_ = entry.next, entry.next = null);
  this.callbackEntries_ || (this.callbackEntriesTail_ = null);
  null != entry && goog.asserts.assert(null != entry.onFulfilled);
  return entry;
};
goog.Promise.prototype.removeEntryAfter_ = function(previous) {
  goog.asserts.assert(this.callbackEntries_);
  goog.asserts.assert(null != previous);
  previous.next == this.callbackEntriesTail_ && (this.callbackEntriesTail_ = previous);
  previous.next = previous.next.next;
};
goog.Promise.prototype.executeCallbacks_ = function() {
  for (var entry; entry = this.popEntry_();) {
    goog.Promise.LONG_STACK_TRACES && this.currentStep_++, this.executeCallback_(entry, this.state_, this.result_);
  }
  this.executing_ = !1;
};
goog.Promise.prototype.executeCallback_ = function(callbackEntry, state, result) {
  state == goog.Promise.State_.REJECTED && callbackEntry.onRejected && !callbackEntry.always && this.removeUnhandledRejection_();
  if (callbackEntry.child) {
    callbackEntry.child.parent_ = null, goog.Promise.invokeCallback_(callbackEntry, state, result);
  } else {
    try {
      callbackEntry.always ? callbackEntry.onFulfilled.call(callbackEntry.context) : goog.Promise.invokeCallback_(callbackEntry, state, result);
    } catch (err) {
      goog.Promise.handleRejection_.call(null, err);
    }
  }
  goog.Promise.returnEntry_(callbackEntry);
};
goog.Promise.invokeCallback_ = function(callbackEntry, state, result) {
  state == goog.Promise.State_.FULFILLED ? callbackEntry.onFulfilled.call(callbackEntry.context, result) : callbackEntry.onRejected && callbackEntry.onRejected.call(callbackEntry.context, result);
};
goog.Promise.prototype.addStackTrace_ = function(err) {
  if (goog.Promise.LONG_STACK_TRACES && goog.isString(err.stack)) {
    var trace = err.stack.split("\n", 4)[3];
    var message = err.message;
    message += Array(11 - message.length).join(" ");
    this.stack_.push(message + trace);
  }
};
goog.Promise.prototype.appendLongStack_ = function(err) {
  if (goog.Promise.LONG_STACK_TRACES && err && goog.isString(err.stack) && this.stack_.length) {
    var longTrace = ["Promise trace:"];
    for (var promise = this; promise; promise = promise.parent_) {
      for (var i = this.currentStep_; 0 <= i; i--) {
        longTrace.push(promise.stack_[i]);
      }
      longTrace.push("Value: [" + (promise.state_ == goog.Promise.State_.REJECTED ? "REJECTED" : "FULFILLED") + "] <" + String(promise.result_) + ">");
    }
    err.stack += "\n\n" + longTrace.join("\n");
  }
};
goog.Promise.prototype.removeUnhandledRejection_ = function() {
  if (0 < goog.Promise.UNHANDLED_REJECTION_DELAY) {
    for (var p = this; p && p.unhandledRejectionId_; p = p.parent_) {
      goog.global.clearTimeout(p.unhandledRejectionId_), p.unhandledRejectionId_ = 0;
    }
  } else {
    if (0 == goog.Promise.UNHANDLED_REJECTION_DELAY) {
      for (p = this; p && p.hadUnhandledRejection_; p = p.parent_) {
        p.hadUnhandledRejection_ = !1;
      }
    }
  }
};
goog.Promise.addUnhandledRejection_ = function(promise, reason) {
  0 < goog.Promise.UNHANDLED_REJECTION_DELAY ? promise.unhandledRejectionId_ = goog.global.setTimeout(function() {
    promise.appendLongStack_(reason);
    goog.Promise.handleRejection_.call(null, reason);
  }, goog.Promise.UNHANDLED_REJECTION_DELAY) : 0 == goog.Promise.UNHANDLED_REJECTION_DELAY && (promise.hadUnhandledRejection_ = !0, goog.async.run(function() {
    promise.hadUnhandledRejection_ && (promise.appendLongStack_(reason), goog.Promise.handleRejection_.call(null, reason));
  }));
};
goog.Promise.handleRejection_ = goog.async.throwException;
goog.Promise.setUnhandledRejectionHandler = function(handler) {
  goog.Promise.handleRejection_ = handler;
};
goog.Promise.CancellationError = function(opt_message) {
  goog.debug.Error.call(this, opt_message);
};
goog.inherits(goog.Promise.CancellationError, goog.debug.Error);
goog.Promise.CancellationError.prototype.name = "cancel";
goog.Promise.Resolver_ = function(promise, resolve, reject) {
  this.promise = promise;
  this.resolve = resolve;
  this.reject = reject;
};
goog.Timer = function(opt_interval, opt_timerObject) {
  goog.events.EventTarget.call(this);
  this.interval_ = opt_interval || 1;
  this.timerObject_ = opt_timerObject || goog.Timer.defaultTimerObject;
  this.boundTick_ = goog.bind(this.tick_, this);
  this.last_ = goog.now();
};
goog.inherits(goog.Timer, goog.events.EventTarget);
goog.Timer.MAX_TIMEOUT_ = 2147483647;
goog.Timer.INVALID_TIMEOUT_ID_ = -1;
goog.Timer.prototype.enabled = !1;
goog.Timer.defaultTimerObject = goog.global;
goog.Timer.intervalScale = 0.8;
goog.Timer.prototype.timer_ = null;
goog.Timer.prototype.setInterval = function(interval) {
  this.interval_ = interval;
  this.timer_ && this.enabled ? (this.stop(), this.start()) : this.timer_ && this.stop();
};
goog.Timer.prototype.tick_ = function() {
  if (this.enabled) {
    var elapsed = goog.now() - this.last_;
    0 < elapsed && elapsed < this.interval_ * goog.Timer.intervalScale ? this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_ - elapsed) : (this.timer_ && (this.timerObject_.clearTimeout(this.timer_), this.timer_ = null), this.dispatchTick(), this.enabled && (this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_), this.last_ = goog.now()));
  }
};
goog.Timer.prototype.dispatchTick = function() {
  this.dispatchEvent(goog.Timer.TICK);
};
goog.Timer.prototype.start = function() {
  this.enabled = !0;
  this.timer_ || (this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_), this.last_ = goog.now());
};
goog.Timer.prototype.stop = function() {
  this.enabled = !1;
  this.timer_ && (this.timerObject_.clearTimeout(this.timer_), this.timer_ = null);
};
goog.Timer.prototype.disposeInternal = function() {
  goog.Timer.superClass_.disposeInternal.call(this);
  this.stop();
  delete this.timerObject_;
};
goog.Timer.TICK = "tick";
goog.Timer.callOnce = function(listener, opt_delay, opt_handler) {
  if (goog.isFunction(listener)) {
    opt_handler && (listener = goog.bind(listener, opt_handler));
  } else {
    if (listener && "function" == typeof listener.handleEvent) {
      listener = goog.bind(listener.handleEvent, listener);
    } else {
      throw Error("Invalid listener argument");
    }
  }
  return Number(opt_delay) > goog.Timer.MAX_TIMEOUT_ ? goog.Timer.INVALID_TIMEOUT_ID_ : goog.Timer.defaultTimerObject.setTimeout(listener, opt_delay || 0);
};
goog.Timer.clear = function(timerId) {
  goog.Timer.defaultTimerObject.clearTimeout(timerId);
};
goog.Timer.promise = function(delay, opt_result) {
  var timerKey = null;
  return (new goog.Promise(function(resolve, reject) {
    timerKey = goog.Timer.callOnce(function() {
      resolve(opt_result);
    }, delay);
    timerKey == goog.Timer.INVALID_TIMEOUT_ID_ && reject(Error("Failed to schedule timer."));
  })).thenCatch(function(error) {
    goog.Timer.clear(timerKey);
    throw error;
  });
};
goog.uri = {};
goog.uri.utils = {};
goog.uri.utils.CharCode_ = {AMPERSAND:38, EQUAL:61, HASH:35, QUESTION:63};
goog.uri.utils.buildFromEncodedParts = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {
  var out = "";
  opt_scheme && (out += opt_scheme + ":");
  opt_domain && (out += "//", opt_userInfo && (out += opt_userInfo + "@"), out += opt_domain, opt_port && (out += ":" + opt_port));
  opt_path && (out += opt_path);
  opt_queryData && (out += "?" + opt_queryData);
  opt_fragment && (out += "#" + opt_fragment);
  return out;
};
goog.uri.utils.splitRe_ = /^(?:([^:/?#.]+):)?(?:\/\/(?:([^/?#]*)@)?([^/#?]*?)(?::([0-9]+))?(?=[/#?]|$))?([^?#]+)?(?:\?([^#]*))?(?:#([\s\S]*))?$/;
goog.uri.utils.ComponentIndex = {SCHEME:1, USER_INFO:2, DOMAIN:3, PORT:4, PATH:5, QUERY_DATA:6, FRAGMENT:7};
goog.uri.utils.split = function(uri) {
  return uri.match(goog.uri.utils.splitRe_);
};
goog.uri.utils.decodeIfPossible_ = function(uri, opt_preserveReserved) {
  return uri ? opt_preserveReserved ? decodeURI(uri) : decodeURIComponent(uri) : uri;
};
goog.uri.utils.getComponentByIndex_ = function(componentIndex, uri) {
  return goog.uri.utils.split(uri)[componentIndex] || null;
};
goog.uri.utils.getScheme = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.SCHEME, uri);
};
goog.uri.utils.getEffectiveScheme = function(uri) {
  var scheme = goog.uri.utils.getScheme(uri);
  if (!scheme && goog.global.self && goog.global.self.location) {
    var protocol = goog.global.self.location.protocol;
    scheme = protocol.substr(0, protocol.length - 1);
  }
  return scheme ? scheme.toLowerCase() : "";
};
goog.uri.utils.getUserInfoEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.USER_INFO, uri);
};
goog.uri.utils.getUserInfo = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getUserInfoEncoded(uri));
};
goog.uri.utils.getDomainEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.DOMAIN, uri);
};
goog.uri.utils.getDomain = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getDomainEncoded(uri), !0);
};
goog.uri.utils.getPort = function(uri) {
  return Number(goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PORT, uri)) || null;
};
goog.uri.utils.getPathEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PATH, uri);
};
goog.uri.utils.getPath = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getPathEncoded(uri), !0);
};
goog.uri.utils.getQueryData = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.QUERY_DATA, uri);
};
goog.uri.utils.getFragmentEncoded = function(uri) {
  var hashIndex = uri.indexOf("#");
  return 0 > hashIndex ? null : uri.substr(hashIndex + 1);
};
goog.uri.utils.setFragmentEncoded = function(uri, fragment) {
  return goog.uri.utils.removeFragment(uri) + (fragment ? "#" + fragment : "");
};
goog.uri.utils.getFragment = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getFragmentEncoded(uri));
};
goog.uri.utils.getHost = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(pieces[goog.uri.utils.ComponentIndex.SCHEME], pieces[goog.uri.utils.ComponentIndex.USER_INFO], pieces[goog.uri.utils.ComponentIndex.DOMAIN], pieces[goog.uri.utils.ComponentIndex.PORT]);
};
goog.uri.utils.getOrigin = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(pieces[goog.uri.utils.ComponentIndex.SCHEME], null, pieces[goog.uri.utils.ComponentIndex.DOMAIN], pieces[goog.uri.utils.ComponentIndex.PORT]);
};
goog.uri.utils.getPathAndAfter = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(null, null, null, null, pieces[goog.uri.utils.ComponentIndex.PATH], pieces[goog.uri.utils.ComponentIndex.QUERY_DATA], pieces[goog.uri.utils.ComponentIndex.FRAGMENT]);
};
goog.uri.utils.removeFragment = function(uri) {
  var hashIndex = uri.indexOf("#");
  return 0 > hashIndex ? uri : uri.substr(0, hashIndex);
};
goog.uri.utils.haveSameDomain = function(uri1, uri2) {
  var pieces1 = goog.uri.utils.split(uri1);
  var pieces2 = goog.uri.utils.split(uri2);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.SCHEME] == pieces2[goog.uri.utils.ComponentIndex.SCHEME] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT];
};
goog.uri.utils.assertNoFragmentsOrQueries_ = function(uri) {
  goog.asserts.assert(0 > uri.indexOf("#") && 0 > uri.indexOf("?"), "goog.uri.utils: Fragment or query identifiers are not supported: [%s]", uri);
};
goog.uri.utils.parseQueryData = function(encodedQuery, callback) {
  if (encodedQuery) {
    var pairs = encodedQuery.split("&");
    for (var i = 0; i < pairs.length; i++) {
      var indexOfEquals = pairs[i].indexOf("=");
      var value = null;
      if (0 <= indexOfEquals) {
        var name = pairs[i].substring(0, indexOfEquals);
        value = pairs[i].substring(indexOfEquals + 1);
      } else {
        name = pairs[i];
      }
      callback(name, value ? goog.string.urlDecode(value) : "");
    }
  }
};
goog.uri.utils.splitQueryData_ = function(uri) {
  var hashIndex = uri.indexOf("#");
  0 > hashIndex && (hashIndex = uri.length);
  var questionIndex = uri.indexOf("?");
  if (0 > questionIndex || questionIndex > hashIndex) {
    questionIndex = hashIndex;
    var queryData = "";
  } else {
    queryData = uri.substring(questionIndex + 1, hashIndex);
  }
  return [uri.substr(0, questionIndex), queryData, uri.substr(hashIndex)];
};
goog.uri.utils.joinQueryData_ = function(parts) {
  return parts[0] + (parts[1] ? "?" + parts[1] : "") + parts[2];
};
goog.uri.utils.appendQueryData_ = function(queryData, newData) {
  return newData ? queryData ? queryData + "&" + newData : newData : queryData;
};
goog.uri.utils.appendQueryDataToUri_ = function(uri, queryData) {
  if (!queryData) {
    return uri;
  }
  var parts = goog.uri.utils.splitQueryData_(uri);
  parts[1] = goog.uri.utils.appendQueryData_(parts[1], queryData);
  return goog.uri.utils.joinQueryData_(parts);
};
goog.uri.utils.appendKeyValuePairs_ = function(key, value, pairs) {
  goog.asserts.assertString(key);
  if (goog.isArray(value)) {
    goog.asserts.assertArray(value);
    for (var j = 0; j < value.length; j++) {
      goog.uri.utils.appendKeyValuePairs_(key, String(value[j]), pairs);
    }
  } else {
    null != value && pairs.push(key + ("" === value ? "" : "=" + goog.string.urlEncode(value)));
  }
};
goog.uri.utils.buildQueryData = function(keysAndValues, opt_startIndex) {
  goog.asserts.assert(0 == Math.max(keysAndValues.length - (opt_startIndex || 0), 0) % 2, "goog.uri.utils: Key/value lists must be even in length.");
  var params = [];
  for (var i = opt_startIndex || 0; i < keysAndValues.length; i += 2) {
    var key = keysAndValues[i];
    goog.uri.utils.appendKeyValuePairs_(key, keysAndValues[i + 1], params);
  }
  return params.join("&");
};
goog.uri.utils.buildQueryDataFromMap = function(map) {
  var params = [];
  for (var key in map) {
    goog.uri.utils.appendKeyValuePairs_(key, map[key], params);
  }
  return params.join("&");
};
goog.uri.utils.appendParams = function(uri, var_args) {
  var queryData = 2 == arguments.length ? goog.uri.utils.buildQueryData(arguments[1], 0) : goog.uri.utils.buildQueryData(arguments, 1);
  return goog.uri.utils.appendQueryDataToUri_(uri, queryData);
};
goog.uri.utils.appendParamsFromMap = function(uri, map) {
  var queryData = goog.uri.utils.buildQueryDataFromMap(map);
  return goog.uri.utils.appendQueryDataToUri_(uri, queryData);
};
goog.uri.utils.appendParam = function(uri, key, opt_value) {
  var value = goog.isDefAndNotNull(opt_value) ? "=" + goog.string.urlEncode(opt_value) : "";
  return goog.uri.utils.appendQueryDataToUri_(uri, key + value);
};
goog.uri.utils.findParam_ = function(uri, startIndex, keyEncoded, hashOrEndIndex) {
  var index = startIndex;
  for (var keyLength = keyEncoded.length; 0 <= (index = uri.indexOf(keyEncoded, index)) && index < hashOrEndIndex;) {
    var precedingChar = uri.charCodeAt(index - 1);
    if (precedingChar == goog.uri.utils.CharCode_.AMPERSAND || precedingChar == goog.uri.utils.CharCode_.QUESTION) {
      var followingChar = uri.charCodeAt(index + keyLength);
      if (!followingChar || followingChar == goog.uri.utils.CharCode_.EQUAL || followingChar == goog.uri.utils.CharCode_.AMPERSAND || followingChar == goog.uri.utils.CharCode_.HASH) {
        return index;
      }
    }
    index += keyLength + 1;
  }
  return -1;
};
goog.uri.utils.hashOrEndRe_ = /#|$/;
goog.uri.utils.hasParam = function(uri, keyEncoded) {
  return 0 <= goog.uri.utils.findParam_(uri, 0, keyEncoded, uri.search(goog.uri.utils.hashOrEndRe_));
};
goog.uri.utils.getParamValue = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var foundIndex = goog.uri.utils.findParam_(uri, 0, keyEncoded, hashOrEndIndex);
  if (0 > foundIndex) {
    return null;
  }
  var endPosition = uri.indexOf("&", foundIndex);
  if (0 > endPosition || endPosition > hashOrEndIndex) {
    endPosition = hashOrEndIndex;
  }
  foundIndex += keyEncoded.length + 1;
  return goog.string.urlDecode(uri.substr(foundIndex, endPosition - foundIndex));
};
goog.uri.utils.getParamValues = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  for (var result = []; 0 <= (foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex));) {
    position = uri.indexOf("&", foundIndex);
    if (0 > position || position > hashOrEndIndex) {
      position = hashOrEndIndex;
    }
    foundIndex += keyEncoded.length + 1;
    result.push(goog.string.urlDecode(uri.substr(foundIndex, position - foundIndex)));
  }
  return result;
};
goog.uri.utils.trailingQueryPunctuationRe_ = /[?&]($|#)/;
goog.uri.utils.removeParam = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  for (var buffer = []; 0 <= (foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex));) {
    buffer.push(uri.substring(position, foundIndex)), position = Math.min(uri.indexOf("&", foundIndex) + 1 || hashOrEndIndex, hashOrEndIndex);
  }
  buffer.push(uri.substr(position));
  return buffer.join("").replace(goog.uri.utils.trailingQueryPunctuationRe_, "$1");
};
goog.uri.utils.setParam = function(uri, keyEncoded, value) {
  return goog.uri.utils.appendParam(goog.uri.utils.removeParam(uri, keyEncoded), keyEncoded, value);
};
goog.uri.utils.setParamsFromMap = function(uri, params) {
  var parts = goog.uri.utils.splitQueryData_(uri);
  var queryData = parts[1];
  var buffer = [];
  queryData && goog.array.forEach(queryData.split("&"), function(pair) {
    var indexOfEquals = pair.indexOf("=");
    var name = 0 <= indexOfEquals ? pair.substr(0, indexOfEquals) : pair;
    params.hasOwnProperty(name) || buffer.push(pair);
  });
  parts[1] = goog.uri.utils.appendQueryData_(buffer.join("&"), goog.uri.utils.buildQueryDataFromMap(params));
  return goog.uri.utils.joinQueryData_(parts);
};
goog.uri.utils.appendPath = function(baseUri, path) {
  goog.uri.utils.assertNoFragmentsOrQueries_(baseUri);
  goog.string.endsWith(baseUri, "/") && (baseUri = baseUri.substr(0, baseUri.length - 1));
  goog.string.startsWith(path, "/") && (path = path.substr(1));
  return goog.string.buildString(baseUri, "/", path);
};
goog.uri.utils.setPath = function(uri, path) {
  goog.string.startsWith(path, "/") || (path = "/" + path);
  var parts = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(parts[goog.uri.utils.ComponentIndex.SCHEME], parts[goog.uri.utils.ComponentIndex.USER_INFO], parts[goog.uri.utils.ComponentIndex.DOMAIN], parts[goog.uri.utils.ComponentIndex.PORT], path, parts[goog.uri.utils.ComponentIndex.QUERY_DATA], parts[goog.uri.utils.ComponentIndex.FRAGMENT]);
};
goog.uri.utils.StandardQueryParam = {RANDOM:"zx"};
goog.uri.utils.makeUnique = function(uri) {
  return goog.uri.utils.setParam(uri, goog.uri.utils.StandardQueryParam.RANDOM, goog.string.getRandomString());
};
goog.net.XhrIo = function(opt_xmlHttpFactory) {
  goog.events.EventTarget.call(this);
  this.headers = new goog.structs.Map;
  this.xmlHttpFactory_ = opt_xmlHttpFactory || null;
  this.active_ = !1;
  this.xhr_ = null;
  this.xhrOptions_ = null;
  this.lastUri_ = "";
  this.lastMethod_ = "";
  this.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
  this.lastError_ = "";
  this.errorDispatched_ = !1;
  this.inSend_ = !1;
  this.inOpen_ = !1;
  this.inAbort_ = !1;
  this.timeoutInterval_ = 0;
  this.timeoutId_ = null;
  this.responseType_ = goog.net.XhrIo.ResponseType.DEFAULT;
  this.withCredentials_ = !1;
  this.progressEventsEnabled_ = !1;
  this.useXhr2Timeout_ = !1;
};
goog.inherits(goog.net.XhrIo, goog.events.EventTarget);
goog.net.XhrIo.ResponseType = {DEFAULT:"", TEXT:"text", DOCUMENT:"document", BLOB:"blob", ARRAY_BUFFER:"arraybuffer"};
goog.net.XhrIo.prototype.logger_ = goog.log.getLogger("goog.net.XhrIo");
goog.net.XhrIo.CONTENT_TYPE_HEADER = "Content-Type";
goog.net.XhrIo.CONTENT_TRANSFER_ENCODING = "Content-Transfer-Encoding";
goog.net.XhrIo.HTTP_SCHEME_PATTERN = /^https?$/i;
goog.net.XhrIo.METHODS_WITH_FORM_DATA = ["POST", "PUT"];
goog.net.XhrIo.FORM_CONTENT_TYPE = "application/x-www-form-urlencoded;charset=utf-8";
goog.net.XhrIo.XHR2_TIMEOUT_ = "timeout";
goog.net.XhrIo.XHR2_ON_TIMEOUT_ = "ontimeout";
goog.net.XhrIo.sendInstances_ = [];
goog.net.XhrIo.send = function(url, opt_callback, opt_method, opt_content, opt_headers, opt_timeoutInterval, opt_withCredentials) {
  var x = new goog.net.XhrIo;
  goog.net.XhrIo.sendInstances_.push(x);
  opt_callback && x.listen(goog.net.EventType.COMPLETE, opt_callback);
  x.listenOnce(goog.net.EventType.READY, x.cleanupSend_);
  opt_timeoutInterval && x.setTimeoutInterval(opt_timeoutInterval);
  opt_withCredentials && x.setWithCredentials(opt_withCredentials);
  x.send(url, opt_method, opt_content, opt_headers);
  return x;
};
goog.net.XhrIo.cleanup = function() {
  for (var instances = goog.net.XhrIo.sendInstances_; instances.length;) {
    instances.pop().dispose();
  }
};
goog.net.XhrIo.protectEntryPoints = function(errorHandler) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = errorHandler.protectEntryPoint(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_);
};
goog.net.XhrIo.prototype.cleanupSend_ = function() {
  this.dispose();
  goog.array.remove(goog.net.XhrIo.sendInstances_, this);
};
goog.net.XhrIo.prototype.setTimeoutInterval = function(ms) {
  this.timeoutInterval_ = Math.max(0, ms);
};
goog.net.XhrIo.prototype.setResponseType = function(type) {
  this.responseType_ = type;
};
goog.net.XhrIo.prototype.setWithCredentials = function(withCredentials) {
  this.withCredentials_ = withCredentials;
};
goog.net.XhrIo.prototype.send = function(url, opt_method, opt_content, opt_headers) {
  if (this.xhr_) {
    throw Error("[goog.net.XhrIo] Object is active with another request=" + this.lastUri_ + "; newUri=" + url);
  }
  var method = opt_method ? opt_method.toUpperCase() : "GET";
  this.lastUri_ = url;
  this.lastError_ = "";
  this.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
  this.lastMethod_ = method;
  this.errorDispatched_ = !1;
  this.active_ = !0;
  this.xhr_ = this.createXhr();
  this.xhrOptions_ = this.xmlHttpFactory_ ? this.xmlHttpFactory_.getOptions() : goog.net.XmlHttp.getOptions();
  this.xhr_.onreadystatechange = goog.bind(this.onReadyStateChange_, this);
  this.progressEventsEnabled_ && "onprogress" in this.xhr_ && (this.xhr_.onprogress = goog.bind(function(e) {
    this.onProgressHandler_(e, !0);
  }, this), this.xhr_.upload && (this.xhr_.upload.onprogress = goog.bind(this.onProgressHandler_, this)));
  try {
    goog.log.fine(this.logger_, this.formatMsg_("Opening Xhr")), this.inOpen_ = !0, this.xhr_.open(method, String(url), !0), this.inOpen_ = !1;
  } catch (err) {
    goog.log.fine(this.logger_, this.formatMsg_("Error opening Xhr: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err);
    return;
  }
  var content = opt_content || "";
  var headers = this.headers.clone();
  opt_headers && goog.structs.forEach(opt_headers, function(value, key) {
    headers.set(key, value);
  });
  var contentTypeKey = goog.array.find(headers.getKeys(), goog.net.XhrIo.isContentTypeHeader_);
  var contentIsFormData = goog.global.FormData && content instanceof goog.global.FormData;
  !goog.array.contains(goog.net.XhrIo.METHODS_WITH_FORM_DATA, method) || contentTypeKey || contentIsFormData || headers.set(goog.net.XhrIo.CONTENT_TYPE_HEADER, goog.net.XhrIo.FORM_CONTENT_TYPE);
  headers.forEach(function(value, key) {
    this.xhr_.setRequestHeader(key, value);
  }, this);
  this.responseType_ && (this.xhr_.responseType = this.responseType_);
  "withCredentials" in this.xhr_ && this.xhr_.withCredentials !== this.withCredentials_ && (this.xhr_.withCredentials = this.withCredentials_);
  try {
    this.cleanUpTimeoutTimer_(), 0 < this.timeoutInterval_ && (this.useXhr2Timeout_ = goog.net.XhrIo.shouldUseXhr2Timeout_(this.xhr_), goog.log.fine(this.logger_, this.formatMsg_("Will abort after " + this.timeoutInterval_ + "ms if incomplete, xhr2 " + this.useXhr2Timeout_)), this.useXhr2Timeout_ ? (this.xhr_[goog.net.XhrIo.XHR2_TIMEOUT_] = this.timeoutInterval_, this.xhr_[goog.net.XhrIo.XHR2_ON_TIMEOUT_] = goog.bind(this.timeout_, this)) : this.timeoutId_ = goog.Timer.callOnce(this.timeout_, this.timeoutInterval_, 
    this)), goog.log.fine(this.logger_, this.formatMsg_("Sending request")), this.inSend_ = !0, this.xhr_.send(content), this.inSend_ = !1;
  } catch (err$4) {
    goog.log.fine(this.logger_, this.formatMsg_("Send error: " + err$4.message)), this.error_(goog.net.ErrorCode.EXCEPTION, err$4);
  }
};
goog.net.XhrIo.shouldUseXhr2Timeout_ = function(xhr) {
  return goog.userAgent.IE && goog.userAgent.isVersionOrHigher(9) && goog.isNumber(xhr[goog.net.XhrIo.XHR2_TIMEOUT_]) && goog.isDef(xhr[goog.net.XhrIo.XHR2_ON_TIMEOUT_]);
};
goog.net.XhrIo.isContentTypeHeader_ = function(header) {
  return goog.string.caseInsensitiveEquals(goog.net.XhrIo.CONTENT_TYPE_HEADER, header);
};
goog.net.XhrIo.prototype.createXhr = function() {
  return this.xmlHttpFactory_ ? this.xmlHttpFactory_.createInstance() : goog.net.XmlHttp();
};
goog.net.XhrIo.prototype.timeout_ = function() {
  "undefined" != typeof goog && this.xhr_ && (this.lastError_ = "Timed out after " + this.timeoutInterval_ + "ms, aborting", this.lastErrorCode_ = goog.net.ErrorCode.TIMEOUT, goog.log.fine(this.logger_, this.formatMsg_(this.lastError_)), this.dispatchEvent(goog.net.EventType.TIMEOUT), this.abort(goog.net.ErrorCode.TIMEOUT));
};
goog.net.XhrIo.prototype.error_ = function(errorCode, err) {
  this.active_ = !1;
  this.xhr_ && (this.inAbort_ = !0, this.xhr_.abort(), this.inAbort_ = !1);
  this.lastError_ = err;
  this.lastErrorCode_ = errorCode;
  this.dispatchErrors_();
  this.cleanUpXhr_();
};
goog.net.XhrIo.prototype.dispatchErrors_ = function() {
  this.errorDispatched_ || (this.errorDispatched_ = !0, this.dispatchEvent(goog.net.EventType.COMPLETE), this.dispatchEvent(goog.net.EventType.ERROR));
};
goog.net.XhrIo.prototype.abort = function(opt_failureCode) {
  this.xhr_ && this.active_ && (goog.log.fine(this.logger_, this.formatMsg_("Aborting")), this.active_ = !1, this.inAbort_ = !0, this.xhr_.abort(), this.inAbort_ = !1, this.lastErrorCode_ = opt_failureCode || goog.net.ErrorCode.ABORT, this.dispatchEvent(goog.net.EventType.COMPLETE), this.dispatchEvent(goog.net.EventType.ABORT), this.cleanUpXhr_());
};
goog.net.XhrIo.prototype.disposeInternal = function() {
  this.xhr_ && (this.active_ && (this.active_ = !1, this.inAbort_ = !0, this.xhr_.abort(), this.inAbort_ = !1), this.cleanUpXhr_(!0));
  goog.net.XhrIo.superClass_.disposeInternal.call(this);
};
goog.net.XhrIo.prototype.onReadyStateChange_ = function() {
  if (!this.isDisposed()) {
    if (this.inOpen_ || this.inSend_ || this.inAbort_) {
      this.onReadyStateChangeHelper_();
    } else {
      this.onReadyStateChangeEntryPoint_();
    }
  }
};
goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = function() {
  this.onReadyStateChangeHelper_();
};
goog.net.XhrIo.prototype.onReadyStateChangeHelper_ = function() {
  if (this.active_ && "undefined" != typeof goog) {
    if (this.xhrOptions_[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE && 2 == this.getStatus()) {
      goog.log.fine(this.logger_, this.formatMsg_("Local request error detected and ignored"));
    } else {
      if (this.inSend_ && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE) {
        goog.Timer.callOnce(this.onReadyStateChange_, 0, this);
      } else {
        if (this.dispatchEvent(goog.net.EventType.READY_STATE_CHANGE), this.isComplete()) {
          goog.log.fine(this.logger_, this.formatMsg_("Request complete"));
          this.active_ = !1;
          try {
            this.isSuccess() ? (this.dispatchEvent(goog.net.EventType.COMPLETE), this.dispatchEvent(goog.net.EventType.SUCCESS)) : (this.lastErrorCode_ = goog.net.ErrorCode.HTTP_ERROR, this.lastError_ = this.getStatusText() + " [" + this.getStatus() + "]", this.dispatchErrors_());
          } finally {
            this.cleanUpXhr_();
          }
        }
      }
    }
  }
};
goog.net.XhrIo.prototype.onProgressHandler_ = function(e, opt_isDownload) {
  goog.asserts.assert(e.type === goog.net.EventType.PROGRESS, "goog.net.EventType.PROGRESS is of the same type as raw XHR progress.");
  this.dispatchEvent(goog.net.XhrIo.buildProgressEvent_(e, goog.net.EventType.PROGRESS));
  this.dispatchEvent(goog.net.XhrIo.buildProgressEvent_(e, opt_isDownload ? goog.net.EventType.DOWNLOAD_PROGRESS : goog.net.EventType.UPLOAD_PROGRESS));
};
goog.net.XhrIo.buildProgressEvent_ = function(e, eventType) {
  return {type:eventType, lengthComputable:e.lengthComputable, loaded:e.loaded, total:e.total};
};
goog.net.XhrIo.prototype.cleanUpXhr_ = function(opt_fromDispose) {
  if (this.xhr_) {
    this.cleanUpTimeoutTimer_();
    var xhr = this.xhr_;
    var clearedOnReadyStateChange = this.xhrOptions_[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] ? goog.nullFunction : null;
    this.xhr_ = null;
    this.xhrOptions_ = null;
    opt_fromDispose || this.dispatchEvent(goog.net.EventType.READY);
    try {
      xhr.onreadystatechange = clearedOnReadyStateChange;
    } catch (e) {
      goog.log.error(this.logger_, "Problem encountered resetting onreadystatechange: " + e.message);
    }
  }
};
goog.net.XhrIo.prototype.cleanUpTimeoutTimer_ = function() {
  this.xhr_ && this.useXhr2Timeout_ && (this.xhr_[goog.net.XhrIo.XHR2_ON_TIMEOUT_] = null);
  this.timeoutId_ && (goog.Timer.clear(this.timeoutId_), this.timeoutId_ = null);
};
goog.net.XhrIo.prototype.isComplete = function() {
  return this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE;
};
goog.net.XhrIo.prototype.isSuccess = function() {
  var status = this.getStatus();
  return goog.net.HttpStatus.isSuccess(status) || 0 === status && !this.isLastUriEffectiveSchemeHttp_();
};
goog.net.XhrIo.prototype.isLastUriEffectiveSchemeHttp_ = function() {
  var scheme = goog.uri.utils.getEffectiveScheme(String(this.lastUri_));
  return goog.net.XhrIo.HTTP_SCHEME_PATTERN.test(scheme);
};
goog.net.XhrIo.prototype.getReadyState = function() {
  return this.xhr_ ? this.xhr_.readyState : goog.net.XmlHttp.ReadyState.UNINITIALIZED;
};
goog.net.XhrIo.prototype.getStatus = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.status : -1;
  } catch (e) {
    return -1;
  }
};
goog.net.XhrIo.prototype.getStatusText = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.statusText : "";
  } catch (e) {
    return goog.log.fine(this.logger_, "Can not get status: " + e.message), "";
  }
};
goog.net.XhrIo.prototype.getResponseText = function() {
  try {
    return this.xhr_ ? this.xhr_.responseText : "";
  } catch (e) {
    return goog.log.fine(this.logger_, "Can not get responseText: " + e.message), "";
  }
};
goog.net.XhrIo.prototype.getResponseJson = function(opt_xssiPrefix) {
  if (this.xhr_) {
    var responseText = this.xhr_.responseText;
    opt_xssiPrefix && 0 == responseText.indexOf(opt_xssiPrefix) && (responseText = responseText.substring(opt_xssiPrefix.length));
    return goog.json.hybrid.parse(responseText);
  }
};
goog.net.XhrIo.prototype.getResponse = function() {
  try {
    if (!this.xhr_) {
      return null;
    }
    if ("response" in this.xhr_) {
      return this.xhr_.response;
    }
    switch(this.responseType_) {
      case goog.net.XhrIo.ResponseType.DEFAULT:
      case goog.net.XhrIo.ResponseType.TEXT:
        return this.xhr_.responseText;
      case goog.net.XhrIo.ResponseType.ARRAY_BUFFER:
        if ("mozResponseArrayBuffer" in this.xhr_) {
          return this.xhr_.mozResponseArrayBuffer;
        }
    }
    goog.log.error(this.logger_, "Response type " + this.responseType_ + " is not supported on this browser");
    return null;
  } catch (e) {
    return goog.log.fine(this.logger_, "Can not get response: " + e.message), null;
  }
};
goog.net.XhrIo.prototype.getResponseHeader = function(key) {
  if (this.xhr_ && this.isComplete()) {
    var value = this.xhr_.getResponseHeader(key);
    return goog.isNull(value) ? void 0 : value;
  }
};
goog.net.XhrIo.prototype.getAllResponseHeaders = function() {
  return this.xhr_ && this.isComplete() ? this.xhr_.getAllResponseHeaders() : "";
};
goog.net.XhrIo.prototype.getLastError = function() {
  return goog.isString(this.lastError_) ? this.lastError_ : String(this.lastError_);
};
goog.net.XhrIo.prototype.formatMsg_ = function(msg) {
  return msg + " [" + this.lastMethod_ + " " + this.lastUri_ + " " + this.getStatus() + "]";
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = transformer(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_);
});
goog.proto2 = {};
goog.proto2.Descriptor = function(messageType, metadata, fields) {
  this.messageType_ = messageType;
  this.name_ = metadata.name || null;
  this.containingType_ = metadata.containingType;
  this.fields_ = {};
  for (var i = 0; i < fields.length; i++) {
    var field = fields[i];
    this.fields_[field.getTag()] = field;
  }
};
goog.proto2.Descriptor.prototype.getName = function() {
  return this.name_;
};
goog.proto2.Descriptor.prototype.getContainingType = function() {
  return this.containingType_ ? this.containingType_.getDescriptor() : null;
};
goog.proto2.Descriptor.prototype.getFields = function() {
  function tagComparator(fieldA, fieldB) {
    return fieldA.getTag() - fieldB.getTag();
  }
  var fields = goog.object.getValues(this.fields_);
  goog.array.sort(fields, tagComparator);
  return fields;
};
goog.proto2.Descriptor.prototype.findFieldByName = function(name) {
  var valueFound = goog.object.findValue(this.fields_, function(field) {
    return field.getName() == name;
  });
  return valueFound || null;
};
goog.proto2.Descriptor.prototype.findFieldByTag = function(tag) {
  goog.asserts.assert(goog.string.isNumeric(tag));
  return this.fields_[parseInt(tag, 10)] || null;
};
goog.proto2.Descriptor.prototype.createMessageInstance = function() {
  return new this.messageType_;
};
goog.proto2.FieldDescriptor = function(messageType, tag, metadata) {
  this.parent_ = messageType;
  goog.asserts.assert(goog.string.isNumeric(tag));
  this.tag_ = tag;
  this.name_ = metadata.name;
  this.isPacked_ = !!metadata.packed;
  this.isRepeated_ = !!metadata.repeated;
  this.fieldType_ = metadata.fieldType;
  this.nativeType_ = metadata.type;
  this.deserializationConversionPermitted_ = !1;
  switch(this.fieldType_) {
    case goog.proto2.FieldDescriptor.FieldType.INT64:
    case goog.proto2.FieldDescriptor.FieldType.UINT64:
    case goog.proto2.FieldDescriptor.FieldType.FIXED64:
    case goog.proto2.FieldDescriptor.FieldType.SFIXED64:
    case goog.proto2.FieldDescriptor.FieldType.SINT64:
    case goog.proto2.FieldDescriptor.FieldType.FLOAT:
    case goog.proto2.FieldDescriptor.FieldType.DOUBLE:
      this.deserializationConversionPermitted_ = !0;
  }
  this.defaultValue_ = metadata.defaultValue;
};
goog.proto2.FieldDescriptor.FieldType = {DOUBLE:1, FLOAT:2, INT64:3, UINT64:4, INT32:5, FIXED64:6, FIXED32:7, BOOL:8, STRING:9, GROUP:10, MESSAGE:11, BYTES:12, UINT32:13, ENUM:14, SFIXED32:15, SFIXED64:16, SINT32:17, SINT64:18};
goog.proto2.FieldDescriptor.prototype.getTag = function() {
  return this.tag_;
};
goog.proto2.FieldDescriptor.prototype.getContainingType = function() {
  return this.parent_.prototype.getDescriptor();
};
goog.proto2.FieldDescriptor.prototype.getName = function() {
  return this.name_;
};
goog.proto2.FieldDescriptor.prototype.getDefaultValue = function() {
  if (void 0 === this.defaultValue_) {
    var nativeType = this.nativeType_;
    if (nativeType === Boolean) {
      this.defaultValue_ = !1;
    } else {
      if (nativeType === Number) {
        this.defaultValue_ = 0;
      } else {
        if (nativeType === String) {
          this.defaultValue_ = this.deserializationConversionPermitted_ ? "0" : "";
        } else {
          return new nativeType;
        }
      }
    }
  }
  return this.defaultValue_;
};
goog.proto2.FieldDescriptor.prototype.getFieldMessageType = function() {
  var messageClass = this.nativeType_;
  return messageClass.prototype.getDescriptor();
};
goog.proto2.FieldDescriptor.prototype.isCompositeType = function() {
  return this.fieldType_ == goog.proto2.FieldDescriptor.FieldType.MESSAGE || this.fieldType_ == goog.proto2.FieldDescriptor.FieldType.GROUP;
};
goog.proto2.FieldDescriptor.prototype.isPacked = function() {
  return this.isPacked_;
};
goog.proto2.FieldDescriptor.prototype.isRepeated = function() {
  return this.isRepeated_;
};
goog.proto2.Message = function() {
  this.values_ = {};
  this.fields_ = this.getDescriptor().fields_;
  this.lazyDeserializer_ = null;
  this.deserializedFields_ = null;
};
goog.proto2.Message.FieldType = {DOUBLE:1, FLOAT:2, INT64:3, UINT64:4, INT32:5, FIXED64:6, FIXED32:7, BOOL:8, STRING:9, GROUP:10, MESSAGE:11, BYTES:12, UINT32:13, ENUM:14, SFIXED32:15, SFIXED64:16, SINT32:17, SINT64:18};
goog.proto2.Message.prototype.setUnknown = function(tag, value) {
  goog.asserts.assert(!this.fields_[tag], "Field is not unknown in this message");
  goog.asserts.assert(1 <= tag, "Tag " + tag + ' has value "' + value + '" in descriptor ' + this.getDescriptor().getName());
  goog.asserts.assert(null !== value, "Value cannot be null");
  this.values_[tag] = value;
  this.deserializedFields_ && delete this.deserializedFields_[tag];
};
goog.proto2.Message.prototype.forEachUnknown = function(callback, opt_scope) {
  var scope = opt_scope || this;
  for (var key in this.values_) {
    var keyNum = Number(key);
    this.fields_[keyNum] || callback.call(scope, keyNum, this.values_[key]);
  }
};
goog.proto2.Message.prototype.has = function(field) {
  goog.asserts.assert(field.getContainingType() == this.getDescriptor(), "The current message does not contain the given field");
  return this.has$Value(field.getTag());
};
goog.proto2.Message.prototype.countOf = function(field) {
  goog.asserts.assert(field.getContainingType() == this.getDescriptor(), "The current message does not contain the given field");
  return this.count$Values(field.getTag());
};
goog.proto2.Message.prototype.get = function(field, opt_index) {
  goog.asserts.assert(field.getContainingType() == this.getDescriptor(), "The current message does not contain the given field");
  return this.get$Value(field.getTag(), opt_index);
};
goog.proto2.Message.prototype.set = function(field, value) {
  goog.asserts.assert(field.getContainingType() == this.getDescriptor(), "The current message does not contain the given field");
  this.set$Value(field.getTag(), value);
};
goog.proto2.Message.prototype.add = function(field, value) {
  goog.asserts.assert(field.getContainingType() == this.getDescriptor(), "The current message does not contain the given field");
  this.add$Value(field.getTag(), value);
};
goog.proto2.Message.prototype.clear = function(field) {
  goog.asserts.assert(field.getContainingType() == this.getDescriptor(), "The current message does not contain the given field");
  this.clear$Field(field.getTag());
};
goog.proto2.Message.prototype.equals = function(other) {
  if (!other || this.constructor != other.constructor) {
    return !1;
  }
  var fields = this.getDescriptor().getFields();
  for (var i = 0; i < fields.length; i++) {
    var field = fields[i];
    var tag = field.getTag();
    if (this.has$Value(tag) != other.has$Value(tag)) {
      return !1;
    }
    if (this.has$Value(tag)) {
      var isComposite = field.isCompositeType();
      var fieldsEqual = function(value1, value2) {
        return isComposite ? value1.equals(value2) : value1 == value2;
      };
      var thisValue = this.getValueForTag_(tag);
      var otherValue = other.getValueForTag_(tag);
      if (field.isRepeated()) {
        if (thisValue.length != otherValue.length) {
          return !1;
        }
        for (var j = 0; j < thisValue.length; j++) {
          if (!fieldsEqual(thisValue[j], otherValue[j])) {
            return !1;
          }
        }
      } else {
        if (!fieldsEqual(thisValue, otherValue)) {
          return !1;
        }
      }
    }
  }
  return !0;
};
goog.proto2.Message.prototype.copyFrom = function(message) {
  goog.asserts.assert(this.constructor == message.constructor, "The source message must have the same type.");
  this != message && (this.values_ = {}, this.deserializedFields_ && (this.deserializedFields_ = {}), this.mergeFrom(message));
};
goog.proto2.Message.prototype.mergeFrom = function(message) {
  goog.asserts.assert(this.constructor == message.constructor, "The source message must have the same type.");
  var fields = this.getDescriptor().getFields();
  for (var i = 0; i < fields.length; i++) {
    var field = fields[i];
    var tag = field.getTag();
    if (message.has$Value(tag)) {
      this.deserializedFields_ && delete this.deserializedFields_[field.getTag()];
      var isComposite = field.isCompositeType();
      if (field.isRepeated()) {
        var values = message.array$Values(tag);
        for (var j = 0; j < values.length; j++) {
          this.add$Value(tag, isComposite ? values[j].clone() : values[j]);
        }
      } else {
        var value = message.getValueForTag_(tag);
        if (isComposite) {
          var child = this.getValueForTag_(tag);
          child ? child.mergeFrom(value) : this.set$Value(tag, value.clone());
        } else {
          this.set$Value(tag, value);
        }
      }
    }
  }
};
goog.proto2.Message.prototype.clone = function() {
  var clone = new this.constructor;
  clone.copyFrom(this);
  return clone;
};
goog.proto2.Message.prototype.has$Value = function(tag) {
  return null != this.values_[tag];
};
goog.proto2.Message.prototype.getValueForTag_ = function(tag) {
  var value = this.values_[tag];
  if (!goog.isDefAndNotNull(value)) {
    return null;
  }
  if (this.lazyDeserializer_) {
    if (!(tag in this.deserializedFields_)) {
      var deserializedValue = this.lazyDeserializer_.deserializeField(this, this.fields_[tag], value);
      this.deserializedFields_[tag] = deserializedValue;
      return deserializedValue;
    }
    return this.deserializedFields_[tag];
  }
  return value;
};
goog.proto2.Message.prototype.get$Value = function(tag, opt_index) {
  var value = this.getValueForTag_(tag);
  if (this.fields_[tag].isRepeated()) {
    var index = opt_index || 0;
    goog.asserts.assert(0 <= index && index < value.length, "Given index %s is out of bounds.  Repeated field length: %s", index, value.length);
    return value[index];
  }
  return value;
};
goog.proto2.Message.prototype.get$ValueOrDefault = function(tag, opt_index) {
  if (!this.has$Value(tag)) {
    var field = this.fields_[tag];
    return field.getDefaultValue();
  }
  return this.get$Value(tag, opt_index);
};
goog.proto2.Message.prototype.array$Values = function(tag) {
  var value = this.getValueForTag_(tag);
  return value || [];
};
goog.proto2.Message.prototype.count$Values = function(tag) {
  var field = this.fields_[tag];
  return field.isRepeated() ? this.has$Value(tag) ? this.values_[tag].length : 0 : this.has$Value(tag) ? 1 : 0;
};
goog.proto2.Message.prototype.set$Value = function(tag, value) {
  if (goog.asserts.ENABLE_ASSERTS) {
    var field = this.fields_[tag];
    this.checkFieldType_(field, value);
  }
  this.values_[tag] = value;
  this.deserializedFields_ && (this.deserializedFields_[tag] = value);
};
goog.proto2.Message.prototype.add$Value = function(tag, value) {
  if (goog.asserts.ENABLE_ASSERTS) {
    var field = this.fields_[tag];
    this.checkFieldType_(field, value);
  }
  this.values_[tag] || (this.values_[tag] = []);
  this.values_[tag].push(value);
  this.deserializedFields_ && delete this.deserializedFields_[tag];
};
goog.proto2.Message.prototype.checkFieldType_ = function(field, value) {
  field.fieldType_ == goog.proto2.FieldDescriptor.FieldType.ENUM ? goog.asserts.assertNumber(value) : goog.asserts.assert(Object(value).constructor == field.nativeType_);
};
goog.proto2.Message.prototype.clear$Field = function(tag) {
  delete this.values_[tag];
  this.deserializedFields_ && delete this.deserializedFields_[tag];
};
goog.proto2.Message.createDescriptor = function(messageType, metadataObj) {
  var fields = [];
  var descriptorInfo = metadataObj[0];
  for (var key in metadataObj) {
    0 != key && fields.push(new goog.proto2.FieldDescriptor(messageType, key, metadataObj[key]));
  }
  return new goog.proto2.Descriptor(messageType, descriptorInfo, fields);
};
goog.proto2.Serializer = function() {
};
goog.proto2.Serializer.DECODE_SYMBOLIC_ENUMS = !1;
goog.proto2.Serializer.prototype.getSerializedValue = function(field, value) {
  return field.isCompositeType() ? this.serialize(value) : goog.isNumber(value) && !isFinite(value) ? value.toString() : value;
};
goog.proto2.Serializer.prototype.deserialize = function(descriptor, data) {
  var message = descriptor.createMessageInstance();
  this.deserializeTo(message, data);
  goog.asserts.assert(message instanceof goog.proto2.Message);
  return message;
};
goog.proto2.Serializer.prototype.getDeserializedValue = function(field, value) {
  if (field.isCompositeType()) {
    return value instanceof goog.proto2.Message ? value : this.deserialize(field.getFieldMessageType(), value);
  }
  if (field.fieldType_ == goog.proto2.FieldDescriptor.FieldType.ENUM) {
    if (goog.proto2.Serializer.DECODE_SYMBOLIC_ENUMS && goog.isString(value)) {
      var enumType = field.nativeType_;
      if (enumType.hasOwnProperty(value)) {
        return enumType[value];
      }
    }
    if (goog.isString(value) && goog.proto2.Serializer.INTEGER_REGEX.test(value)) {
      var numeric = Number(value);
      if (0 < numeric) {
        return numeric;
      }
    }
    return value;
  }
  if (!field.deserializationConversionPermitted_) {
    return value;
  }
  var nativeType = field.nativeType_;
  if (nativeType === String) {
    if (goog.isNumber(value)) {
      return String(value);
    }
  } else {
    if (nativeType === Number && goog.isString(value) && ("Infinity" === value || "-Infinity" === value || "NaN" === value || goog.proto2.Serializer.INTEGER_REGEX.test(value))) {
      return Number(value);
    }
  }
  return value;
};
goog.proto2.Serializer.INTEGER_REGEX = /^-?[0-9]+$/;
goog.proto2.ObjectSerializer = function(opt_keyOption, opt_serializeBooleanAsNumber) {
  this.keyOption_ = opt_keyOption;
  this.serializeBooleanAsNumber_ = opt_serializeBooleanAsNumber;
};
goog.inherits(goog.proto2.ObjectSerializer, goog.proto2.Serializer);
goog.proto2.ObjectSerializer.KeyOption = {TAG:0, NAME:1};
goog.proto2.ObjectSerializer.prototype.serialize = function(message) {
  var descriptor = message.getDescriptor();
  var fields = descriptor.getFields();
  var objectValue = {};
  for (var i = 0; i < fields.length; i++) {
    var field = fields[i];
    var key = this.keyOption_ == goog.proto2.ObjectSerializer.KeyOption.NAME ? field.getName() : field.getTag();
    if (message.has(field)) {
      if (field.isRepeated()) {
        var array = [];
        objectValue[key] = array;
        for (var j = 0; j < message.countOf(field); j++) {
          array.push(this.getSerializedValue(field, message.get(field, j)));
        }
      } else {
        objectValue[key] = this.getSerializedValue(field, message.get(field));
      }
    }
  }
  message.forEachUnknown(function(tag, value) {
    objectValue[tag] = value;
  });
  return objectValue;
};
goog.proto2.ObjectSerializer.prototype.getSerializedValue = function(field, value) {
  return this.serializeBooleanAsNumber_ && field.fieldType_ == goog.proto2.FieldDescriptor.FieldType.BOOL && goog.isBoolean(value) ? value ? 1 : 0 : goog.proto2.ObjectSerializer.superClass_.getSerializedValue.call(this, field, value);
};
goog.proto2.ObjectSerializer.prototype.getDeserializedValue = function(field, value) {
  return field.fieldType_ == goog.proto2.FieldDescriptor.FieldType.BOOL && goog.isNumber(value) ? !!value : goog.proto2.ObjectSerializer.superClass_.getDeserializedValue.call(this, field, value);
};
goog.proto2.ObjectSerializer.prototype.deserializeTo = function(message, data) {
  var descriptor = message.getDescriptor();
  for (var key in data) {
    var value = data[key];
    var isNumeric = goog.string.isNumeric(key);
    if (isNumeric) {
      var field = descriptor.findFieldByTag(key);
    } else {
      goog.asserts.assert(this.keyOption_ == goog.proto2.ObjectSerializer.KeyOption.NAME, "Key mode " + this.keyOption_ + "for key " + key + " is not " + goog.proto2.ObjectSerializer.KeyOption.NAME), field = descriptor.findFieldByName(key);
    }
    if (field) {
      if (field.isRepeated()) {
        goog.asserts.assert(goog.isArray(value), "Value for repeated field " + field + " must be an array.");
        for (var j = 0; j < value.length; j++) {
          message.add(field, this.getDeserializedValue(field, value[j]));
        }
      } else {
        goog.asserts.assert(!goog.isArray(value), "Value for non-repeated field " + field + " must not be an array."), message.set(field, this.getDeserializedValue(field, value));
      }
    } else {
      isNumeric ? message.setUnknown(Number(key), value) : goog.asserts.fail("Failed to find field: " + key);
    }
  }
};
goog.structs.Collection = function() {
};
goog.structs.Set = function(opt_values) {
  this.map_ = new goog.structs.Map;
  opt_values && this.addAll(opt_values);
};
goog.structs.Set.getKey_ = function(val) {
  var type = typeof val;
  return "object" == type && val || "function" == type ? "o" + goog.getUid(val) : type.substr(0, 1) + val;
};
goog.structs.Set.prototype.getCount = function() {
  return this.map_.getCount();
};
goog.structs.Set.prototype.add = function(element) {
  this.map_.set(goog.structs.Set.getKey_(element), element);
};
goog.structs.Set.prototype.addAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0; i < l; i++) {
    this.add(values[i]);
  }
};
goog.structs.Set.prototype.removeAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0; i < l; i++) {
    this.remove(values[i]);
  }
};
goog.structs.Set.prototype.remove = function(element) {
  return this.map_.remove(goog.structs.Set.getKey_(element));
};
goog.structs.Set.prototype.clear = function() {
  this.map_.clear();
};
goog.structs.Set.prototype.isEmpty = function() {
  return this.map_.isEmpty();
};
goog.structs.Set.prototype.contains = function(element) {
  return this.map_.containsKey(goog.structs.Set.getKey_(element));
};
goog.structs.Set.prototype.intersection = function(col) {
  var result = new goog.structs.Set;
  var values = goog.structs.getValues(col);
  for (var i = 0; i < values.length; i++) {
    var value = values[i];
    this.contains(value) && result.add(value);
  }
  return result;
};
goog.structs.Set.prototype.difference = function(col) {
  var result = this.clone();
  result.removeAll(col);
  return result;
};
goog.structs.Set.prototype.getValues = function() {
  return this.map_.getValues();
};
goog.structs.Set.prototype.clone = function() {
  return new goog.structs.Set(this);
};
goog.structs.Set.prototype.equals = function(col) {
  return this.getCount() == goog.structs.getCount(col) && this.isSubsetOf(col);
};
goog.structs.Set.prototype.isSubsetOf = function(col) {
  var colCount = goog.structs.getCount(col);
  if (this.getCount() > colCount) {
    return !1;
  }
  !(col instanceof goog.structs.Set) && 5 < colCount && (col = new goog.structs.Set(col));
  return goog.structs.every(this, function(value) {
    return goog.structs.contains(col, value);
  });
};
goog.structs.Set.prototype.__iterator__ = function() {
  return this.map_.__iterator__(!1);
};
goog.style = {};
goog.style.setStyle = function(element, style, opt_value) {
  if (goog.isString(style)) {
    goog.style.setStyle_(element, opt_value, style);
  } else {
    for (var key in style) {
      goog.style.setStyle_(element, style[key], key);
    }
  }
};
goog.style.setStyle_ = function(element, value, style) {
  var propertyName = goog.style.getVendorJsStyleName_(element, style);
  propertyName && (element.style[propertyName] = value);
};
goog.style.styleNameCache_ = {};
goog.style.getVendorJsStyleName_ = function(element, style) {
  var propertyName = goog.style.styleNameCache_[style];
  if (!propertyName) {
    var camelStyle = goog.string.toCamelCase(style);
    propertyName = camelStyle;
    if (void 0 === element.style[camelStyle]) {
      var prefixedStyle = goog.dom.vendor.getVendorJsPrefix() + goog.string.toTitleCase(camelStyle);
      void 0 !== element.style[prefixedStyle] && (propertyName = prefixedStyle);
    }
    goog.style.styleNameCache_[style] = propertyName;
  }
  return propertyName;
};
goog.style.getVendorStyleName_ = function(element, style) {
  var camelStyle = goog.string.toCamelCase(style);
  if (void 0 === element.style[camelStyle]) {
    var prefixedStyle = goog.dom.vendor.getVendorJsPrefix() + goog.string.toTitleCase(camelStyle);
    if (void 0 !== element.style[prefixedStyle]) {
      return goog.dom.vendor.getVendorPrefix() + "-" + style;
    }
  }
  return style;
};
goog.style.getStyle = function(element, property) {
  var styleValue = element.style[goog.string.toCamelCase(property)];
  return "undefined" !== typeof styleValue ? styleValue : element.style[goog.style.getVendorJsStyleName_(element, property)] || "";
};
goog.style.getComputedStyle = function(element, property) {
  var doc = goog.dom.getOwnerDocument(element);
  if (doc.defaultView && doc.defaultView.getComputedStyle) {
    var styles = doc.defaultView.getComputedStyle(element, null);
    if (styles) {
      return styles[property] || styles.getPropertyValue(property) || "";
    }
  }
  return "";
};
goog.style.getCascadedStyle = function(element, style) {
  return element.currentStyle ? element.currentStyle[style] : null;
};
goog.style.getStyle_ = function(element, style) {
  return goog.style.getComputedStyle(element, style) || goog.style.getCascadedStyle(element, style) || element.style && element.style[style];
};
goog.style.getComputedBoxSizing = function(element) {
  return goog.style.getStyle_(element, "boxSizing") || goog.style.getStyle_(element, "MozBoxSizing") || goog.style.getStyle_(element, "WebkitBoxSizing") || null;
};
goog.style.getComputedPosition = function(element) {
  return goog.style.getStyle_(element, "position");
};
goog.style.getBackgroundColor = function(element) {
  return goog.style.getStyle_(element, "backgroundColor");
};
goog.style.getComputedOverflowX = function(element) {
  return goog.style.getStyle_(element, "overflowX");
};
goog.style.getComputedOverflowY = function(element) {
  return goog.style.getStyle_(element, "overflowY");
};
goog.style.getComputedZIndex = function(element) {
  return goog.style.getStyle_(element, "zIndex");
};
goog.style.getComputedTextAlign = function(element) {
  return goog.style.getStyle_(element, "textAlign");
};
goog.style.getComputedCursor = function(element) {
  return goog.style.getStyle_(element, "cursor");
};
goog.style.getComputedTransform = function(element) {
  var property = goog.style.getVendorStyleName_(element, "transform");
  return goog.style.getStyle_(element, property) || goog.style.getStyle_(element, "transform");
};
goog.style.setPosition = function(el, arg1, opt_arg2) {
  if (arg1 instanceof goog.math.Coordinate) {
    var x = arg1.x;
    var y = arg1.y;
  } else {
    x = arg1, y = opt_arg2;
  }
  el.style.left = goog.style.getPixelStyleValue_(x, !1);
  el.style.top = goog.style.getPixelStyleValue_(y, !1);
};
goog.style.getPosition = function(element) {
  return new goog.math.Coordinate(element.offsetLeft, element.offsetTop);
};
goog.style.getClientViewportElement = function(opt_node) {
  var doc = opt_node ? goog.dom.getOwnerDocument(opt_node) : goog.dom.getDocument();
  return !goog.userAgent.IE || goog.userAgent.isDocumentModeOrHigher(9) || goog.dom.getDomHelper(doc).isCss1CompatMode() ? doc.documentElement : doc.body;
};
goog.style.getViewportPageOffset = function(doc) {
  var body = doc.body;
  var documentElement = doc.documentElement;
  var scrollLeft = body.scrollLeft || documentElement.scrollLeft;
  var scrollTop = body.scrollTop || documentElement.scrollTop;
  return new goog.math.Coordinate(scrollLeft, scrollTop);
};
goog.style.getBoundingClientRect_ = function(el) {
  try {
    var rect = el.getBoundingClientRect();
  } catch (e) {
    return {left:0, top:0, right:0, bottom:0};
  }
  if (goog.userAgent.IE && el.ownerDocument.body) {
    var doc = el.ownerDocument;
    rect.left -= doc.documentElement.clientLeft + doc.body.clientLeft;
    rect.top -= doc.documentElement.clientTop + doc.body.clientTop;
  }
  return rect;
};
goog.style.getOffsetParent = function(element) {
  if (goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(8)) {
    return goog.asserts.assert(element && "offsetParent" in element), element.offsetParent;
  }
  var doc = goog.dom.getOwnerDocument(element);
  var positionStyle = goog.style.getStyle_(element, "position");
  var skipStatic = "fixed" == positionStyle || "absolute" == positionStyle;
  for (var parent = element.parentNode; parent && parent != doc; parent = parent.parentNode) {
    if (parent.nodeType == goog.dom.NodeType.DOCUMENT_FRAGMENT && parent.host && (parent = parent.host), positionStyle = goog.style.getStyle_(parent, "position"), skipStatic = skipStatic && "static" == positionStyle && parent != doc.documentElement && parent != doc.body, !skipStatic && (parent.scrollWidth > parent.clientWidth || parent.scrollHeight > parent.clientHeight || "fixed" == positionStyle || "absolute" == positionStyle || "relative" == positionStyle)) {
      return parent;
    }
  }
  return null;
};
goog.style.getVisibleRectForElement = function(element) {
  var visibleRect = new goog.math.Box(0, Infinity, Infinity, 0);
  var dom = goog.dom.getDomHelper(element);
  var body = dom.getDocument().body;
  var documentElement = dom.getDocument().documentElement;
  var scrollEl = dom.getDocumentScrollElement();
  for (var el = element; el = goog.style.getOffsetParent(el);) {
    if (!(goog.userAgent.IE && 0 == el.clientWidth || goog.userAgent.WEBKIT && 0 == el.clientHeight && el == body) && el != body && el != documentElement && "visible" != goog.style.getStyle_(el, "overflow")) {
      var pos = goog.style.getPageOffset(el);
      var client = goog.style.getClientLeftTop(el);
      pos.x += client.x;
      pos.y += client.y;
      visibleRect.top = Math.max(visibleRect.top, pos.y);
      visibleRect.right = Math.min(visibleRect.right, pos.x + el.clientWidth);
      visibleRect.bottom = Math.min(visibleRect.bottom, pos.y + el.clientHeight);
      visibleRect.left = Math.max(visibleRect.left, pos.x);
    }
  }
  var scrollX = scrollEl.scrollLeft;
  var scrollY = scrollEl.scrollTop;
  visibleRect.left = Math.max(visibleRect.left, scrollX);
  visibleRect.top = Math.max(visibleRect.top, scrollY);
  var winSize = dom.getViewportSize();
  visibleRect.right = Math.min(visibleRect.right, scrollX + winSize.width);
  visibleRect.bottom = Math.min(visibleRect.bottom, scrollY + winSize.height);
  return 0 <= visibleRect.top && 0 <= visibleRect.left && visibleRect.bottom > visibleRect.top && visibleRect.right > visibleRect.left ? visibleRect : null;
};
goog.style.getContainerOffsetToScrollInto = function(element, opt_container, opt_center) {
  var container = opt_container || goog.dom.getDocumentScrollElement();
  var elementPos = goog.style.getPageOffset(element);
  var containerPos = goog.style.getPageOffset(container);
  var containerBorder = goog.style.getBorderBox(container);
  if (container == goog.dom.getDocumentScrollElement()) {
    var relX = elementPos.x - container.scrollLeft;
    var relY = elementPos.y - container.scrollTop;
    goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(10) && (relX += containerBorder.left, relY += containerBorder.top);
  } else {
    relX = elementPos.x - containerPos.x - containerBorder.left, relY = elementPos.y - containerPos.y - containerBorder.top;
  }
  var elementSize = goog.style.getSizeWithDisplay_(element);
  var spaceX = container.clientWidth - elementSize.width;
  var spaceY = container.clientHeight - elementSize.height;
  var scrollLeft = container.scrollLeft;
  var scrollTop = container.scrollTop;
  opt_center ? (scrollLeft += relX - spaceX / 2, scrollTop += relY - spaceY / 2) : (scrollLeft += Math.min(relX, Math.max(relX - spaceX, 0)), scrollTop += Math.min(relY, Math.max(relY - spaceY, 0)));
  return new goog.math.Coordinate(scrollLeft, scrollTop);
};
goog.style.scrollIntoContainerView = function(element, opt_container, opt_center) {
  var container = opt_container || goog.dom.getDocumentScrollElement();
  var offset = goog.style.getContainerOffsetToScrollInto(element, container, opt_center);
  container.scrollLeft = offset.x;
  container.scrollTop = offset.y;
};
goog.style.getClientLeftTop = function(el) {
  return new goog.math.Coordinate(el.clientLeft, el.clientTop);
};
goog.style.getPageOffset = function(el) {
  var doc = goog.dom.getOwnerDocument(el);
  goog.asserts.assertObject(el, "Parameter is required");
  var pos = new goog.math.Coordinate(0, 0);
  var viewportElement = goog.style.getClientViewportElement(doc);
  if (el == viewportElement) {
    return pos;
  }
  var box = goog.style.getBoundingClientRect_(el);
  var scrollCoord = goog.dom.getDomHelper(doc).getDocumentScroll();
  pos.x = box.left + scrollCoord.x;
  pos.y = box.top + scrollCoord.y;
  return pos;
};
goog.style.getPageOffsetLeft = function(el) {
  return goog.style.getPageOffset(el).x;
};
goog.style.getPageOffsetTop = function(el) {
  return goog.style.getPageOffset(el).y;
};
goog.style.getFramedPageOffset = function(el, relativeWin) {
  var position = new goog.math.Coordinate(0, 0);
  var currentWin = goog.dom.getWindow(goog.dom.getOwnerDocument(el));
  if (!goog.reflect.canAccessProperty(currentWin, "parent")) {
    return position;
  }
  var currentEl = el;
  do {
    var offset = currentWin == relativeWin ? goog.style.getPageOffset(currentEl) : goog.style.getClientPositionForElement_(goog.asserts.assert(currentEl));
    position.x += offset.x;
    position.y += offset.y;
  } while (currentWin && currentWin != relativeWin && currentWin != currentWin.parent && (currentEl = currentWin.frameElement) && (currentWin = currentWin.parent));
  return position;
};
goog.style.translateRectForAnotherFrame = function(rect, origBase, newBase) {
  if (origBase.getDocument() != newBase.getDocument()) {
    var body = origBase.getDocument().body;
    var pos = goog.style.getFramedPageOffset(body, newBase.getWindow());
    pos = goog.math.Coordinate.difference(pos, goog.style.getPageOffset(body));
    !goog.userAgent.IE || goog.userAgent.isDocumentModeOrHigher(9) || origBase.isCss1CompatMode() || (pos = goog.math.Coordinate.difference(pos, origBase.getDocumentScroll()));
    rect.left += pos.x;
    rect.top += pos.y;
  }
};
goog.style.getRelativePosition = function(a, b) {
  var ap = goog.style.getClientPosition(a);
  var bp = goog.style.getClientPosition(b);
  return new goog.math.Coordinate(ap.x - bp.x, ap.y - bp.y);
};
goog.style.getClientPositionForElement_ = function(el) {
  var box = goog.style.getBoundingClientRect_(el);
  return new goog.math.Coordinate(box.left, box.top);
};
goog.style.getClientPosition = function(el) {
  goog.asserts.assert(el);
  if (el.nodeType == goog.dom.NodeType.ELEMENT) {
    return goog.style.getClientPositionForElement_(el);
  }
  var targetEvent = el.changedTouches ? el.changedTouches[0] : el;
  return new goog.math.Coordinate(targetEvent.clientX, targetEvent.clientY);
};
goog.style.setPageOffset = function(el, x, opt_y) {
  var cur = goog.style.getPageOffset(el);
  x instanceof goog.math.Coordinate && (opt_y = x.y, x = x.x);
  var dx = goog.asserts.assertNumber(x) - cur.x;
  var dy = Number(opt_y) - cur.y;
  goog.style.setPosition(el, el.offsetLeft + dx, el.offsetTop + dy);
};
goog.style.setSize = function(element, w, opt_h) {
  if (w instanceof goog.math.Size) {
    var h = w.height;
    w = w.width;
  } else {
    if (void 0 == opt_h) {
      throw Error("missing height argument");
    }
    h = opt_h;
  }
  goog.style.setWidth(element, w);
  goog.style.setHeight(element, h);
};
goog.style.getPixelStyleValue_ = function(value, round) {
  "number" == typeof value && (value = (round ? Math.round(value) : value) + "px");
  return value;
};
goog.style.setHeight = function(element, height) {
  element.style.height = goog.style.getPixelStyleValue_(height, !0);
};
goog.style.setWidth = function(element, width) {
  element.style.width = goog.style.getPixelStyleValue_(width, !0);
};
goog.style.getSize = function(element) {
  return goog.style.evaluateWithTemporaryDisplay_(goog.style.getSizeWithDisplay_, element);
};
goog.style.evaluateWithTemporaryDisplay_ = function(fn, element) {
  if ("none" != goog.style.getStyle_(element, "display")) {
    return fn(element);
  }
  var style = element.style;
  var originalDisplay = style.display;
  var originalVisibility = style.visibility;
  var originalPosition = style.position;
  style.visibility = "hidden";
  style.position = "absolute";
  style.display = "inline";
  var retVal = fn(element);
  style.display = originalDisplay;
  style.position = originalPosition;
  style.visibility = originalVisibility;
  return retVal;
};
goog.style.getSizeWithDisplay_ = function(element) {
  var offsetWidth = element.offsetWidth;
  var offsetHeight = element.offsetHeight;
  var webkitOffsetsZero = goog.userAgent.WEBKIT && !offsetWidth && !offsetHeight;
  if ((!goog.isDef(offsetWidth) || webkitOffsetsZero) && element.getBoundingClientRect) {
    var clientRect = goog.style.getBoundingClientRect_(element);
    return new goog.math.Size(clientRect.right - clientRect.left, clientRect.bottom - clientRect.top);
  }
  return new goog.math.Size(offsetWidth, offsetHeight);
};
goog.style.getTransformedSize = function(element) {
  if (!element.getBoundingClientRect) {
    return null;
  }
  var clientRect = goog.style.evaluateWithTemporaryDisplay_(goog.style.getBoundingClientRect_, element);
  return new goog.math.Size(clientRect.right - clientRect.left, clientRect.bottom - clientRect.top);
};
goog.style.getBounds = function(element) {
  var o = goog.style.getPageOffset(element);
  var s = goog.style.getSize(element);
  return new goog.math.Rect(o.x, o.y, s.width, s.height);
};
goog.style.toCamelCase = function(selector) {
  return goog.string.toCamelCase(String(selector));
};
goog.style.toSelectorCase = function(selector) {
  return goog.string.toSelectorCase(selector);
};
goog.style.getOpacity = function(el) {
  goog.asserts.assert(el);
  var style = el.style;
  var result = "";
  if ("opacity" in style) {
    result = style.opacity;
  } else {
    if ("MozOpacity" in style) {
      result = style.MozOpacity;
    } else {
      if ("filter" in style) {
        var match = style.filter.match(/alpha\(opacity=([\d.]+)\)/);
        match && (result = String(match[1] / 100));
      }
    }
  }
  return "" == result ? result : Number(result);
};
goog.style.setOpacity = function(el, alpha) {
  goog.asserts.assert(el);
  var style = el.style;
  "opacity" in style ? style.opacity = alpha : "MozOpacity" in style ? style.MozOpacity = alpha : "filter" in style && (style.filter = "" === alpha ? "" : "alpha(opacity=" + 100 * Number(alpha) + ")");
};
goog.style.setTransparentBackgroundImage = function(el, src) {
  var style = el.style;
  goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("8") ? style.filter = 'progid:DXImageTransform.Microsoft.AlphaImageLoader(src="' + src + '", sizingMethod="crop")' : (style.backgroundImage = "url(" + src + ")", style.backgroundPosition = "top left", style.backgroundRepeat = "no-repeat");
};
goog.style.clearTransparentBackgroundImage = function(el) {
  var style = el.style;
  "filter" in style ? style.filter = "" : style.backgroundImage = "none";
};
goog.style.showElement = function(el, display) {
  goog.style.setElementShown(el, display);
};
goog.style.setElementShown = function(el, isShown) {
  el.style.display = isShown ? "" : "none";
};
goog.style.isElementShown = function(el) {
  return "none" != el.style.display;
};
goog.style.installSafeStyleSheet = function(safeStyleSheet, opt_node) {
  var dh = goog.dom.getDomHelper(opt_node);
  var doc = dh.getDocument();
  if (goog.userAgent.IE && doc.createStyleSheet) {
    var styleSheet = doc.createStyleSheet();
    goog.style.setSafeStyleSheet(styleSheet, safeStyleSheet);
    return styleSheet;
  }
  var head = dh.getElementsByTagNameAndClass("HEAD")[0];
  if (!head) {
    var body = dh.getElementsByTagNameAndClass("BODY")[0];
    head = dh.createDom("HEAD");
    body.parentNode.insertBefore(head, body);
  }
  var el = dh.createDom("STYLE");
  goog.style.setSafeStyleSheet(el, safeStyleSheet);
  dh.appendChild(head, el);
  return el;
};
goog.style.uninstallStyles = function(styleSheet) {
  var node = styleSheet.ownerNode || styleSheet.owningElement || styleSheet;
  goog.dom.removeNode(node);
};
goog.style.setSafeStyleSheet = function(element, safeStyleSheet) {
  var stylesString = goog.html.SafeStyleSheet.unwrap(safeStyleSheet);
  goog.userAgent.IE && goog.isDef(element.cssText) ? element.cssText = stylesString : element.innerHTML = stylesString;
};
goog.style.setPreWrap = function(el) {
  var style = el.style;
  goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("8") ? (style.whiteSpace = "pre", style.wordWrap = "break-word") : style.whiteSpace = goog.userAgent.GECKO ? "-moz-pre-wrap" : "pre-wrap";
};
goog.style.setInlineBlock = function(el) {
  var style = el.style;
  style.position = "relative";
  goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("8") ? (style.zoom = "1", style.display = "inline") : style.display = "inline-block";
};
goog.style.isRightToLeft = function(el) {
  return "rtl" == goog.style.getStyle_(el, "direction");
};
goog.style.unselectableStyle_ = goog.userAgent.GECKO ? "MozUserSelect" : goog.userAgent.WEBKIT || goog.userAgent.EDGE ? "WebkitUserSelect" : null;
goog.style.isUnselectable = function(el) {
  return goog.style.unselectableStyle_ ? "none" == el.style[goog.style.unselectableStyle_].toLowerCase() : goog.userAgent.IE || goog.userAgent.OPERA ? "on" == el.getAttribute("unselectable") : !1;
};
goog.style.setUnselectable = function(el, unselectable, opt_noRecurse) {
  var descendants = opt_noRecurse ? null : el.getElementsByTagName("*");
  var name = goog.style.unselectableStyle_;
  if (name) {
    var value = unselectable ? "none" : "";
    el.style && (el.style[name] = value);
    if (descendants) {
      var i = 0;
      for (var descendant; descendant = descendants[i]; i++) {
        descendant.style && (descendant.style[name] = value);
      }
    }
  } else {
    if (goog.userAgent.IE || goog.userAgent.OPERA) {
      if (value = unselectable ? "on" : "", el.setAttribute("unselectable", value), descendants) {
        for (i = 0; descendant = descendants[i]; i++) {
          descendant.setAttribute("unselectable", value);
        }
      }
    }
  }
};
goog.style.getBorderBoxSize = function(element) {
  return new goog.math.Size(element.offsetWidth, element.offsetHeight);
};
goog.style.setBorderBoxSize = function(element, size) {
  var doc = goog.dom.getOwnerDocument(element);
  var isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();
  if (!goog.userAgent.IE || goog.userAgent.isVersionOrHigher("10") || isCss1CompatMode && goog.userAgent.isVersionOrHigher("8")) {
    goog.style.setBoxSizingSize_(element, size, "border-box");
  } else {
    var style = element.style;
    if (isCss1CompatMode) {
      var paddingBox = goog.style.getPaddingBox(element);
      var borderBox = goog.style.getBorderBox(element);
      style.pixelWidth = size.width - borderBox.left - paddingBox.left - paddingBox.right - borderBox.right;
      style.pixelHeight = size.height - borderBox.top - paddingBox.top - paddingBox.bottom - borderBox.bottom;
    } else {
      style.pixelWidth = size.width, style.pixelHeight = size.height;
    }
  }
};
goog.style.getContentBoxSize = function(element) {
  var doc = goog.dom.getOwnerDocument(element);
  var ieCurrentStyle = goog.userAgent.IE && element.currentStyle;
  if (ieCurrentStyle && goog.dom.getDomHelper(doc).isCss1CompatMode() && "auto" != ieCurrentStyle.width && "auto" != ieCurrentStyle.height && !ieCurrentStyle.boxSizing) {
    var width = goog.style.getIePixelValue_(element, ieCurrentStyle.width, "width", "pixelWidth");
    var height = goog.style.getIePixelValue_(element, ieCurrentStyle.height, "height", "pixelHeight");
    return new goog.math.Size(width, height);
  }
  var borderBoxSize = goog.style.getBorderBoxSize(element);
  var paddingBox = goog.style.getPaddingBox(element);
  var borderBox = goog.style.getBorderBox(element);
  return new goog.math.Size(borderBoxSize.width - borderBox.left - paddingBox.left - paddingBox.right - borderBox.right, borderBoxSize.height - borderBox.top - paddingBox.top - paddingBox.bottom - borderBox.bottom);
};
goog.style.setContentBoxSize = function(element, size) {
  var doc = goog.dom.getOwnerDocument(element);
  var isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();
  if (!goog.userAgent.IE || goog.userAgent.isVersionOrHigher("10") || isCss1CompatMode && goog.userAgent.isVersionOrHigher("8")) {
    goog.style.setBoxSizingSize_(element, size, "content-box");
  } else {
    var style = element.style;
    if (isCss1CompatMode) {
      style.pixelWidth = size.width, style.pixelHeight = size.height;
    } else {
      var paddingBox = goog.style.getPaddingBox(element);
      var borderBox = goog.style.getBorderBox(element);
      style.pixelWidth = size.width + borderBox.left + paddingBox.left + paddingBox.right + borderBox.right;
      style.pixelHeight = size.height + borderBox.top + paddingBox.top + paddingBox.bottom + borderBox.bottom;
    }
  }
};
goog.style.setBoxSizingSize_ = function(element, size, boxSizing) {
  var style = element.style;
  goog.userAgent.GECKO ? style.MozBoxSizing = boxSizing : goog.userAgent.WEBKIT ? style.WebkitBoxSizing = boxSizing : style.boxSizing = boxSizing;
  style.width = Math.max(size.width, 0) + "px";
  style.height = Math.max(size.height, 0) + "px";
};
goog.style.getIePixelValue_ = function(element, value, name, pixelName) {
  if (/^\d+px?$/.test(value)) {
    return parseInt(value, 10);
  }
  var oldStyleValue = element.style[name];
  var oldRuntimeValue = element.runtimeStyle[name];
  element.runtimeStyle[name] = element.currentStyle[name];
  element.style[name] = value;
  var pixelValue = element.style[pixelName];
  element.style[name] = oldStyleValue;
  element.runtimeStyle[name] = oldRuntimeValue;
  return +pixelValue;
};
goog.style.getIePixelDistance_ = function(element, propName) {
  var value = goog.style.getCascadedStyle(element, propName);
  return value ? goog.style.getIePixelValue_(element, value, "left", "pixelLeft") : 0;
};
goog.style.getBox_ = function(element, stylePrefix) {
  if (goog.userAgent.IE) {
    var left = goog.style.getIePixelDistance_(element, stylePrefix + "Left");
    var right = goog.style.getIePixelDistance_(element, stylePrefix + "Right");
    var top = goog.style.getIePixelDistance_(element, stylePrefix + "Top");
    var bottom = goog.style.getIePixelDistance_(element, stylePrefix + "Bottom");
    return new goog.math.Box(top, right, bottom, left);
  }
  left = goog.style.getComputedStyle(element, stylePrefix + "Left");
  right = goog.style.getComputedStyle(element, stylePrefix + "Right");
  top = goog.style.getComputedStyle(element, stylePrefix + "Top");
  bottom = goog.style.getComputedStyle(element, stylePrefix + "Bottom");
  return new goog.math.Box(parseFloat(top), parseFloat(right), parseFloat(bottom), parseFloat(left));
};
goog.style.getPaddingBox = function(element) {
  return goog.style.getBox_(element, "padding");
};
goog.style.getMarginBox = function(element) {
  return goog.style.getBox_(element, "margin");
};
goog.style.ieBorderWidthKeywords_ = {thin:2, medium:4, thick:6};
goog.style.getIePixelBorder_ = function(element, prop) {
  if ("none" == goog.style.getCascadedStyle(element, prop + "Style")) {
    return 0;
  }
  var width = goog.style.getCascadedStyle(element, prop + "Width");
  return width in goog.style.ieBorderWidthKeywords_ ? goog.style.ieBorderWidthKeywords_[width] : goog.style.getIePixelValue_(element, width, "left", "pixelLeft");
};
goog.style.getBorderBox = function(element) {
  if (goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9)) {
    var left = goog.style.getIePixelBorder_(element, "borderLeft");
    var right = goog.style.getIePixelBorder_(element, "borderRight");
    var top = goog.style.getIePixelBorder_(element, "borderTop");
    var bottom = goog.style.getIePixelBorder_(element, "borderBottom");
    return new goog.math.Box(top, right, bottom, left);
  }
  left = goog.style.getComputedStyle(element, "borderLeftWidth");
  right = goog.style.getComputedStyle(element, "borderRightWidth");
  top = goog.style.getComputedStyle(element, "borderTopWidth");
  bottom = goog.style.getComputedStyle(element, "borderBottomWidth");
  return new goog.math.Box(parseFloat(top), parseFloat(right), parseFloat(bottom), parseFloat(left));
};
goog.style.getFontFamily = function(el) {
  var doc = goog.dom.getOwnerDocument(el);
  var font = "";
  if (doc.body.createTextRange && goog.dom.contains(doc, el)) {
    var range = doc.body.createTextRange();
    range.moveToElementText(el);
    try {
      font = range.queryCommandValue("FontName");
    } catch (e) {
      font = "";
    }
  }
  font || (font = goog.style.getStyle_(el, "fontFamily"));
  var fontsArray = font.split(",");
  1 < fontsArray.length && (font = fontsArray[0]);
  return goog.string.stripQuotes(font, "\"'");
};
goog.style.lengthUnitRegex_ = /[^\d]+$/;
goog.style.getLengthUnits = function(value) {
  var units = value.match(goog.style.lengthUnitRegex_);
  return units && units[0] || null;
};
goog.style.ABSOLUTE_CSS_LENGTH_UNITS_ = {cm:1, "in":1, mm:1, pc:1, pt:1};
goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_ = {em:1, ex:1};
goog.style.getFontSize = function(el) {
  var fontSize = goog.style.getStyle_(el, "fontSize");
  var sizeUnits = goog.style.getLengthUnits(fontSize);
  if (fontSize && "px" == sizeUnits) {
    return parseInt(fontSize, 10);
  }
  if (goog.userAgent.IE) {
    if (String(sizeUnits) in goog.style.ABSOLUTE_CSS_LENGTH_UNITS_) {
      return goog.style.getIePixelValue_(el, fontSize, "left", "pixelLeft");
    }
    if (el.parentNode && el.parentNode.nodeType == goog.dom.NodeType.ELEMENT && String(sizeUnits) in goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_) {
      var parentElement = el.parentNode;
      var parentSize = goog.style.getStyle_(parentElement, "fontSize");
      return goog.style.getIePixelValue_(parentElement, fontSize == parentSize ? "1em" : fontSize, "left", "pixelLeft");
    }
  }
  var sizeElement = goog.dom.createDom("SPAN", {style:"visibility:hidden;position:absolute;line-height:0;padding:0;margin:0;border:0;height:1em;"});
  goog.dom.appendChild(el, sizeElement);
  fontSize = sizeElement.offsetHeight;
  goog.dom.removeNode(sizeElement);
  return fontSize;
};
goog.style.parseStyleAttribute = function(value) {
  var result = {};
  goog.array.forEach(value.split(/\s*;\s*/), function(pair) {
    var keyValue = pair.match(/\s*([\w-]+)\s*\:(.+)/);
    if (keyValue) {
      var styleName = keyValue[1];
      var styleValue = goog.string.trim(keyValue[2]);
      result[goog.string.toCamelCase(styleName.toLowerCase())] = styleValue;
    }
  });
  return result;
};
goog.style.toStyleAttribute = function(obj) {
  var buffer = [];
  goog.object.forEach(obj, function(value, key) {
    buffer.push(goog.string.toSelectorCase(key), ":", value, ";");
  });
  return buffer.join("");
};
goog.style.setFloat = function(el, value) {
  el.style[goog.userAgent.IE ? "styleFloat" : "cssFloat"] = value;
};
goog.style.getFloat = function(el) {
  return el.style[goog.userAgent.IE ? "styleFloat" : "cssFloat"] || "";
};
goog.style.getScrollbarWidth = function(opt_className) {
  var outerDiv = goog.dom.createElement("DIV");
  opt_className && (outerDiv.className = opt_className);
  outerDiv.style.cssText = "overflow:auto;position:absolute;top:0;width:100px;height:100px";
  var innerDiv = goog.dom.createElement("DIV");
  goog.style.setSize(innerDiv, "200px", "200px");
  outerDiv.appendChild(innerDiv);
  goog.dom.appendChild(goog.dom.getDocument().body, outerDiv);
  var width = outerDiv.offsetWidth - outerDiv.clientWidth;
  goog.dom.removeNode(outerDiv);
  return width;
};
goog.style.MATRIX_TRANSLATION_REGEX_ = /matrix\([0-9\.\-]+, [0-9\.\-]+, [0-9\.\-]+, [0-9\.\-]+, ([0-9\.\-]+)p?x?, ([0-9\.\-]+)p?x?\)/;
goog.style.getCssTranslation = function(element) {
  var transform = goog.style.getComputedTransform(element);
  if (!transform) {
    return new goog.math.Coordinate(0, 0);
  }
  var matches = transform.match(goog.style.MATRIX_TRANSLATION_REGEX_);
  return matches ? new goog.math.Coordinate(parseFloat(matches[1]), parseFloat(matches[2])) : new goog.math.Coordinate(0, 0);
};
goog.ui = {};
goog.ui.KeyboardShortcutHandler = function(keyTarget) {
  goog.events.EventTarget.call(this);
  this.shortcuts_ = {};
  this.currentTree_ = this.shortcuts_;
  this.lastStrokeTime_ = 0;
  this.globalKeys_ = goog.object.createSet(goog.ui.KeyboardShortcutHandler.DEFAULT_GLOBAL_KEYS_);
  this.textInputs_ = goog.object.createSet(goog.ui.KeyboardShortcutHandler.DEFAULT_TEXT_INPUTS_);
  this.alwaysPreventDefault_ = !0;
  this.alwaysStopPropagation_ = !1;
  this.allShortcutsAreGlobal_ = !1;
  this.modifierShortcutsAreGlobal_ = !0;
  this.allowSpaceKeyOnButtons_ = !1;
  this.activeShortcutKeyForGecko_ = null;
  this.initializeKeyListener(keyTarget);
};
goog.inherits(goog.ui.KeyboardShortcutHandler, goog.events.EventTarget);
goog.ui.KeyboardShortcutHandler.SequenceNode_ = function(opt_shortcut) {
  this.shortcut = opt_shortcut || null;
  this.next = opt_shortcut ? null : {};
};
goog.ui.KeyboardShortcutHandler.createTerminalNode_ = function(shortcut) {
  return new goog.ui.KeyboardShortcutHandler.SequenceNode_(shortcut);
};
goog.ui.KeyboardShortcutHandler.createInternalNode_ = function() {
  return new goog.ui.KeyboardShortcutHandler.SequenceNode_;
};
goog.ui.KeyboardShortcutHandler.MAX_KEY_SEQUENCE_DELAY = 1500;
goog.ui.KeyboardShortcutHandler.Modifiers = {NONE:0, SHIFT:1, CTRL:2, ALT:4, META:8};
goog.ui.KeyboardShortcutHandler.DEFAULT_GLOBAL_KEYS_ = [goog.events.KeyCodes.ESC, goog.events.KeyCodes.F1, goog.events.KeyCodes.F2, goog.events.KeyCodes.F3, goog.events.KeyCodes.F4, goog.events.KeyCodes.F5, goog.events.KeyCodes.F6, goog.events.KeyCodes.F7, goog.events.KeyCodes.F8, goog.events.KeyCodes.F9, goog.events.KeyCodes.F10, goog.events.KeyCodes.F11, goog.events.KeyCodes.F12, goog.events.KeyCodes.PAUSE];
goog.ui.KeyboardShortcutHandler.DEFAULT_TEXT_INPUTS_ = "color date datetime datetime-local email month number password search tel text time url week".split(" ");
goog.ui.KeyboardShortcutHandler.EventType = {SHORTCUT_TRIGGERED:"shortcut", SHORTCUT_PREFIX:"shortcut_"};
goog.ui.KeyboardShortcutHandler.getKeyCode = function(name) {
  if (!goog.ui.KeyboardShortcutHandler.nameToKeyCodeCache_) {
    var map = {};
    for (var key in goog.events.KeyNames) {
      map[goog.events.KeyNames[key]] = goog.events.KeyCodes.normalizeKeyCode(parseInt(key, 10));
    }
    goog.ui.KeyboardShortcutHandler.nameToKeyCodeCache_ = map;
  }
  return goog.ui.KeyboardShortcutHandler.nameToKeyCodeCache_[name];
};
goog.ui.KeyboardShortcutHandler.prototype.setAllShortcutsAreGlobal = function(allShortcutsGlobal) {
  this.allShortcutsAreGlobal_ = allShortcutsGlobal;
};
goog.ui.KeyboardShortcutHandler.prototype.registerShortcut = function(identifier, var_args) {
  goog.ui.KeyboardShortcutHandler.setShortcut_(this.shortcuts_, this.interpretStrokes_(1, arguments), identifier);
};
goog.ui.KeyboardShortcutHandler.prototype.interpretStrokes_ = function(initialIndex, args) {
  if (goog.isString(args[initialIndex])) {
    var strokes = goog.array.map(goog.ui.KeyboardShortcutHandler.parseStringShortcut(args[initialIndex]), function(stroke) {
      goog.asserts.assertNumber(stroke.keyCode, "A non-modifier key is needed in each stroke.");
      return goog.ui.KeyboardShortcutHandler.makeStroke_(stroke.key || "", stroke.keyCode, stroke.modifiers);
    });
  } else {
    var strokesArgs = args;
    var i = initialIndex;
    goog.isArray(args[initialIndex]) && (strokesArgs = args[initialIndex], i = 0);
    for (strokes = []; i < strokesArgs.length; i += 2) {
      strokes.push(goog.ui.KeyboardShortcutHandler.makeStroke_("", strokesArgs[i], strokesArgs[i + 1]));
    }
  }
  return strokes;
};
goog.ui.KeyboardShortcutHandler.prototype.unregisterAll = function() {
  this.shortcuts_ = {};
};
goog.ui.KeyboardShortcutHandler.prototype.disposeInternal = function() {
  goog.ui.KeyboardShortcutHandler.superClass_.disposeInternal.call(this);
  this.unregisterAll();
  this.clearKeyListener();
};
goog.ui.KeyboardShortcutHandler.prototype.getEventType = function(identifier) {
  return goog.ui.KeyboardShortcutHandler.EventType.SHORTCUT_PREFIX + identifier;
};
goog.ui.KeyboardShortcutHandler.parseStringShortcut = function(s) {
  s = s.replace(/[ +]*\+[ +]*/g, "+").replace(/[ ]+/g, " ").toLowerCase();
  var groups = s.split(" ");
  var strokes = [];
  var group;
  for (var i = 0; group = groups[i]; i++) {
    var keys = group.split("+");
    var keyName = null;
    var keyCode = null;
    var modifiers = goog.ui.KeyboardShortcutHandler.Modifiers.NONE;
    var key;
    for (var j = 0; key = keys[j]; j++) {
      switch(key) {
        case "shift":
          modifiers |= goog.ui.KeyboardShortcutHandler.Modifiers.SHIFT;
          continue;
        case "ctrl":
          modifiers |= goog.ui.KeyboardShortcutHandler.Modifiers.CTRL;
          continue;
        case "alt":
          modifiers |= goog.ui.KeyboardShortcutHandler.Modifiers.ALT;
          continue;
        case "meta":
          modifiers |= goog.ui.KeyboardShortcutHandler.Modifiers.META;
          continue;
      }
      goog.isNull(keyCode) || goog.asserts.fail("At most one non-modifier key can be in a stroke.");
      keyCode = goog.ui.KeyboardShortcutHandler.getKeyCode(key);
      goog.asserts.assertNumber(keyCode, "Key name not found in goog.events.KeyNames: " + key);
      keyName = key;
      break;
    }
    strokes.push({key:keyName, keyCode:keyCode, modifiers:modifiers});
  }
  return strokes;
};
goog.ui.KeyboardShortcutHandler.prototype.initializeKeyListener = function(keyTarget) {
  this.keyTarget_ = keyTarget;
  goog.events.listen(this.keyTarget_, goog.events.EventType.KEYDOWN, this.handleKeyDown_, void 0, this);
  goog.userAgent.WINDOWS && goog.events.listen(this.keyTarget_, goog.events.EventType.KEYPRESS, this.handleWindowsKeyPress_, void 0, this);
  goog.events.listen(this.keyTarget_, goog.events.EventType.KEYUP, this.handleKeyUp_, void 0, this);
};
goog.ui.KeyboardShortcutHandler.prototype.handleKeyUp_ = function(e) {
  goog.userAgent.GECKO && this.handleGeckoKeyUp_(e);
  goog.userAgent.WINDOWS && this.handleWindowsKeyUp_(e);
};
goog.ui.KeyboardShortcutHandler.prototype.handleGeckoKeyUp_ = function(e) {
  if (goog.userAgent.MAC) {
    if (e.keyCode == goog.events.KeyCodes.MAC_FF_META) {
      this.metaKeyRecentlyReleased_ = !0;
      goog.Timer.callOnce(function() {
        this.metaKeyRecentlyReleased_ = !1;
      }, 400, this);
      return;
    }
    var metaKey = e.metaKey || this.metaKeyRecentlyReleased_;
    e.keyCode != goog.events.KeyCodes.C && e.keyCode != goog.events.KeyCodes.X && e.keyCode != goog.events.KeyCodes.V || !metaKey || (e.metaKey = metaKey, this.handleKeyDown_(e));
  }
  goog.events.KeyCodes.SPACE == this.activeShortcutKeyForGecko_ && goog.events.KeyCodes.SPACE == e.keyCode && e.preventDefault();
  this.activeShortcutKeyForGecko_ = null;
};
goog.ui.KeyboardShortcutHandler.prototype.isPossiblePrintableKey_ = function(e) {
  return goog.userAgent.WINDOWS && e.ctrlKey && e.altKey;
};
goog.ui.KeyboardShortcutHandler.prototype.handleWindowsKeyPress_ = function(e) {
  32 < e.keyCode && this.isPossiblePrintableKey_(e) && (this.isPrintableKey_ = !0);
};
goog.ui.KeyboardShortcutHandler.prototype.handleWindowsKeyUp_ = function(e) {
  !this.isPrintableKey_ && this.isPossiblePrintableKey_(e) && this.handleKeyDown_(e);
};
goog.ui.KeyboardShortcutHandler.prototype.clearKeyListener = function() {
  goog.events.unlisten(this.keyTarget_, goog.events.EventType.KEYDOWN, this.handleKeyDown_, !1, this);
  goog.userAgent.WINDOWS && goog.events.unlisten(this.keyTarget_, goog.events.EventType.KEYPRESS, this.handleWindowsKeyPress_, !1, this);
  goog.events.unlisten(this.keyTarget_, goog.events.EventType.KEYUP, this.handleKeyUp_, !1, this);
  this.keyTarget_ = null;
};
goog.ui.KeyboardShortcutHandler.setShortcut_ = function(tree, strokes, identifier) {
  var stroke = strokes.shift();
  goog.array.forEach(stroke, function(s) {
    var node = tree[s];
    if (node && (0 == strokes.length || node.shortcut)) {
      throw Error("Keyboard shortcut conflicts with existing shortcut");
    }
  });
  strokes.length ? goog.array.forEach(stroke, function(s) {
    var node = goog.object.setIfUndefined(tree, s.toString(), goog.ui.KeyboardShortcutHandler.createInternalNode_());
    var strokesCopy = strokes.slice(0);
    goog.ui.KeyboardShortcutHandler.setShortcut_(goog.asserts.assert(node.next, "An internal node must have a next map"), strokesCopy, identifier);
  }) : goog.array.forEach(stroke, function(s) {
    tree[s] = goog.ui.KeyboardShortcutHandler.createTerminalNode_(identifier);
  });
};
goog.ui.KeyboardShortcutHandler.unsetShortcut_ = function(tree, strokes) {
  var stroke = strokes.shift();
  goog.array.forEach(stroke, function(s) {
    var node = tree[s];
    if (node) {
      if (0 == strokes.length) {
        node.shortcut && delete tree[s];
      } else {
        if (node.next) {
          var strokesCopy = strokes.slice(0);
          goog.ui.KeyboardShortcutHandler.unsetShortcut_(node.next, strokesCopy);
          goog.object.isEmpty(node.next) && delete tree[s];
        }
      }
    }
  });
};
goog.ui.KeyboardShortcutHandler.prototype.getNode_ = function(tree, stroke) {
  for (var i = 0; i < stroke.length; i++) {
    var node = tree[stroke[i]];
    if (node) {
      return node;
    }
  }
};
goog.ui.KeyboardShortcutHandler.makeStroke_ = function(keyName, keyCode, modifiers) {
  var mods = modifiers || 0;
  var strokes = ["c_" + keyCode + "_" + mods];
  "" != keyName && strokes.push("n_" + keyName + "_" + mods);
  return strokes;
};
goog.ui.KeyboardShortcutHandler.prototype.handleKeyDown_ = function(event) {
  if (this.isValidShortcut_(event)) {
    if ("keydown" == event.type && this.isPossiblePrintableKey_(event)) {
      this.isPrintableKey_ = !1;
    } else {
      var keyCode = goog.events.KeyCodes.normalizeKeyCode(event.keyCode);
      var keyName = event.key;
      var modifiers = (event.shiftKey ? goog.ui.KeyboardShortcutHandler.Modifiers.SHIFT : 0) | (event.ctrlKey ? goog.ui.KeyboardShortcutHandler.Modifiers.CTRL : 0) | (event.altKey ? goog.ui.KeyboardShortcutHandler.Modifiers.ALT : 0) | (event.metaKey ? goog.ui.KeyboardShortcutHandler.Modifiers.META : 0);
      var stroke = goog.ui.KeyboardShortcutHandler.makeStroke_(keyName, keyCode, modifiers);
      var node = this.getNode_(this.currentTree_, stroke);
      node && !this.hasSequenceTimedOut_() || this.setCurrentTree_(this.shortcuts_);
      node = this.getNode_(this.currentTree_, stroke);
      node && node.next && this.setCurrentTree_(node.next);
      if (node) {
        if (node.next) {
          event.preventDefault();
        } else {
          this.setCurrentTree_(this.shortcuts_);
          this.alwaysPreventDefault_ && event.preventDefault();
          this.alwaysStopPropagation_ && event.stopPropagation();
          var shortcut = goog.asserts.assertString(node.shortcut, "A terminal node must have a string shortcut identifier.");
          var target = event.target;
          var triggerEvent = new goog.ui.KeyboardShortcutEvent(goog.ui.KeyboardShortcutHandler.EventType.SHORTCUT_TRIGGERED, shortcut, target);
          var retVal = this.dispatchEvent(triggerEvent);
          var prefixEvent = new goog.ui.KeyboardShortcutEvent(goog.ui.KeyboardShortcutHandler.EventType.SHORTCUT_PREFIX + shortcut, shortcut, target);
          retVal &= this.dispatchEvent(prefixEvent);
          retVal || event.preventDefault();
          goog.userAgent.GECKO && (this.activeShortcutKeyForGecko_ = keyCode);
        }
      }
    }
  }
};
goog.ui.KeyboardShortcutHandler.prototype.isValidShortcut_ = function(event) {
  var keyCode = event.keyCode;
  if ("" != event.key) {
    var keyName = event.key;
    if (keyName == goog.events.Keys.CTRL || keyName == goog.events.Keys.SHIFT || keyName == goog.events.Keys.ALT || keyName == goog.events.Keys.ALTGRAPH) {
      return !1;
    }
  } else {
    if (keyCode == goog.events.KeyCodes.SHIFT || keyCode == goog.events.KeyCodes.CTRL || keyCode == goog.events.KeyCodes.ALT) {
      return !1;
    }
  }
  var el = event.target;
  var isFormElement = "TEXTAREA" == el.tagName || "INPUT" == el.tagName || "BUTTON" == el.tagName || "SELECT" == el.tagName;
  var isContentEditable = !isFormElement && (el.isContentEditable || el.ownerDocument && "on" == el.ownerDocument.designMode);
  return !isFormElement && !isContentEditable || this.globalKeys_[keyCode] || this.allShortcutsAreGlobal_ ? !0 : isContentEditable ? !1 : this.modifierShortcutsAreGlobal_ && (event.altKey || event.ctrlKey || event.metaKey) ? !0 : "INPUT" == el.tagName && this.textInputs_[el.type] ? keyCode == goog.events.KeyCodes.ENTER : "INPUT" == el.tagName || "BUTTON" == el.tagName ? this.allowSpaceKeyOnButtons_ ? !0 : keyCode != goog.events.KeyCodes.SPACE : !1;
};
goog.ui.KeyboardShortcutHandler.prototype.hasSequenceTimedOut_ = function() {
  return goog.now() - this.lastStrokeTime_ >= goog.ui.KeyboardShortcutHandler.MAX_KEY_SEQUENCE_DELAY;
};
goog.ui.KeyboardShortcutHandler.prototype.setCurrentTree_ = function(tree) {
  this.currentTree_ = tree;
  this.lastStrokeTime_ = goog.now();
};
goog.ui.KeyboardShortcutEvent = function(type, identifier, target) {
  goog.events.Event.call(this, type, target);
  this.identifier = identifier;
};
goog.inherits(goog.ui.KeyboardShortcutEvent, goog.events.Event);
goog.Uri = function(opt_uri, opt_ignoreCase) {
  this.scheme_ = "";
  this.userInfo_ = "";
  this.domain_ = "";
  this.port_ = null;
  this.path_ = "";
  this.fragment_ = "";
  this.isReadOnly_ = !1;
  this.ignoreCase_ = !1;
  var m;
  opt_uri instanceof goog.Uri ? (this.ignoreCase_ = goog.isDef(opt_ignoreCase) ? opt_ignoreCase : opt_uri.ignoreCase_, this.setScheme(opt_uri.getScheme()), this.setUserInfo(opt_uri.getUserInfo()), this.setDomain(opt_uri.getDomain()), this.setPort(opt_uri.getPort()), this.setPath(opt_uri.getPath()), this.setQueryData(opt_uri.getQueryData().clone()), this.setFragment(opt_uri.getFragment())) : opt_uri && (m = goog.uri.utils.split(String(opt_uri))) ? (this.ignoreCase_ = !!opt_ignoreCase, this.setScheme(m[goog.uri.utils.ComponentIndex.SCHEME] || 
  "", !0), this.setUserInfo(m[goog.uri.utils.ComponentIndex.USER_INFO] || "", !0), this.setDomain(m[goog.uri.utils.ComponentIndex.DOMAIN] || "", !0), this.setPort(m[goog.uri.utils.ComponentIndex.PORT]), this.setPath(m[goog.uri.utils.ComponentIndex.PATH] || "", !0), this.setQueryData(m[goog.uri.utils.ComponentIndex.QUERY_DATA] || "", !0), this.setFragment(m[goog.uri.utils.ComponentIndex.FRAGMENT] || "", !0)) : (this.ignoreCase_ = !!opt_ignoreCase, this.queryData_ = new goog.Uri.QueryData(null, null, 
  this.ignoreCase_));
};
goog.Uri.preserveParameterTypesCompatibilityFlag = !1;
goog.Uri.RANDOM_PARAM = goog.uri.utils.StandardQueryParam.RANDOM;
goog.Uri.prototype.toString = function() {
  var out = [];
  var scheme = this.getScheme();
  scheme && out.push(goog.Uri.encodeSpecialChars_(scheme, goog.Uri.reDisallowedInSchemeOrUserInfo_, !0), ":");
  var domain = this.getDomain();
  if (domain || "file" == scheme) {
    out.push("//");
    var userInfo = this.getUserInfo();
    userInfo && out.push(goog.Uri.encodeSpecialChars_(userInfo, goog.Uri.reDisallowedInSchemeOrUserInfo_, !0), "@");
    out.push(goog.Uri.removeDoubleEncoding_(goog.string.urlEncode(domain)));
    var port = this.getPort();
    null != port && out.push(":", String(port));
  }
  var path = this.getPath();
  path && (this.hasDomain() && "/" != path.charAt(0) && out.push("/"), out.push(goog.Uri.encodeSpecialChars_(path, "/" == path.charAt(0) ? goog.Uri.reDisallowedInAbsolutePath_ : goog.Uri.reDisallowedInRelativePath_, !0)));
  var query = this.getEncodedQuery();
  query && out.push("?", query);
  var fragment = this.getFragment();
  fragment && out.push("#", goog.Uri.encodeSpecialChars_(fragment, goog.Uri.reDisallowedInFragment_));
  return out.join("");
};
goog.Uri.prototype.resolve = function(relativeUri) {
  var absoluteUri = this.clone();
  var overridden = relativeUri.hasScheme();
  overridden ? absoluteUri.setScheme(relativeUri.getScheme()) : overridden = relativeUri.hasUserInfo();
  overridden ? absoluteUri.setUserInfo(relativeUri.getUserInfo()) : overridden = relativeUri.hasDomain();
  overridden ? absoluteUri.setDomain(relativeUri.getDomain()) : overridden = relativeUri.hasPort();
  var path = relativeUri.getPath();
  if (overridden) {
    absoluteUri.setPort(relativeUri.getPort());
  } else {
    if (overridden = relativeUri.hasPath(), overridden) {
      if ("/" != path.charAt(0)) {
        if (this.hasDomain() && !this.hasPath()) {
          path = "/" + path;
        } else {
          var lastSlashIndex = absoluteUri.getPath().lastIndexOf("/");
          -1 != lastSlashIndex && (path = absoluteUri.getPath().substr(0, lastSlashIndex + 1) + path);
        }
      }
      path = goog.Uri.removeDotSegments(path);
    }
  }
  overridden ? absoluteUri.setPath(path) : overridden = relativeUri.hasQuery();
  overridden ? absoluteUri.setQueryData(relativeUri.getQueryData().clone()) : overridden = relativeUri.hasFragment();
  overridden && absoluteUri.setFragment(relativeUri.getFragment());
  return absoluteUri;
};
goog.Uri.prototype.clone = function() {
  return new goog.Uri(this);
};
goog.Uri.prototype.getScheme = function() {
  return this.scheme_;
};
goog.Uri.prototype.setScheme = function(newScheme, opt_decode) {
  this.enforceReadOnly();
  this.scheme_ = opt_decode ? goog.Uri.decodeOrEmpty_(newScheme, !0) : newScheme;
  this.scheme_ && (this.scheme_ = this.scheme_.replace(/:$/, ""));
  return this;
};
goog.Uri.prototype.hasScheme = function() {
  return !!this.scheme_;
};
goog.Uri.prototype.getUserInfo = function() {
  return this.userInfo_;
};
goog.Uri.prototype.setUserInfo = function(newUserInfo, opt_decode) {
  this.enforceReadOnly();
  this.userInfo_ = opt_decode ? goog.Uri.decodeOrEmpty_(newUserInfo) : newUserInfo;
  return this;
};
goog.Uri.prototype.hasUserInfo = function() {
  return !!this.userInfo_;
};
goog.Uri.prototype.getDomain = function() {
  return this.domain_;
};
goog.Uri.prototype.setDomain = function(newDomain, opt_decode) {
  this.enforceReadOnly();
  this.domain_ = opt_decode ? goog.Uri.decodeOrEmpty_(newDomain, !0) : newDomain;
  return this;
};
goog.Uri.prototype.hasDomain = function() {
  return !!this.domain_;
};
goog.Uri.prototype.getPort = function() {
  return this.port_;
};
goog.Uri.prototype.setPort = function(newPort) {
  this.enforceReadOnly();
  if (newPort) {
    newPort = Number(newPort);
    if (isNaN(newPort) || 0 > newPort) {
      throw Error("Bad port number " + newPort);
    }
    this.port_ = newPort;
  } else {
    this.port_ = null;
  }
  return this;
};
goog.Uri.prototype.hasPort = function() {
  return null != this.port_;
};
goog.Uri.prototype.getPath = function() {
  return this.path_;
};
goog.Uri.prototype.setPath = function(newPath, opt_decode) {
  this.enforceReadOnly();
  this.path_ = opt_decode ? goog.Uri.decodeOrEmpty_(newPath, !0) : newPath;
  return this;
};
goog.Uri.prototype.hasPath = function() {
  return !!this.path_;
};
goog.Uri.prototype.hasQuery = function() {
  return "" !== this.queryData_.toString();
};
goog.Uri.prototype.setQueryData = function(queryData, opt_decode) {
  this.enforceReadOnly();
  queryData instanceof goog.Uri.QueryData ? (this.queryData_ = queryData, this.queryData_.setIgnoreCase(this.ignoreCase_)) : (opt_decode || (queryData = goog.Uri.encodeSpecialChars_(queryData, goog.Uri.reDisallowedInQuery_)), this.queryData_ = new goog.Uri.QueryData(queryData, null, this.ignoreCase_));
  return this;
};
goog.Uri.prototype.getEncodedQuery = function() {
  return this.queryData_.toString();
};
goog.Uri.prototype.getQueryData = function() {
  return this.queryData_;
};
goog.Uri.prototype.setParameterValue = function(key, value) {
  this.enforceReadOnly();
  this.queryData_.set(key, value);
  return this;
};
goog.Uri.prototype.getFragment = function() {
  return this.fragment_;
};
goog.Uri.prototype.setFragment = function(newFragment, opt_decode) {
  this.enforceReadOnly();
  this.fragment_ = opt_decode ? goog.Uri.decodeOrEmpty_(newFragment) : newFragment;
  return this;
};
goog.Uri.prototype.hasFragment = function() {
  return !!this.fragment_;
};
goog.Uri.prototype.makeUnique = function() {
  this.enforceReadOnly();
  this.setParameterValue(goog.Uri.RANDOM_PARAM, goog.string.getRandomString());
  return this;
};
goog.Uri.prototype.removeParameter = function(key) {
  this.enforceReadOnly();
  this.queryData_.remove(key);
  return this;
};
goog.Uri.prototype.enforceReadOnly = function() {
  if (this.isReadOnly_) {
    throw Error("Tried to modify a read-only Uri");
  }
};
goog.Uri.prototype.setIgnoreCase = function(ignoreCase) {
  this.ignoreCase_ = ignoreCase;
  this.queryData_ && this.queryData_.setIgnoreCase(ignoreCase);
  return this;
};
goog.Uri.parse = function(uri, opt_ignoreCase) {
  return uri instanceof goog.Uri ? uri.clone() : new goog.Uri(uri, opt_ignoreCase);
};
goog.Uri.create = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_query, opt_fragment, opt_ignoreCase) {
  var uri = new goog.Uri(null, opt_ignoreCase);
  opt_scheme && uri.setScheme(opt_scheme);
  opt_userInfo && uri.setUserInfo(opt_userInfo);
  opt_domain && uri.setDomain(opt_domain);
  opt_port && uri.setPort(opt_port);
  opt_path && uri.setPath(opt_path);
  opt_query && uri.setQueryData(opt_query);
  opt_fragment && uri.setFragment(opt_fragment);
  return uri;
};
goog.Uri.resolve = function(base, rel) {
  base instanceof goog.Uri || (base = goog.Uri.parse(base));
  rel instanceof goog.Uri || (rel = goog.Uri.parse(rel));
  return base.resolve(rel);
};
goog.Uri.removeDotSegments = function(path) {
  if (".." == path || "." == path) {
    return "";
  }
  if (goog.string.contains(path, "./") || goog.string.contains(path, "/.")) {
    var leadingSlash = goog.string.startsWith(path, "/");
    var segments = path.split("/");
    var out = [];
    for (var pos = 0; pos < segments.length;) {
      var segment = segments[pos++];
      "." == segment ? leadingSlash && pos == segments.length && out.push("") : ".." == segment ? ((1 < out.length || 1 == out.length && "" != out[0]) && out.pop(), leadingSlash && pos == segments.length && out.push("")) : (out.push(segment), leadingSlash = !0);
    }
    return out.join("/");
  }
  return path;
};
goog.Uri.decodeOrEmpty_ = function(val, opt_preserveReserved) {
  return val ? opt_preserveReserved ? decodeURI(val.replace(/%25/g, "%2525")) : decodeURIComponent(val) : "";
};
goog.Uri.encodeSpecialChars_ = function(unescapedPart, extra, opt_removeDoubleEncoding) {
  if (goog.isString(unescapedPart)) {
    var encoded = encodeURI(unescapedPart).replace(extra, goog.Uri.encodeChar_);
    opt_removeDoubleEncoding && (encoded = goog.Uri.removeDoubleEncoding_(encoded));
    return encoded;
  }
  return null;
};
goog.Uri.encodeChar_ = function(ch) {
  var n = ch.charCodeAt(0);
  return "%" + (n >> 4 & 15).toString(16) + (n & 15).toString(16);
};
goog.Uri.removeDoubleEncoding_ = function(doubleEncodedString) {
  return doubleEncodedString.replace(/%25([0-9a-fA-F]{2})/g, "%$1");
};
goog.Uri.reDisallowedInSchemeOrUserInfo_ = /[#\/\?@]/g;
goog.Uri.reDisallowedInRelativePath_ = /[\#\?:]/g;
goog.Uri.reDisallowedInAbsolutePath_ = /[\#\?]/g;
goog.Uri.reDisallowedInQuery_ = /[\#\?@]/g;
goog.Uri.reDisallowedInFragment_ = /#/g;
goog.Uri.haveSameDomain = function(uri1String, uri2String) {
  var pieces1 = goog.uri.utils.split(uri1String);
  var pieces2 = goog.uri.utils.split(uri2String);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT];
};
goog.Uri.QueryData = function(opt_query, opt_uri, opt_ignoreCase) {
  this.keyMap_ = null;
  this.count_ = null;
  this.encodedQuery_ = opt_query || null;
  this.ignoreCase_ = !!opt_ignoreCase;
};
goog.Uri.QueryData.prototype.ensureKeyMapInitialized_ = function() {
  if (!this.keyMap_ && (this.keyMap_ = new goog.structs.Map, this.count_ = 0, this.encodedQuery_)) {
    var self = this;
    goog.uri.utils.parseQueryData(this.encodedQuery_, function(name, value) {
      self.add(goog.string.urlDecode(name), value);
    });
  }
};
goog.Uri.QueryData.createFromMap = function(map, opt_uri, opt_ignoreCase) {
  var keys = goog.structs.getKeys(map);
  if ("undefined" == typeof keys) {
    throw Error("Keys are undefined");
  }
  var queryData = new goog.Uri.QueryData(null, null, opt_ignoreCase);
  var values = goog.structs.getValues(map);
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    var value = values[i];
    goog.isArray(value) ? queryData.setValues(key, value) : queryData.add(key, value);
  }
  return queryData;
};
goog.Uri.QueryData.createFromKeysValues = function(keys, values, opt_uri, opt_ignoreCase) {
  if (keys.length != values.length) {
    throw Error("Mismatched lengths for keys/values");
  }
  var queryData = new goog.Uri.QueryData(null, null, opt_ignoreCase);
  for (var i = 0; i < keys.length; i++) {
    queryData.add(keys[i], values[i]);
  }
  return queryData;
};
goog.Uri.QueryData.prototype.getCount = function() {
  this.ensureKeyMapInitialized_();
  return this.count_;
};
goog.Uri.QueryData.prototype.add = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  var values = this.keyMap_.get(key);
  values || this.keyMap_.set(key, values = []);
  values.push(value);
  this.count_ = goog.asserts.assertNumber(this.count_) + 1;
  return this;
};
goog.Uri.QueryData.prototype.remove = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  return this.keyMap_.containsKey(key) ? (this.invalidateCache_(), this.count_ = goog.asserts.assertNumber(this.count_) - this.keyMap_.get(key).length, this.keyMap_.remove(key)) : !1;
};
goog.Uri.QueryData.prototype.clear = function() {
  this.invalidateCache_();
  this.keyMap_ = null;
  this.count_ = 0;
};
goog.Uri.QueryData.prototype.isEmpty = function() {
  this.ensureKeyMapInitialized_();
  return 0 == this.count_;
};
goog.Uri.QueryData.prototype.containsKey = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  return this.keyMap_.containsKey(key);
};
goog.Uri.QueryData.prototype.containsValue = function(value) {
  var vals = this.getValues();
  return goog.array.contains(vals, value);
};
goog.Uri.QueryData.prototype.forEach = function(f, opt_scope) {
  this.ensureKeyMapInitialized_();
  this.keyMap_.forEach(function(values, key) {
    goog.array.forEach(values, function(value) {
      f.call(opt_scope, value, key, this);
    }, this);
  }, this);
};
goog.Uri.QueryData.prototype.getKeys = function() {
  this.ensureKeyMapInitialized_();
  var vals = this.keyMap_.getValues();
  var keys = this.keyMap_.getKeys();
  var rv = [];
  for (var i = 0; i < keys.length; i++) {
    var val = vals[i];
    for (var j = 0; j < val.length; j++) {
      rv.push(keys[i]);
    }
  }
  return rv;
};
goog.Uri.QueryData.prototype.getValues = function(opt_key) {
  this.ensureKeyMapInitialized_();
  var rv = [];
  if (goog.isString(opt_key)) {
    this.containsKey(opt_key) && (rv = goog.array.concat(rv, this.keyMap_.get(this.getKeyName_(opt_key))));
  } else {
    var values = this.keyMap_.getValues();
    for (var i = 0; i < values.length; i++) {
      rv = goog.array.concat(rv, values[i]);
    }
  }
  return rv;
};
goog.Uri.QueryData.prototype.set = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  this.containsKey(key) && (this.count_ = goog.asserts.assertNumber(this.count_) - this.keyMap_.get(key).length);
  this.keyMap_.set(key, [value]);
  this.count_ = goog.asserts.assertNumber(this.count_) + 1;
  return this;
};
goog.Uri.QueryData.prototype.get = function(key, opt_default) {
  var values = key ? this.getValues(key) : [];
  return goog.Uri.preserveParameterTypesCompatibilityFlag ? 0 < values.length ? values[0] : opt_default : 0 < values.length ? String(values[0]) : opt_default;
};
goog.Uri.QueryData.prototype.setValues = function(key, values) {
  this.remove(key);
  0 < values.length && (this.invalidateCache_(), this.keyMap_.set(this.getKeyName_(key), goog.array.clone(values)), this.count_ = goog.asserts.assertNumber(this.count_) + values.length);
};
goog.Uri.QueryData.prototype.toString = function() {
  if (this.encodedQuery_) {
    return this.encodedQuery_;
  }
  if (!this.keyMap_) {
    return "";
  }
  var sb = [];
  var keys = this.keyMap_.getKeys();
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    var encodedKey = goog.string.urlEncode(key);
    var val = this.getValues(key);
    for (var j = 0; j < val.length; j++) {
      var param = encodedKey;
      "" !== val[j] && (param += "=" + goog.string.urlEncode(val[j]));
      sb.push(param);
    }
  }
  return this.encodedQuery_ = sb.join("&");
};
goog.Uri.QueryData.prototype.invalidateCache_ = function() {
  this.encodedQuery_ = null;
};
goog.Uri.QueryData.prototype.clone = function() {
  var rv = new goog.Uri.QueryData;
  rv.encodedQuery_ = this.encodedQuery_;
  this.keyMap_ && (rv.keyMap_ = this.keyMap_.clone(), rv.count_ = this.count_);
  return rv;
};
goog.Uri.QueryData.prototype.getKeyName_ = function(arg) {
  var keyName = String(arg);
  this.ignoreCase_ && (keyName = keyName.toLowerCase());
  return keyName;
};
goog.Uri.QueryData.prototype.setIgnoreCase = function(ignoreCase) {
  var resetKeys = ignoreCase && !this.ignoreCase_;
  resetKeys && (this.ensureKeyMapInitialized_(), this.invalidateCache_(), this.keyMap_.forEach(function(value, key) {
    var lowerCase = key.toLowerCase();
    key != lowerCase && (this.remove(key), this.setValues(lowerCase, value));
  }, this));
  this.ignoreCase_ = ignoreCase;
};
goog.Uri.QueryData.prototype.extend = function(var_args) {
  for (var i = 0; i < arguments.length; i++) {
    var data = arguments[i];
    goog.structs.forEach(data, function(value, key) {
      this.add(key, value);
    }, this);
  }
};
jsaction.dom = {};
jsaction.dom.contains = function(node, otherNode) {
  if (goog.isNull(otherNode)) {
    return !1;
  }
  if ("contains" in node && 1 == otherNode.nodeType) {
    return node.contains(otherNode);
  }
  if ("compareDocumentPosition" in node) {
    return node == otherNode || !!(node.compareDocumentPosition(otherNode) & 16);
  }
  for (; otherNode && node != otherNode;) {
    otherNode = otherNode.parentNode;
  }
  return otherNode == node;
};
jsaction.dom.hasAncestorInNodeList = function(element, nodeList) {
  for (var i = 0; i < nodeList.length; ++i) {
    var member = nodeList[i];
    if (member != element && jsaction.dom.contains(member, element)) {
      return !0;
    }
  }
  return !1;
};
jsaction.event = {};
jsaction.event.addEventListener = function(element, eventType, handler) {
  var capture = !1;
  eventType == jsaction.EventType.MOUSEENTER ? eventType = jsaction.EventType.MOUSEOVER : eventType == jsaction.EventType.MOUSELEAVE && (eventType = jsaction.EventType.MOUSEOUT);
  if (element.addEventListener) {
    if (eventType == jsaction.EventType.FOCUS || eventType == jsaction.EventType.BLUR || eventType == jsaction.EventType.ERROR || eventType == jsaction.EventType.LOAD) {
      capture = !0;
    }
    element.addEventListener(eventType, handler, capture);
  } else {
    element.attachEvent && (eventType == jsaction.EventType.FOCUS ? eventType = jsaction.EventType.FOCUSIN : eventType == jsaction.EventType.BLUR && (eventType = jsaction.EventType.FOCUSOUT), handler = jsaction.event.attachEventAdapter_(element, handler), element.attachEvent("on" + eventType, handler));
  }
  return {eventType:eventType, handler:handler, capture:capture};
};
jsaction.event.attachEventAdapter_ = function(target, handler) {
  return function(e) {
    e || (e = window.event);
    return handler.call(target, e);
  };
};
jsaction.event.removeEventListener = function(element, info) {
  element.removeEventListener ? element.removeEventListener(info.eventType, info.handler, info.capture) : element.detachEvent && element.detachEvent("on" + info.eventType, info.handler);
};
jsaction.event.stopPropagation = function(e) {
  e.stopPropagation ? e.stopPropagation() : e.cancelBubble = !0;
};
jsaction.event.preventDefault = function(e) {
  e.preventDefault ? e.preventDefault() : e.returnValue = !1;
};
jsaction.event.getTarget = function(e) {
  var el = e.target || e.srcElement;
  !el.getAttribute && el.parentNode && (el = el.parentNode);
  return el;
};
jsaction.event.isMac_ = "undefined" != typeof navigator && /Macintosh/.test(navigator.userAgent);
jsaction.event.isMiddleClick_ = function(e) {
  return 2 == e.which || null == e.which && 4 == e.button || e.type == jsaction.EventType.AUXCLICK;
};
jsaction.event.isModifiedClickEvent = function(e) {
  return jsaction.event.isMac_ && e.metaKey || !jsaction.event.isMac_ && e.ctrlKey || jsaction.event.isMiddleClick_(e) || e.shiftKey;
};
jsaction.event.isWebKit = "undefined" != typeof navigator && !/Opera/.test(navigator.userAgent) && /WebKit/.test(navigator.userAgent);
jsaction.event.isSafari = "undefined" != typeof navigator && /WebKit/.test(navigator.userAgent) && /Safari/.test(navigator.userAgent);
jsaction.event.isIe = "undefined" != typeof navigator && (/MSIE/.test(navigator.userAgent) || /Trident/.test(navigator.userAgent));
jsaction.event.isGecko = "undefined" != typeof navigator && !/Opera|WebKit/.test(navigator.userAgent) && /Gecko/.test(navigator.product);
jsaction.event.isValidActionKeyTarget_ = function(el) {
  if (!("getAttribute" in el)) {
    return !1;
  }
  var tagName = (el.getAttribute("role") || el.tagName).toUpperCase();
  return !jsaction.event.isTextControl_(el) && ("COMBOBOX" != tagName || "INPUT" != tagName) && !el.isContentEditable;
};
jsaction.event.hasModifierKey_ = function(e) {
  return e.ctrlKey || e.shiftKey || e.altKey || e.metaKey;
};
jsaction.event.shouldCallPreventDefaultOnNativeHtmlControl = function(e) {
  var el = jsaction.event.getTarget(e);
  var tagName = (el.getAttribute("role") || el.tagName).toUpperCase();
  return jsaction.event.isNativeHTMLControl(el) && "A" != tagName && !jsaction.event.processSpace_(el) && !jsaction.event.isTextControl_(el) || "BUTTON" == tagName;
};
jsaction.event.isActionKeyEvent = function(e) {
  var key = e.which || e.keyCode || e.key;
  jsaction.event.isWebKit && key == jsaction.KeyCodes.MAC_ENTER && (key = jsaction.KeyCodes.ENTER);
  if (key != jsaction.KeyCodes.ENTER && key != jsaction.KeyCodes.SPACE) {
    return !1;
  }
  var el = jsaction.event.getTarget(e);
  var type = (el.getAttribute("role") || el.type || el.tagName).toUpperCase();
  if (e.type != jsaction.EventType.KEYDOWN || !jsaction.event.isValidActionKeyTarget_(el) || jsaction.event.hasModifierKey_(e) || jsaction.event.processSpace_(el) && key == jsaction.KeyCodes.SPACE || !jsaction.event.isFocusable_(el)) {
    return !1;
  }
  var hasType = "INPUT" != el.tagName.toUpperCase() || el.type;
  var isSpecificTriggerKey = 0 == jsaction.event.IDENTIFIER_TO_KEY_TRIGGER_MAPPING[type] % key;
  var isDefaultTriggerKey = !(type in jsaction.event.IDENTIFIER_TO_KEY_TRIGGER_MAPPING) && key == jsaction.KeyCodes.ENTER;
  return (isSpecificTriggerKey || isDefaultTriggerKey) && !!hasType;
};
jsaction.event.isFocusable_ = function(el) {
  return (el.tagName in jsaction.event.NATIVELY_FOCUSABLE_ELEMENTS_ || jsaction.event.hasSpecifiedTabIndex_(el)) && !el.disabled;
};
jsaction.event.hasSpecifiedTabIndex_ = function(element) {
  var attrNode = element.getAttributeNode("tabindex");
  return goog.isDefAndNotNull(attrNode) && attrNode.specified;
};
jsaction.event.NATIVELY_FOCUSABLE_ELEMENTS_ = {A:1, INPUT:1, TEXTAREA:1, SELECT:1, BUTTON:1};
jsaction.event.isSpaceKeyEvent = function(e) {
  var key = e.which || e.keyCode || e.key;
  var el = jsaction.event.getTarget(e);
  var elementName = (el.type || el.tagName).toUpperCase();
  return key == jsaction.KeyCodes.SPACE && "CHECKBOX" != elementName;
};
jsaction.event.isMouseSpecialEvent = function(e, type, element) {
  var related = e.relatedTarget;
  return (e.type == jsaction.EventType.MOUSEOVER && type == jsaction.EventType.MOUSEENTER || e.type == jsaction.EventType.MOUSEOUT && type == jsaction.EventType.MOUSELEAVE) && (!related || related !== element && !jsaction.dom.contains(element, related));
};
jsaction.event.createMouseSpecialEvent = function(e, target) {
  var copy = {};
  for (var i in e) {
    "function" !== typeof e[i] && "srcElement" !== i && "target" !== i && (copy[i] = e[i]);
  }
  copy.type = e.type == jsaction.EventType.MOUSEOVER ? jsaction.EventType.MOUSEENTER : jsaction.EventType.MOUSELEAVE;
  copy.target = copy.srcElement = target;
  copy.bubbles = !1;
  return copy;
};
jsaction.event.getTouchData = function(event) {
  var touch = event.changedTouches && event.changedTouches[0] || event.touches && event.touches[0];
  return touch ? {clientX:touch.clientX, clientY:touch.clientY, screenX:touch.screenX, screenY:touch.screenY} : null;
};
jsaction.event.recreateTouchEventAsClick = function(event) {
  var click = {};
  click.originalEventType = event.type;
  click.type = jsaction.EventType.CLICK;
  for (var p in event) {
    var v = event[p];
    "type" == p || "srcElement" == p || goog.isFunction(v) || (click[p] = v);
  }
  click.timeStamp = goog.now();
  click.defaultPrevented = !1;
  click.preventDefault = jsaction.event.syntheticPreventDefault_;
  click._propagationStopped = !1;
  click.stopPropagation = jsaction.event.syntheticStopPropagation_;
  var touch = jsaction.event.getTouchData(event);
  touch && (click.clientX = touch.clientX, click.clientY = touch.clientY, click.screenX = touch.screenX, click.screenY = touch.screenY);
  return click;
};
jsaction.event.isMouseEventsPrevented = function(event) {
  return !!event._mouseEventsPrevented;
};
jsaction.event.preventMouseEvents = function(event) {
  event._mouseEventsPrevented = !0;
};
jsaction.event.syntheticPreventMouseEvents_ = function() {
  jsaction.event.preventMouseEvents(this);
};
jsaction.event.addPreventMouseEventsSupport = function(event) {
  event._preventMouseEvents = jsaction.event.syntheticPreventMouseEvents_;
};
jsaction.event.syntheticPreventDefault_ = function() {
  this.defaultPrevented = !0;
};
jsaction.event.syntheticStopPropagation_ = function() {
  this._propagationStopped = !0;
};
jsaction.event.maybeCopyEvent = function(e) {
  var doc = goog.global.document;
  if (doc && !doc.createEvent && doc.createEventObject) {
    try {
      return doc.createEventObject(e);
    } catch (ignore) {
      return e;
    }
  } else {
    return e;
  }
};
jsaction.event.IDENTIFIER_TO_KEY_TRIGGER_MAPPING = {A:jsaction.KeyCodes.ENTER, BUTTON:0, CHECKBOX:jsaction.KeyCodes.SPACE, COMBOBOX:jsaction.KeyCodes.ENTER, GRIDCELL:jsaction.KeyCodes.ENTER, LINK:jsaction.KeyCodes.ENTER, LISTBOX:jsaction.KeyCodes.ENTER, MENU:0, MENUBAR:0, MENUITEM:0, MENUITEMCHECKBOX:0, MENUITEMRADIO:0, OPTION:0, RADIO:jsaction.KeyCodes.SPACE, RADIOGROUP:jsaction.KeyCodes.SPACE, RESET:0, SUBMIT:0, TAB:0, TREE:jsaction.KeyCodes.ENTER, TREEITEM:jsaction.KeyCodes.ENTER};
jsaction.event.processSpace_ = function(element) {
  var type = (element.getAttribute("type") || element.tagName).toUpperCase();
  return type in jsaction.event.PROCESS_SPACE_;
};
jsaction.event.isTextControl_ = function(el) {
  var type = (el.getAttribute("type") || el.tagName).toUpperCase();
  return type in jsaction.event.TEXT_CONTROLS_;
};
jsaction.event.isNativeHTMLControl = function(el) {
  return el.tagName.toUpperCase() in jsaction.event.NATIVE_HTML_CONTROLS_;
};
jsaction.event.PROCESS_SPACE_ = {CHECKBOX:!0, OPTION:!0, RADIO:!0};
jsaction.event.TEXT_CONTROLS_ = {COLOR:!0, DATE:!0, DATETIME:!0, "DATETIME-LOCAL":!0, EMAIL:!0, MONTH:!0, NUMBER:!0, PASSWORD:!0, RANGE:!0, SEARCH:!0, TEL:!0, TEXT:!0, TEXTAREA:!0, TIME:!0, URL:!0, WEEK:!0};
jsaction.event.NATIVE_HTML_CONTROLS_ = {A:!0, AREA:!0, BUTTON:!0, DIALOG:!0, IMG:!0, INPUT:!0, LINK:!0, MENU:!0, OPTGROUP:!0, OPTION:!0, PROGRESS:!0, SELECT:!0, TEXTAREA:!0};
jsaction.ActionFlow = function(flowType, opt_node, opt_event, opt_startTime, opt_eventType, opt_target) {
  goog.events.EventTarget.call(this);
  this.flowType_ = flowType.replace(jsaction.ActionFlow.FLOWNAME_CLEANUP_RE_, jsaction.ActionFlow.FLOWNAME_SAFE_CHAR_);
  this.node_ = opt_node || null;
  this.event_ = opt_event ? jsaction.event.maybeCopyEvent(opt_event) : null;
  this.eventType_ = opt_eventType || null;
  this.target_ = opt_target || null;
  !this.target_ && opt_event && opt_event.target && goog.dom.isElement(opt_event.target) && (this.target_ = opt_event.target);
  this.timers_ = [];
  this.ticks_ = {};
  this.start_ = opt_startTime || goog.now();
  this.maxTickTime_ = this.start_;
  this.branches_ = {};
  this.branches_[jsaction.Branch.MAIN] = 1;
  this.duplicateTicks_ = new goog.structs.Set;
  this.reportSent_ = !1;
  this.actionData_ = {};
  this.extraData_ = {};
  this.abandoned_ = !1;
  jsaction.ActionFlow.ENABLE_GENERIC_EVENT_TRACKING && opt_event && opt_node && "click" == opt_event.type && this.action(opt_node);
  jsaction.ActionFlow.registerInstance_(this);
  this.id_ = ++jsaction.ActionFlow.nextId_;
  var event = new jsaction.ActionFlow.Event(jsaction.ActionFlow.EventType.CREATED, this);
  null != jsaction.ActionFlow.report && jsaction.ActionFlow.report.dispatchEvent(event);
};
goog.inherits(jsaction.ActionFlow, goog.events.EventTarget);
jsaction.ActionFlow.ENABLE_GENERIC_EVENT_TRACKING = !0;
jsaction.ActionFlow.instances = [];
jsaction.ActionFlow.registerInstance_ = function(instance) {
  jsaction.ActionFlow.instances.push(instance);
};
jsaction.ActionFlow.removeInstance_ = function(instance) {
  goog.array.remove(jsaction.ActionFlow.instances, instance);
};
jsaction.ActionFlow.report = new goog.events.EventTarget;
jsaction.ActionFlow.FLOWNAME_CLEANUP_RE_ = /[~.,?&-]/g;
jsaction.ActionFlow.FLOWNAME_SAFE_CHAR_ = "_";
jsaction.ActionFlow.TEMPLATE_LAST_OUTPUT_MARKER_ = "*";
jsaction.ActionFlow.Error = {ACTION:"action", BRANCH:"branch", DONE:"done", EXTRA_DATA:"extradata", IMPRESSION:"impression", TICK:"tick", HUNG:"hung"};
jsaction.ActionFlow.nextId_ = 0;
goog.DEBUG && (jsaction.ActionFlow.LOG_FOR_FLOW_TYPES = [], jsaction.ActionFlow.shouldLog = function(flowType) {
  for (var i = 0; i < jsaction.ActionFlow.LOG_FOR_FLOW_TYPES.length; i++) {
    var flow = jsaction.ActionFlow.LOG_FOR_FLOW_TYPES[i];
    if ("*" == flow || 0 == flowType.indexOf(flow)) {
      return !0;
    }
  }
  return !1;
}, jsaction.ActionFlow.prototype.log_ = function(msg) {
  jsaction.ActionFlow.shouldLog(this.flowType_) && window.console && window.console.log(this.flowType_ + "(" + this.id_ + "): " + msg);
});
jsaction.ActionFlow.prototype.id = function() {
  return this.id_;
};
jsaction.ActionFlow.prototype.tick = function(name, opt_opts) {
  this.reportSent_ && this.error_(jsaction.ActionFlow.Error.TICK, void 0, name);
  opt_opts = opt_opts || {};
  goog.DEBUG && this.reportSent_ && this.log_(this.flowType_ + ": late tick " + name);
  name in this.ticks_ && this.duplicateTicks_.add(name);
  var time = opt_opts.time || goog.now();
  !opt_opts.doNotReportToServer && !opt_opts.doNotIncludeInMaxTime && time > this.maxTickTime_ && (this.maxTickTime_ = time);
  var t = time - this.start_;
  for (var i = this.timers_.length; 0 < i && this.timers_[i - 1][1] > t;) {
    i--;
  }
  goog.array.insertAt(this.timers_, [name, t, opt_opts.doNotReportToServer], i);
  this.ticks_[name] = time;
};
jsaction.ActionFlow.prototype.done = function(branch, opt_tick, opt_tickOpts) {
  this.reportSent_ || !this.branches_[branch] ? this.error_(jsaction.ActionFlow.Error.DONE, branch, opt_tick) : (opt_tick && this.tick(opt_tick, opt_tickOpts), this.branches_[branch]--, 0 == this.branches_[branch] && delete this.branches_[branch], goog.DEBUG && this.log_(" < done(" + branch + ":" + opt_tick + ")"), goog.object.isEmpty(this.branches_) && (goog.DEBUG && this.log_("    = report time " + branch + ":"), this.report_() && (this.reportSent_ = !0, this.finish_())));
};
jsaction.ActionFlow.prototype.finish_ = function() {
  jsaction.ActionFlow.removeInstance_(this);
  this.node_ = null;
  this.event_ = null;
  this.dispose();
};
jsaction.ActionFlow.prototype.branch = function(branch, opt_tick, opt_tickOpts) {
  this.reportSent_ && this.error_(jsaction.ActionFlow.Error.BRANCH, branch, opt_tick);
  goog.DEBUG && this.log_("> branch(" + branch + ":" + opt_tick + ")");
  opt_tick && this.tick(opt_tick, opt_tickOpts);
  this.branches_[branch] ? this.branches_[branch]++ : this.branches_[branch] = 1;
};
jsaction.ActionFlow.prototype.report_ = function() {
  if (!jsaction.ActionFlow.report) {
    return !0;
  }
  if (this.abandoned_) {
    var event = new jsaction.ActionFlow.Event(jsaction.ActionFlow.EventType.ABANDONED, this);
    this.dispatchEvent(event);
    jsaction.ActionFlow.report.dispatchEvent(event);
    return !0;
  }
  0 < this.duplicateTicks_.getCount() && (this.extraData_[jsaction.Name.DUP] = this.duplicateTicks_.getValues().join("|"));
  event = new jsaction.ActionFlow.Event(jsaction.ActionFlow.EventType.BEFOREDONE, this);
  if (!this.dispatchEvent(event) || !jsaction.ActionFlow.report.dispatchEvent(event)) {
    return !1;
  }
  var cad = jsaction.ActionFlow.foldCadObject_(this.extraData_);
  cad && (this.actionData_[jsaction.UrlParam.CLICK_ADDITIONAL_DATA] = cad);
  event.type = jsaction.ActionFlow.EventType.DONE;
  return jsaction.ActionFlow.report.dispatchEvent(event);
};
jsaction.ActionFlow.prototype.error_ = function(error, opt_branch, opt_tick) {
  if (jsaction.ActionFlow.report) {
    var event = new jsaction.ActionFlow.Event(jsaction.ActionFlow.EventType.ERROR, this);
    event.error = error;
    event.branch = opt_branch;
    event.tick = opt_tick;
    event.finished = this.reportSent_;
    jsaction.ActionFlow.report.dispatchEvent(event);
  }
};
jsaction.ActionFlow.foldCadObject_ = function(object) {
  var cadArray = [];
  goog.object.forEach(object, function(value, key) {
    var escKey = encodeURIComponent(key);
    var escValue = encodeURIComponent(value).replace(/%7C/g, "|");
    cadArray.push(escKey + jsaction.Char.CAD_KEY_VALUE_SEPARATOR + escValue);
  });
  return cadArray.join(jsaction.Char.CAD_SEPARATOR);
};
jsaction.ActionFlow.prototype.action = function(target) {
  this.reportSent_ && this.error_(jsaction.ActionFlow.Error.ACTION);
  var ois = [];
  var jsinstance = null;
  var jstrack = null;
  var ved = null;
  var vet = null;
  jsaction.ActionFlow.visitDomNodesUpwards_(target, function(element) {
    var oi = jsaction.ActionFlow.getOi_(element);
    oi && (ois.unshift(oi), jsinstance || (jsinstance = element.getAttribute(jsaction.Attribute.JSINSTANCE)));
    ved || jstrack && "1" != jstrack || (ved = element.getAttribute(jsaction.Attribute.VED));
    vet || (vet = element.getAttribute(jsaction.Attribute.VET));
    jstrack || (jstrack = element.getAttribute(jsaction.Attribute.JSTRACK));
  });
  vet && (this.actionData_[jsaction.UrlParam.VISUAL_ELEMENT_TYPE] = vet);
  jstrack && (this.actionData_[jsaction.UrlParam.CLICK_TYPE] = this.flowType_, 0 < ois.length && this.addExtraData(jsaction.Attribute.OI, ois.join(jsaction.Char.OI_SEPARATOR)), jsinstance && (jsinstance = jsinstance.charAt(0) == jsaction.ActionFlow.TEMPLATE_LAST_OUTPUT_MARKER_ ? parseInt(jsinstance.substr(1), 10) : parseInt(jsinstance, 10), this.actionData_[jsaction.UrlParam.CLICK_DATA] = jsinstance), "1" != jstrack && (this.actionData_[jsaction.UrlParam.EVENT_ID] = jstrack), ved && (this.actionData_[jsaction.UrlParam.VISUAL_ELEMENT_CLICK] = 
  ved));
};
jsaction.ActionFlow.prototype.addExtraData = function(key, value) {
  this.reportSent_ && this.error_(jsaction.ActionFlow.Error.EXTRA_DATA);
  this.extraData_[key] = value.toString().replace(/[:;,\s]/g, "_");
};
jsaction.ActionFlow.visitDomNodesUpwards_ = function(start, visitFn) {
  for (var node = start; node && node.nodeType == goog.dom.NodeType.ELEMENT; node = node.parentNode) {
    visitFn(node);
  }
};
jsaction.ActionFlow.visitDomNodesDownwards_ = function(start, enterFn, leaveFn) {
  if (goog.dom.isElement(start) && "none" != goog.style.getStyle(start, "display") && "hidden" != goog.style.getStyle(start, "visibility")) {
    var postCallbackNeeded = enterFn(start);
    for (var node = start.firstChild; node; node = node.nextSibling) {
      jsaction.ActionFlow.visitDomNodesDownwards_(node, enterFn, leaveFn);
    }
    postCallbackNeeded && leaveFn();
  }
};
jsaction.ActionFlow.getOi_ = function(node) {
  !node[jsaction.Property.OI] && node.getAttribute && (node[jsaction.Property.OI] = node.getAttribute(jsaction.Attribute.OI));
  return node[jsaction.Property.OI];
};
jsaction.ActionFlow.tick = function(flow, tick, opt_time, opt_opts) {
  if (flow) {
    var opts = opt_opts || {};
    opts.time = opts.time || opt_time;
    opts.doNotReportToServer = !!opts.doNotReportToServer;
    opts.doNotIncludeInMaxTime = !!opts.doNotIncludeInMaxTime;
    flow.tick(tick, opts);
  }
};
jsaction.ActionFlow.branch = function(flow, branch, opt_tick, opt_tickOpts) {
  flow && flow.branch(branch, opt_tick, opt_tickOpts);
};
jsaction.ActionFlow.done = function(flow, branch, opt_tick, opt_tickOpts) {
  flow && flow.done(branch, opt_tick, opt_tickOpts);
};
jsaction.ActionFlow.merge = function(flow, timers) {
  timers && goog.object.forEach(timers, function(value, name) {
    name != jsaction.Name.START && flow.tick(name, {time:value});
  });
};
jsaction.ActionFlow.addExtraData = function(flow, key, value) {
  flow && flow.addExtraData(key, value);
};
jsaction.ActionFlow.prototype.callback = function(fn, branchName, opt_branchTick, opt_doneTick) {
  this.branch(branchName, opt_branchTick);
  var flow = this;
  return function() {
    try {
      var ret = fn.apply(this, arguments);
    } finally {
      flow.done(branchName, opt_doneTick);
    }
    return ret;
  };
};
jsaction.ActionFlow.prototype.node = function() {
  return this.node_;
};
jsaction.ActionFlow.prototype.event = function() {
  return this.event_;
};
jsaction.ActionFlow.prototype.eventType = function() {
  return this.eventType_;
};
jsaction.ActionFlow.prototype.target = function() {
  return this.target_;
};
jsaction.ActionFlow.prototype.value = function(key) {
  var node = this.node_;
  return node ? key in node ? node[key] : node.getAttribute ? node.getAttribute(key) : void 0 : void 0;
};
jsaction.ActionFlow.Event = function(type, flow) {
  goog.events.Event.call(this, type, flow);
};
goog.inherits(jsaction.ActionFlow.Event, goog.events.Event);
jsaction.ActionFlow.EventType = {CREATED:"created", BEFOREDONE:"beforedone", DONE:"done", ABANDONED:"abandoned", ERROR:"error"};
jsaction.Cache = {};
jsaction.Cache.parseCache_ = {};
jsaction.Cache.get = function(element) {
  return element[jsaction.Property.JSACTION];
};
jsaction.Cache.set = function(element, actionMap) {
  element[jsaction.Property.JSACTION] = actionMap;
};
jsaction.Cache.getParsed = function(text) {
  return jsaction.Cache.parseCache_[text];
};
jsaction.Cache.setParsed = function(text, parsed) {
  jsaction.Cache.parseCache_[text] = parsed;
};
jsaction.Cache.clear = function(element) {
  jsaction.Property.JSACTION in element && delete element[jsaction.Property.JSACTION];
};
jsaction.Cache.getNamespace = function(element) {
  return element[jsaction.Property.JSNAMESPACE];
};
jsaction.Cache.setNamespace = function(element, jsnamespace) {
  element[jsaction.Property.JSNAMESPACE] = jsnamespace;
};
jsaction.Cache.clearNamespace = function(element) {
  jsaction.Property.JSNAMESPACE in element && delete element[jsaction.Property.JSNAMESPACE];
};
var proto = {html:{}};
proto.html.SafeHtmlProto = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.html.SafeHtmlProto, jspb.Message);
jspb.Message.GENERATE_TO_OBJECT && (proto.html.SafeHtmlProto.prototype.toObject = function(opt_includeInstance) {
  return proto.html.SafeHtmlProto.toObject(opt_includeInstance, this);
}, proto.html.SafeHtmlProto.toObject = function(includeInstance, msg) {
  var obj = {privateDoNotAccessOrElseSafeHtmlWrappedValue:jspb.Message.getField(msg, 2)};
  includeInstance && (obj.$jspbMessageInstance = msg);
  return obj;
});
proto.html.SafeHtmlProto.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.html.SafeHtmlProto;
  return proto.html.SafeHtmlProto.deserializeBinaryFromReader(msg, reader);
};
proto.html.SafeHtmlProto.deserializeBinaryFromReader = function(msg, reader) {
  for (; reader.nextField() && !reader.isEndGroup();) {
    var field = reader.nextField_;
    switch(field) {
      case 2:
        var value = reader.readString();
        msg.setPrivateDoNotAccessOrElseSafeHtmlWrappedValue(value);
        break;
      default:
        reader.skipField();
    }
  }
  return msg;
};
proto.html.SafeHtmlProto.serializeBinaryToWriter = function(message, writer) {
  var f = jspb.Message.getField(message, 2);
  null != f && writer.writeString(2, f);
};
proto.html.SafeHtmlProto.prototype.getPrivateDoNotAccessOrElseSafeHtmlWrappedValue = function() {
  return jspb.Message.getField(this, 2);
};
proto.html.SafeHtmlProto.prototype.setPrivateDoNotAccessOrElseSafeHtmlWrappedValue = function(value) {
  jspb.Message.setField(this, 2, value);
};
proto.html.SafeHtmlProto.deserialize = function(data) {
  return jspb.Message.deserialize(proto.html.SafeHtmlProto, data);
};
proto.html.SpliceableSafeHtmlProto = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.html.SpliceableSafeHtmlProto.repeatedFields_, null);
};
goog.inherits(proto.html.SpliceableSafeHtmlProto, jspb.Message);
proto.html.SpliceableSafeHtmlProto.repeatedFields_ = [1];
jspb.Message.GENERATE_TO_OBJECT && (proto.html.SpliceableSafeHtmlProto.prototype.toObject = function(opt_includeInstance) {
  return proto.html.SpliceableSafeHtmlProto.toObject(opt_includeInstance, this);
}, proto.html.SpliceableSafeHtmlProto.toObject = function(includeInstance, msg) {
  var obj = {segmentList:jspb.Message.toObjectList(msg.getSegmentList(), proto.html.SpliceableSafeHtmlProto.Segment.toObject, includeInstance)};
  includeInstance && (obj.$jspbMessageInstance = msg);
  return obj;
});
proto.html.SpliceableSafeHtmlProto.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.html.SpliceableSafeHtmlProto;
  return proto.html.SpliceableSafeHtmlProto.deserializeBinaryFromReader(msg, reader);
};
proto.html.SpliceableSafeHtmlProto.deserializeBinaryFromReader = function(msg, reader) {
  for (; reader.nextField() && !reader.isEndGroup();) {
    var field = reader.nextField_;
    switch(field) {
      case 1:
        var value = new proto.html.SpliceableSafeHtmlProto.Segment;
        reader.readMessage(value, proto.html.SpliceableSafeHtmlProto.Segment.deserializeBinaryFromReader);
        msg.addSegment(value);
        break;
      default:
        reader.skipField();
    }
  }
  return msg;
};
proto.html.SpliceableSafeHtmlProto.serializeBinaryToWriter = function(message, writer) {
  var f = message.getSegmentList();
  0 < f.length && writer.writeRepeatedMessage(1, f, proto.html.SpliceableSafeHtmlProto.Segment.serializeBinaryToWriter);
};
proto.html.SpliceableSafeHtmlProto.Segment = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.html.SpliceableSafeHtmlProto.Segment.oneofGroups_);
};
goog.inherits(proto.html.SpliceableSafeHtmlProto.Segment, jspb.Message);
proto.html.SpliceableSafeHtmlProto.Segment.oneofGroups_ = [[2, 1]];
proto.html.SpliceableSafeHtmlProto.Segment.ValueCase = {VALUE_NOT_SET:0, SAFE_HTML:2, PLACEHOLDER_LABEL:1};
jspb.Message.GENERATE_TO_OBJECT && (proto.html.SpliceableSafeHtmlProto.Segment.prototype.toObject = function(opt_includeInstance) {
  return proto.html.SpliceableSafeHtmlProto.Segment.toObject(opt_includeInstance, this);
}, proto.html.SpliceableSafeHtmlProto.Segment.toObject = function(includeInstance, msg) {
  var f;
  var obj = {safeHtml:(f = msg.getSafeHtml()) && proto.html.SafeHtmlProto.toObject(includeInstance, f), placeholderLabel:jspb.Message.getField(msg, 1)};
  includeInstance && (obj.$jspbMessageInstance = msg);
  return obj;
});
proto.html.SpliceableSafeHtmlProto.Segment.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.html.SpliceableSafeHtmlProto.Segment;
  return proto.html.SpliceableSafeHtmlProto.Segment.deserializeBinaryFromReader(msg, reader);
};
proto.html.SpliceableSafeHtmlProto.Segment.deserializeBinaryFromReader = function(msg, reader) {
  for (; reader.nextField() && !reader.isEndGroup();) {
    var field = reader.nextField_;
    switch(field) {
      case 2:
        var value = new proto.html.SafeHtmlProto;
        reader.readMessage(value, proto.html.SafeHtmlProto.deserializeBinaryFromReader);
        msg.setSafeHtml(value);
        break;
      case 1:
        value = reader.readString();
        msg.setPlaceholderLabel(value);
        break;
      default:
        reader.skipField();
    }
  }
  return msg;
};
proto.html.SpliceableSafeHtmlProto.Segment.serializeBinaryToWriter = function(message, writer) {
  var f = message.getSafeHtml();
  null != f && writer.writeMessage(2, f, proto.html.SafeHtmlProto.serializeBinaryToWriter);
  f = jspb.Message.getField(message, 1);
  null != f && writer.writeString(1, f);
};
proto.html.SpliceableSafeHtmlProto.Segment.prototype.getSafeHtml = function() {
  return jspb.Message.getWrapperField(this, proto.html.SafeHtmlProto, 2);
};
proto.html.SpliceableSafeHtmlProto.Segment.prototype.setSafeHtml = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.html.SpliceableSafeHtmlProto.Segment.oneofGroups_[0], value);
};
proto.html.SpliceableSafeHtmlProto.Segment.prototype.setPlaceholderLabel = function(value) {
  jspb.Message.setOneofField(this, 1, proto.html.SpliceableSafeHtmlProto.Segment.oneofGroups_[0], value);
};
proto.html.SpliceableSafeHtmlProto.Segment.deserialize = function(data) {
  return jspb.Message.deserialize(proto.html.SpliceableSafeHtmlProto.Segment, data);
};
proto.html.SpliceableSafeHtmlProto.prototype.getSegmentList = function() {
  return jspb.Message.getRepeatedWrapperField(this, proto.html.SpliceableSafeHtmlProto.Segment, 1);
};
proto.html.SpliceableSafeHtmlProto.prototype.addSegment = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.html.SpliceableSafeHtmlProto.Segment, opt_index);
};
proto.html.SpliceableSafeHtmlProto.deserialize = function(data) {
  return jspb.Message.deserialize(proto.html.SpliceableSafeHtmlProto, data);
};
proto.html.SafeUrlProto = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.html.SafeUrlProto, jspb.Message);
jspb.Message.GENERATE_TO_OBJECT && (proto.html.SafeUrlProto.prototype.toObject = function(opt_includeInstance) {
  return proto.html.SafeUrlProto.toObject(opt_includeInstance, this);
}, proto.html.SafeUrlProto.toObject = function(includeInstance, msg) {
  var obj = {privateDoNotAccessOrElseSafeUrlWrappedValue:jspb.Message.getField(msg, 3)};
  includeInstance && (obj.$jspbMessageInstance = msg);
  return obj;
});
proto.html.SafeUrlProto.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.html.SafeUrlProto;
  return proto.html.SafeUrlProto.deserializeBinaryFromReader(msg, reader);
};
proto.html.SafeUrlProto.deserializeBinaryFromReader = function(msg, reader) {
  for (; reader.nextField() && !reader.isEndGroup();) {
    var field = reader.nextField_;
    switch(field) {
      case 3:
        var value = reader.readString();
        msg.setPrivateDoNotAccessOrElseSafeUrlWrappedValue(value);
        break;
      default:
        reader.skipField();
    }
  }
  return msg;
};
proto.html.SafeUrlProto.serializeBinaryToWriter = function(message, writer) {
  var f = jspb.Message.getField(message, 3);
  null != f && writer.writeString(3, f);
};
proto.html.SafeUrlProto.prototype.getPrivateDoNotAccessOrElseSafeUrlWrappedValue = function() {
  return jspb.Message.getField(this, 3);
};
proto.html.SafeUrlProto.prototype.setPrivateDoNotAccessOrElseSafeUrlWrappedValue = function(value) {
  jspb.Message.setField(this, 3, value);
};
proto.html.SafeUrlProto.deserialize = function(data) {
  return jspb.Message.deserialize(proto.html.SafeUrlProto, data);
};
proto.html.TrustedResourceUrlProto = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.html.TrustedResourceUrlProto, jspb.Message);
jspb.Message.GENERATE_TO_OBJECT && (proto.html.TrustedResourceUrlProto.prototype.toObject = function(opt_includeInstance) {
  return proto.html.TrustedResourceUrlProto.toObject(opt_includeInstance, this);
}, proto.html.TrustedResourceUrlProto.toObject = function(includeInstance, msg) {
  var obj = {privateDoNotAccessOrElseTrustedResourceUrlWrappedValue:jspb.Message.getField(msg, 4)};
  includeInstance && (obj.$jspbMessageInstance = msg);
  return obj;
});
proto.html.TrustedResourceUrlProto.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.html.TrustedResourceUrlProto;
  return proto.html.TrustedResourceUrlProto.deserializeBinaryFromReader(msg, reader);
};
proto.html.TrustedResourceUrlProto.deserializeBinaryFromReader = function(msg, reader) {
  for (; reader.nextField() && !reader.isEndGroup();) {
    var field = reader.nextField_;
    switch(field) {
      case 4:
        var value = reader.readString();
        msg.setPrivateDoNotAccessOrElseTrustedResourceUrlWrappedValue(value);
        break;
      default:
        reader.skipField();
    }
  }
  return msg;
};
proto.html.TrustedResourceUrlProto.serializeBinaryToWriter = function(message, writer) {
  var f = jspb.Message.getField(message, 4);
  null != f && writer.writeString(4, f);
};
proto.html.TrustedResourceUrlProto.prototype.getPrivateDoNotAccessOrElseTrustedResourceUrlWrappedValue = function() {
  return jspb.Message.getField(this, 4);
};
proto.html.TrustedResourceUrlProto.prototype.setPrivateDoNotAccessOrElseTrustedResourceUrlWrappedValue = function(value) {
  jspb.Message.setField(this, 4, value);
};
proto.html.TrustedResourceUrlProto.deserialize = function(data) {
  return jspb.Message.deserialize(proto.html.TrustedResourceUrlProto, data);
};
proto.html.SafeStyleProto = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.html.SafeStyleProto, jspb.Message);
jspb.Message.GENERATE_TO_OBJECT && (proto.html.SafeStyleProto.prototype.toObject = function(opt_includeInstance) {
  return proto.html.SafeStyleProto.toObject(opt_includeInstance, this);
}, proto.html.SafeStyleProto.toObject = function(includeInstance, msg) {
  var obj = {privateDoNotAccessOrElseSafeStyleWrappedValue:jspb.Message.getField(msg, 5)};
  includeInstance && (obj.$jspbMessageInstance = msg);
  return obj;
});
proto.html.SafeStyleProto.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.html.SafeStyleProto;
  return proto.html.SafeStyleProto.deserializeBinaryFromReader(msg, reader);
};
proto.html.SafeStyleProto.deserializeBinaryFromReader = function(msg, reader) {
  for (; reader.nextField() && !reader.isEndGroup();) {
    var field = reader.nextField_;
    switch(field) {
      case 5:
        var value = reader.readString();
        msg.setPrivateDoNotAccessOrElseSafeStyleWrappedValue(value);
        break;
      default:
        reader.skipField();
    }
  }
  return msg;
};
proto.html.SafeStyleProto.serializeBinaryToWriter = function(message, writer) {
  var f = jspb.Message.getField(message, 5);
  null != f && writer.writeString(5, f);
};
proto.html.SafeStyleProto.prototype.getPrivateDoNotAccessOrElseSafeStyleWrappedValue = function() {
  return jspb.Message.getField(this, 5);
};
proto.html.SafeStyleProto.prototype.setPrivateDoNotAccessOrElseSafeStyleWrappedValue = function(value) {
  jspb.Message.setField(this, 5, value);
};
proto.html.SafeStyleProto.deserialize = function(data) {
  return jspb.Message.deserialize(proto.html.SafeStyleProto, data);
};
proto.html.SafeScriptProto = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.html.SafeScriptProto, jspb.Message);
jspb.Message.GENERATE_TO_OBJECT && (proto.html.SafeScriptProto.prototype.toObject = function(opt_includeInstance) {
  return proto.html.SafeScriptProto.toObject(opt_includeInstance, this);
}, proto.html.SafeScriptProto.toObject = function(includeInstance, msg) {
  var obj = {privateDoNotAccessOrElseSafeScriptWrappedValue:jspb.Message.getField(msg, 6)};
  includeInstance && (obj.$jspbMessageInstance = msg);
  return obj;
});
proto.html.SafeScriptProto.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.html.SafeScriptProto;
  return proto.html.SafeScriptProto.deserializeBinaryFromReader(msg, reader);
};
proto.html.SafeScriptProto.deserializeBinaryFromReader = function(msg, reader) {
  for (; reader.nextField() && !reader.isEndGroup();) {
    var field = reader.nextField_;
    switch(field) {
      case 6:
        var value = reader.readString();
        msg.setPrivateDoNotAccessOrElseSafeScriptWrappedValue(value);
        break;
      default:
        reader.skipField();
    }
  }
  return msg;
};
proto.html.SafeScriptProto.serializeBinaryToWriter = function(message, writer) {
  var f = jspb.Message.getField(message, 6);
  null != f && writer.writeString(6, f);
};
proto.html.SafeScriptProto.prototype.getPrivateDoNotAccessOrElseSafeScriptWrappedValue = function() {
  return jspb.Message.getField(this, 6);
};
proto.html.SafeScriptProto.prototype.setPrivateDoNotAccessOrElseSafeScriptWrappedValue = function(value) {
  jspb.Message.setField(this, 6, value);
};
proto.html.SafeScriptProto.deserialize = function(data) {
  return jspb.Message.deserialize(proto.html.SafeScriptProto, data);
};
proto.html.SafeStyleSheetProto = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.html.SafeStyleSheetProto, jspb.Message);
jspb.Message.GENERATE_TO_OBJECT && (proto.html.SafeStyleSheetProto.prototype.toObject = function(opt_includeInstance) {
  return proto.html.SafeStyleSheetProto.toObject(opt_includeInstance, this);
}, proto.html.SafeStyleSheetProto.toObject = function(includeInstance, msg) {
  var obj = {privateDoNotAccessOrElseSafeStyleSheetWrappedValue:jspb.Message.getField(msg, 7)};
  includeInstance && (obj.$jspbMessageInstance = msg);
  return obj;
});
proto.html.SafeStyleSheetProto.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.html.SafeStyleSheetProto;
  return proto.html.SafeStyleSheetProto.deserializeBinaryFromReader(msg, reader);
};
proto.html.SafeStyleSheetProto.deserializeBinaryFromReader = function(msg, reader) {
  for (; reader.nextField() && !reader.isEndGroup();) {
    var field = reader.nextField_;
    switch(field) {
      case 7:
        var value = reader.readString();
        msg.setPrivateDoNotAccessOrElseSafeStyleSheetWrappedValue(value);
        break;
      default:
        reader.skipField();
    }
  }
  return msg;
};
proto.html.SafeStyleSheetProto.serializeBinaryToWriter = function(message, writer) {
  var f = jspb.Message.getField(message, 7);
  null != f && writer.writeString(7, f);
};
proto.html.SafeStyleSheetProto.prototype.getPrivateDoNotAccessOrElseSafeStyleSheetWrappedValue = function() {
  return jspb.Message.getField(this, 7);
};
proto.html.SafeStyleSheetProto.prototype.setPrivateDoNotAccessOrElseSafeStyleSheetWrappedValue = function(value) {
  jspb.Message.setField(this, 7, value);
};
proto.html.SafeStyleSheetProto.deserialize = function(data) {
  return jspb.Message.deserialize(proto.html.SafeStyleSheetProto, data);
};
proto.html.CustomSafeUrlScheme = {TEL:0, SMS:1, CALLTO:2, WTAI:3, RTSP:4, MARKET:5, GEO:6, SKYPE:7, WHATSAPP:8, ITMS_BOOKS:9};
var security = {html:{}};
security.html.jspbconversions = {};
security.html.jspbconversions.safeHtmlFromProto = function(proto) {
  return goog.html.uncheckedconversions.safeHtmlFromStringKnownToSatisfyTypeContract(goog.string.Const.from("From proto message. b/12014412"), proto.getPrivateDoNotAccessOrElseSafeHtmlWrappedValue() || "");
};
security.html.jspbconversions.safeHtmlToProto = function(safehtml) {
  var protoHtml = new proto.html.SafeHtmlProto;
  var string = goog.html.SafeHtml.unwrap(safehtml);
  protoHtml.setPrivateDoNotAccessOrElseSafeHtmlWrappedValue(string);
  return protoHtml;
};
security.html.jspbconversions.safeScriptFromProto = function(proto) {
  return goog.html.uncheckedconversions.safeScriptFromStringKnownToSatisfyTypeContract(goog.string.Const.from("From proto message. b/12014412"), proto.getPrivateDoNotAccessOrElseSafeScriptWrappedValue() || "");
};
security.html.jspbconversions.safeScriptToProto = function(script) {
  var protoScript = new proto.html.SafeScriptProto;
  var string = goog.html.SafeScript.unwrap(script);
  protoScript.setPrivateDoNotAccessOrElseSafeScriptWrappedValue(string);
  return protoScript;
};
security.html.jspbconversions.safeStyleFromProto = function(proto) {
  return goog.html.uncheckedconversions.safeStyleFromStringKnownToSatisfyTypeContract(goog.string.Const.from("From proto message. b/12014412"), proto.getPrivateDoNotAccessOrElseSafeStyleWrappedValue() || "");
};
security.html.jspbconversions.safeStyleToProto = function(style) {
  var protoStyle = new proto.html.SafeStyleProto;
  var string = goog.html.SafeStyle.unwrap(style);
  protoStyle.setPrivateDoNotAccessOrElseSafeStyleWrappedValue(string);
  return protoStyle;
};
security.html.jspbconversions.safeStyleSheetFromProto = function(proto) {
  return goog.html.uncheckedconversions.safeStyleSheetFromStringKnownToSatisfyTypeContract(goog.string.Const.from("From proto message. b/12014412"), proto.getPrivateDoNotAccessOrElseSafeStyleSheetWrappedValue() || "");
};
security.html.jspbconversions.safeStyleSheetToProto = function(styleSheet) {
  var protoStyleSheet = new proto.html.SafeStyleSheetProto;
  var string = goog.html.SafeStyleSheet.unwrap(styleSheet);
  protoStyleSheet.setPrivateDoNotAccessOrElseSafeStyleSheetWrappedValue(string);
  return protoStyleSheet;
};
security.html.jspbconversions.safeUrlFromProto = function(proto) {
  return goog.html.uncheckedconversions.safeUrlFromStringKnownToSatisfyTypeContract(goog.string.Const.from("From proto message. b/12014412"), proto.getPrivateDoNotAccessOrElseSafeUrlWrappedValue() || "");
};
security.html.jspbconversions.safeUrlToProto = function(url) {
  var protoUrl = new proto.html.SafeUrlProto;
  var string = goog.html.SafeUrl.unwrap(url);
  protoUrl.setPrivateDoNotAccessOrElseSafeUrlWrappedValue(string);
  return protoUrl;
};
security.html.jspbconversions.trustedResourceUrlFromProto = function(proto) {
  return goog.html.uncheckedconversions.trustedResourceUrlFromStringKnownToSatisfyTypeContract(goog.string.Const.from("From proto message. b/12014412"), proto.getPrivateDoNotAccessOrElseTrustedResourceUrlWrappedValue() || "");
};
security.html.jspbconversions.trustedResourceUrlToProto = function(url) {
  var protoUrl = new proto.html.TrustedResourceUrlProto;
  var string = goog.html.TrustedResourceUrl.unwrap(url);
  protoUrl.setPrivateDoNotAccessOrElseTrustedResourceUrlWrappedValue(string);
  return protoUrl;
};
security.types = {};
security.types.protorestricted = {};
security.types.protorestricted.unwrapSafeHtmlProtoInternalValue = function(value) {
  return value;
};
security.types.protorestricted.unwrapSafeScriptProtoInternalValue = function(value) {
  return value;
};
security.types.protorestricted.unwrapSafeStyleProtoInternalValue = function(value) {
  return value;
};
security.types.protorestricted.unwrapSafeStyleSheetProtoInternalValue = function(value) {
  return value;
};
security.types.protorestricted.unwrapSafeUrlProtoInternalValue = function(value) {
  return value;
};
security.types.protorestricted.unwrapTrustedResourceUrlProtoInternalValue = function(value) {
  return value;
};
var jslayout = {array:{}};
jslayout.array.length = function(a) {
  return a ? a.length : 0;
};
var jsproto = {Type:{DOUBLE:"d", FLOAT:"f", INT32:"i", INT64:"j", UINT32:"u", UINT64:"v", BOOL:"b", ENUM:"e", STRING:"s", BASE64_STRING:"z", BYTES:"B", MESSAGE:"m", FIXED32:"x", FIXED64:"y", SFIXED32:"g", SFIXED64:"h", SINT32:"n", SINT64:"o"}, Label:{OPTIONAL:1, REQUIRED:2, REPEATED:3}, MessageDescriptor:function() {
}, FieldDescriptor:function() {
}, BytesReader:function() {
}, BytesField:function() {
}, getValueByTagNumber:function(messageArray, descriptor, tagNumber) {
  return messageArray[tagNumber + descriptor.arrayIndexOffset];
}, recursiveClone:function(original) {
  var output = original;
  original instanceof Array ? (output = Array(original.length), jsproto.recursiveCopyArray_(output, original)) : original instanceof Object && (output = {}, jsproto.recursiveCopyObject_(output, original));
  return output;
}, recursiveCopyArray_:function(to, from) {
  for (var i = 0; i < from.length; ++i) {
    from.hasOwnProperty(i) && (to[i] = jsproto.recursiveClone(from[i]));
  }
}, recursiveCopyArray:function(to, from) {
  to !== from && (to.length = 0, from && (to.length = from.length, jsproto.recursiveCopyArray_(to, from)));
}, recursiveCopyObject_:function(to, from) {
  for (var key in from) {
    from.hasOwnProperty(key) && (to[key] = jsproto.recursiveClone(from[key]));
  }
}, recursiveCopyObject:function(to, from) {
  if (to !== from) {
    for (var i in to) {
      to.hasOwnProperty(i) && delete to[i];
    }
    jsproto.recursiveCopyObject_(to, from);
  }
}, repeatedField:function(base, fieldId) {
  base[fieldId] || (base[fieldId] = []);
  return base[fieldId];
}, areObjectsEqual:function(obj1, obj2) {
  if (null == obj1 || null == obj2) {
    return null == obj1 == (null == obj2);
  }
  if (obj1.constructor != Array && obj1.constructor != Object) {
    throw Error("Invalid object type passed into jsproto.areObjectsEqual()");
  }
  if (obj1 === obj2) {
    return !0;
  }
  if (obj1.constructor != obj2.constructor) {
    return !1;
  }
  for (var key1 in obj1) {
    if (!(key1 in obj2 && jsproto.areElementsEqual_(obj1[key1], obj2[key1]))) {
      return !1;
    }
  }
  for (var key2 in obj2) {
    if (!(key2 in obj1)) {
      return !1;
    }
  }
  return !0;
}, areElementsEqual_:function(elem1, elem2) {
  if (elem1 === elem2 || !(!0 !== elem1 && 1 !== elem1 || !0 !== elem2 && 1 !== elem2) || !(!1 !== elem1 && 0 !== elem1 || !1 !== elem2 && 0 !== elem2)) {
    return !0;
  }
  if (elem1 instanceof Object && elem2 instanceof Object) {
    if (!jsproto.areObjectsEqual(elem1, elem2)) {
      return !1;
    }
  } else {
    return !1;
  }
  return !0;
}, BASE64_REGEXP:/^[+a-zA-Z0-9/=]*$/, BASE64URL_REGEXP:/^[-a-zA-Z0-9_]*$/, normalizeToBase64Url:function(base64) {
  return jsproto.stripBase64Padding(base64.replace(/[+/]/g, function(match) {
    return "+" == match ? "-" : "_";
  }));
}, normalizeToBase64:function(base64) {
  return jsproto.stripBase64Padding(base64.replace(/[-_]/g, function(match) {
    return "-" == match ? "+" : "/";
  }));
}, stripBase64Padding:function(value) {
  return value.replace(/[.=]+$/, "");
}, FieldDescriptorImpl:function(type, label, defaultValue, opt_descriptor) {
  this.type = type;
  this.label = label;
  this.descriptor = opt_descriptor;
  goog.asserts.assert(!goog.isDef(opt_descriptor) || type == jsproto.Type.MESSAGE, "Only messages should give a message descriptor.");
}, standardDefaultValue_:function(type) {
  switch(type) {
    case jsproto.Type.DOUBLE:
    case jsproto.Type.FLOAT:
    case jsproto.Type.INT32:
    case jsproto.Type.INT64:
    case jsproto.Type.UINT32:
    case jsproto.Type.UINT64:
    case jsproto.Type.FIXED32:
    case jsproto.Type.FIXED64:
    case jsproto.Type.SFIXED32:
    case jsproto.Type.SFIXED64:
    case jsproto.Type.SINT32:
    case jsproto.Type.SINT64:
    case jsproto.Type.ENUM:
      return 0;
    case jsproto.Type.STRING:
    case jsproto.Type.BASE64_STRING:
    case jsproto.Type.BYTES:
      return "";
    case jsproto.Type.BOOL:
      return !1;
    default:
      return goog.asserts.assert("Message descriptors must provide a default value."), null;
  }
}, makeFieldDescriptorOptional_:function(type, opt_defaultValue, opt_descriptor) {
  var defaultValue = goog.isDef(opt_defaultValue) ? opt_defaultValue : jsproto.standardDefaultValue_(type);
  return new jsproto.FieldDescriptorImpl(type, jsproto.Label.OPTIONAL, defaultValue, opt_descriptor);
}, makeFieldDescriptorRequired_:function(type, opt_defaultValue, opt_descriptor) {
  var defaultValue = goog.isDef(opt_defaultValue) ? opt_defaultValue : jsproto.standardDefaultValue_(type);
  return new jsproto.FieldDescriptorImpl(type, jsproto.Label.REQUIRED, defaultValue, opt_descriptor);
}, makeFieldDescriptorRepeated_:function(type, opt_descriptor, opt_defaultValue) {
  return new jsproto.FieldDescriptorImpl(type, jsproto.Label.REPEATED, opt_defaultValue, opt_descriptor);
}, makeFieldDescriptorOptionalDouble:function(opt_defaultValue) {
  return jsproto.makeFieldDescriptorOptional_(jsproto.Type.DOUBLE, opt_defaultValue);
}, makeFieldDescriptorRequiredDouble:function(opt_defaultValue) {
  return jsproto.makeFieldDescriptorRequired_(jsproto.Type.DOUBLE, opt_defaultValue);
}, makeFieldDescriptorRepeatedDouble:function() {
  return jsproto.makeFieldDescriptorRepeated_(jsproto.Type.DOUBLE);
}};
jsproto.FIELD_DESCRIPTOR_OPTIONAL_DOUBLE = jsproto.makeFieldDescriptorOptionalDouble();
jsproto.FIELD_DESCRIPTOR_REQUIRED_DOUBLE = jsproto.makeFieldDescriptorRequiredDouble();
jsproto.FIELD_DESCRIPTOR_REPEATED_DOUBLE = jsproto.makeFieldDescriptorRepeatedDouble();
jsproto.makeFieldDescriptorOptionalFloat = function(opt_defaultValue) {
  return jsproto.makeFieldDescriptorOptional_(jsproto.Type.FLOAT, opt_defaultValue);
};
jsproto.makeFieldDescriptorRequiredFloat = function(opt_defaultValue) {
  return jsproto.makeFieldDescriptorRequired_(jsproto.Type.FLOAT, opt_defaultValue);
};
jsproto.makeFieldDescriptorRepeatedFloat = function() {
  return jsproto.makeFieldDescriptorRepeated_(jsproto.Type.FLOAT);
};
jsproto.FIELD_DESCRIPTOR_OPTIONAL_FLOAT = jsproto.makeFieldDescriptorOptionalFloat();
jsproto.FIELD_DESCRIPTOR_REQUIRED_FLOAT = jsproto.makeFieldDescriptorRequiredFloat();
jsproto.FIELD_DESCRIPTOR_REPEATED_FLOAT = jsproto.makeFieldDescriptorRepeatedFloat();
jsproto.makeFieldDescriptorOptionalInt32 = function(opt_defaultValue) {
  return jsproto.makeFieldDescriptorOptional_(jsproto.Type.INT32, opt_defaultValue);
};
jsproto.makeFieldDescriptorRequiredInt32 = function(opt_defaultValue) {
  return jsproto.makeFieldDescriptorRequired_(jsproto.Type.INT32, opt_defaultValue);
};
jsproto.makeFieldDescriptorRepeatedInt32 = function() {
  return jsproto.makeFieldDescriptorRepeated_(jsproto.Type.INT32);
};
jsproto.FIELD_DESCRIPTOR_OPTIONAL_INT32 = jsproto.makeFieldDescriptorOptionalInt32();
jsproto.FIELD_DESCRIPTOR_REQUIRED_INT32 = jsproto.makeFieldDescriptorRequiredInt32();
jsproto.FIELD_DESCRIPTOR_REPEATED_INT32 = jsproto.makeFieldDescriptorRepeatedInt32();
jsproto.makeFieldDescriptorOptionalInt64 = function(opt_defaultValue) {
  return jsproto.makeFieldDescriptorOptional_(jsproto.Type.INT64, opt_defaultValue);
};
jsproto.makeFieldDescriptorRequiredInt64 = function(opt_defaultValue) {
  return jsproto.makeFieldDescriptorRequired_(jsproto.Type.INT64, opt_defaultValue);
};
jsproto.makeFieldDescriptorRepeatedInt64 = function(opt_defaultValue) {
  return jsproto.makeFieldDescriptorRepeated_(jsproto.Type.INT64, void 0, opt_defaultValue);
};
jsproto.FIELD_DESCRIPTOR_OPTIONAL_INT64 = jsproto.makeFieldDescriptorOptionalInt64();
jsproto.FIELD_DESCRIPTOR_REQUIRED_INT64 = jsproto.makeFieldDescriptorRequiredInt64();
jsproto.FIELD_DESCRIPTOR_REPEATED_INT64 = jsproto.makeFieldDescriptorRepeatedInt64();
jsproto.FIELD_DESCRIPTOR_REPEATED_INT64_STRING = jsproto.makeFieldDescriptorRepeatedInt64("");
jsproto.makeFieldDescriptorOptionalUInt32 = function(opt_defaultValue) {
  return jsproto.makeFieldDescriptorOptional_(jsproto.Type.UINT32, opt_defaultValue);
};
jsproto.makeFieldDescriptorRequiredUInt32 = function(opt_defaultValue) {
  return jsproto.makeFieldDescriptorRequired_(jsproto.Type.UINT32, opt_defaultValue);
};
jsproto.makeFieldDescriptorRepeatedUInt32 = function() {
  return jsproto.makeFieldDescriptorRepeated_(jsproto.Type.UINT32);
};
jsproto.FIELD_DESCRIPTOR_OPTIONAL_UINT32 = jsproto.makeFieldDescriptorOptionalUInt32();
jsproto.FIELD_DESCRIPTOR_REQUIRED_UINT32 = jsproto.makeFieldDescriptorRequiredUInt32();
jsproto.FIELD_DESCRIPTOR_REPEATED_UINT32 = jsproto.makeFieldDescriptorRepeatedUInt32();
jsproto.makeFieldDescriptorOptionalUInt64 = function(opt_defaultValue) {
  return jsproto.makeFieldDescriptorOptional_(jsproto.Type.UINT64, opt_defaultValue);
};
jsproto.makeFieldDescriptorRequiredUInt64 = function(opt_defaultValue) {
  return jsproto.makeFieldDescriptorRequired_(jsproto.Type.UINT64, opt_defaultValue);
};
jsproto.makeFieldDescriptorRepeatedUInt64 = function(opt_defaultValue) {
  return jsproto.makeFieldDescriptorRepeated_(jsproto.Type.UINT64, void 0, opt_defaultValue);
};
jsproto.FIELD_DESCRIPTOR_OPTIONAL_UINT64 = jsproto.makeFieldDescriptorOptionalUInt64();
jsproto.FIELD_DESCRIPTOR_REQUIRED_UINT64 = jsproto.makeFieldDescriptorRequiredUInt64();
jsproto.FIELD_DESCRIPTOR_REPEATED_UINT64 = jsproto.makeFieldDescriptorRepeatedUInt64();
jsproto.FIELD_DESCRIPTOR_REPEATED_UINT64_STRING = jsproto.makeFieldDescriptorRepeatedUInt64("");
jsproto.makeFieldDescriptorOptionalBool = function(opt_defaultValue) {
  return jsproto.makeFieldDescriptorOptional_(jsproto.Type.BOOL, opt_defaultValue);
};
jsproto.makeFieldDescriptorRequiredBool = function(opt_defaultValue) {
  return jsproto.makeFieldDescriptorRequired_(jsproto.Type.BOOL, opt_defaultValue);
};
jsproto.makeFieldDescriptorRepeatedBool = function() {
  return jsproto.makeFieldDescriptorRepeated_(jsproto.Type.BOOL);
};
jsproto.FIELD_DESCRIPTOR_OPTIONAL_BOOL = jsproto.makeFieldDescriptorOptionalBool();
jsproto.FIELD_DESCRIPTOR_REQUIRED_BOOL = jsproto.makeFieldDescriptorRequiredBool();
jsproto.FIELD_DESCRIPTOR_REPEATED_BOOL = jsproto.makeFieldDescriptorRepeatedBool();
jsproto.makeFieldDescriptorOptionalEnum = function(opt_defaultValue) {
  return jsproto.makeFieldDescriptorOptional_(jsproto.Type.ENUM, opt_defaultValue);
};
jsproto.makeFieldDescriptorRequiredEnum = function(opt_defaultValue) {
  return jsproto.makeFieldDescriptorRequired_(jsproto.Type.ENUM, opt_defaultValue);
};
jsproto.makeFieldDescriptorRepeatedEnum = function() {
  return jsproto.makeFieldDescriptorRepeated_(jsproto.Type.ENUM);
};
jsproto.FIELD_DESCRIPTOR_OPTIONAL_ENUM = jsproto.makeFieldDescriptorOptionalEnum();
jsproto.FIELD_DESCRIPTOR_REQUIRED_ENUM = jsproto.makeFieldDescriptorRequiredEnum();
jsproto.FIELD_DESCRIPTOR_REPEATED_ENUM = jsproto.makeFieldDescriptorRepeatedEnum();
jsproto.makeFieldDescriptorOptionalString = function(opt_defaultValue) {
  return jsproto.makeFieldDescriptorOptional_(jsproto.Type.STRING, opt_defaultValue);
};
jsproto.makeFieldDescriptorRequiredString = function(opt_defaultValue) {
  return jsproto.makeFieldDescriptorRequired_(jsproto.Type.STRING, opt_defaultValue);
};
jsproto.makeFieldDescriptorRepeatedString = function() {
  return jsproto.makeFieldDescriptorRepeated_(jsproto.Type.STRING);
};
jsproto.FIELD_DESCRIPTOR_OPTIONAL_STRING = jsproto.makeFieldDescriptorOptionalString();
jsproto.FIELD_DESCRIPTOR_REQUIRED_STRING = jsproto.makeFieldDescriptorRequiredString();
jsproto.FIELD_DESCRIPTOR_REPEATED_STRING = jsproto.makeFieldDescriptorRepeatedString();
jsproto.makeFieldDescriptorOptionalBytes = function(opt_defaultValue) {
  return jsproto.makeFieldDescriptorOptional_(jsproto.Type.BYTES, opt_defaultValue);
};
jsproto.makeFieldDescriptorRequiredBytes = function(opt_defaultValue) {
  return jsproto.makeFieldDescriptorRequired_(jsproto.Type.BYTES, opt_defaultValue);
};
jsproto.makeFieldDescriptorRepeatedBytes = function() {
  return jsproto.makeFieldDescriptorRepeated_(jsproto.Type.BYTES);
};
jsproto.FIELD_DESCRIPTOR_OPTIONAL_BYTES = jsproto.makeFieldDescriptorOptionalBytes();
jsproto.FIELD_DESCRIPTOR_REQUIRED_BYTES = jsproto.makeFieldDescriptorRequiredBytes();
jsproto.FIELD_DESCRIPTOR_REPEATED_BYTES = jsproto.makeFieldDescriptorRepeatedBytes();
jsproto.makeFieldDescriptorOptionalMessage = function(defaultValue, descriptor) {
  return jsproto.makeFieldDescriptorOptional_(jsproto.Type.MESSAGE, defaultValue, descriptor);
};
jsproto.makeFieldDescriptorRequiredMessage = function(defaultValue, descriptor) {
  return jsproto.makeFieldDescriptorRequired_(jsproto.Type.MESSAGE, defaultValue, descriptor);
};
jsproto.makeFieldDescriptorRepeatedMessage = function(descriptor) {
  return jsproto.makeFieldDescriptorRepeated_(jsproto.Type.MESSAGE, descriptor);
};
jsproto.makeFieldDescriptorOptionalFixed32 = function(opt_defaultValue) {
  return jsproto.makeFieldDescriptorOptional_(jsproto.Type.FIXED32, opt_defaultValue);
};
jsproto.makeFieldDescriptorRequiredFixed32 = function(opt_defaultValue) {
  return jsproto.makeFieldDescriptorRequired_(jsproto.Type.FIXED32, opt_defaultValue);
};
jsproto.makeFieldDescriptorRepeatedFixed32 = function() {
  return jsproto.makeFieldDescriptorRepeated_(jsproto.Type.FIXED32);
};
jsproto.FIELD_DESCRIPTOR_OPTIONAL_FIXED32 = jsproto.makeFieldDescriptorOptionalFixed32();
jsproto.FIELD_DESCRIPTOR_REQUIRED_FIXED32 = jsproto.makeFieldDescriptorRequiredFixed32();
jsproto.FIELD_DESCRIPTOR_REPEATED_FIXED32 = jsproto.makeFieldDescriptorRepeatedFixed32();
jsproto.makeFieldDescriptorOptionalFixed64 = function(opt_defaultValue) {
  return jsproto.makeFieldDescriptorOptional_(jsproto.Type.FIXED64, opt_defaultValue);
};
jsproto.makeFieldDescriptorRequiredFixed64 = function(opt_defaultValue) {
  return jsproto.makeFieldDescriptorRequired_(jsproto.Type.FIXED64, opt_defaultValue);
};
jsproto.makeFieldDescriptorRepeatedFixed64 = function() {
  return jsproto.makeFieldDescriptorRepeated_(jsproto.Type.FIXED64);
};
jsproto.FIELD_DESCRIPTOR_OPTIONAL_FIXED64 = jsproto.makeFieldDescriptorOptionalFixed64();
jsproto.FIELD_DESCRIPTOR_REQUIRED_FIXED64 = jsproto.makeFieldDescriptorRequiredFixed64();
jsproto.FIELD_DESCRIPTOR_REPEATED_FIXED64 = jsproto.makeFieldDescriptorRepeatedFixed64();
jsproto.makeFieldDescriptorOptionalSFixed32 = function(opt_defaultValue) {
  return jsproto.makeFieldDescriptorOptional_(jsproto.Type.SFIXED32, opt_defaultValue);
};
jsproto.makeFieldDescriptorRequiredSFixed32 = function(opt_defaultValue) {
  return jsproto.makeFieldDescriptorRequired_(jsproto.Type.SFIXED32, opt_defaultValue);
};
jsproto.makeFieldDescriptorRepeatedSFixed32 = function() {
  return jsproto.makeFieldDescriptorRepeated_(jsproto.Type.SFIXED32);
};
jsproto.FIELD_DESCRIPTOR_OPTIONAL_SFIXED32 = jsproto.makeFieldDescriptorOptionalSFixed32();
jsproto.FIELD_DESCRIPTOR_REQUIRED_SFIXED32 = jsproto.makeFieldDescriptorRequiredSFixed32();
jsproto.FIELD_DESCRIPTOR_REPEATED_SFIXED32 = jsproto.makeFieldDescriptorRepeatedSFixed32();
jsproto.makeFieldDescriptorOptionalSFixed64 = function(opt_defaultValue) {
  return jsproto.makeFieldDescriptorOptional_(jsproto.Type.SFIXED64, opt_defaultValue);
};
jsproto.makeFieldDescriptorRequiredSFixed64 = function(opt_defaultValue) {
  return jsproto.makeFieldDescriptorRequired_(jsproto.Type.SFIXED64, opt_defaultValue);
};
jsproto.makeFieldDescriptorRepeatedSFixed64 = function() {
  return jsproto.makeFieldDescriptorRepeated_(jsproto.Type.SFIXED64);
};
jsproto.FIELD_DESCRIPTOR_OPTIONAL_SFIXED64 = jsproto.makeFieldDescriptorOptionalSFixed64();
jsproto.FIELD_DESCRIPTOR_REQUIRED_SFIXED64 = jsproto.makeFieldDescriptorRequiredSFixed64();
jsproto.FIELD_DESCRIPTOR_REPEATED_SFIXED64 = jsproto.makeFieldDescriptorRepeatedSFixed64();
jsproto.makeFieldDescriptorOptionalSInt32 = function(opt_defaultValue) {
  return jsproto.makeFieldDescriptorOptional_(jsproto.Type.SINT32, opt_defaultValue);
};
jsproto.makeFieldDescriptorRequiredSInt32 = function(opt_defaultValue) {
  return jsproto.makeFieldDescriptorRequired_(jsproto.Type.SINT32, opt_defaultValue);
};
jsproto.makeFieldDescriptorRepeatedSInt32 = function() {
  return jsproto.makeFieldDescriptorRepeated_(jsproto.Type.SINT32);
};
jsproto.FIELD_DESCRIPTOR_OPTIONAL_SINT32 = jsproto.makeFieldDescriptorOptionalSInt32();
jsproto.FIELD_DESCRIPTOR_REQUIRED_SINT32 = jsproto.makeFieldDescriptorRequiredSInt32();
jsproto.FIELD_DESCRIPTOR_REPEATED_SINT32 = jsproto.makeFieldDescriptorRepeatedSInt32();
jsproto.makeFieldDescriptorOptionalSInt64 = function(opt_defaultValue) {
  return jsproto.makeFieldDescriptorOptional_(jsproto.Type.SINT64, opt_defaultValue);
};
jsproto.makeFieldDescriptorRequiredSInt64 = function(opt_defaultValue) {
  return jsproto.makeFieldDescriptorRequired_(jsproto.Type.SINT64, opt_defaultValue);
};
jsproto.makeFieldDescriptorRepeatedSInt64 = function(opt_defaultValue) {
  return jsproto.makeFieldDescriptorRepeated_(jsproto.Type.SINT64, void 0, opt_defaultValue);
};
jsproto.FIELD_DESCRIPTOR_OPTIONAL_SINT64 = jsproto.makeFieldDescriptorOptionalSInt64();
jsproto.FIELD_DESCRIPTOR_REQUIRED_SINT64 = jsproto.makeFieldDescriptorRequiredSInt64();
jsproto.FIELD_DESCRIPTOR_REPEATED_SINT64 = jsproto.makeFieldDescriptorRepeatedSInt64();
jsproto.FIELD_DESCRIPTOR_REPEATED_SINT64_STRING = jsproto.makeFieldDescriptorRepeatedSInt64("");
jsproto.Serializer = function() {
};
jsproto.QueryStringSerializer = function() {
};
jsproto.QueryStringSerializer.INSTANCE = new jsproto.QueryStringSerializer;
jsproto.QueryStringSerializer.singleQuoteRegExp_ = /'/g;
jsproto.QueryStringSerializer.prototype.serialize = function(messageArray, descriptor) {
  var components = [];
  jsproto.QueryStringSerializer.serializeToUrlComponents_(messageArray, descriptor, components);
  var queryString = components.join("&");
  return queryString.replace(jsproto.QueryStringSerializer.singleQuoteRegExp_, "%27");
};
jsproto.QueryStringSerializer.prototype.deserialize = function() {
  throw Error("QueryStringSerializer.deserialize is not implemented");
};
jsproto.QueryStringSerializer.serializeToUrlComponents_ = function(messageArray, descriptor, components) {
  for (var tag = 1; tag < descriptor.fieldDescriptor.length; ++tag) {
    var fieldDescriptor = descriptor.fieldDescriptor[tag];
    var value = jsproto.getValueByTagNumber(messageArray, descriptor, tag);
    if (fieldDescriptor && goog.isDefAndNotNull(value)) {
      if (fieldDescriptor.label == jsproto.Label.REPEATED) {
        var arr = goog.asserts.assertArray(value);
        for (var i = 0; i < arr.length; ++i) {
          var singularValue = arr[i];
          jsproto.QueryStringSerializer.getUrlComponentsForField_(singularValue, tag, fieldDescriptor, components);
        }
      } else {
        jsproto.QueryStringSerializer.getUrlComponentsForField_(value, tag, fieldDescriptor, components);
      }
    }
  }
};
jsproto.QueryStringSerializer.getUrlComponentsForField_ = function(value, tag, fieldDescriptor, result) {
  if (fieldDescriptor.type == jsproto.Type.MESSAGE) {
    var previousLength = result.length;
    jsproto.QueryStringSerializer.serializeToUrlComponents_(value, fieldDescriptor.descriptor, result);
    var delimiter = [tag, jsproto.Type.MESSAGE, result.length - previousLength].join("");
    result.splice(previousLength, 0, delimiter);
  } else {
    fieldDescriptor.type == jsproto.Type.BOOL && (value = value ? "1" : "0");
    var component = [tag, fieldDescriptor.type, encodeURIComponent(value)].join("");
    result.push(component);
  }
};
jsproto.MessageBaseJson = function(opt_data) {
  this.data = opt_data || {};
};
jsproto.MessageBaseJson.prototype.internalHas = function(fieldKey) {
  return null != this.data[fieldKey];
};
jsproto.MessageBaseJson.prototype.internalGetScalar = function(fieldKey, defaultValue) {
  var value = this.data[fieldKey];
  return null != value ? value : defaultValue;
};
jsproto.MessageBaseJson.prototype.internalGetScalarBoolean = function(fieldKey, opt_defaultValue) {
  return !!this.internalGetScalar(fieldKey, opt_defaultValue);
};
jsproto.MessageBaseJson.prototype.internalGetScalarEnum = function(fieldKey, opt_defaultValue) {
  return this.internalGetScalar(fieldKey, opt_defaultValue || 0);
};
jsproto.MessageBaseJson.prototype.internalGetScalarNumber = function(fieldKey, opt_defaultValue) {
  return this.internalGetScalar(fieldKey, opt_defaultValue || 0);
};
jsproto.MessageBaseJson.prototype.internalGetScalarString = function(fieldKey, opt_defaultValue) {
  return this.internalGetScalar(fieldKey, opt_defaultValue || "");
};
jsproto.MessageBaseJson.prototype.internalClear = function(fieldKey) {
  fieldKey in this.data && delete this.data[fieldKey];
};
jsproto.MessageBaseJson.prototype.internalRepeatedField = function(fieldKey) {
  return jsproto.repeatedField(this.data, fieldKey);
};
jsproto.MessageBaseJson.prototype.internalRepeatedFieldAddMessage = function(fieldKey) {
  var newData = {};
  this.internalRepeatedField(fieldKey).push(newData);
  return newData;
};
jsproto.MessageBaseJson.prototype.internalRepeatedFieldGetMessage = function(fieldKey, i) {
  return this.internalRepeatedField(fieldKey)[i];
};
jsproto.MessageBaseJson.prototype.internalRepeatedFieldRemove = function(fieldKey, i) {
  return this.internalRepeatedField(fieldKey).splice(i, 1);
};
jsproto.MessageBaseJson.prototype.internalSizeOfRepeatedField = function(fieldKey) {
  return this.data[fieldKey] ? this.data[fieldKey].length : 0;
};
jsproto.MessageBaseJson.prototype.equals = function(other) {
  var otherJsonObject = other && goog.asserts.assertInstanceof(other, jsproto.MessageBaseJson);
  return jsproto.areObjectsEqual(this.data, other ? otherJsonObject.data : null);
};
jsproto.MessageBaseJson.prototype.toObject = function() {
  return this.data;
};
jsproto.MessageBaseJson.prototype.copyToObject = function() {
  var output = {};
  jsproto.recursiveCopyObject(output, this.data);
  return output;
};
jsproto.MessageBaseJson.prototype.clone = function() {
  return new this.constructor(goog.asserts.assertInstanceof(this, jsproto.MessageBaseJson).copyToObject());
};
jsproto.MessageBaseJson.prototype.copyFrom = function(other) {
  var otherJsonObject = other && goog.asserts.assertInstanceof(other, jsproto.MessageBaseJson);
  jsproto.recursiveCopyObject(this.data, otherJsonObject ? otherJsonObject.toObject() : null);
};
jsproto.MessageBaseJson.prototype.swap = function(other) {
  var wellTypedOther = goog.asserts.assertInstanceof(other, jsproto.MessageBaseJson);
  var temp = this.data;
  this.data = wellTypedOther.data;
  wellTypedOther.data = temp;
};
jsproto.MessageBaseJson.BytesReaderOfBase64 = function(data, index) {
  this.data = data;
  this.index = index;
};
jsproto.MessageBaseJson.BytesReaderOfBase64.prototype.getBase64 = function() {
  return this.data[this.index] || "";
};
jsproto.MessageBaseJson.BytesReaderOfBase64.prototype.getUnencodedString = function() {
  return goog.crypt.base64.decodeString(this.getBase64());
};
jsproto.MessageBaseJson.BytesFieldOfBase64 = function(data, index) {
  jsproto.MessageBaseJson.BytesReaderOfBase64.call(this, data, index);
};
goog.inherits(jsproto.MessageBaseJson.BytesFieldOfBase64, jsproto.MessageBaseJson.BytesReaderOfBase64);
jsproto.MessageBaseJson.BytesFieldOfBase64.prototype.copyFrom = function(that) {
  this.setBase64(that.getBase64());
};
jsproto.MessageBaseJson.BytesFieldOfBase64.prototype.setBase64 = function(base64) {
  goog.DEBUG && goog.asserts.assert(base64.match(jsproto.BASE64_REGEXP), 'Expected base64 encoding, got "' + base64 + '"');
  this.data[this.index] = base64;
};
jsproto.MessageBaseJson.BytesFieldOfBase64.prototype.setUnencodedString = function(unencodedString) {
  this.setBase64(goog.crypt.base64.encodeString(unencodedString, !1));
};
jsproto.MessageBaseJson.BytesReaderOfString = function(data, index) {
  this.data = data;
  this.index = index;
};
jsproto.MessageBaseJson.BytesReaderOfString.prototype.getBase64 = function() {
  return jsproto.stripBase64Padding(goog.crypt.base64.encodeString(this.getUnencodedString(), !1));
};
jsproto.MessageBaseJson.BytesReaderOfString.prototype.getUnencodedString = function() {
  return this.data[this.index] || "";
};
jsproto.MessageBaseJson.BytesFieldOfString = function(data, index) {
  jsproto.MessageBaseJson.BytesReaderOfString.call(this, data, index);
};
goog.inherits(jsproto.MessageBaseJson.BytesFieldOfString, jsproto.MessageBaseJson.BytesReaderOfString);
jsproto.MessageBaseJson.BytesFieldOfString.prototype.copyFrom = function(that) {
  this.setUnencodedString(that.getUnencodedString());
};
jsproto.MessageBaseJson.BytesFieldOfString.prototype.setBase64 = function(base64) {
  goog.DEBUG && goog.asserts.assert(base64.match(jsproto.BASE64_REGEXP), 'Expected base64 encoding, got "' + base64 + '"');
  this.setUnencodedString(goog.crypt.base64.decodeString(base64, !1));
};
jsproto.MessageBaseJson.BytesFieldOfString.prototype.setUnencodedString = function(unencodedString) {
  this.data[this.index] = unencodedString;
};
var prototemplate = {ConstAttributeType:function() {
}, AttributeType:function(opt_data) {
  jsproto.MessageBaseJson.call(this, opt_data);
}};
goog.inherits(prototemplate.AttributeType, jsproto.MessageBaseJson);
prototemplate.ConstCssRenamingMode = function() {
};
prototemplate.CssRenamingMode = function(opt_data) {
  jsproto.MessageBaseJson.call(this, opt_data);
};
goog.inherits(prototemplate.CssRenamingMode, jsproto.MessageBaseJson);
prototemplate.ConstSafetyContract = function() {
};
prototemplate.SafetyContract = function(opt_data) {
  jsproto.MessageBaseJson.call(this, opt_data);
};
goog.inherits(prototemplate.SafetyContract, jsproto.MessageBaseJson);
prototemplate.ConstSanitizationContext = function() {
};
prototemplate.SanitizationContext = function(opt_data) {
  jsproto.MessageBaseJson.call(this, opt_data);
};
goog.inherits(prototemplate.SanitizationContext, jsproto.MessageBaseJson);
prototemplate.AttributeType.Type = {REGULAR:0, CONTROL:2, DEBUG:3, STYLE:4, STYLE_PROPERTY:5, CLASS:6, CLASS_PROPERTY:7, URL:8, URL_PROTOCOL:9, URL_PORT:10, URL_HOST:11, URL_PATH:12, URL_QUERY_COMPONENT:13, URL_HASH:14, TRANSLATION:15, TRANSLATION_EXPORT:16, COVERAGE:17, COMMAND_LIST:18, JSINSTANCE:20, JSSC:21, JSACTION:22};
prototemplate.CssRenamingMode.Mode = {NONE:0, SINGLE:1, LIST:2};
prototemplate.SafetyContract.Contract = {SAFE_URL:1, TRUSTED_RESOURCE_URL:2, SAFE_STYLE:3, SAFE_SCRIPT:4};
prototemplate.SanitizationContext.Context = {NONE:0, URL:1, IMAGE_URL:2, STYLE_PROPERTY_REGULAR:5, STYLE_PROPERTY_STRING:6, STYLE_PROPERTY_URL:7, META_REFRESH_URL:8};
prototemplate.AttributeType.getMessageDescriptor = function() {
  prototemplate.AttributeType.messageDescriptor_ || prototemplate.AttributeType.createMessageDescriptor_();
  return prototemplate.AttributeType.messageDescriptor_;
};
prototemplate.AttributeType.prototype.getMessageDescriptor = prototemplate.AttributeType.getMessageDescriptor;
prototemplate.AttributeType.createMessageDescriptor_ = function() {
  var fieldDescriptors = {};
  prototemplate.AttributeType.messageDescriptor_ = {fieldDescriptor:fieldDescriptors};
};
goog.DEBUG && (prototemplate.AttributeType.fromObject = function(obj) {
  return new prototemplate.AttributeType(obj);
});
prototemplate.CssRenamingMode.getMessageDescriptor = function() {
  prototemplate.CssRenamingMode.messageDescriptor_ || prototemplate.CssRenamingMode.createMessageDescriptor_();
  return prototemplate.CssRenamingMode.messageDescriptor_;
};
prototemplate.CssRenamingMode.prototype.getMessageDescriptor = prototemplate.CssRenamingMode.getMessageDescriptor;
prototemplate.CssRenamingMode.createMessageDescriptor_ = function() {
  var fieldDescriptors = {};
  prototemplate.CssRenamingMode.messageDescriptor_ = {fieldDescriptor:fieldDescriptors};
};
goog.DEBUG && (prototemplate.CssRenamingMode.fromObject = function(obj) {
  return new prototemplate.CssRenamingMode(obj);
});
prototemplate.SafetyContract.getMessageDescriptor = function() {
  prototemplate.SafetyContract.messageDescriptor_ || prototemplate.SafetyContract.createMessageDescriptor_();
  return prototemplate.SafetyContract.messageDescriptor_;
};
prototemplate.SafetyContract.prototype.getMessageDescriptor = prototemplate.SafetyContract.getMessageDescriptor;
prototemplate.SafetyContract.createMessageDescriptor_ = function() {
  var fieldDescriptors = {};
  prototemplate.SafetyContract.messageDescriptor_ = {fieldDescriptor:fieldDescriptors};
};
goog.DEBUG && (prototemplate.SafetyContract.fromObject = function(obj) {
  return new prototemplate.SafetyContract(obj);
});
prototemplate.SanitizationContext.getMessageDescriptor = function() {
  prototemplate.SanitizationContext.messageDescriptor_ || prototemplate.SanitizationContext.createMessageDescriptor_();
  return prototemplate.SanitizationContext.messageDescriptor_;
};
prototemplate.SanitizationContext.prototype.getMessageDescriptor = prototemplate.SanitizationContext.getMessageDescriptor;
prototemplate.SanitizationContext.createMessageDescriptor_ = function() {
  var fieldDescriptors = {};
  prototemplate.SanitizationContext.messageDescriptor_ = {fieldDescriptor:fieldDescriptors};
};
goog.DEBUG && (prototemplate.SanitizationContext.fromObject = function(obj) {
  return new prototemplate.SanitizationContext(obj);
});
jslayout.attributesanitization = {};
jslayout.attributesanitization.context = function(cmd) {
  var lastIndex = cmd.length - 1;
  var ret = null;
  switch(cmd[lastIndex]) {
    case "filter_url":
      ret = prototemplate.SanitizationContext.Context.URL;
      break;
    case "filter_imgurl":
      ret = prototemplate.SanitizationContext.Context.IMAGE_URL;
      break;
    case "filter_css_regular":
      ret = prototemplate.SanitizationContext.Context.STYLE_PROPERTY_REGULAR;
      break;
    case "filter_css_string":
      ret = prototemplate.SanitizationContext.Context.STYLE_PROPERTY_STRING;
      break;
    case "filter_css_url":
      ret = prototemplate.SanitizationContext.Context.STYLE_PROPERTY_URL;
  }
  ret && goog.array.removeAt(cmd, lastIndex);
  return ret;
};
jslayout.attributesanitization.filterForUrlContext = function(value) {
  value = goog.html.SafeUrl.sanitize(value).getTypedStringValue();
  return value === goog.html.SafeUrl.INNOCUOUS_STRING ? jslayout.attributesanitization.INNOCUOUS_URL_ : value;
};
jslayout.attributesanitization.filterForImageUrlContext = function(value) {
  if (jslayout.attributesanitization.IMAGE_DATA_URL_PATTERN_.test(value)) {
    return value;
  }
  value = goog.html.SafeUrl.sanitize(value).getTypedStringValue();
  return value === goog.html.SafeUrl.INNOCUOUS_STRING ? jslayout.attributesanitization.INNOCUOUS_URL_ : value;
};
jslayout.attributesanitization.IMAGE_DATA_URL_PATTERN_ = /^data:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp);base64,[-+/_a-z0-9]+(?:=|%3d)*$/i;
jslayout.attributesanitization.filterForMetaRefreshUrlContext = function(value) {
  var match = jslayout.attributesanitization.META_REFRESH_URL_PATTERN_.exec(value);
  if (!match) {
    return jslayout.attributesanitization.INNOCUOUS_META_REFRESH_URL_;
  }
  var urlSeparator = match[1];
  var url = match[2];
  if (!urlSeparator) {
    return 0 == url.length ? value : jslayout.attributesanitization.INNOCUOUS_META_REFRESH_URL_;
  }
  var safeUrl = goog.html.SafeUrl.sanitize(url);
  return safeUrl.getTypedStringValue() == goog.html.SafeUrl.INNOCUOUS_STRING ? jslayout.attributesanitization.INNOCUOUS_META_REFRESH_URL_ : value;
};
jslayout.attributesanitization.META_REFRESH_URL_PATTERN_ = /^(?:[0-9]+)([ ]*;[ ]*url=)?(.*)$/;
jslayout.attributesanitization.filterForStyleRegularContext = function(value) {
  if (!goog.isDefAndNotNull(value)) {
    return null;
  }
  if (!jslayout.attributesanitization.SAFE_CSS_PROPERTY_REGULAR_.test(value) || !jslayout.attributesanitization.hasBalancedParentheses_(value)) {
    return jslayout.attributesanitization.INNOCUOUS_STYLE_PROPERTY_;
  }
  var functionCallRegexp = new RegExp(jslayout.attributesanitization.CSS_FUNCTION_CALL_, "g");
  for (var match; null !== (match = functionCallRegexp.exec(value));) {
    var functionName = jslayout.attributesanitization.getWhitelistedStyleFunction_(match[1], !1);
    if (null === functionName) {
      return jslayout.attributesanitization.INNOCUOUS_STYLE_PROPERTY_;
    }
  }
  return value;
};
jslayout.attributesanitization.countOpenParentheses_ = function(value, currentlyOpen) {
  if (0 > currentlyOpen) {
    return -1;
  }
  for (var i = 0; i < value.length; i++) {
    var c = value.charAt(i);
    if ("(" == c) {
      currentlyOpen++;
    } else {
      if (")" == c) {
        if (0 < currentlyOpen) {
          currentlyOpen--;
        } else {
          return -1;
        }
      }
    }
  }
  return currentlyOpen;
};
jslayout.attributesanitization.hasBalancedParentheses_ = function(value) {
  return 0 == jslayout.attributesanitization.countOpenParentheses_(value, 0);
};
jslayout.attributesanitization.filterForStyleStringContext = function(value) {
  return jslayout.attributesanitization.SAFE_CSS_PROPERTY_STRING_.test(value) ? value : jslayout.attributesanitization.INNOCUOUS_STYLE_PROPERTY_;
};
jslayout.attributesanitization.filterForStyleUrlContext = function(value) {
  if (!goog.isDefAndNotNull(value)) {
    return null;
  }
  var functionCallRegexp = new RegExp(jslayout.attributesanitization.CSS_FUNCTION_CALL_, "g");
  var urlRegexp = new RegExp(jslayout.attributesanitization.CSS_URL_FUNCTION_ARGS_, "g");
  var functionCallFound = !0;
  var openParens = 0;
  var ret = "";
  for (var region = value; functionCallFound;) {
    functionCallRegexp.lastIndex = 0;
    var match = functionCallRegexp.exec(region);
    functionCallFound = null !== match;
    var prefix = region;
    if (functionCallFound) {
      if (void 0 === match[1]) {
        return jslayout.attributesanitization.INNOCUOUS_STYLE_PROPERTY_;
      }
      var functionName = jslayout.attributesanitization.getWhitelistedStyleFunction_(match[1], !0);
      if (null === functionName) {
        return jslayout.attributesanitization.INNOCUOUS_STYLE_PROPERTY_;
      }
      prefix = region.substring(0, functionCallRegexp.lastIndex);
      region = region.substring(functionCallRegexp.lastIndex);
    }
    openParens = jslayout.attributesanitization.countOpenParentheses_(prefix, openParens);
    if (0 > openParens || !jslayout.attributesanitization.SAFE_CSS_PROPERTY_REGULAR_.test(prefix)) {
      return jslayout.attributesanitization.INNOCUOUS_STYLE_PROPERTY_;
    }
    ret += prefix;
    if (functionCallFound && "url" == functionName) {
      urlRegexp.lastIndex = 0;
      match = urlRegexp.exec(region);
      if (null === match || 0 != match.index) {
        return jslayout.attributesanitization.INNOCUOUS_STYLE_PROPERTY_;
      }
      var url = match[1];
      if (void 0 === url) {
        return jslayout.attributesanitization.INNOCUOUS_STYLE_PROPERTY_;
      }
      var lastIndex = 0 == url.length ? 0 : urlRegexp.lastIndex;
      if (")" != region.charAt(lastIndex)) {
        return jslayout.attributesanitization.INNOCUOUS_STYLE_PROPERTY_;
      }
      var quoteChar = "";
      1 < url.length && (goog.string.startsWith(url, '"') && goog.string.endsWith(url, '"') ? (url = url.substring(1, url.length - 1), quoteChar = '"') : goog.string.startsWith(url, "'") && goog.string.endsWith(url, "'") && (url = url.substring(1, url.length - 1), quoteChar = "'"));
      var filteredUrl = jslayout.attributesanitization.filterForImageUrlContext(url);
      if (filteredUrl == jslayout.attributesanitization.INNOCUOUS_URL_) {
        return jslayout.attributesanitization.INNOCUOUS_STYLE_PROPERTY_;
      }
      ret += quoteChar + filteredUrl + quoteChar;
      region = region.substring(lastIndex);
    }
  }
  return 0 != openParens ? jslayout.attributesanitization.INNOCUOUS_STYLE_PROPERTY_ : ret;
};
jslayout.attributesanitization.isQuotedString_ = function(str) {
  return 2 > str.length ? !1 : goog.string.startsWith(str, '"') && goog.string.endsWith(str, '"') || goog.string.startsWith(str, "'") && goog.string.endsWith(str, "'");
};
jslayout.attributesanitization.getWhitelistedStyleFunction_ = function(functionName, allowUrl) {
  var normalized = functionName.toLowerCase();
  var match = jslayout.attributesanitization.CSS_VENDOR_PREFIXES_.exec(functionName);
  if (null !== match) {
    if (void 0 === match[1]) {
      return null;
    }
    normalized = match[1];
  }
  return allowUrl && "url" == normalized || normalized in jslayout.attributesanitization.CSS_WHITELISTED_FUNCTIONS_ ? normalized : null;
};
jslayout.attributesanitization.CSS_SAFE_CHAR_BASE_ = "[+\\-.,!#%_a-zA-Z0-9\t]";
jslayout.attributesanitization.CSS_SAFE_CHAR_ = "(?:" + jslayout.attributesanitization.CSS_SAFE_CHAR_BASE_ + "| )";
jslayout.attributesanitization.CSS_UNICODE_NEWLINE_ = "\\n\\r\\f\\u0085\\u000b\\u2028\\u2029";
jslayout.attributesanitization.CSS_STRING_CHAR_NO_DOUBLE_QUOTE_ = '[^\\x00"\\\\' + jslayout.attributesanitization.CSS_UNICODE_NEWLINE_ + "]";
jslayout.attributesanitization.CSS_STRING_CHAR_NO_SINGLE_QUOTE_ = "[^\\x00'\\\\" + jslayout.attributesanitization.CSS_UNICODE_NEWLINE_ + "]";
jslayout.attributesanitization.CSS_ESCAPE_ = "\\\\(?:[\\x21-\\x2f\\x3a-\\x40\\x47-\\x60\\x67-\\x7e]|[0-9a-fA-F]{1,6}[ \t]?)";
jslayout.attributesanitization.CSS_STRING_TOKEN_ = '(?:"(?:' + jslayout.attributesanitization.CSS_STRING_CHAR_NO_DOUBLE_QUOTE_ + "|" + jslayout.attributesanitization.CSS_ESCAPE_ + ")*\"|'(?:" + jslayout.attributesanitization.CSS_STRING_CHAR_NO_SINGLE_QUOTE_ + "|" + jslayout.attributesanitization.CSS_ESCAPE_ + ")*')";
jslayout.attributesanitization.CSS_WHITELISTED_FUNCTIONS_ = {blur:!0, brightness:!0, calc:!0, circle:!0, contrast:!0, counter:!0, counters:!0, "cubic-bezier":!0, "drop-shadow":!0, ellipse:!0, grayscale:!0, hsl:!0, hsla:!0, "hue-rotate":!0, inset:!0, invert:!0, opacity:!0, "linear-gradient":!0, matrix:!0, matrix3d:!0, polygon:!0, "radial-gradient":!0, rgb:!0, rgba:!0, rect:!0, rotate:!0, rotate3d:!0, rotatex:!0, rotatey:!0, rotatez:!0, saturate:!0, sepia:!0, scale:!0, scale3d:!0, scalex:!0, scaley:!0, 
scalez:!0, steps:!0, skew:!0, skewx:!0, skewy:!0, translate:!0, translate3d:!0, translatex:!0, translatey:!0, translatez:!0};
jslayout.attributesanitization.CSS_FUNCTION_CALL_ = "([-_a-zA-Z0-9]+)\\(";
jslayout.attributesanitization.SAFE_CSS_PROPERTY_REGULAR_ = new RegExp("^(?:[*/]?(?:" + jslayout.attributesanitization.CSS_SAFE_CHAR_ + "|\\)|[a-zA-Z0-9]\\(|$))*$");
jslayout.attributesanitization.SAFE_CSS_PROPERTY_STRING_ = new RegExp("^(?:[*/]?(?:" + jslayout.attributesanitization.CSS_STRING_TOKEN_ + "|" + jslayout.attributesanitization.CSS_SAFE_CHAR_ + "|$))*$");
jslayout.attributesanitization.CSS_URL_SAFE_CHAR_ = "(?:[?&/:=]|" + jslayout.attributesanitization.CSS_SAFE_CHAR_BASE_ + ")";
jslayout.attributesanitization.CSS_URL_STRING_ = '(?:"(?:' + jslayout.attributesanitization.CSS_STRING_CHAR_NO_DOUBLE_QUOTE_ + "*)\"|'(?:" + jslayout.attributesanitization.CSS_STRING_CHAR_NO_SINGLE_QUOTE_ + "*)')";
jslayout.attributesanitization.CSS_URL_FUNCTION_ARGS_ = "[ \t]*(" + jslayout.attributesanitization.CSS_URL_STRING_ + "|" + jslayout.attributesanitization.CSS_URL_SAFE_CHAR_ + "*)[ \t]*";
jslayout.attributesanitization.CSS_VENDOR_PREFIXES_ = /^-(?:moz|ms|o|webkit|css3)-(.*)$/;
jslayout.attributesanitization.INNOCUOUS_URL_ = "about:invalid#zjslayoutz";
jslayout.attributesanitization.INNOCUOUS_META_REFRESH_URL_ = "0;url=about:invalid#zjslayoutz";
jslayout.attributesanitization.INNOCUOUS_STYLE_PROPERTY_ = "zjslayoutzinvalid";
jslayout.globals = {};
jslayout.globals.globals_ = {};
jslayout.globals.setGlobal = function(name, value) {
  jslayout.globals.globals_[name] = value;
};
jslayout.globals.getGlobals = function() {
  return jslayout.globals.globals_;
};
jslayout.globals.isGlobal = function(name) {
  return null != jslayout.globals.globals_[name];
};
prototemplate.ConstCss3PrefixRules = function() {
};
prototemplate.Css3PrefixRules = function(opt_data) {
  jsproto.MessageBaseJson.call(this, opt_data);
};
goog.inherits(prototemplate.Css3PrefixRules, jsproto.MessageBaseJson);
prototemplate.Css3PrefixRules.ConstRule = function() {
};
prototemplate.Css3PrefixRules.Rule = function(opt_data) {
  jsproto.MessageBaseJson.call(this, opt_data);
};
goog.inherits(prototemplate.Css3PrefixRules.Rule, jsproto.MessageBaseJson);
prototemplate.Css3PrefixRules.Role = {ANY:0, PROPERTY_NAME:1, PROPERTY_VALUE:2};
prototemplate.Css3PrefixRules.getMessageDescriptor = function() {
  prototemplate.Css3PrefixRules.messageDescriptor_ || prototemplate.Css3PrefixRules.createMessageDescriptor_();
  return prototemplate.Css3PrefixRules.messageDescriptor_;
};
prototemplate.Css3PrefixRules.prototype.getMessageDescriptor = prototemplate.Css3PrefixRules.getMessageDescriptor;
prototemplate.Css3PrefixRules.createMessageDescriptor_ = function() {
  var fieldDescriptors = {};
  prototemplate.Css3PrefixRules.messageDescriptor_ = {fieldDescriptor:fieldDescriptors};
  fieldDescriptors.rule = jsproto.makeFieldDescriptorRepeatedMessage(prototemplate.Css3PrefixRules.Rule.getMessageDescriptor());
};
goog.DEBUG && (prototemplate.Css3PrefixRules.fromObject = function(obj) {
  return new prototemplate.Css3PrefixRules(obj);
});
prototemplate.Css3PrefixRules.prototype.ruleSize = function() {
  return this.internalSizeOfRepeatedField("rule");
};
prototemplate.Css3PrefixRules.prototype.getRule = function(i) {
  return new prototemplate.Css3PrefixRules.Rule(this.internalRepeatedFieldGetMessage("rule", i));
};
prototemplate.Css3PrefixRules.prototype.removeRule = function(i) {
  this.internalRepeatedFieldRemove("rule", i);
};
prototemplate.Css3PrefixRules.prototype.addRule = function() {
  return new prototemplate.Css3PrefixRules.Rule(this.internalRepeatedFieldAddMessage("rule"));
};
prototemplate.Css3PrefixRules.Rule.getMessageDescriptor = function() {
  prototemplate.Css3PrefixRules.Rule.messageDescriptor_ || prototemplate.Css3PrefixRules.Rule.createMessageDescriptor_();
  return prototemplate.Css3PrefixRules.Rule.messageDescriptor_;
};
prototemplate.Css3PrefixRules.Rule.prototype.getMessageDescriptor = prototemplate.Css3PrefixRules.Rule.getMessageDescriptor;
prototemplate.Css3PrefixRules.Rule.createMessageDescriptor_ = function() {
  var fieldDescriptors = {};
  prototemplate.Css3PrefixRules.Rule.messageDescriptor_ = {fieldDescriptor:fieldDescriptors};
  fieldDescriptors.name = jsproto.FIELD_DESCRIPTOR_OPTIONAL_STRING;
  fieldDescriptors.prefixed_name = jsproto.FIELD_DESCRIPTOR_OPTIONAL_STRING;
  fieldDescriptors.role = jsproto.FIELD_DESCRIPTOR_OPTIONAL_ENUM;
};
goog.DEBUG && (prototemplate.Css3PrefixRules.Rule.fromObject = function(obj) {
  return new prototemplate.Css3PrefixRules.Rule(obj);
});
prototemplate.Css3PrefixRules.Rule.DEFAULT_NAME = "";
prototemplate.Css3PrefixRules.Rule.prototype.getName = function() {
  return this.internalGetScalarString("name");
};
prototemplate.Css3PrefixRules.Rule.DEFAULT_PREFIXED_NAME = "";
prototemplate.Css3PrefixRules.Rule.prototype.getPrefixedName = function() {
  return this.internalGetScalarString("prefixed_name");
};
prototemplate.Css3PrefixRules.Rule.DEFAULT_ROLE = prototemplate.Css3PrefixRules.Role.ANY;
prototemplate.Css3PrefixRules.Rule.prototype.getRole = function() {
  return this.internalGetScalarEnum("role");
};
prototemplate.RenderingMode = {CHROME:0, DATA:1, TRADITIONAL:2, ASYNC_DEBUG:3, ACT:4, BASEPAGE:5};
prototemplate.ConstRuntimeProto = function() {
};
prototemplate.RuntimeProto = function(opt_data) {
  jsproto.MessageBaseJson.call(this, opt_data);
};
goog.inherits(prototemplate.RuntimeProto, jsproto.MessageBaseJson);
prototemplate.RuntimeProto.ConstDebugOptions = function() {
};
prototemplate.RuntimeProto.DebugOptions = function(opt_data) {
  jsproto.MessageBaseJson.call(this, opt_data);
};
goog.inherits(prototemplate.RuntimeProto.DebugOptions, jsproto.MessageBaseJson);
prototemplate.RuntimeProto.getMessageDescriptor = function() {
  prototemplate.RuntimeProto.messageDescriptor_ || prototemplate.RuntimeProto.createMessageDescriptor_();
  return prototemplate.RuntimeProto.messageDescriptor_;
};
prototemplate.RuntimeProto.prototype.getMessageDescriptor = prototemplate.RuntimeProto.getMessageDescriptor;
prototemplate.RuntimeProto.createMessageDescriptor_ = function() {
  var fieldDescriptors = {};
  prototemplate.RuntimeProto.messageDescriptor_ = {fieldDescriptor:fieldDescriptors};
  fieldDescriptors.language = jsproto.FIELD_DESCRIPTOR_OPTIONAL_STRING;
  fieldDescriptors.is_rtl = jsproto.FIELD_DESCRIPTOR_OPTIONAL_BOOL;
  fieldDescriptors.encoding_name = jsproto.FIELD_DESCRIPTOR_OPTIONAL_STRING;
  fieldDescriptors.debug_options = jsproto.makeFieldDescriptorOptionalMessage(new prototemplate.RuntimeProto.DebugOptions({}), prototemplate.RuntimeProto.DebugOptions.getMessageDescriptor());
  fieldDescriptors.user_agent = jsproto.FIELD_DESCRIPTOR_OPTIONAL_STRING;
  fieldDescriptors.rendering_mode = jsproto.makeFieldDescriptorOptionalEnum(prototemplate.RuntimeProto.DEFAULT_RENDERING_MODE);
  fieldDescriptors.act_enabled = jsproto.FIELD_DESCRIPTOR_OPTIONAL_BOOL;
  fieldDescriptors.css3_prefix = jsproto.FIELD_DESCRIPTOR_OPTIONAL_STRING;
  fieldDescriptors.css3_prefix_rules = jsproto.makeFieldDescriptorOptionalMessage(new prototemplate.Css3PrefixRules({}), prototemplate.Css3PrefixRules.getMessageDescriptor());
  fieldDescriptors.enable_deferred_inline_images = jsproto.makeFieldDescriptorOptionalBool(prototemplate.RuntimeProto.DEFAULT_ENABLE_DEFERRED_INLINE_IMAGES);
  fieldDescriptors.enable_above_fold_time_onload_handlers = jsproto.FIELD_DESCRIPTOR_OPTIONAL_BOOL;
  fieldDescriptors.pinto_moduleset_id = jsproto.FIELD_DESCRIPTOR_OPTIONAL_STRING;
  fieldDescriptors.running_under_gws_diff = jsproto.FIELD_DESCRIPTOR_OPTIONAL_BOOL;
  fieldDescriptors.automatically_log_components = jsproto.FIELD_DESCRIPTOR_OPTIONAL_BOOL;
  fieldDescriptors.csp_nonce = jsproto.FIELD_DESCRIPTOR_OPTIONAL_STRING;
};
goog.DEBUG && (prototemplate.RuntimeProto.fromObject = function(obj) {
  return new prototemplate.RuntimeProto(obj);
});
prototemplate.RuntimeProto.DEFAULT_LANGUAGE = "";
prototemplate.RuntimeProto.prototype.getLanguage = function() {
  return this.internalGetScalarString("language");
};
prototemplate.RuntimeProto.DEFAULT_IS_RTL = !1;
prototemplate.RuntimeProto.prototype.getIsRtl = function() {
  return this.internalGetScalarBoolean("is_rtl");
};
prototemplate.RuntimeProto.prototype.setIsRtl = function(x) {
  this.data.is_rtl = x;
};
prototemplate.RuntimeProto.DEFAULT_ENCODING_NAME = "";
prototemplate.RuntimeProto.DEFAULT_USER_AGENT = "";
prototemplate.RuntimeProto.prototype.getUserAgent = function() {
  return this.internalGetScalarString("user_agent");
};
prototemplate.RuntimeProto.prototype.setUserAgent = function(x) {
  this.data.user_agent = x;
};
prototemplate.RuntimeProto.DEFAULT_RENDERING_MODE = prototemplate.RenderingMode.TRADITIONAL;
prototemplate.RuntimeProto.DEFAULT_ACT_ENABLED = !1;
prototemplate.RuntimeProto.DEFAULT_CSS3_PREFIX = "";
prototemplate.RuntimeProto.prototype.getCss3Prefix = function() {
  return this.internalGetScalarString("css3_prefix");
};
prototemplate.RuntimeProto.prototype.setCss3Prefix = function(x) {
  this.data.css3_prefix = x;
};
prototemplate.RuntimeProto.DEFAULT_ENABLE_DEFERRED_INLINE_IMAGES = !0;
prototemplate.RuntimeProto.DEFAULT_ENABLE_ABOVE_FOLD_TIME_ONLOAD_HANDLERS = !1;
prototemplate.RuntimeProto.DEFAULT_PINTO_MODULESET_ID = "";
prototemplate.RuntimeProto.DEFAULT_RUNNING_UNDER_GWS_DIFF = !1;
prototemplate.RuntimeProto.DEFAULT_AUTOMATICALLY_LOG_COMPONENTS = !1;
prototemplate.RuntimeProto.DEFAULT_CSP_NONCE = "";
prototemplate.RuntimeProto.prototype.getCss3PrefixRules = function() {
  return new prototemplate.Css3PrefixRules(this.data.css3_prefix_rules);
};
prototemplate.RuntimeProto.DebugOptions.getMessageDescriptor = function() {
  prototemplate.RuntimeProto.DebugOptions.messageDescriptor_ || prototemplate.RuntimeProto.DebugOptions.createMessageDescriptor_();
  return prototemplate.RuntimeProto.DebugOptions.messageDescriptor_;
};
prototemplate.RuntimeProto.DebugOptions.prototype.getMessageDescriptor = prototemplate.RuntimeProto.DebugOptions.getMessageDescriptor;
prototemplate.RuntimeProto.DebugOptions.createMessageDescriptor_ = function() {
  var fieldDescriptors = {};
  prototemplate.RuntimeProto.DebugOptions.messageDescriptor_ = {fieldDescriptor:fieldDescriptors};
  fieldDescriptors.output_annotations = jsproto.FIELD_DESCRIPTOR_OPTIONAL_BOOL;
  fieldDescriptors.dhtml_annotations = jsproto.FIELD_DESCRIPTOR_OPTIONAL_BOOL;
  fieldDescriptors.show_default_message = jsproto.FIELD_DESCRIPTOR_OPTIONAL_BOOL;
  fieldDescriptors.capture_replay = jsproto.FIELD_DESCRIPTOR_OPTIONAL_BOOL;
  fieldDescriptors.output_errors_inline = jsproto.FIELD_DESCRIPTOR_OPTIONAL_BOOL;
  fieldDescriptors.show_template_placeholder = jsproto.FIELD_DESCRIPTOR_OPTIONAL_BOOL;
  fieldDescriptors.output_jslog_annotations = jsproto.FIELD_DESCRIPTOR_OPTIONAL_BOOL;
  fieldDescriptors.output_jslog_comments = jsproto.FIELD_DESCRIPTOR_OPTIONAL_BOOL;
  fieldDescriptors.abort_on_error = jsproto.FIELD_DESCRIPTOR_OPTIONAL_BOOL;
  fieldDescriptors.output_gws_tools_annotations = jsproto.FIELD_DESCRIPTOR_OPTIONAL_BOOL;
  fieldDescriptors.css_annotations = jsproto.FIELD_DESCRIPTOR_OPTIONAL_BOOL;
  fieldDescriptors.output_cml_debug_ve_info = jsproto.FIELD_DESCRIPTOR_OPTIONAL_BOOL;
  fieldDescriptors.use_ved_based_comments = jsproto.FIELD_DESCRIPTOR_OPTIONAL_BOOL;
};
goog.DEBUG && (prototemplate.RuntimeProto.DebugOptions.fromObject = function(obj) {
  return new prototemplate.RuntimeProto.DebugOptions(obj);
});
prototemplate.RuntimeProto.DebugOptions.DEFAULT_OUTPUT_ANNOTATIONS = !1;
prototemplate.RuntimeProto.DebugOptions.DEFAULT_DHTML_ANNOTATIONS = !1;
prototemplate.RuntimeProto.DebugOptions.DEFAULT_SHOW_DEFAULT_MESSAGE = !1;
prototemplate.RuntimeProto.DebugOptions.DEFAULT_CAPTURE_REPLAY = !1;
prototemplate.RuntimeProto.DebugOptions.DEFAULT_OUTPUT_ERRORS_INLINE = !1;
prototemplate.RuntimeProto.DebugOptions.DEFAULT_SHOW_TEMPLATE_PLACEHOLDER = !1;
prototemplate.RuntimeProto.DebugOptions.DEFAULT_OUTPUT_JSLOG_ANNOTATIONS = !1;
prototemplate.RuntimeProto.DebugOptions.DEFAULT_OUTPUT_JSLOG_COMMENTS = !1;
prototemplate.RuntimeProto.DebugOptions.DEFAULT_ABORT_ON_ERROR = !1;
prototemplate.RuntimeProto.DebugOptions.DEFAULT_OUTPUT_GWS_TOOLS_ANNOTATIONS = !1;
prototemplate.RuntimeProto.DebugOptions.DEFAULT_CSS_ANNOTATIONS = !1;
prototemplate.RuntimeProto.DebugOptions.DEFAULT_OUTPUT_CML_DEBUG_VE_INFO = !1;
prototemplate.RuntimeProto.DebugOptions.DEFAULT_USE_VED_BASED_COMMENTS = !1;
jslayout.EvalContext = function() {
  this.vars_ = {};
  this.globalVariablePool_ = null;
  this.instance_ = ++jslayout.EvalContext.instance_;
};
jslayout.EvalContext.epoch_ = 0;
jslayout.EvalContext.epoch = function() {
  return ++jslayout.EvalContext.epoch_;
};
jslayout.EvalContext.instance_ = 0;
jslayout.EvalContext.prototype.setGlobalVariablePool = function(pool) {
  this.globalVariablePool_ = pool;
};
jslayout.EvalContext.prototype.inject = function(setter, key) {
  this.jsexecSetter(setter, this.globalVariablePool_ ? this.globalVariablePool_.getGlobal(key) : null);
};
jslayout.EvalContext.copyProperties_ = function(to, from, args) {
  if (args) {
    to.__rtl = from.__rtl;
    to.__markup_allowed = from.__markup_allowed;
    for (var i = 0; i < args.length; ++i) {
      to[args[i]] = from[args[i]];
    }
  } else {
    for (i in from) {
      to[i] = from[i];
    }
  }
};
jslayout.EvalContext.prototype.getBidiDirIsRtl = function() {
  return !!this.vars_.__rtl;
};
jslayout.EvalContext.prototype.setBidiDirIsRtl = function(value) {
  this.vars_.__rtl = value;
};
jslayout.EvalContext.prototype.setMarkupAllowed = function(value) {
  this.vars_.__markup_allowed = value;
};
jslayout.EvalContext.prototype.setController = function(value) {
  this.vars_.__controller = value;
};
jslayout.EvalContext.reset = function() {
  jslayout.EvalContext.runtime_ = new prototemplate.RuntimeProto;
  goog.labs.userAgent.engine.isWebKit() ? jslayout.EvalContext.runtime_.setCss3Prefix("-webkit-") : goog.labs.userAgent.browser.isFirefox() ? jslayout.EvalContext.runtime_.setCss3Prefix("-moz-") : goog.labs.userAgent.browser.isIE() ? jslayout.EvalContext.runtime_.setCss3Prefix("-ms-") : goog.labs.userAgent.browser.isOpera() && jslayout.EvalContext.runtime_.setCss3Prefix("-o-");
  jslayout.EvalContext.runtime_.setIsRtl(goog.i18n.bidi.IS_RTL);
};
jslayout.EvalContext.runtime = function() {
  jslayout.EvalContext.runtime_ || jslayout.EvalContext.reset();
  return jslayout.EvalContext.runtime_;
};
jslayout.EvalContext.runtime_ = null;
jslayout.EvalContext.runtimeData = function() {
  return jslayout.EvalContext.runtime().toObject();
};
jslayout.EvalContext.prototype.jsexec = function(exprFunction, opt_template) {
  return exprFunction.call(opt_template, this.vars_, jslayout.globals.getGlobals());
};
jslayout.EvalContext.prototype.jsexecSetter = function(setter, value) {
  setter(this.vars_, value);
};
jslayout.EvalContext.prototype.copyFrom = function(from, opt_args) {
  null != from.globalVariablePool_ && (this.globalVariablePool_ = from.globalVariablePool_);
  jslayout.EvalContext.copyProperties_(this.vars_, from.vars_, opt_args || null);
};
jslayout.EvalContext.prototype.setVariable = function(name, value) {
  this.vars_[name] = value;
};
jslayout.EvalContext.prototype.getVariable = function(name) {
  return this.vars_[name];
};
jslayout.EvalContext.prototype.shallowUpdate = function(other, opt_params) {
  var changed = !1;
  for (var name in this.vars_) {
    var newValue = other.vars_[name];
    this.vars_[name] != newValue && (this.vars_[name] = newValue, opt_params && goog.isArray(opt_params) ? -1 != opt_params.indexOf(name) : null != opt_params[name]) && (changed = !0);
  }
  return changed;
};
jslayout.EvalContext.prototype.debugString = function() {
  var result = "EvalContext{";
  for (var key in this.vars_) {
    result += key + ": " + typeof this.vars_[key] + ", ";
  }
  return result + "}";
};
jslayout.Attribute = {JSAN:"jsan", JSACTION:"jsaction", JSFOR:"jsfor", JSKEY:"jskey", JSINSTANCE:"jsinstance", JSDISPLAY:"jsdisplay", JSIF:"jsif", JSMATCH:"jsmatch", JSATTRS:"jsattrs", JSVARS:"jsvars", JSEVAL:"jseval", TRANSCLUDE:"transclude", JSCONTENT:"jscontent", JSSKIP:"jsskip", JSTCACHE:"jstcache", JSPROPS:"jsprops", JSSWITCH:"jsswitch", JSCASE:"jscase", JSCASEDEFAULT:"jscasedefault", JSGLOBALS:"jsglobals", JSL:"jsl", JSVS:"jsvs", JSTID:"jstid", JSSC:"jssc"};
jslayout.Char = {AMPERSAND:"&", ASTERISK:"*", AT:"@", CARET:"^", COLON:":", COMMA:",", DOLLAR:"$", G:"g", PARENCLOSE:")", PARENOPEN:"(", PERIOD:".", PIPE:"|", PLUS:"+", QUESTIONMARK:"?", SPACE:" "};
jslayout.JsRenderingMode = {TRADITIONAL:0, DOMDIFF:1};
jslayout.Name = {INDEX:"$index", COUNT:"$count", THIS:"$this", HAS:"has", SIZE:"size", RUNTIME:"runtime"};
jslayout.Property = {JSTCACHE:"__jstcache", INNERHTML:"__innerhtml", CONTEXT:"__ctx", COMMAND_DATA_NODE:"__cdn", REACTIVE_JSACTION_CONTEXT:"__rjsctx", SERVERONLY_VALUES:"__vs", RESOLVED_TRANSCLUSIONS:"__rt", TAG:"__tag", SRC_POS:"__src_pos", DEBUG_TEMPLATE_POOL:"__template_pool", ATTACHED_TEMPLATE:"__attached_template", NARROW_STRATEGY:"__narrow_strategy", FORKEY_HAS_UNPROCESSED_ELEMENTS:"__forkey_has_unprocessed_elements", VDOM:"__vdom"};
jslayout.Command = {ATTR:"$a", ATTR_LEGACY:"_a", CONTENT:"$c", CSS:"css", DIR_HTML:"$dh", DIR_JSCONTENT:"$dc", DIR_JSDIR:"$dd", DISPLAY:"display", EVAL:"$e", FOR:"for", FORKEY:"$fk", GLOBAL:"$g", IDL_CONTROLLER:"$ic", IDL_ACTION:"$ia", IF:"$if", KEY:"$k", OBSERVE:"$o", REACTIVE_JSACTION:"$rj", RENDER:"$r", SKIP:"$sk", SPLICE:"$x", SWITCH:"$s", SWITCHCASE:"$sc", SWITCHDEFAULT:"$sd", TAG:"$tg", TEMPLATE:"$t", USE:"$u", USEATTR:"$ua", USEATTREXPR:"$uae", USEEXPR:"$ue", USEPARAM:"$up", VAR:"var", VAR_SERVERONLY:"$vs"};
jslayout.CmdOffset = {ATTR_TYPE:0, ATTR_SANITIZATION_CONTEXT:1, ATTR_JSCONTROLLER_FLAG:2, ATTR_CONDITION:3, ATTR_VALUE_FUNCTION:4, ATTR_NAME:5, ATTR_PROP_NAME:6, ATTR_INIT_ONLY:7, ATTR_CHECK_DISPLAY_NONE:8};
jslayout.Element = {JSL:"jsl"};
jslayout.ElementDataIndex = {NAME:0, FLAGS:1, NEEDED_FOR_UPDATE:2, COMMAND_LIST:3, CHILDREN:4};
jslayout.String = {EMPTY:"", DIV:"div", ID:"id", VALUE:"value", CHECKED:"checked", ASTERISKZERO:"*0", ZERO:"0", CLASS:"class", STYLE:"style", PARAM:"param", RAW:"raw", SAFE:"safe", HTML_SNIPPET:"html_snippet", DOLLARONE:"$1", AMPERSAND_DOUBLE:"&&", IDL_LOAD_JSACTION_EVENT_TYPE:"load", IDL_CREATE_JSACTION_EVENT_TYPE:"create", NULL:"null", IDL_CONTROLLER_KEY_PREFIX:"controller:", IDL_ACTION_KEY_PREFIX:"action:", IDL_ACTION_NAMESPACE:"jsl", IDL_ACTION:"_", IDL_ACTION_FULL:"jsl._", OBSERVER_KEY_PREFIX:"observer:"};
jslayout.Type = {UNDEFINED:"undefined", BOOLEAN:"boolean"};
jslayout.ActionType = {NORMAL:0, SIMPLE:1, TRANSCLUSION:3, DESCENDANTS:4};
jslayout.DescentType = {NONE:0, DESCENDANT_ELEMENTS:1, FOR:2, SWITCH:3};
jslayout.dom = {};
jslayout.dom.loadContainer = function(doc, html) {
  var container = doc.createElement("div");
  var wrap = 0;
  if (0 == html.indexOf("<tbody") || 0 == html.indexOf("<thead") || 0 == html.indexOf("<tfoot") || 0 == html.indexOf("<caption") || 0 == html.indexOf("<colgroup") || 0 == html.indexOf("<col")) {
    html = "<table>" + html + "</table>", wrap = 1;
  } else {
    if (0 == html.indexOf("<tr")) {
      html = "<table><tbody>" + html + "</tbody></table>", wrap = 2;
    } else {
      if (0 == html.indexOf("<td") || 0 == html.indexOf("<th")) {
        html = "<table><tbody><tr>" + html + "</tr></tbody></table>", wrap = 3;
      }
    }
  }
  container.innerHTML = html;
  for (var i = 0; i < wrap; ++i) {
    container = container.firstChild;
  }
  return container;
};
jslayout.dom.loadInnerHtml = function(doc, element, html) {
  if ("" != html || "" != element.innerHTML) {
    var name = element.nodeName.toLowerCase();
    var wrap = 0;
    "table" == name ? (html = "<table>" + html + "</table>", wrap = 1) : "tbody" == name || "thead" == name || "tfoot" == name || "caption" == name || "colgroup" == name || "col" == name ? (html = "<table><tbody>" + html + "</tbody></table>", wrap = 2) : "tr" == name && (html = "<table><tbody><tr>" + html + "</tr></tbody></table>", wrap = 3);
    if (0 == wrap) {
      element.innerHTML = html;
    } else {
      var container = doc.createElement("div");
      container.innerHTML = html;
      for (var i = 0; i < wrap; ++i) {
        container = container.firstChild;
      }
      goog.dom.removeChildren(element);
      for (var c = container.firstChild; c; c = container.firstChild) {
        element.appendChild(c);
      }
    }
  }
};
jslayout.dom.load = function(doc, html) {
  var container = jslayout.dom.loadContainer(doc, html);
  return !container.firstChild || container.firstChild.nextSibling || container.firstChild.nodeType != goog.dom.NodeType.ELEMENT ? container : container.firstChild;
};
jslayout.dom.text = function(node) {
  if (node.nodeType == goog.dom.NodeType.TEXT) {
    return node.nodeValue;
  }
  if (node.nodeType == goog.dom.NodeType.ELEMENT) {
    var element = node;
    var ret = "";
    if (goog.style.isElementShown(element)) {
      for (var c = element.firstChild; c; c = c.nextSibling) {
        ret += jslayout.dom.text(c);
      }
    }
    return ret;
  }
  return "";
};
jslayout.dom.assignInnerHtml = function(element, value) {
  var innerhtml = element[jslayout.Property.INNERHTML];
  innerhtml || (innerhtml = element[jslayout.Property.INNERHTML] = [element.innerHTML, element.innerHTML]);
  if (innerhtml[0] != value || innerhtml[1] != element.innerHTML) {
    element.innerHTML = value, innerhtml[0] = value, innerhtml[1] = element.innerHTML;
  }
};
jslayout.dom.assignText = function(element, value) {
  var nonTextNodePresent = !1;
  var oldValue = "";
  for (var node = element.firstChild; node; node = node.nextSibling) {
    if (node.nodeType != goog.dom.NodeType.TEXT) {
      nonTextNodePresent = !0;
      break;
    }
    oldValue += node.nodeValue;
  }
  var firstChild = element.firstChild;
  if (firstChild) {
    if (nonTextNodePresent || oldValue != value) {
      for (; firstChild.nextSibling;) {
        goog.dom.removeNode(firstChild.nextSibling);
      }
    }
    firstChild.nodeType != goog.dom.NodeType.TEXT && goog.dom.removeNode(firstChild);
  }
  if (element.firstChild) {
    oldValue != value && (element.firstChild.nodeValue = value);
  } else {
    var t = element.ownerDocument.createTextNode(value);
    element.appendChild(t);
  }
};
jslayout.dom.isInputElement = function(name) {
  return "input" == name || "INPUT" == name || "option" == name || "OPTION" == name || "select" == name || "SELECT" == name || "textarea" == name || "TEXTAREA" == name;
};
jslayout.dom.isInputAttribute = function(name) {
  name = name.toLowerCase();
  return "value" == name || "checked" == name || "selected" == name || "selectedindex" == name;
};
jslayout.dom.URL_ATTRIBUTES = {action:!0, cite:!0, data:!0, formaction:!0, href:!0, icon:!0, manifest:!0, poster:!0, src:!0};
jslayout.dom.hasUrlValue = function(name) {
  return name in jslayout.dom.URL_ATTRIBUTES;
};
jslayout.dom.getElementsByClass = function(name) {
  var result = [];
  var candidates = goog.dom.getElementsByClass(name);
  for (var i = 0; i < candidates.length; i++) {
    for (var c = candidates[i]; "none" != c.style.display;) {
      if (c = c.parentNode, null == c || null == c.style) {
        result.push(candidates[i]);
        break;
      }
    }
  }
  return result;
};
jslayout.dom.getInstance = function(element) {
  var text = element.getAttribute(jslayout.Attribute.JSINSTANCE);
  if (text) {
    var index = text.indexOf(";");
    var value = 0 <= index ? text.substr(0, index) : text;
    return value.split(",");
  }
  return [];
};
jslayout.dom.getKey = function(element) {
  var text = element.getAttribute(jslayout.Attribute.JSINSTANCE);
  if (text) {
    var index = text.indexOf(";");
    return 0 <= index ? text.substr(index + 1) : null;
  }
  return null;
};
jslayout.dom.instanceGreater = function(i1, i2, dim) {
  var i1d = i1[dim] || "0";
  var i2d = i2[dim] || "0";
  i1d = parseInt("*" == i1d.charAt(0) ? i1d.substring(1) : i1d, 10);
  i2d = parseInt("*" == i2d.charAt(0) ? i2d.substring(1) : i2d, 10);
  return i1d == i2d ? i1.length > dim || i2.length > dim ? jslayout.dom.instanceGreater(i1, i2, dim + 1) : !1 : i1d > i2d;
};
jslayout.dom.setInstance = function(element, instances, dimension, count, index, opt_key) {
  instances[dimension] = index >= count - 1 ? jslayout.Char.ASTERISK + index : String(index);
  var value = instances.join(",");
  opt_key && (value += ";" + opt_key);
  element.setAttribute(jslayout.Attribute.JSINSTANCE, value);
};
jslayout.dom.skipInstances = function(element, forDim) {
  if (!element.hasAttribute(jslayout.Attribute.JSINSTANCE)) {
    return element;
  }
  for (var thisInstance = jslayout.dom.getInstance(element);;) {
    var nextSibling = goog.dom.getNextElementSibling(element);
    if (!nextSibling) {
      return element;
    }
    var nextInstance = jslayout.dom.getInstance(nextSibling);
    if (!jslayout.dom.instanceGreater(nextInstance, thisInstance, forDim)) {
      return element;
    }
    element = nextSibling;
    thisInstance = nextInstance;
  }
};
jslayout.dom.prettyPrint = function(element, opt_omitAttrs, opt_indent) {
  var indent = null == opt_indent ? "" : opt_indent;
  var s = indent + "<" + element.nodeName;
  for (var i = 0; i < element.attributes.length; i++) {
    var attr = element.attributes[i];
    var omit = !1;
    if (null != opt_omitAttrs) {
      for (var j = 0; j < opt_omitAttrs.length; j++) {
        if (attr.name == opt_omitAttrs[j]) {
          omit = !0;
          break;
        }
      }
    }
    omit || (s += " " + attr.name + '="' + attr.value + '"');
  }
  s += ">";
  var child = element.firstChild;
  if (null != child) {
    s += "\n";
    var childIndent = indent + "  ";
    do {
      switch(child.nodeType) {
        case 1:
          s += jslayout.dom.prettyPrint(child, opt_omitAttrs, childIndent);
          break;
        case 3:
          s += childIndent + child.textContent.trim() + "\n";
          break;
        default:
          s += childIndent + child + "\n";
      }
      child = child.nextSibling;
    } while (null != child);
    s += indent;
  }
  s += "</" + element.nodeName + ">\n";
  return s;
};
jslayout.jsattrs = {};
jslayout.jsattrs.PROPNAME = {"for":"htmlFor", "class":"className"};
jslayout.jsattrs.ATTNAME = goog.object.transpose(jslayout.jsattrs.PROPNAME);
jslayout.jsattrs.eval = function(expr) {
  try {
    return "" === expr ? void 0 : eval("(0," + expr + ")");
  } catch (e) {
    return null;
  }
};
jslayout.jsattrs.restrictAssignment = function(element, property) {
  return ("CANVAS" == element || "canvas" == element) && ("width" == property || "height" == property);
};
jslayout.string = {};
jslayout.string.HTML_SNIPPET_SUPPORTED_TAGS_ = "b u i em br sub sup wbr span".split(" ");
jslayout.string.HTML_SNIPPET_SUPPORTED_TAGS_REGEXP_ = new RegExp("^</?(" + jslayout.string.HTML_SNIPPET_SUPPORTED_TAGS_.join("|") + ")( dir=(rtl|ltr|'ltr'|'rtl'|\"ltr\"|\"rtl\"))?>");
jslayout.string.HTML_SNIPPET_SUPPORTED_ENTITIES_REGEXP_ = /^&([a-zA-Z]+|#[0-9]+|#x[0-9a-fA-F]+);/;
jslayout.string.ESCAPED_ = {"<":"&lt;", ">":"&gt;", "&":"&amp;", '"':"&quot;"};
jslayout.string.htmlEscape = function(str) {
  if (null == str) {
    return "";
  }
  if (!jslayout.string.allRe_.test(str)) {
    return str;
  }
  -1 != str.indexOf("&") && (str = str.replace(jslayout.string.amperRe_, "&amp;"));
  -1 != str.indexOf("<") && (str = str.replace(jslayout.string.ltRe_, "&lt;"));
  -1 != str.indexOf(">") && (str = str.replace(jslayout.string.gtRe_, "&gt;"));
  -1 != str.indexOf('"') && (str = str.replace(jslayout.string.quotRe_, "&quot;"));
  return str;
};
jslayout.string.htmlEscapeQuote = function(str) {
  if (null == str) {
    return "";
  }
  -1 != str.indexOf('"') && (str = str.replace(jslayout.string.quotRe_, "&quot;"));
  return str;
};
jslayout.string.htmlUnescape = function(str) {
  if (null == str) {
    return "";
  }
  if (-1 == str.indexOf("&")) {
    return str;
  }
  -1 != str.indexOf("&lt;") && (str = str.replace(/&lt;/g, "<"));
  -1 != str.indexOf("&gt;") && (str = str.replace(/&gt;/g, ">"));
  -1 != str.indexOf("&quot;") && (str = str.replace(/&quot;/g, '"'));
  -1 != str.indexOf("&amp;") && (str = str.replace(/&amp;/g, "&"));
  return str;
};
jslayout.string.amperRe_ = /&/g;
jslayout.string.ltRe_ = /</g;
jslayout.string.gtRe_ = />/g;
jslayout.string.quotRe_ = /\"/g;
jslayout.string.allRe_ = /[&<>\"]/;
jslayout.string.innerHtmlDiv_ = null;
jslayout.string.htmlSnippetEscape = function(input) {
  var output = "";
  var i = 0;
  for (var character; character = input[i]; ++i) {
    switch(character) {
      case "<":
      case "&":
        var matchedLength = ("<" == character ? jslayout.string.HTML_SNIPPET_SUPPORTED_TAGS_REGEXP_ : jslayout.string.HTML_SNIPPET_SUPPORTED_ENTITIES_REGEXP_).exec(input.substr(i));
        if (matchedLength && matchedLength[0]) {
          output += input.substr(i, matchedLength[0].length);
          i += matchedLength[0].length - 1;
          continue;
        }
      case ">":
      case '"':
        output += jslayout.string.ESCAPED_[character];
        break;
      default:
        output += character;
    }
  }
  null == jslayout.string.innerHtmlDiv_ && (jslayout.string.innerHtmlDiv_ = document.createElement("div"));
  jslayout.string.innerHtmlDiv_.innerHTML = output;
  return jslayout.string.innerHtmlDiv_.innerHTML;
};
jslayout.string.unwrapSafeScript = function(input) {
  return security.types.protorestricted.unwrapSafeScriptProtoInternalValue(input);
};
jslayout.string.unwrapSafeHtml = function(input) {
  return security.types.protorestricted.unwrapSafeHtmlProtoInternalValue(input);
};
jslayout.string.unwrapSafeStyleSheet = function(input) {
  return security.types.protorestricted.unwrapSafeStyleSheetProtoInternalValue(input);
};
jslayout.string.unwrapSafeUrl = function(input) {
  return security.types.protorestricted.unwrapSafeUrlProtoInternalValue(input);
};
jslayout.string.unwrapTrustedResourceUrl = function(input) {
  return security.types.protorestricted.unwrapTrustedResourceUrlProtoInternalValue(input);
};
jslayout.string.onlyToBeUsedInJsLayoutGeneratedCodeCreateSafeHtml = function(html_string) {
  return goog.html.uncheckedconversions.safeHtmlFromStringKnownToSatisfyTypeContract(goog.string.Const.from("Strict mode jslayout: b/8483719"), html_string);
};
jslayout.url = {};
jslayout.url.COMPONENT_INDEX_ = function() {
  var ret = {};
  ret[prototemplate.AttributeType.Type.URL_PROTOCOL] = goog.uri.utils.ComponentIndex.SCHEME;
  ret[prototemplate.AttributeType.Type.URL_HOST] = goog.uri.utils.ComponentIndex.DOMAIN;
  ret[prototemplate.AttributeType.Type.URL_PORT] = goog.uri.utils.ComponentIndex.PORT;
  ret[prototemplate.AttributeType.Type.URL_PATH] = goog.uri.utils.ComponentIndex.PATH;
  ret[prototemplate.AttributeType.Type.URL_QUERY_COMPONENT] = goog.uri.utils.ComponentIndex.QUERY_DATA;
  ret[prototemplate.AttributeType.Type.URL_HASH] = goog.uri.utils.ComponentIndex.FRAGMENT;
  return ret;
}();
jslayout.url.decodeParams = function(encoded) {
  var params = encoded.split("&");
  var state = {};
  var i = 0;
  for (var I = params.length; i < I; ++i) {
    var nameValue = params[i].split("=");
    if (2 == nameValue.length) {
      var uglyValue = jslayout.url.uglify(nameValue[1]);
      try {
        state[decodeURIComponent(nameValue[0])] = decodeURIComponent(uglyValue);
      } catch (e) {
      }
    }
  }
  return state;
};
jslayout.url.encodeParams = function(state) {
  var params = [];
  for (var name in state) {
    var value = state[name];
    null != value && params.push(encodeURIComponent(name) + "=" + jslayout.url.beautify(encodeURIComponent(value)));
  }
  return params.join("&");
};
jslayout.url.beautify = function(param) {
  return param.replace(/%3A/gi, ":").replace(/%20/g, "+").replace(/%2C/gi, ",").replace(/%7C/gi, "|");
};
jslayout.url.uglify = function(param) {
  return param.replace(/,/gi, "%2C").replace(/[+]/g, "%20").replace(/:/g, "%3A");
};
jslayout.url.parse = function(urlValue) {
  var parsedUrl = urlValue[1] = goog.uri.utils.split(urlValue[0]);
  parsedUrl[goog.uri.utils.ComponentIndex.QUERY_DATA] && (parsedUrl[goog.uri.utils.ComponentIndex.QUERY_DATA] = jslayout.url.decodeParams(parsedUrl[goog.uri.utils.ComponentIndex.QUERY_DATA]));
  urlValue[0] = null;
};
jslayout.url.value = function(urlValue, component, name, value) {
  null == urlValue[1] && jslayout.url.parse(urlValue);
  var url = urlValue[1];
  if (component in jslayout.url.COMPONENT_INDEX_) {
    var componentIndex = jslayout.url.COMPONENT_INDEX_[component];
    if (component == prototemplate.AttributeType.Type.URL_QUERY_COMPONENT) {
      if (name) {
        var paramMap = url[componentIndex];
        null != value ? (paramMap || (paramMap = url[componentIndex] = {}), paramMap[name] = value) : paramMap && delete paramMap[name];
      }
    } else {
      url[componentIndex] = value;
    }
  }
};
jslayout.url.assemble = function(parsedUrl) {
  parsedUrl[goog.uri.utils.ComponentIndex.QUERY_DATA] && (parsedUrl[goog.uri.utils.ComponentIndex.QUERY_DATA] = jslayout.url.encodeParams(parsedUrl[goog.uri.utils.ComponentIndex.QUERY_DATA]));
  "http" == parsedUrl[goog.uri.utils.ComponentIndex.SCHEME] && "80" == parsedUrl[goog.uri.utils.ComponentIndex.PORT] && (parsedUrl[goog.uri.utils.ComponentIndex.PORT] = null);
  "https" == parsedUrl[goog.uri.utils.ComponentIndex.SCHEME] && "443" == parsedUrl[goog.uri.utils.ComponentIndex.PORT] && (parsedUrl[goog.uri.utils.ComponentIndex.PORT] = null);
  var domain = parsedUrl[goog.uri.utils.ComponentIndex.DOMAIN];
  if (/:[0-9]+$/.test(domain)) {
    var colon = domain.lastIndexOf(":");
    parsedUrl[goog.uri.utils.ComponentIndex.DOMAIN] = domain.substr(0, colon);
    parsedUrl[goog.uri.utils.ComponentIndex.PORT] = domain.substr(colon + 1);
  }
  return goog.uri.utils.buildFromEncodedParts(parsedUrl[goog.uri.utils.ComponentIndex.SCHEME], parsedUrl[goog.uri.utils.ComponentIndex.USER_INFO], parsedUrl[goog.uri.utils.ComponentIndex.DOMAIN], parsedUrl[goog.uri.utils.ComponentIndex.PORT], parsedUrl[goog.uri.utils.ComponentIndex.PATH], parsedUrl[goog.uri.utils.ComponentIndex.QUERY_DATA], parsedUrl[goog.uri.utils.ComponentIndex.FRAGMENT]);
};
jslayout.Tag = function(name) {
  this.name_ = name;
  this.attributes_ = null;
  this.previousAttributes_ = null;
  this.initOnlyAttributes_ = null;
  this.jstag_ = null;
  this.flags_ = 0;
  this.startIndex_ = 0;
  this.wasReset_ = !1;
  this.deferredReset_ = -1;
  this.id_ = ++jslayout.Tag.instance_;
};
jslayout.Tag.prototype.name = function() {
  return this.name_;
};
jslayout.Tag.defaultAttributeValue = function(element, attribute) {
  return "href" == attribute.toLowerCase() ? "#" : "img" == element.toLowerCase() && "src" == attribute.toLowerCase() ? "/images/cleardot.gif" : "";
};
jslayout.Tag.prototype.id = function() {
  return this.id_;
};
jslayout.Tag.ENTRY_TYPE_TRANSCLUSION = -1;
jslayout.Tag.instance_ = 0;
jslayout.Tag.REMOVE_ATTRIBUTES = 512;
jslayout.Tag.REMOVE_CLASSES = 256;
jslayout.Tag.EMIT_JSAN = 64;
jslayout.Tag.TEXT_ONLY = 1024;
jslayout.Tag.TEXT_ONLY_CONTENT = 2048;
jslayout.Tag.STRIDE = 7;
jslayout.Tag.OFFSET_TYPE = 0;
jslayout.Tag.OFFSET_NAME = 1;
jslayout.Tag.OFFSET_PROPERTY = 2;
jslayout.Tag.OFFSET_SANITIZATION = 3;
jslayout.Tag.OFFSET_TRANSCLUDED = 4;
jslayout.Tag.OFFSET_VALUE = 5;
jslayout.Tag.OFFSET_INIT_ONLY = 6;
jslayout.Tag.prototype.mismatch_ = function() {
  this.previousAttributes_ = this.attributes_;
  this.attributes_ = this.previousAttributes_.slice(0, this.deferredReset_);
  this.deferredReset_ = -1;
};
jslayout.Tag.prototype.getDirAttributeValue = function() {
  var attributes = this.attributes_;
  var len = attributes ? attributes.length : 0;
  for (var i = 0; i < len; i += jslayout.Tag.STRIDE) {
    if (attributes[i + jslayout.Tag.OFFSET_TYPE] == prototemplate.AttributeType.Type.REGULAR && "dir" == attributes[i + jslayout.Tag.OFFSET_NAME]) {
      return attributes[i + jslayout.Tag.OFFSET_VALUE];
    }
  }
  return null;
};
jslayout.Tag.prototype.push_ = function(type, attributeName, propertyName, sanitizationContext, transcluded, value, initOnly) {
  var dr = this.deferredReset_;
  if (-1 != dr) {
    if (this.attributes_[dr + 0] == type && this.attributes_[dr + 1] == attributeName && this.attributes_[dr + 2] == propertyName && this.attributes_[dr + 3] == sanitizationContext && this.attributes_[dr + 4] == transcluded && this.attributes_[dr + 5] == value && this.attributes_[dr + 6] == initOnly) {
      this.deferredReset_ += jslayout.Tag.STRIDE;
      return;
    }
    this.mismatch_();
  } else {
    this.attributes_ || (this.attributes_ = []);
  }
  this.attributes_.push(type);
  this.attributes_.push(attributeName);
  this.attributes_.push(propertyName);
  this.attributes_.push(sanitizationContext);
  this.attributes_.push(transcluded);
  this.attributes_.push(value);
  this.attributes_.push(initOnly);
};
jslayout.Tag.prototype.setFlags = function(flags) {
  this.flags_ |= flags;
};
jslayout.Tag.prototype.getEndTag = function() {
  if (this.flags_ & jslayout.Tag.TEXT_ONLY) {
    var dir = this.getDirAttributeValue();
    return "rtl" == dir ? "\u202c\u200e" : "ltr" == dir ? "\u202c\u200f" : "";
  }
  return !1 === this.jstag_ ? "" : "</" + this.name_ + ">";
};
jslayout.Tag.prototype.has_ = function(type, attribute, opt_property) {
  var end = -1 != this.deferredReset_ ? this.deferredReset_ : this.attributes_ ? this.attributes_.length : 0;
  for (var i = 0; i < end; i += jslayout.Tag.STRIDE) {
    if (this.attributes_[i + jslayout.Tag.OFFSET_TYPE] == type && this.attributes_[i + jslayout.Tag.OFFSET_NAME] == attribute && this.attributes_[i + jslayout.Tag.OFFSET_PROPERTY] == opt_property) {
      return !0;
    }
  }
  if (this.initOnlyAttributes_) {
    for (i = 0; i < this.initOnlyAttributes_.length; i += jslayout.Tag.STRIDE) {
      if (this.initOnlyAttributes_[i + jslayout.Tag.OFFSET_TYPE] == type && this.initOnlyAttributes_[i + jslayout.Tag.OFFSET_NAME] == attribute && this.initOnlyAttributes_[i + jslayout.Tag.OFFSET_PROPERTY] == opt_property) {
        return !0;
      }
    }
  }
  return !1;
};
jslayout.Tag.prototype.hasTextOnlyContent = function() {
  return 0 != (this.flags_ & jslayout.Tag.TEXT_ONLY_CONTENT);
};
jslayout.Tag.prototype.initializeFromDom = function(element, opt_templateKey) {
  var jsan = element.getAttribute(jslayout.Attribute.JSAN);
  if (jsan) {
    this.setFlags(jslayout.Tag.EMIT_JSAN);
    var jsanParts = jsan.split(",");
    var len = jsanParts.length;
    if (0 < len) {
      this.attributes_ = [];
      for (var i = 0; i < len; i++) {
        var entry = jsanParts[i];
        var cut = entry.indexOf(".");
        if (-1 == cut) {
          this.push_(jslayout.Tag.ENTRY_TYPE_TRANSCLUSION, null, null, null, null, entry, !1);
        } else {
          var type = parseInt(entry.substr(0, cut), 10);
          var name = entry.substr(cut + 1);
          var propertyName = null;
          var value = "_jsan_";
          switch(type) {
            case prototemplate.AttributeType.Type.CLASS_PROPERTY:
              var attributeName = jslayout.String.CLASS;
              propertyName = name;
              value = "";
              break;
            case prototemplate.AttributeType.Type.STYLE_PROPERTY:
              attributeName = jslayout.String.STYLE;
              propertyName = name;
              break;
            case prototemplate.AttributeType.Type.URL_QUERY_COMPONENT:
              var parts = name.split(".");
              attributeName = parts[0];
              propertyName = parts[1];
              break;
            case prototemplate.AttributeType.Type.REGULAR:
              attributeName = name;
              value = element.getAttribute(name);
              break;
            default:
              attributeName = name;
          }
          this.push_(type, attributeName, propertyName, null, null, value, !1);
        }
      }
    }
    this.wasReset_ = !1;
    this.reset(opt_templateKey);
  }
};
jslayout.Tag.prototype.reset = function(opt_templateKey) {
  if (!this.wasReset_ && (this.wasReset_ = !0, this.deferredReset_ = -1, null != this.attributes_)) {
    for (var i = 0; i < this.attributes_.length; i += jslayout.Tag.STRIDE) {
      var initOnly = this.attributes_[i + jslayout.Tag.OFFSET_INIT_ONLY];
      if (initOnly) {
        var cut = this.attributes_.splice(i, jslayout.Tag.STRIDE);
        i -= jslayout.Tag.STRIDE;
        this.initOnlyAttributes_ || (this.initOnlyAttributes_ = []);
        Array.prototype.push.apply(this.initOnlyAttributes_, cut);
      }
    }
    this.startIndex_ = 0;
    if (opt_templateKey) {
      for (i = 0; i < this.attributes_.length; i += jslayout.Tag.STRIDE) {
        var type = this.attributes_[i + jslayout.Tag.OFFSET_TYPE];
        var value = this.attributes_[i + jslayout.Tag.OFFSET_VALUE];
        if (type == jslayout.Tag.ENTRY_TYPE_TRANSCLUSION && value == opt_templateKey) {
          this.startIndex_ = i;
          break;
        }
      }
    }
    0 == this.startIndex_ ? this.deferredReset_ = 0 : this.previousAttributes_ = this.attributes_.splice(this.startIndex_, this.attributes_.length);
  }
};
jslayout.Tag.prototype.recordBrowsersideTransclusion = function(templateKey) {
  templateKey && this.push_(jslayout.Tag.ENTRY_TYPE_TRANSCLUSION, null, null, null, null, templateKey, !1);
};
jslayout.Tag.prototype.setAttributeValue = function(type, name, value, opt_transcluded, opt_initOnly) {
  if (type == prototemplate.AttributeType.Type.CLASS) {
    if (value) {
      opt_transcluded && (value = goog.string.unescapeEntities(value));
      var parts = value.split(" ");
      var len = parts.length;
      for (var i = 0; i < len; i++) {
        "" != parts[i] && this.setAttributePropertyValue(prototemplate.AttributeType.Type.CLASS_PROPERTY, jslayout.String.CLASS, parts[i], "", opt_initOnly);
      }
    }
  } else {
    type != prototemplate.AttributeType.Type.COMMAND_LIST && type != prototemplate.AttributeType.Type.JSINSTANCE && type != prototemplate.AttributeType.Type.JSACTION && this.has_(type, name) || this.push_(type, name, null, null, opt_transcluded || null, value, !!opt_initOnly);
  }
};
jslayout.Tag.prototype.setDirAttributeValue = function(value) {
  this.jstag_ = !0;
  this.setAttributeValue(prototemplate.AttributeType.Type.REGULAR, "dir", value);
};
jslayout.Tag.prototype.setSanitizedAttributeValue = function(sanitizationContext, name, value, opt_initOnly) {
  switch(sanitizationContext) {
    case prototemplate.SanitizationContext.Context.IMAGE_URL:
    case prototemplate.SanitizationContext.Context.URL:
      var type = prototemplate.AttributeType.Type.URL;
      break;
    case prototemplate.SanitizationContext.Context.META_REFRESH_URL:
      type = prototemplate.AttributeType.Type.REGULAR;
      value = jslayout.attributesanitization.filterForMetaRefreshUrlContext(value);
      break;
    default:
      type = prototemplate.AttributeType.Type.REGULAR, value = "sanitization_error_" + sanitizationContext;
  }
  this.has_(type, name) || this.push_(type, name, null, sanitizationContext, null, value, !!opt_initOnly);
};
jslayout.Tag.prototype.setAttributePropertyValue = function(type, attributeName, propertyName, value, opt_initOnly) {
  switch(type) {
    case prototemplate.AttributeType.Type.STYLE_PROPERTY:
      attributeName = jslayout.String.STYLE;
      -1 != this.deferredReset_ && "display" == propertyName && this.mismatch_();
      break;
    case prototemplate.AttributeType.Type.CLASS_PROPERTY:
      attributeName = jslayout.String.CLASS;
  }
  this.has_(type, attributeName, propertyName) || this.push_(type, attributeName, propertyName, null, null, value, !!opt_initOnly);
};
jslayout.Tag.prototype.setSanitizedAttributePropertyValue = function(sanitizationContext, attributeName, propertyName, value, opt_initOnly) {
  var propertyType = prototemplate.AttributeType.Type.STYLE_PROPERTY;
  switch(sanitizationContext) {
    case prototemplate.SanitizationContext.Context.STYLE_PROPERTY_REGULAR:
      var valueToSet = jslayout.attributesanitization.filterForStyleRegularContext(value);
      break;
    case prototemplate.SanitizationContext.Context.STYLE_PROPERTY_STRING:
      valueToSet = jslayout.attributesanitization.filterForStyleStringContext(value);
      break;
    case prototemplate.SanitizationContext.Context.STYLE_PROPERTY_URL:
      valueToSet = jslayout.attributesanitization.filterForStyleUrlContext(value);
      break;
    default:
      propertyType = prototemplate.AttributeType.Type.CLASS, valueToSet = "sanitization_error_" + sanitizationContext;
  }
  this.setAttributePropertyValue(propertyType, attributeName, propertyName, valueToSet, opt_initOnly);
};
jslayout.Tag.toUpperCase_ = function(match, submatch) {
  return submatch.toUpperCase();
};
jslayout.Tag.styleProp_ = function(name) {
  return name.replace(/-(\S)/g, jslayout.Tag.toUpperCase_);
};
jslayout.Tag.prototype.getJstag = function() {
  return !1 !== this.jstag_;
};
jslayout.Tag.prototype.setJstag = function(jstag) {
  null === this.jstag_ ? this.jstag_ = jstag : this.jstag_ && !jstag && null != this.getDirAttributeValue() && (this.name_ = "span");
};
jslayout.Tag.prototype.assembleUrl_ = function(name, url) {
  var assembled = url[1] ? jslayout.url.assemble(url[1]) : url[0];
  assembled = jslayout.Tag.sanitizeValue_(url[2], assembled);
  assembled || (assembled = jslayout.Tag.defaultAttributeValue(this.name_, name));
  return assembled;
};
jslayout.Tag.prototype.html = function(selfClosing, jstid) {
  if (this.flags_ & jslayout.Tag.TEXT_ONLY) {
    var dir = this.getDirAttributeValue();
    return "rtl" == dir ? "\u202b" : "ltr" == dir ? "\u202a" : "";
  }
  if (!1 === this.jstag_) {
    return "";
  }
  var result = "<" + this.name_;
  var urls = null;
  var style = "";
  var styleSanitizationContext = null;
  var classes = null;
  var jsl = "";
  var jsvs = "";
  var jsinstance = "";
  var jsan = this.initJsan_();
  var jsaction = "";
  var attributes = this.attributes_;
  var len = attributes ? attributes.length : 0;
  for (var i = 0; i < len; i += jslayout.Tag.STRIDE) {
    var type = attributes[i + jslayout.Tag.OFFSET_TYPE];
    var name = attributes[i + jslayout.Tag.OFFSET_NAME];
    var property = attributes[i + jslayout.Tag.OFFSET_PROPERTY];
    var value = attributes[i + jslayout.Tag.OFFSET_VALUE];
    var sanitizationContext = attributes[i + jslayout.Tag.OFFSET_SANITIZATION];
    var initOnly = attributes[i + jslayout.Tag.OFFSET_INIT_ONLY];
    if (null != value && null != jsan && !initOnly) {
      switch(type) {
        case jslayout.Tag.ENTRY_TYPE_TRANSCLUSION:
          jsan += value + ",";
          break;
        case prototemplate.AttributeType.Type.CLASS_PROPERTY:
        case prototemplate.AttributeType.Type.STYLE_PROPERTY:
          jsan += type + "." + property + ",";
          break;
        case prototemplate.AttributeType.Type.URL_QUERY_COMPONENT:
          jsan += type + "." + name + "." + property + ",";
          break;
        case prototemplate.AttributeType.Type.COMMAND_LIST:
        case prototemplate.AttributeType.Type.JSINSTANCE:
        case prototemplate.AttributeType.Type.JSSC:
          break;
        default:
          jsan += type + "." + name + ",";
      }
    }
    switch(type) {
      case prototemplate.AttributeType.Type.CLASS_PROPERTY:
        null === value ? null != classes && goog.array.remove(classes, property) : null != value && (null == classes ? classes = [property] : goog.array.insert(classes, property));
        break;
      case prototemplate.AttributeType.Type.STYLE:
        var jslLast = !1;
        styleSanitizationContext = sanitizationContext;
        style = null == value ? null : "" == style ? value : ";" == value.charAt(value.length - 1) ? value + style : value + ";" + style;
        break;
      case prototemplate.AttributeType.Type.STYLE_PROPERTY:
        jslLast = !1;
        null != value && null !== style && ("" != style && ";" != style[style.length - 1] && (style += ";"), style += property + ":" + value);
        break;
      case prototemplate.AttributeType.Type.URL:
        null == urls && (urls = {});
        if (null === value) {
          urls[name] = null;
        } else {
          if (value) {
            var transcluded = attributes[i + jslayout.Tag.OFFSET_TRANSCLUDED];
            transcluded && (value = goog.string.unescapeEntities(value));
            urls[name] = [value, null, sanitizationContext];
          } else {
            urls[name] = ["", null, sanitizationContext];
          }
        }
        break;
      case prototemplate.AttributeType.Type.COMMAND_LIST:
        null != value && (name == jslayout.Attribute.JSL ? (jslLast = !0, jsl += value) : name == jslayout.Attribute.JSVS && (jsvs += value));
        break;
      case prototemplate.AttributeType.Type.JSINSTANCE:
        null != value && (jsinstance && (jsinstance += ","), jsinstance += value);
        break;
      case prototemplate.AttributeType.Type.JSACTION:
        null != value && (jsaction && (jsaction += ";"), jsaction += value);
        break;
      case prototemplate.AttributeType.Type.REGULAR:
        null != value && (result += " " + name + "=", value = jslayout.Tag.sanitizeValue_(sanitizationContext, value), transcluded = attributes[i + jslayout.Tag.OFFSET_TRANSCLUDED], result = transcluded ? result + ('"' + jslayout.string.htmlEscapeQuote(value) + '"') : result + ('"' + jslayout.string.htmlEscape(value) + '"'));
        break;
      case prototemplate.AttributeType.Type.URL_HASH:
      case prototemplate.AttributeType.Type.URL_HOST:
      case prototemplate.AttributeType.Type.URL_PATH:
      case prototemplate.AttributeType.Type.URL_PORT:
      case prototemplate.AttributeType.Type.URL_PROTOCOL:
      case prototemplate.AttributeType.Type.URL_QUERY_COMPONENT:
        null == urls && (urls = {});
        var url = urls[name];
        null !== url && (url || (url = urls[name] = ["", null, null]), jslayout.url.value(url, type, property, value));
    }
  }
  if (null != urls) {
    for (name in urls) {
      var assembled = this.assembleUrl_(name, urls[name]);
      result += " " + name + '="' + jslayout.string.htmlEscape(assembled) + '"';
    }
  }
  jsaction && (result += ' jsaction="' + jslayout.string.htmlEscapeQuote(jsaction) + '"');
  jsinstance && (result += ' jsinstance="' + jslayout.string.htmlEscape(jsinstance) + '"');
  null != classes && 0 < classes.length && (result += ' class="' + jslayout.string.htmlEscape(classes.join(" ")) + '"');
  jsl && !jslLast && (result += ' jsl="' + jslayout.string.htmlEscape(jsl) + '"');
  if (null != style) {
    for (; "" != style && ";" == style[style.length - 1];) {
      style = style.substr(0, style.length - 1);
    }
    "" != style && (style = jslayout.Tag.sanitizeValue_(styleSanitizationContext, style), result += ' style="' + jslayout.string.htmlEscape(style) + '"');
  }
  jsl && jslLast && (result += ' jsl="' + jslayout.string.htmlEscape(jsl) + '"');
  jsvs && (result += ' jsvs="' + jslayout.string.htmlEscape(jsvs) + '"');
  null != jsan && -1 != jsan.indexOf(".") && (result += ' jsan="' + jsan.substr(0, jsan.length - 1) + '"');
  jstid && (result += ' jstid="' + this.id_ + '"');
  return result + (selfClosing ? "/>" : ">");
};
jslayout.Tag.prototype.identical_ = function(element, isInput) {
  var len = null == this.attributes_ ? 0 : this.attributes_.length;
  var identical = this.deferredReset_ == len;
  identical ? this.previousAttributes_ = this.attributes_ : -1 != this.deferredReset_ && this.mismatch_();
  if (!identical) {
    return !1;
  }
  if (isInput) {
    for (var i = 0; i < len; i += jslayout.Tag.STRIDE) {
      var name = this.attributes_[i + jslayout.Tag.OFFSET_NAME];
      if (name == jslayout.String.CHECKED || name == jslayout.String.VALUE) {
        var value = this.attributes_[i + jslayout.Tag.OFFSET_VALUE];
        if (value != element[name]) {
          return !1;
        }
      }
    }
  }
  return !0;
};
jslayout.Tag.prototype.computeRemoveSet_ = function(remove) {
  if (0 != (this.flags_ & (jslayout.Tag.REMOVE_ATTRIBUTES | jslayout.Tag.REMOVE_CLASSES)) && null != this.previousAttributes_) {
    var prevLen = this.previousAttributes_.length;
    for (var i = 0; i < prevLen; i += jslayout.Tag.STRIDE) {
      var value = this.previousAttributes_[i + jslayout.Tag.OFFSET_VALUE];
      if (null != value) {
        var type = this.previousAttributes_[i + jslayout.Tag.OFFSET_TYPE];
        var name = this.previousAttributes_[i + jslayout.Tag.OFFSET_NAME];
        var property = this.previousAttributes_[i + jslayout.Tag.OFFSET_PROPERTY];
        type == prototemplate.AttributeType.Type.STYLE_PROPERTY || type == prototemplate.AttributeType.Type.CLASS_PROPERTY ? remove[name + "." + property] = !0 : type != jslayout.Tag.ENTRY_TYPE_TRANSCLUSION && type != prototemplate.AttributeType.Type.COMMAND_LIST && type != prototemplate.AttributeType.Type.JSINSTANCE && (remove[name] = !0);
      }
    }
  }
};
jslayout.Tag.prototype.initJsan_ = function() {
  return 0 != (this.flags_ & (jslayout.Tag.EMIT_JSAN | jslayout.Tag.REMOVE_CLASSES | jslayout.Tag.REMOVE_ATTRIBUTES)) ? "" : null;
};
jslayout.Tag.prototype.apply = function(element) {
  var isInput = jslayout.dom.isInputElement(element.nodeName);
  this.wasReset_ = !1;
  if (!this.identical_(element, isInput)) {
    var remove = null;
    null != this.previousAttributes_ && (remove = {}, this.computeRemoveSet_(remove));
    var jsl = "";
    var jsinstance = "";
    var jsvs = "";
    var urls = null;
    var checkedPropertyUpdate = !1;
    var classes = null;
    element.hasAttribute(jslayout.String.CLASS) && (classes = element.getAttribute(jslayout.String.CLASS).split(" "));
    var jsan = this.initJsan_();
    var jsaction = "";
    var attributes = this.attributes_;
    var len = attributes ? attributes.length : 0;
    for (var i = 0; i < len; i += jslayout.Tag.STRIDE) {
      var value = attributes[i + jslayout.Tag.OFFSET_VALUE];
      var type = attributes[i + jslayout.Tag.OFFSET_TYPE];
      var name = attributes[i + jslayout.Tag.OFFSET_NAME];
      var property = attributes[i + jslayout.Tag.OFFSET_PROPERTY];
      var sanitizationContext = attributes[i + jslayout.Tag.OFFSET_SANITIZATION];
      var initOnly = attributes[i + jslayout.Tag.OFFSET_INIT_ONLY];
      if (null !== value && null != jsan && !initOnly) {
        switch(type) {
          case jslayout.Tag.ENTRY_TYPE_TRANSCLUSION:
            jsan += value + ",";
            break;
          case prototemplate.AttributeType.Type.CLASS_PROPERTY:
          case prototemplate.AttributeType.Type.STYLE_PROPERTY:
            jsan += type + "." + property + ",";
            break;
          case prototemplate.AttributeType.Type.URL_QUERY_COMPONENT:
            jsan += type + "." + name + "." + property + ",";
            break;
          case prototemplate.AttributeType.Type.COMMAND_LIST:
          case prototemplate.AttributeType.Type.JSINSTANCE:
            break;
          default:
            jsan += type + "." + name + ",";
        }
      }
      if (!(i < this.startIndex_)) {
        switch(null != remove && void 0 !== value && (type == prototemplate.AttributeType.Type.STYLE_PROPERTY || type == prototemplate.AttributeType.Type.CLASS_PROPERTY ? delete remove[name + "." + property] : delete remove[name]), type) {
          case prototemplate.AttributeType.Type.CLASS_PROPERTY:
            null === value ? null != classes && goog.array.remove(classes, property) : null != value && (null == classes ? classes = [property] : goog.array.insert(classes, property));
            break;
          case prototemplate.AttributeType.Type.STYLE:
            null === value ? element.style.cssText = "" : void 0 !== value && (element.style.cssText = jslayout.Tag.sanitizeValue_(sanitizationContext, value, element));
            for (var key in remove) {
              goog.string.startsWith(key, "style.") && delete remove[key];
            }
            break;
          case prototemplate.AttributeType.Type.STYLE_PROPERTY:
            try {
              key = jslayout.Tag.styleProp_(property), element.style[key] != value && (element.style[key] = value || "");
            } catch (e) {
            }
            break;
          case prototemplate.AttributeType.Type.URL:
            null == urls && (urls = {});
            urls[name] = null === value ? null : value ? [value, null, sanitizationContext] : [element[name] || element.getAttribute(name) || "", null, sanitizationContext];
            break;
          case prototemplate.AttributeType.Type.COMMAND_LIST:
            null != value && (name == jslayout.Attribute.JSL ? jsl += value : name == jslayout.Attribute.JSVS && (jsvs += value));
            break;
          case prototemplate.AttributeType.Type.JSACTION:
            if (null === value) {
              element.removeAttribute(jslayout.Attribute.JSACTION);
            } else {
              if (null != value) {
                var transcluded = attributes[i + jslayout.Tag.OFFSET_TRANSCLUDED];
                transcluded && (value = goog.string.unescapeEntities(value));
                jsaction && (jsaction += ";");
                jsaction += value;
              }
            }
            break;
          case prototemplate.AttributeType.Type.JSINSTANCE:
            null != value && (jsinstance && (jsinstance += ","), jsinstance += value);
            break;
          case prototemplate.AttributeType.Type.REGULAR:
            null === value ? element.removeAttribute(name) : null != value && (transcluded = attributes[i + jslayout.Tag.OFFSET_TRANSCLUDED], transcluded && (value = goog.string.unescapeEntities(value)), value = jslayout.Tag.sanitizeValue_(sanitizationContext, value), jslayout.jsattrs.restrictAssignment(element.nodeName, name) && value == element.getAttribute(name) || element.setAttribute(name, value));
            if (isInput) {
              if (name == jslayout.String.CHECKED) {
                checkedPropertyUpdate = !0;
              } else {
                if (jslayout.dom.isInputAttribute(name)) {
                  var propName = jslayout.jsattrs.ATTNAME.hasOwnProperty(name) ? jslayout.jsattrs.ATTNAME[name] : name;
                  element[propName] != value && (element[propName] = value);
                }
              }
            }
            break;
          case prototemplate.AttributeType.Type.URL_HASH:
          case prototemplate.AttributeType.Type.URL_HOST:
          case prototemplate.AttributeType.Type.URL_PATH:
          case prototemplate.AttributeType.Type.URL_PORT:
          case prototemplate.AttributeType.Type.URL_PROTOCOL:
          case prototemplate.AttributeType.Type.URL_QUERY_COMPONENT:
            null == urls && (urls = {});
            var url = urls[name];
            null !== url && (url || (url = urls[name] = [element[name] || element.getAttribute(name) || "", null, null]), jslayout.url.value(url, type, property, value));
        }
      }
    }
    if (null != remove) {
      for (key in remove) {
        if (goog.string.startsWith(key, "class.")) {
          goog.array.remove(classes, key.substr(6));
        } else {
          if (goog.string.startsWith(key, "style.")) {
            try {
              element.style[jslayout.Tag.styleProp_(key.substr(6))] = "";
            } catch (e$5) {
            }
          } else {
            0 != (this.flags_ & jslayout.Tag.REMOVE_ATTRIBUTES) ? "data-rtid" != key && element.removeAttribute(key) : "jsl" != key && goog.DEBUG && window && window.console && window.console.warn && window.console.warn('Ignoring unexpected previous attribute "' + key + '" tag:', this, " element:", element);
          }
        }
      }
    }
    null != classes && 0 < classes.length ? element.setAttribute(jslayout.String.CLASS, jslayout.string.htmlEscape(classes.join(" "))) : element.hasAttribute(jslayout.String.CLASS) && element.setAttribute(jslayout.String.CLASS, "");
    if (null != jsl && "" != jsl && element.hasAttribute(jslayout.Attribute.JSL)) {
      var oldJsl = element.getAttribute(jslayout.Attribute.JSL);
      var char0 = jsl.charAt(0);
      for (var start = 0;;) {
        var pos = oldJsl.indexOf(char0, start);
        if (-1 == pos) {
          jsl = oldJsl + jsl;
          break;
        }
        if (goog.string.startsWith(jsl, oldJsl.substr(pos))) {
          jsl = oldJsl.substr(0, pos) + jsl;
          break;
        }
        start = pos + 1;
      }
      element.setAttribute(jslayout.Attribute.JSL, jsl);
    }
    if (null != urls) {
      for (name in urls) {
        if (url = urls[name], null === url) {
          element.removeAttribute(name), element[name] = null;
        } else {
          var assembled = this.assembleUrl_(name, url);
          element[name] = assembled;
          element.setAttribute(name, assembled);
        }
      }
    }
    jsaction && element.setAttribute(jslayout.Attribute.JSACTION, jsaction);
    jsinstance && element.setAttribute(jslayout.Attribute.JSINSTANCE, jsinstance);
    jsvs && element.setAttribute(jslayout.Attribute.JSVS, jsvs);
    null != jsan && (-1 != jsan.indexOf(".") ? element.setAttribute(jslayout.Attribute.JSAN, jsan.substr(0, jsan.length - 1)) : element.removeAttribute(jslayout.Attribute.JSAN));
    checkedPropertyUpdate && (element.checked = !!element.getAttribute(jslayout.String.CHECKED));
  }
};
jslayout.Tag.sanitizeValue_ = function(sanitizationContext, value) {
  switch(sanitizationContext) {
    case null:
      return value;
    case prototemplate.SanitizationContext.Context.IMAGE_URL:
      return jslayout.attributesanitization.filterForImageUrlContext(value);
    case prototemplate.SanitizationContext.Context.URL:
      return jslayout.attributesanitization.filterForUrlContext(value);
    case prototemplate.SanitizationContext.Context.META_REFRESH_URL:
      return jslayout.attributesanitization.filterForMetaRefreshUrlContext(value);
    default:
      return "sanitization_error_" + sanitizationContext;
  }
};
jslayout.wizdata = {};
jslayout.wizdata.counter_ = 0;
jslayout.wizdata.cachedData_ = new Map;
jslayout.wizdata.getDataId_ = function(messageXid, data) {
  var $jscomp$iter$0 = $jscomp.makeIterator(jslayout.wizdata.cachedData_.keys());
  for (var $jscomp$key$key = $jscomp$iter$0.next(); !$jscomp$key$key.done; $jscomp$key$key = $jscomp$iter$0.next()) {
    var key = $jscomp$key$key.value;
    if (jslayout.wizdata.cachedData_.get(key) === data) {
      return key;
    }
  }
  return messageXid + ";;" + jslayout.wizdata.counter_++;
};
jslayout.wizdata.cacheData = function(messageXid, data) {
  var dataId = jslayout.wizdata.getDataId_(messageXid, data);
  jslayout.wizdata.cachedData_.set(dataId, data);
  return dataId;
};
jslayout.wizdata.resolveForClientSideRender = function(element, ctor, jsdataKey) {
  jslayout.wizdata.cachedData_.has(jsdataKey) && element.getAttribute(wiz.Attribute.DATA) == jsdataKey && (element[wiz.Property.DATA] = jslayout.wizdata.cachedData_.get(jsdataKey), jslayout.wizdata.cachedData_["delete"](jsdataKey));
  var msgData = element[wiz.Property.DATA];
  return msgData && goog.isArray(msgData) ? goog.Promise.resolve(new ctor(msgData)) : null;
};
prototemplate.ConstQualifier = function() {
};
prototemplate.Qualifier = function(opt_data) {
  jsproto.MessageBaseJson.call(this, opt_data);
};
goog.inherits(prototemplate.Qualifier, jsproto.MessageBaseJson);
prototemplate.ConstTypeProto = function() {
};
prototemplate.TypeProto = function(opt_data) {
  jsproto.MessageBaseJson.call(this, opt_data);
};
goog.inherits(prototemplate.TypeProto, jsproto.MessageBaseJson);
prototemplate.TypeProto.ConstDuckTypeData = function() {
};
prototemplate.TypeProto.DuckTypeData = function(opt_data) {
  jsproto.MessageBaseJson.call(this, opt_data);
};
goog.inherits(prototemplate.TypeProto.DuckTypeData, jsproto.MessageBaseJson);
prototemplate.TypeProto.DuckTypeData.ConstField = function() {
};
prototemplate.TypeProto.DuckTypeData.Field = function(opt_data) {
  jsproto.MessageBaseJson.call(this, opt_data);
};
goog.inherits(prototemplate.TypeProto.DuckTypeData.Field, jsproto.MessageBaseJson);
prototemplate.ConstEntryPointTypeData = function() {
};
prototemplate.EntryPointTypeData = function(opt_data) {
  jsproto.MessageBaseJson.call(this, opt_data);
};
goog.inherits(prototemplate.EntryPointTypeData, jsproto.MessageBaseJson);
prototemplate.ConstChunkData = function() {
};
prototemplate.ChunkData = function(opt_data) {
  jsproto.MessageBaseJson.call(this, opt_data);
};
goog.inherits(prototemplate.ChunkData, jsproto.MessageBaseJson);
prototemplate.Qualifier.Presence = {PRESENCE_SERVER_ONLY:1, PRESENCE_BOTH:3};
prototemplate.Qualifier.Format = {FORMAT_NONE:0, FORMAT_JSON:1, FORMAT_JSPB:2, FORMAT_GWTPROTO:3};
prototemplate.TypeProto.TypeId = {TYPE_ENUM:1, TYPE_INT:2, TYPE_FLOAT:4, TYPE_MESSAGE:8, TYPE_SERVICE:16, TYPE_STRING:32, TYPE_BOOL:64, TYPE_ERROR:128, TYPE_DICT:1024, TYPE_INTERFACE:2048, TYPE_TEMPLATE:4096, TYPE_NOT_LOADED:8192, TYPE_VOID:32768, TYPE_COMPONENT:65536, TYPE_ANY:131072, TYPE_UNION:524288, TYPE_ONEOF:1048576};
prototemplate.EntryPointTypeData.EntryPointKind = {INVALID:0, HTML_TEMPLATE:1, HTML_COMPONENT:2, CML_COMPONENT:3, CML_COMPONENT_INTERFACE:4, CML_TEXT_TEMPLATE:5, CML_COMPONENT_LIST:6, CML_MIXED_TEMPLATE:7};
prototemplate.OutputMode = {OUTPUT_MODE_XHTML:0, OUTPUT_MODE_HTML32:1, OUTPUT_MODE_XML:2, OUTPUT_MODE_CML:3};
prototemplate.EntryPointType = {UNKNOWN_ENTRY_POINT:0, JSTEMPLATE_DEFINITION:1, JSCOMPONENT_DEFINITION:2};
prototemplate.Qualifier.getMessageDescriptor = function() {
  prototemplate.Qualifier.messageDescriptor_ || prototemplate.Qualifier.createMessageDescriptor_();
  return prototemplate.Qualifier.messageDescriptor_;
};
prototemplate.Qualifier.prototype.getMessageDescriptor = prototemplate.Qualifier.getMessageDescriptor;
prototemplate.Qualifier.createMessageDescriptor_ = function() {
  var fieldDescriptors = {};
  prototemplate.Qualifier.messageDescriptor_ = {fieldDescriptor:fieldDescriptors};
  fieldDescriptors.presence = jsproto.makeFieldDescriptorOptionalEnum(prototemplate.Qualifier.DEFAULT_PRESENCE);
  fieldDescriptors.format = jsproto.FIELD_DESCRIPTOR_OPTIONAL_ENUM;
  fieldDescriptors.lazy = jsproto.FIELD_DESCRIPTOR_OPTIONAL_BOOL;
  fieldDescriptors.jscontroller = jsproto.FIELD_DESCRIPTOR_OPTIONAL_BOOL;
  fieldDescriptors.observe = jsproto.FIELD_DESCRIPTOR_OPTIONAL_BOOL;
};
goog.DEBUG && (prototemplate.Qualifier.fromObject = function(obj) {
  return new prototemplate.Qualifier(obj);
});
prototemplate.Qualifier.DEFAULT_PRESENCE = prototemplate.Qualifier.Presence.PRESENCE_SERVER_ONLY;
prototemplate.Qualifier.DEFAULT_FORMAT = prototemplate.Qualifier.Format.FORMAT_NONE;
prototemplate.Qualifier.DEFAULT_LAZY = !1;
prototemplate.Qualifier.DEFAULT_JSCONTROLLER = !1;
prototemplate.Qualifier.DEFAULT_OBSERVE = !1;
prototemplate.TypeProto.getMessageDescriptor = function() {
  prototemplate.TypeProto.messageDescriptor_ || prototemplate.TypeProto.createMessageDescriptor_();
  return prototemplate.TypeProto.messageDescriptor_;
};
prototemplate.TypeProto.prototype.getMessageDescriptor = prototemplate.TypeProto.getMessageDescriptor;
prototemplate.TypeProto.createMessageDescriptor_ = function() {
  var fieldDescriptors = {};
  prototemplate.TypeProto.messageDescriptor_ = {fieldDescriptor:fieldDescriptors};
  fieldDescriptors.id = jsproto.makeFieldDescriptorOptionalEnum(prototemplate.TypeProto.DEFAULT_ID);
  fieldDescriptors.name = jsproto.FIELD_DESCRIPTOR_OPTIONAL_STRING;
  fieldDescriptors.controller_name = jsproto.FIELD_DESCRIPTOR_OPTIONAL_STRING;
  fieldDescriptors.duck_type_data = jsproto.makeFieldDescriptorOptionalMessage(new prototemplate.TypeProto.DuckTypeData({}), prototemplate.TypeProto.DuckTypeData.getMessageDescriptor());
  fieldDescriptors.qualifier = jsproto.makeFieldDescriptorOptionalMessage(new prototemplate.Qualifier({}), prototemplate.Qualifier.getMessageDescriptor());
  fieldDescriptors.nullable = jsproto.FIELD_DESCRIPTOR_OPTIONAL_BOOL;
  fieldDescriptors.dimension = jsproto.FIELD_DESCRIPTOR_OPTIONAL_INT32;
  fieldDescriptors.assignable_to = jsproto.makeFieldDescriptorRepeatedMessage(prototemplate.TypeProto.getMessageDescriptor());
  fieldDescriptors.mutable = jsproto.FIELD_DESCRIPTOR_OPTIONAL_BOOL;
};
goog.DEBUG && (prototemplate.TypeProto.fromObject = function(obj) {
  return new prototemplate.TypeProto(obj);
});
prototemplate.TypeProto.DEFAULT_ID = prototemplate.TypeProto.TypeId.TYPE_ERROR;
prototemplate.TypeProto.prototype.getId = function() {
  return this.internalGetScalarEnum("id", prototemplate.TypeProto.DEFAULT_ID);
};
prototemplate.TypeProto.DEFAULT_NAME = "";
prototemplate.TypeProto.prototype.getName = function() {
  return this.internalGetScalarString("name");
};
prototemplate.TypeProto.DEFAULT_CONTROLLER_NAME = "";
prototemplate.TypeProto.prototype.getControllerName = function() {
  return this.internalGetScalarString("controller_name");
};
prototemplate.TypeProto.DEFAULT_NULLABLE = !1;
prototemplate.TypeProto.DEFAULT_DIMENSION = 0;
prototemplate.TypeProto.DEFAULT_MUTABLE = !1;
prototemplate.TypeProto.DuckTypeData.getMessageDescriptor = function() {
  prototemplate.TypeProto.DuckTypeData.messageDescriptor_ || prototemplate.TypeProto.DuckTypeData.createMessageDescriptor_();
  return prototemplate.TypeProto.DuckTypeData.messageDescriptor_;
};
prototemplate.TypeProto.DuckTypeData.prototype.getMessageDescriptor = prototemplate.TypeProto.DuckTypeData.getMessageDescriptor;
prototemplate.TypeProto.DuckTypeData.createMessageDescriptor_ = function() {
  var fieldDescriptors = {};
  prototemplate.TypeProto.DuckTypeData.messageDescriptor_ = {fieldDescriptor:fieldDescriptors};
  fieldDescriptors.field = jsproto.makeFieldDescriptorRepeatedMessage(prototemplate.TypeProto.DuckTypeData.Field.getMessageDescriptor());
  fieldDescriptors.output_mode = jsproto.FIELD_DESCRIPTOR_OPTIONAL_ENUM;
  fieldDescriptors.strict_mode = jsproto.FIELD_DESCRIPTOR_OPTIONAL_BOOL;
  fieldDescriptors.quoted_keys = jsproto.makeFieldDescriptorOptionalBool(prototemplate.TypeProto.DuckTypeData.DEFAULT_QUOTED_KEYS);
};
goog.DEBUG && (prototemplate.TypeProto.DuckTypeData.fromObject = function(obj) {
  return new prototemplate.TypeProto.DuckTypeData(obj);
});
prototemplate.TypeProto.DuckTypeData.DEFAULT_OUTPUT_MODE = prototemplate.OutputMode.OUTPUT_MODE_XHTML;
prototemplate.TypeProto.DuckTypeData.DEFAULT_STRICT_MODE = !1;
prototemplate.TypeProto.DuckTypeData.DEFAULT_QUOTED_KEYS = !0;
prototemplate.TypeProto.DuckTypeData.prototype.fieldSize = function() {
  return this.internalSizeOfRepeatedField("field");
};
prototemplate.TypeProto.DuckTypeData.prototype.getField = function(i) {
  return new prototemplate.TypeProto.DuckTypeData.Field(this.internalRepeatedFieldGetMessage("field", i));
};
prototemplate.TypeProto.DuckTypeData.Field.getMessageDescriptor = function() {
  prototemplate.TypeProto.DuckTypeData.Field.messageDescriptor_ || prototemplate.TypeProto.DuckTypeData.Field.createMessageDescriptor_();
  return prototemplate.TypeProto.DuckTypeData.Field.messageDescriptor_;
};
prototemplate.TypeProto.DuckTypeData.Field.prototype.getMessageDescriptor = prototemplate.TypeProto.DuckTypeData.Field.getMessageDescriptor;
prototemplate.TypeProto.DuckTypeData.Field.createMessageDescriptor_ = function() {
  var fieldDescriptors = {};
  prototemplate.TypeProto.DuckTypeData.Field.messageDescriptor_ = {fieldDescriptor:fieldDescriptors};
  fieldDescriptors.name = jsproto.FIELD_DESCRIPTOR_OPTIONAL_STRING;
  fieldDescriptors.type = jsproto.makeFieldDescriptorOptionalMessage(new prototemplate.TypeProto({}), prototemplate.TypeProto.getMessageDescriptor());
  fieldDescriptors.bound_default_expr = jsproto.FIELD_DESCRIPTOR_OPTIONAL_BOOL;
};
goog.DEBUG && (prototemplate.TypeProto.DuckTypeData.Field.fromObject = function(obj) {
  return new prototemplate.TypeProto.DuckTypeData.Field(obj);
});
prototemplate.TypeProto.DuckTypeData.Field.DEFAULT_NAME = "";
prototemplate.TypeProto.DuckTypeData.Field.prototype.getName = function() {
  return this.internalGetScalarString("name");
};
prototemplate.TypeProto.DuckTypeData.Field.DEFAULT_BOUND_DEFAULT_EXPR = !1;
prototemplate.EntryPointTypeData.getMessageDescriptor = function() {
  prototemplate.EntryPointTypeData.messageDescriptor_ || prototemplate.EntryPointTypeData.createMessageDescriptor_();
  return prototemplate.EntryPointTypeData.messageDescriptor_;
};
prototemplate.EntryPointTypeData.prototype.getMessageDescriptor = prototemplate.EntryPointTypeData.getMessageDescriptor;
prototemplate.EntryPointTypeData.createMessageDescriptor_ = function() {
  var fieldDescriptors = {};
  prototemplate.EntryPointTypeData.messageDescriptor_ = {fieldDescriptor:fieldDescriptors};
  fieldDescriptors.filename = jsproto.FIELD_DESCRIPTOR_OPTIONAL_STRING;
  fieldDescriptors.kind = jsproto.FIELD_DESCRIPTOR_OPTIONAL_ENUM;
};
goog.DEBUG && (prototemplate.EntryPointTypeData.fromObject = function(obj) {
  return new prototemplate.EntryPointTypeData(obj);
});
prototemplate.EntryPointTypeData.DEFAULT_FILENAME = "";
prototemplate.EntryPointTypeData.DEFAULT_KIND = prototemplate.EntryPointTypeData.EntryPointKind.INVALID;
prototemplate.ChunkData.getMessageDescriptor = function() {
  prototemplate.ChunkData.messageDescriptor_ || prototemplate.ChunkData.createMessageDescriptor_();
  return prototemplate.ChunkData.messageDescriptor_;
};
prototemplate.ChunkData.prototype.getMessageDescriptor = prototemplate.ChunkData.getMessageDescriptor;
prototemplate.ChunkData.createMessageDescriptor_ = function() {
  var fieldDescriptors = {};
  prototemplate.ChunkData.messageDescriptor_ = {fieldDescriptor:fieldDescriptors};
  fieldDescriptors.chunk = jsproto.FIELD_DESCRIPTOR_REPEATED_STRING;
};
goog.DEBUG && (prototemplate.ChunkData.fromObject = function(obj) {
  return new prototemplate.ChunkData(obj);
});
prototemplate.ConstBoolPrimitive = function() {
};
prototemplate.BoolPrimitive = function(opt_data) {
  jsproto.MessageBaseJson.call(this, opt_data);
};
goog.inherits(prototemplate.BoolPrimitive, jsproto.MessageBaseJson);
prototemplate.ConstIntegerPrimitive = function() {
};
prototemplate.IntegerPrimitive = function(opt_data) {
  jsproto.MessageBaseJson.call(this, opt_data);
};
goog.inherits(prototemplate.IntegerPrimitive, jsproto.MessageBaseJson);
prototemplate.ConstFloatPrimitive = function() {
};
prototemplate.FloatPrimitive = function(opt_data) {
  jsproto.MessageBaseJson.call(this, opt_data);
};
goog.inherits(prototemplate.FloatPrimitive, jsproto.MessageBaseJson);
prototemplate.ConstStringPrimitive = function() {
};
prototemplate.StringPrimitive = function(opt_data) {
  jsproto.MessageBaseJson.call(this, opt_data);
};
goog.inherits(prototemplate.StringPrimitive, jsproto.MessageBaseJson);
prototemplate.ConstServiceWrapper = function() {
};
prototemplate.ServiceWrapper = function(opt_data) {
  jsproto.MessageBaseJson.call(this, opt_data);
};
goog.inherits(prototemplate.ServiceWrapper, jsproto.MessageBaseJson);
prototemplate.ConstEmptyMessage = function() {
};
prototemplate.EmptyMessage = function(opt_data) {
  jsproto.MessageBaseJson.call(this, opt_data);
};
goog.inherits(prototemplate.EmptyMessage, jsproto.MessageBaseJson);
prototemplate.ConstStringInt32Pair = function() {
};
prototemplate.StringInt32Pair = function(opt_data) {
  jsproto.MessageBaseJson.call(this, opt_data);
};
goog.inherits(prototemplate.StringInt32Pair, jsproto.MessageBaseJson);
prototemplate.ConstStringPair = function() {
};
prototemplate.StringPair = function(opt_data) {
  jsproto.MessageBaseJson.call(this, opt_data);
};
goog.inherits(prototemplate.StringPair, jsproto.MessageBaseJson);
prototemplate.BoolPrimitive.getMessageDescriptor = function() {
  prototemplate.BoolPrimitive.messageDescriptor_ || prototemplate.BoolPrimitive.createMessageDescriptor_();
  return prototemplate.BoolPrimitive.messageDescriptor_;
};
prototemplate.BoolPrimitive.prototype.getMessageDescriptor = prototemplate.BoolPrimitive.getMessageDescriptor;
prototemplate.BoolPrimitive.createMessageDescriptor_ = function() {
  var fieldDescriptors = {};
  prototemplate.BoolPrimitive.messageDescriptor_ = {fieldDescriptor:fieldDescriptors};
  fieldDescriptors.value = jsproto.FIELD_DESCRIPTOR_REQUIRED_BOOL;
};
goog.DEBUG && (prototemplate.BoolPrimitive.fromObject = function(obj) {
  return new prototemplate.BoolPrimitive(obj);
});
prototemplate.BoolPrimitive.DEFAULT_VALUE = !1;
prototemplate.BoolPrimitive.prototype.getValue = function() {
  return this.internalGetScalarBoolean("value");
};
prototemplate.BoolPrimitive.prototype.setValue = function(x) {
  this.data.value = x;
};
prototemplate.IntegerPrimitive.getMessageDescriptor = function() {
  prototemplate.IntegerPrimitive.messageDescriptor_ || prototemplate.IntegerPrimitive.createMessageDescriptor_();
  return prototemplate.IntegerPrimitive.messageDescriptor_;
};
prototemplate.IntegerPrimitive.prototype.getMessageDescriptor = prototemplate.IntegerPrimitive.getMessageDescriptor;
prototemplate.IntegerPrimitive.createMessageDescriptor_ = function() {
  var fieldDescriptors = {};
  prototemplate.IntegerPrimitive.messageDescriptor_ = {fieldDescriptor:fieldDescriptors};
  fieldDescriptors.value = jsproto.makeFieldDescriptorRequiredInt64(prototemplate.IntegerPrimitive.DEFAULT_VALUE);
};
goog.DEBUG && (prototemplate.IntegerPrimitive.fromObject = function(obj) {
  return new prototemplate.IntegerPrimitive(obj);
});
prototemplate.IntegerPrimitive.DEFAULT_VALUE = "";
prototemplate.IntegerPrimitive.prototype.getValue = function() {
  return this.internalGetScalarString("value", prototemplate.IntegerPrimitive.DEFAULT_VALUE);
};
prototemplate.IntegerPrimitive.prototype.setValue = function(x) {
  goog.asserts.assert(/^-?((0x|#)[0-9a-fA-F]+|[0-9]+)$/.test(x), "value must be an integer, got: " + x);
  this.data.value = x;
};
prototemplate.FloatPrimitive.getMessageDescriptor = function() {
  prototemplate.FloatPrimitive.messageDescriptor_ || prototemplate.FloatPrimitive.createMessageDescriptor_();
  return prototemplate.FloatPrimitive.messageDescriptor_;
};
prototemplate.FloatPrimitive.prototype.getMessageDescriptor = prototemplate.FloatPrimitive.getMessageDescriptor;
prototemplate.FloatPrimitive.createMessageDescriptor_ = function() {
  var fieldDescriptors = {};
  prototemplate.FloatPrimitive.messageDescriptor_ = {fieldDescriptor:fieldDescriptors};
  fieldDescriptors.value = jsproto.FIELD_DESCRIPTOR_REQUIRED_DOUBLE;
};
goog.DEBUG && (prototemplate.FloatPrimitive.fromObject = function(obj) {
  return new prototemplate.FloatPrimitive(obj);
});
prototemplate.FloatPrimitive.DEFAULT_VALUE = 0;
prototemplate.FloatPrimitive.prototype.getValue = function() {
  return this.internalGetScalarNumber("value");
};
prototemplate.FloatPrimitive.prototype.setValue = function(x) {
  this.data.value = x;
};
prototemplate.StringPrimitive.getMessageDescriptor = function() {
  prototemplate.StringPrimitive.messageDescriptor_ || prototemplate.StringPrimitive.createMessageDescriptor_();
  return prototemplate.StringPrimitive.messageDescriptor_;
};
prototemplate.StringPrimitive.prototype.getMessageDescriptor = prototemplate.StringPrimitive.getMessageDescriptor;
prototemplate.StringPrimitive.createMessageDescriptor_ = function() {
  var fieldDescriptors = {};
  prototemplate.StringPrimitive.messageDescriptor_ = {fieldDescriptor:fieldDescriptors};
  fieldDescriptors.value = jsproto.FIELD_DESCRIPTOR_REQUIRED_STRING;
};
goog.DEBUG && (prototemplate.StringPrimitive.fromObject = function(obj) {
  return new prototemplate.StringPrimitive(obj);
});
prototemplate.StringPrimitive.DEFAULT_VALUE = "";
prototemplate.StringPrimitive.prototype.getValue = function() {
  return this.internalGetScalarString("value");
};
prototemplate.StringPrimitive.prototype.setValue = function(x) {
  this.data.value = x;
};
prototemplate.ServiceWrapper.getMessageDescriptor = function() {
  prototemplate.ServiceWrapper.messageDescriptor_ || prototemplate.ServiceWrapper.createMessageDescriptor_();
  return prototemplate.ServiceWrapper.messageDescriptor_;
};
prototemplate.ServiceWrapper.prototype.getMessageDescriptor = prototemplate.ServiceWrapper.getMessageDescriptor;
prototemplate.ServiceWrapper.createMessageDescriptor_ = function() {
  var fieldDescriptors = {};
  prototemplate.ServiceWrapper.messageDescriptor_ = {fieldDescriptor:fieldDescriptors};
  fieldDescriptors.value = jsproto.makeFieldDescriptorRequiredInt64(prototemplate.ServiceWrapper.DEFAULT_VALUE);
};
goog.DEBUG && (prototemplate.ServiceWrapper.fromObject = function(obj) {
  return new prototemplate.ServiceWrapper(obj);
});
prototemplate.ServiceWrapper.DEFAULT_VALUE = "";
prototemplate.ServiceWrapper.prototype.getValue = function() {
  return this.internalGetScalarString("value", prototemplate.ServiceWrapper.DEFAULT_VALUE);
};
prototemplate.ServiceWrapper.prototype.setValue = function(x) {
  goog.asserts.assert(/^-?((0x|#)[0-9a-fA-F]+|[0-9]+)$/.test(x), "value must be an integer, got: " + x);
  this.data.value = x;
};
prototemplate.EmptyMessage.getMessageDescriptor = function() {
  prototemplate.EmptyMessage.messageDescriptor_ || prototemplate.EmptyMessage.createMessageDescriptor_();
  return prototemplate.EmptyMessage.messageDescriptor_;
};
prototemplate.EmptyMessage.prototype.getMessageDescriptor = prototemplate.EmptyMessage.getMessageDescriptor;
prototemplate.EmptyMessage.createMessageDescriptor_ = function() {
  var fieldDescriptors = {};
  prototemplate.EmptyMessage.messageDescriptor_ = {fieldDescriptor:fieldDescriptors};
};
goog.DEBUG && (prototemplate.EmptyMessage.fromObject = function(obj) {
  return new prototemplate.EmptyMessage(obj);
});
prototemplate.StringInt32Pair.getMessageDescriptor = function() {
  prototemplate.StringInt32Pair.messageDescriptor_ || prototemplate.StringInt32Pair.createMessageDescriptor_();
  return prototemplate.StringInt32Pair.messageDescriptor_;
};
prototemplate.StringInt32Pair.prototype.getMessageDescriptor = prototemplate.StringInt32Pair.getMessageDescriptor;
prototemplate.StringInt32Pair.createMessageDescriptor_ = function() {
  var fieldDescriptors = {};
  prototemplate.StringInt32Pair.messageDescriptor_ = {fieldDescriptor:fieldDescriptors};
  fieldDescriptors.key = jsproto.FIELD_DESCRIPTOR_REQUIRED_STRING;
  fieldDescriptors.value = jsproto.FIELD_DESCRIPTOR_REQUIRED_INT32;
};
goog.DEBUG && (prototemplate.StringInt32Pair.fromObject = function(obj) {
  return new prototemplate.StringInt32Pair(obj);
});
prototemplate.StringInt32Pair.DEFAULT_KEY = "";
prototemplate.StringInt32Pair.prototype.getKey = function() {
  return this.internalGetScalarString("key");
};
prototemplate.StringInt32Pair.prototype.setKey = function(x) {
  this.data.key = x;
};
prototemplate.StringInt32Pair.DEFAULT_VALUE = 0;
prototemplate.StringInt32Pair.prototype.getValue = function() {
  return this.internalGetScalarNumber("value");
};
prototemplate.StringInt32Pair.prototype.setValue = function(x) {
  goog.asserts.assert(Math.floor(x) == x, "value must be an integer, got: " + x);
  this.data.value = x;
};
prototemplate.StringPair.getMessageDescriptor = function() {
  prototemplate.StringPair.messageDescriptor_ || prototemplate.StringPair.createMessageDescriptor_();
  return prototemplate.StringPair.messageDescriptor_;
};
prototemplate.StringPair.prototype.getMessageDescriptor = prototemplate.StringPair.getMessageDescriptor;
prototemplate.StringPair.createMessageDescriptor_ = function() {
  var fieldDescriptors = {};
  prototemplate.StringPair.messageDescriptor_ = {fieldDescriptor:fieldDescriptors};
  fieldDescriptors.key = jsproto.FIELD_DESCRIPTOR_REQUIRED_STRING;
  fieldDescriptors.value = jsproto.FIELD_DESCRIPTOR_REQUIRED_STRING;
};
goog.DEBUG && (prototemplate.StringPair.fromObject = function(obj) {
  return new prototemplate.StringPair(obj);
});
prototemplate.StringPair.DEFAULT_KEY = "";
prototemplate.StringPair.prototype.getKey = function() {
  return this.internalGetScalarString("key");
};
prototemplate.StringPair.prototype.setKey = function(x) {
  this.data.key = x;
};
prototemplate.StringPair.DEFAULT_VALUE = "";
prototemplate.StringPair.prototype.getValue = function() {
  return this.internalGetScalarString("value");
};
prototemplate.StringPair.prototype.setValue = function(x) {
  this.data.value = x;
};
prototemplate.ConstUrlProto = function() {
};
prototemplate.UrlProto = function(opt_data) {
  jsproto.MessageBaseJson.call(this, opt_data);
};
goog.inherits(prototemplate.UrlProto, jsproto.MessageBaseJson);
prototemplate.UrlProto.getMessageDescriptor = function() {
  prototemplate.UrlProto.messageDescriptor_ || prototemplate.UrlProto.createMessageDescriptor_();
  return prototemplate.UrlProto.messageDescriptor_;
};
prototemplate.UrlProto.prototype.getMessageDescriptor = prototemplate.UrlProto.getMessageDescriptor;
prototemplate.UrlProto.createMessageDescriptor_ = function() {
  var fieldDescriptors = {};
  prototemplate.UrlProto.messageDescriptor_ = {fieldDescriptor:fieldDescriptors};
  fieldDescriptors.protocol = jsproto.FIELD_DESCRIPTOR_OPTIONAL_STRING;
  fieldDescriptors.host = jsproto.FIELD_DESCRIPTOR_OPTIONAL_STRING;
  fieldDescriptors.port = jsproto.FIELD_DESCRIPTOR_OPTIONAL_UINT32;
  fieldDescriptors.path = jsproto.FIELD_DESCRIPTOR_OPTIONAL_STRING;
  fieldDescriptors.hash = jsproto.FIELD_DESCRIPTOR_OPTIONAL_STRING;
  fieldDescriptors.param = jsproto.makeFieldDescriptorRepeatedMessage(prototemplate.StringPair.getMessageDescriptor());
  fieldDescriptors.original_value = jsproto.FIELD_DESCRIPTOR_OPTIONAL_STRING;
  fieldDescriptors.is_data_uri = jsproto.FIELD_DESCRIPTOR_OPTIONAL_BOOL;
};
goog.DEBUG && (prototemplate.UrlProto.fromObject = function(obj) {
  return new prototemplate.UrlProto(obj);
});
prototemplate.UrlProto.DEFAULT_PROTOCOL = "";
prototemplate.UrlProto.prototype.hasProtocol = function() {
  return this.internalHas("protocol");
};
prototemplate.UrlProto.prototype.getProtocol = function() {
  return this.internalGetScalarString("protocol");
};
prototemplate.UrlProto.prototype.setProtocol = function(x) {
  this.data.protocol = x;
};
prototemplate.UrlProto.DEFAULT_HOST = "";
prototemplate.UrlProto.prototype.hasHost = function() {
  return this.internalHas("host");
};
prototemplate.UrlProto.prototype.getHost = function() {
  return this.internalGetScalarString("host");
};
prototemplate.UrlProto.prototype.setHost = function(x) {
  this.data.host = x;
};
prototemplate.UrlProto.DEFAULT_PORT = 0;
prototemplate.UrlProto.prototype.hasPort = function() {
  return this.internalHas("port");
};
prototemplate.UrlProto.prototype.getPort = function() {
  return this.internalGetScalarNumber("port");
};
prototemplate.UrlProto.prototype.setPort = function(x) {
  goog.asserts.assert(Math.floor(x) == x, "port must be an integer, got: " + x);
  this.data.port = x;
};
prototemplate.UrlProto.DEFAULT_PATH = "";
prototemplate.UrlProto.prototype.hasPath = function() {
  return this.internalHas("path");
};
prototemplate.UrlProto.prototype.getPath = function() {
  return this.internalGetScalarString("path");
};
prototemplate.UrlProto.prototype.setPath = function(x) {
  this.data.path = x;
};
prototemplate.UrlProto.DEFAULT_HASH = "";
prototemplate.UrlProto.prototype.hasHash = function() {
  return this.internalHas("hash");
};
prototemplate.UrlProto.prototype.getHash = function() {
  return this.internalGetScalarString("hash");
};
prototemplate.UrlProto.prototype.setHash = function(x) {
  this.data.hash = x;
};
prototemplate.UrlProto.DEFAULT_ORIGINAL_VALUE = "";
prototemplate.UrlProto.prototype.hasOriginalValue = function() {
  return this.internalHas("original_value");
};
prototemplate.UrlProto.prototype.getOriginalValue = function() {
  return this.internalGetScalarString("original_value");
};
prototemplate.UrlProto.prototype.setOriginalValue = function(x) {
  this.data.original_value = x;
};
prototemplate.UrlProto.prototype.clearOriginalValue = function() {
  this.internalClear("original_value");
};
prototemplate.UrlProto.DEFAULT_IS_DATA_URI = !1;
prototemplate.UrlProto.prototype.paramSize = function() {
  return this.internalSizeOfRepeatedField("param");
};
prototemplate.UrlProto.prototype.getParam = function(i) {
  return new prototemplate.StringPair(this.internalRepeatedFieldGetMessage("param", i));
};
prototemplate.UrlProto.prototype.removeParam = function(i) {
  this.internalRepeatedFieldRemove("param", i);
};
prototemplate.UrlProto.prototype.mutableParam = function(i) {
  return new prototemplate.StringPair(this.internalRepeatedFieldGetMessage("param", i));
};
prototemplate.UrlProto.prototype.addParam = function() {
  return new prototemplate.StringPair(this.internalRepeatedFieldAddMessage("param"));
};
jslayout.bidi = {};
jslayout.builtin = {};
jslayout.EntryPointData = function(template, opt_param) {
  this.key_ = "";
  this.param_ = opt_param || {};
  if ("string" === typeof template) {
    this.key_ = template;
  } else {
    var entryPoint = template;
    var tp = entryPoint.param_;
    this.key_ = entryPoint.getKey();
    for (var key in tp) {
      null == this.param_[key] && (this.param_[key] = tp[key]);
    }
  }
};
jslayout.EntryPointData.prototype.getKey = function() {
  return this.key_;
};
jslayout.EntryPointData.fp = function(entryPoint) {
  return entryPoint.getKey();
};
jslayout.bidi.String = {LTR:"ltr", RTL:"rtl", LEFT:"left", RIGHT:"right"};
jslayout.bidi.Char = {LRM:"\u200e", RLM:"\u200f", LRE:"\u202a", RLE:"\u202b", PDF:"\u202c"};
jslayout.bidi.inferContextDirection = function(element) {
  if (!element) {
    return jslayout.builtin.bidiLocaleDir();
  }
  for (var parentNode = element.parentNode; goog.dom.isElement(parentNode); parentNode = parentNode.parentNode) {
    var direction = parentNode.getAttribute("dir");
    if (direction && (direction = direction.toLowerCase(), direction == jslayout.bidi.String.LTR || direction == jslayout.bidi.String.RTL)) {
      return direction;
    }
  }
  return jslayout.builtin.bidiLocaleDir();
};
jslayout.builtin.and = function(var_args) {
  for (var i = 0; i < arguments.length; ++i) {
    if (!arguments[i]) {
      return !1;
    }
  }
  return !0;
};
jslayout.builtin.gt = function(a, b) {
  return a > b;
};
jslayout.builtin.lt = function(a, b) {
  return a < b;
};
jslayout.builtin.ge = function(a, b) {
  return a >= b;
};
jslayout.builtin.le = function(a, b) {
  return a <= b;
};
jslayout.builtin.debug = function(x, opt_log) {
  goog.DEBUG && window.console && window.console.log && !1 !== opt_log && window.console.log(x);
  return "string" == typeof x ? "'" + x.replace(/\'/g, "\\'") + "'" : String(x);
};
jslayout.builtin.isArray_ = function(obj) {
  return null != obj && "object" == typeof obj && "number" == typeof obj.length && "undefined" != typeof obj.propertyIsEnumerable && !obj.propertyIsEnumerable("length");
};
jslayout.builtin.getFieldFromExtensionObject_ = function(obj, shiftedIndex) {
  var extensions = obj[obj.length - 1];
  return jslayout.builtin.isArray_(extensions) || !goog.isObject(extensions) ? null : extensions[shiftedIndex + 1] || null;
};
jslayout.builtin.isJspbFieldValue_ = function(arrayElement) {
  return null != arrayElement && (!goog.isObject(arrayElement) || jslayout.builtin.isArray_(arrayElement));
};
jslayout.builtin.resolveField_ = function(object, fieldKey) {
  if ("number" == typeof fieldKey && 0 > fieldKey) {
    if (null == object.length) {
      return object[-fieldKey];
    }
    fieldKey = -fieldKey - 1;
    var nextObject = object[fieldKey];
    return jslayout.builtin.isJspbFieldValue_(nextObject) ? nextObject : jslayout.builtin.getFieldFromExtensionObject_(object, fieldKey);
  }
  return object[fieldKey];
};
jslayout.builtin.oneofCase = function(object, field) {
  for (var i = 0; i < field.length; ++i) {
    if (jslayout.builtin.hasField(object, -field[i])) {
      return field[i];
    }
  }
  return 0;
};
jslayout.builtin.field = function(object, defaultValue, var_args) {
  for (var i = 2; i < arguments.length; ++i) {
    if (null == object || null == arguments[i]) {
      return defaultValue;
    }
    object = jslayout.builtin.resolveField_(object, arguments[i]);
  }
  return null == object ? defaultValue : object;
};
jslayout.builtin.hasField = function(object, var_args) {
  for (var i = 1; i < arguments.length; ++i) {
    if (null == object || null == arguments[i]) {
      return !1;
    }
    object = jslayout.builtin.resolveField_(object, arguments[i]);
  }
  return null != object;
};
jslayout.builtin.fieldSize = function(object, var_args) {
  for (var i = 1; i < arguments.length; ++i) {
    if (null == object || null == arguments[i]) {
      return 0;
    }
    object = jslayout.builtin.resolveField_(object, arguments[i]);
  }
  return null == object ? 0 : jslayout.array.length(object);
};
jslayout.builtin.isEmptyMessage = function(message) {
  if (null == message) {
    return !0;
  }
  for (var key in message) {
    return !1;
  }
  return !0;
};
jslayout.builtin.listToArray = function(list, elementType) {
  if (null == list) {
    return [];
  }
  var isArray = null != list.length;
  if (isArray && elementType != prototemplate.TypeProto.TypeId.TYPE_STRING && elementType != prototemplate.TypeProto.TypeId.TYPE_MESSAGE) {
    return list;
  }
  var result = list._jslArrayCache;
  result || (result = [], list._jslArrayCache = result);
  var size = isArray ? list.length : list.size();
  result.length = size;
  var getterName = list.getAtIndex ? "getAtIndex" : "get";
  for (var i = 0; i < size; i++) {
    var element = isArray ? list[i] : list[getterName](i);
    elementType == prototemplate.TypeProto.TypeId.TYPE_MESSAGE ? element = jslayout.builtin.getProtoBackingData(element) : elementType == prototemplate.TypeProto.TypeId.TYPE_STRING && null == element && (element = "");
    result[i] = element;
  }
  return result;
};
jslayout.builtin.range = function(start, end, opt_step) {
  var step = ~~(opt_step || 0);
  0 == step && (step = 1);
  var result = [];
  if (0 < step) {
    for (var i = ~~start; i < end; i += step) {
      result.push(i);
    }
  } else {
    for (i = ~~start; i > end; i += step) {
      result.push(i);
    }
  }
  return result;
};
jslayout.builtin.formatNumber = function(value, opt_precision) {
  var precision = opt_precision || 0;
  0 > precision && (precision = 0);
  return parseFloat(value).toFixed(precision);
};
jslayout.builtin.bidiLocaleDir = function() {
  return jslayout.EvalContext.runtime().getIsRtl() ? jslayout.bidi.String.RTL : jslayout.bidi.String.LTR;
};
jslayout.builtin.bidiLocaleDirIsRtl = function() {
  return jslayout.EvalContext.runtime().getIsRtl() ? !0 : !1;
};
jslayout.builtin.bidiDir = function(text, isHtml, currentDir) {
  var dir = goog.i18n.bidi.estimateDirection(text, isHtml);
  switch(dir) {
    case goog.i18n.bidi.Dir.LTR:
      return jslayout.bidi.String.LTR;
    case goog.i18n.bidi.Dir.RTL:
      return jslayout.bidi.String.RTL;
    default:
      return currentDir;
  }
};
jslayout.builtin.bidiDirIsRtl = function(text, isHtml, currentRtl) {
  var dir = goog.i18n.bidi.estimateDirection(text, isHtml);
  switch(dir) {
    case goog.i18n.bidi.Dir.LTR:
      return !1;
    case goog.i18n.bidi.Dir.RTL:
      return !0;
    default:
      return currentRtl;
  }
};
jslayout.builtin.bidiDirValue = function(isRtl) {
  return isRtl ? "rtl" : "ltr";
};
jslayout.builtin.bidiExitDir = function(text, isHtml, currentDir) {
  return jslayout.builtin.bidiExitDirIsRtl(text, isHtml, "rtl" == currentDir) ? "rtl" : "ltr";
};
jslayout.builtin.bidiExitDirIsRtl = function(text, isHtml, currentRtl) {
  return currentRtl ? !goog.i18n.bidi.endsWithLtr(text, isHtml) : goog.i18n.bidi.endsWithRtl(text, isHtml);
};
jslayout.builtin.URL_PROPERTY_VALUE_RE_ = /[\'\"\(]/;
jslayout.builtin.FOUR_VALUE_PROPERTY_NAMES_ = ["border-color", "border-style", "border-width", "margin", "padding"];
jslayout.builtin.LEFT_RE_ = /left/g;
jslayout.builtin.RIGHT_RE_ = /right/g;
jslayout.builtin.TOKEN_SEPARATOR_RE_ = /\s+/;
jslayout.builtin.bidiCssFlip = function(propertyName, propertyValue) {
  if (jslayout.builtin.URL_PROPERTY_VALUE_RE_.test(propertyValue)) {
    return propertyValue;
  }
  propertyValue = 0 <= propertyValue.indexOf("left") ? propertyValue.replace(jslayout.builtin.LEFT_RE_, "right") : propertyValue.replace(jslayout.builtin.RIGHT_RE_, "left");
  if (goog.array.contains(jslayout.builtin.FOUR_VALUE_PROPERTY_NAMES_, propertyName)) {
    var tokens = propertyValue.split(jslayout.builtin.TOKEN_SEPARATOR_RE_);
    4 <= tokens.length && (propertyValue = [tokens[0], tokens[3], tokens[2], tokens[1]].join(" "));
  }
  return propertyValue;
};
jslayout.builtin.string = function(value) {
  if (null != value) {
    var o = value.ordinal;
    null == o && (o = value.ordinal);
    if (null != o && "function" == typeof o) {
      return String(o.call(value));
    }
  }
  return "" + value;
};
jslayout.builtin.toInt = function(value) {
  if (null == value) {
    return 0;
  }
  var o = value.ordinal;
  null == o && (o = value.ordinal);
  return null != o && "function" == typeof o ? o.call(value) : 0 <= value ? Math.floor(value) : Math.ceil(value);
};
jslayout.builtin.has = function(exprFunction) {
  try {
    return void 0 !== exprFunction.call(null);
  } catch (e) {
    return !1;
  }
};
jslayout.builtin.size = function(exprFunction) {
  try {
    var exprValue = exprFunction.call(null);
    return jslayout.builtin.isArray_(exprValue) ? exprValue.length : void 0 === exprValue ? 0 : 1;
  } catch (e) {
    return 0;
  }
};
jslayout.builtin.bind = function(tpl, opt_params) {
  return null == tpl ? null : new jslayout.EntryPointData(tpl, opt_params);
};
jslayout.builtin.join = function(tokens, delimiter) {
  if (!tokens) {
    return "";
  }
  void 0 == delimiter && (delimiter = ",");
  return tokens.join(delimiter);
};
jslayout.builtin.urlParse_ = function(urlProto) {
  if (urlProto.hasOriginalValue()) {
    var uri = new goog.Uri(urlProto.getOriginalValue());
    urlProto.clearOriginalValue();
    uri.hasScheme() && urlProto.setProtocol(uri.getScheme());
    uri.hasDomain() && urlProto.setHost(uri.getDomain());
    uri.hasPort() ? urlProto.setPort(uri.getPort()) : uri.hasScheme() && ("http" == uri.getScheme() ? urlProto.setPort(80) : "https" == uri.getScheme() && urlProto.setPort(443));
    uri.hasPath() && urlProto.setPath(uri.getPath());
    uri.hasFragment() && urlProto.setHash(uri.getFragment());
    var keys = uri.getQueryData().getKeys();
    for (var i = 0; i < keys.length; ++i) {
      var key = keys[i];
      var param = urlProto.addParam();
      param.setKey(key);
      param.setValue(uri.getQueryData().getValues(key)[0]);
    }
  }
};
jslayout.builtin.url = function(urlValue, opt_param) {
  if ("string" == typeof urlValue) {
    var urlProto = new prototemplate.UrlProto;
    urlProto.setOriginalValue(urlValue);
  } else {
    urlProto = new prototemplate.UrlProto(urlValue);
  }
  jslayout.builtin.urlParse_(urlProto);
  if (opt_param) {
    for (var i = 0; i < opt_param.length; ++i) {
      var p = opt_param[i];
      var key = p.key;
      var value = p.value;
      var found = !1;
      for (var j = 0; j < urlProto.paramSize(); ++j) {
        if (urlProto.getParam(j).getKey() == key) {
          urlProto.mutableParam(j).setValue(value);
          found = !0;
          break;
        }
      }
      found || (p = urlProto.addParam(), p.setKey(key), p.setValue(value));
    }
  }
  return urlProto.toObject();
};
jslayout.builtin.urlToString = function(url) {
  var urlProto = new prototemplate.UrlProto(url);
  jslayout.builtin.urlParse_(urlProto);
  var usePort = urlProto.hasPort() && (!urlProto.hasProtocol() || "http" == urlProto.getProtocol() && 80 != urlProto.getPort() || "https" == urlProto.getProtocol() && 443 != urlProto.getPort());
  var uri = goog.Uri.create(urlProto.hasProtocol() ? urlProto.getProtocol() : null, null, urlProto.hasHost() ? urlProto.getHost() : null, usePort ? urlProto.getPort() : null, urlProto.hasPath() ? urlProto.getPath() : null, null, urlProto.hasHash() ? urlProto.getHash() : null);
  for (var i = 0; i < urlProto.paramSize(); ++i) {
    var param = urlProto.getParam(i);
    uri.setParameterValue(param.getKey(), param.getValue());
  }
  return uri.toString();
};
jslayout.builtin.urlParam = function(url, name) {
  var urlProto = new prototemplate.UrlProto(url);
  jslayout.builtin.urlParse_(urlProto);
  for (var i = 0; i < urlProto.paramSize(); ++i) {
    var param = urlProto.getParam(i);
    if (param.getKey() == name) {
      return param.getValue();
    }
  }
  return "";
};
jslayout.builtin.hasUrlParam = function(url, name) {
  var urlProto = new prototemplate.UrlProto(url);
  jslayout.builtin.urlParse_(urlProto);
  for (var i = 0; i < urlProto.paramSize(); ++i) {
    var param = urlProto.getParam(i);
    if (param.getKey() == name) {
      return !0;
    }
  }
  return !1;
};
jslayout.builtin.icuPluralCategory = function(plural, offset) {
  return 0 < offset && plural <= offset + 1 ? "" + plural : goog.i18n.pluralRules.select(plural - offset);
};
jslayout.builtin.numberFormatter_ = null;
jslayout.builtin.icuNumberFormat = function(nr) {
  jslayout.builtin.numberFormatter_ || (jslayout.builtin.numberFormatter_ = new goog.i18n.NumberFormat(goog.i18n.NumberFormat.Format.DECIMAL));
  return jslayout.builtin.numberFormatter_.format(nr);
};
jslayout.builtin.toLiteral = function(value) {
  return "boolean" == typeof value ? value ? "true" : "false" : "string" == typeof value ? '"' + value.replace(/\"/g, '\\"') + '"' : "number" == typeof value ? String(value) : null;
};
jslayout.builtin.prefixCssName = function(name, role) {
  var rule = jslayout.EvalContext.runtime().getCss3PrefixRules();
  var l = rule.ruleSize();
  for (var i = 0; i < l; i++) {
    if (rule.getRule(i).getName() === name && (rule.getRule(i).getRole() === prototemplate.Css3PrefixRules.Role.ANY || rule.getRule(i).getRole() === role)) {
      return rule.getRule(i).getPrefixedName();
    }
  }
  return jslayout.EvalContext.runtime().getCss3Prefix() + name;
};
jslayout.builtin.reactiveCurrentInstantiationId = function() {
  return "";
};
jslayout.builtin.reactiveContext = function() {
  return null;
};
jslayout.builtin.setDirFromJscontent = function(tag, rtl, content, isHtml) {
  var rtlContent = jslayout.builtin.bidiDirIsRtl(content, isHtml, rtl);
  var rtlExit = jslayout.builtin.bidiExitDirIsRtl(content, isHtml, rtl);
  rtl == rtlContent && rtl == rtlExit || tag.setDirAttributeValue(jslayout.builtin.bidiDirValue(rtlContent));
  return rtlContent;
};
jslayout.builtin.setDirFromJsdir = function(tag, rtl, jsdir, content, isHtml) {
  var rtlJsdir = jsdir == jslayout.bidi.String.RTL;
  var rtlExit = null != content ? jslayout.builtin.bidiExitDirIsRtl(content, isHtml, rtl) : rtl;
  rtl == rtlJsdir && rtl == rtlExit || tag.setDirAttributeValue(jslayout.builtin.bidiDirValue(rtlJsdir));
  return rtlJsdir;
};
jslayout.builtin.setDirAtHtml = function(tag, rtl) {
  0 != rtl && tag.setAttributeValue(prototemplate.AttributeType.Type.REGULAR, "dir", jslayout.builtin.bidiDirValue(rtl));
  return rtl;
};
jslayout.builtin.wizJsData = function(messageXid, message) {
  return jslayout.wizdata.cacheData(messageXid, message || []);
};
jslayout.Future = function(provider, opt_this) {
  this.provider_ = provider;
  this.instance_ = null;
  this.this_ = opt_this || null;
};
jslayout.Future.prototype.get = function() {
  null == this.instance_ && (this.instance_ = this.provider_.call(this.this_));
  return this.instance_;
};
jslayout.Future.prototype.ready = function() {
  return null != this.instance_;
};
jslayout.Future.prototype.dispose = function() {
  null != this.instance_ && (this.instance_.dispose && this.instance_.dispose(), this.instance_ = null);
};
jslayout.builtin.writeClass = function(classString) {
  if ("" === classString) {
    return "";
  }
  var trimmedClass = " " === classString.charAt(classString.length - 1) ? classString.slice(0, -1) : classString;
  return ' class="' + trimmedClass + '"';
};
jslayout.builtin.writeStyle = function(styleString) {
  return "" !== styleString ? ' style="' + styleString + '"' : "";
};
jslayout.builtin.wrapValues = function(ctor, values) {
  var result = [];
  if (values) {
    for (var i = 0; i < values.length; i++) {
      result.push(new ctor(values[i]));
    }
  }
  return result;
};
jslayout.builtin.getProtoBackingData = function(msg) {
  return null != msg && msg.toArray ? msg.toArray() : msg;
};
jslayout.builtin.renderSafeHtmlProto = function(templateContext, entryPointData) {
  var instantiateFun = templateContext.getEntry(entryPointData.getKey()).instantiateStrictWithRootTagFun;
  return null != instantiateFun ? security.html.jspbconversions.safeHtmlToProto(instantiateFun(templateContext, entryPointData.param_)).toArray() : [];
};
jslayout.builtin.legacy_written_language = function() {
  var lang = jslayout.EvalContext.runtime().getLanguage();
  if (null == lang || "" == lang || "und" == lang) {
    return "en";
  }
  if ("en-GB" == lang || "es-419" == lang || "pt-BR" == lang || "pt-PT" == lang || "sr-ME" == lang || 0 == lang.indexOf("zh-")) {
    return lang;
  }
  var cut = lang.indexOf("-");
  return -1 == cut ? lang : lang.substring(0, cut);
};
jslayout.domdiff = {};
jslayout.domdiff.TreeBuilder = function() {
};
jslayout.domdiff.TreeBuilder.prototype.confirmOpenElement = function() {
};
jslayout.domdiff.TreeBuilder.prototype.setRegularAttribute = function() {
};
jslayout.domdiff.TreeBuilder.prototype.setClass = function() {
};
jslayout.domdiff.TreeBuilder.prototype.closeElement = function() {
};
jslayout.domdiff.TreeBuilder.prototype.setStyle = function() {
};
jslayout.domdiff.TreeBuilder.prototype.hideTag = function() {
};
jslayout.domdiff.TreeBuilder.prototype.openElement = function() {
};
jslayout.domdiff.TreeBuilder.prototype.transclusion = function() {
};
jslayout.domdiff.TreeBuilder.prototype.addText = function() {
};
jslayout.domdiff.TreeBuilder.prototype.getNodeExtraData = function() {
};
jslayout.domdiff.PlainTextTreeBuilder = function() {
  this.text_ = "";
};
jslayout.domdiff.PlainTextTreeBuilder.prototype.confirmOpenElement = function() {
};
jslayout.domdiff.PlainTextTreeBuilder.prototype.setRegularAttribute = function() {
};
jslayout.domdiff.PlainTextTreeBuilder.prototype.setClass = function() {
};
jslayout.domdiff.PlainTextTreeBuilder.prototype.closeElement = function() {
};
jslayout.domdiff.PlainTextTreeBuilder.prototype.setStyle = function() {
};
jslayout.domdiff.PlainTextTreeBuilder.prototype.hideTag = function() {
};
jslayout.domdiff.PlainTextTreeBuilder.prototype.openElement = function() {
};
jslayout.domdiff.PlainTextTreeBuilder.prototype.transclusion = function() {
};
jslayout.domdiff.PlainTextTreeBuilder.prototype.addText = function(preorderIndex, text) {
  this.text_ += text;
};
jslayout.domdiff.PlainTextTreeBuilder.prototype.getNodeExtraData = function() {
  return null;
};
jslayout.domdiff.PlainTextTreeBuilder.prototype.getText = function() {
  return this.text_;
};
jslayout.domdiff.VirtualNode = function(parent, type, preorderIndex, value) {
  this.parent_ = parent;
  this.type = type;
  this.preorderIndex = preorderIndex;
  this.value = value;
  this.children_ = null;
  this.previousAttributes_ = null;
  this.newAttributes_ = null;
  this.attributesMatchTo_ = 0;
  this.physicalNode = null;
  this.extraDataArray = null;
};
jslayout.domdiff.VirtualNode.wrapElement = function(element) {
  var virtualNode = element[jslayout.Property.VDOM];
  null == virtualNode && (element[jslayout.Property.VDOM] = virtualNode = new jslayout.domdiff.VirtualNode(null, jslayout.domdiff.VirtualNode.NodeType.ELEMENT, "0", element.name), virtualNode.physicalNode = element);
  return virtualNode;
};
jslayout.domdiff.VirtualNode.unWrapElement = function(element) {
  var virtualNode = element[jslayout.Property.VDOM];
  null != virtualNode && (virtualNode.dispose(), element[jslayout.Property.VDOM] = null);
};
jslayout.domdiff.VirtualNode.NodeType = {ELEMENT:1, TEXT:2, VIRTUAL:3};
jslayout.domdiff.VirtualNode.AttributeType = {REGULAR:1, STYLE:2, CLASS:3, TRANSCLUSION_MARKER:4};
jslayout.domdiff.VirtualNode.prototype.addChild = function(index, child) {
  null == this.children_ && (this.children_ = []);
  this.children_.splice(index, 0, child);
};
jslayout.domdiff.VirtualNode.prototype.getChildCount = function() {
  return null == this.children_ ? 0 : this.children_.length;
};
jslayout.domdiff.VirtualNode.prototype.dispose = function() {
  var childCount = this.getChildCount();
  for (var i = 0; i < childCount; i++) {
    this.children_[i].dispose();
  }
  this.disposeExtraData(0);
};
jslayout.domdiff.VirtualNode.prototype.disposeExtraData = function(startIndex) {
  var array = this.extraDataArray;
  if (null != array && array.length > startIndex) {
    for (var i = startIndex; i < array.length; i += 2) {
      var extraData = array[i];
      for (var key in extraData) {
        var value = extraData[key];
        value != this && value.dispose && value.dispose();
      }
    }
    array.length = startIndex;
  }
};
jslayout.domdiff.VirtualNode.prototype.getChild = function(index) {
  return this.children_[index];
};
jslayout.domdiff.VirtualNode.prototype.processJsaction = function(actionType, event) {
  if (null != this.extraDataArray) {
    var actionKey = jslayout.String.IDL_ACTION_KEY_PREFIX + actionType;
    for (var i = 0; i < this.extraDataArray.length; i += 2) {
      var extraData = this.extraDataArray[i];
      if (null != extraData) {
        var actionFunction = extraData[actionKey];
        null != actionFunction && actionFunction.call(this.physicalNode, event);
      }
    }
  }
};
jslayout.domdiff.VirtualNode.prototype.removeChild = function(index) {
  this.children_[index].dispose();
  this.children_.splice(index, 1);
};
jslayout.domdiff.VirtualNode.prototype.setAttribute = function(type, name, value) {
  if (null != this.previousAttributes_ && null == this.newAttributes_ && this.attributesMatchTo_ < this.previousAttributes_.length && this.previousAttributes_[this.attributesMatchTo_].equals(type, name, value)) {
    this.attributesMatchTo_++;
  } else {
    null == this.newAttributes_ && (this.newAttributes_ = []);
    if (type != jslayout.domdiff.VirtualNode.AttributeType.TRANSCLUSION_MARKER) {
      if (null != this.previousAttributes_) {
        for (var i = 0; i < this.attributesMatchTo_; i++) {
          if (this.previousAttributes_[i].isDuplicate(type, name)) {
            return;
          }
        }
      }
      for (i = 0; i < this.newAttributes_.length; i++) {
        if (this.newAttributes_[i].isDuplicate(type, name)) {
          return;
        }
      }
    }
    this.newAttributes_.push(new jslayout.domdiff.VirtualNode.Attribute(type, name, value));
  }
};
jslayout.domdiff.VirtualNode.prototype.updateAttributes = function() {
  if (null == this.physicalNode) {
    this.previousAttributes_ = null, this.newAttributes_ = null, this.attributesMatchTo_ = 0;
  } else {
    if (null != this.previousAttributes_ && null == this.newAttributes_ && this.attributesMatchTo_ == this.previousAttributes_.length) {
      this.attributesMatchTo_ = 0;
    } else {
      var previousClasses = null;
      var previousStyles = null;
      var previousRegular = null;
      if (null != this.previousAttributes_) {
        for (var i = this.attributesMatchTo_; i < this.previousAttributes_.length; i++) {
          var previous = this.previousAttributes_[i];
          var name = previous.name_;
          switch(previous.type_) {
            case jslayout.domdiff.VirtualNode.AttributeType.CLASS:
              null == previousClasses && (previousClasses = {});
              previousClasses[name] = name;
              break;
            case jslayout.domdiff.VirtualNode.AttributeType.STYLE:
              null == previousStyles && (previousStyles = {});
              previousStyles[name] = previous.value_;
              break;
            case jslayout.domdiff.VirtualNode.AttributeType.REGULAR:
              null == previousRegular && (previousRegular = {}), previousRegular[name] = previous.value_;
          }
        }
      }
      if (null != this.newAttributes_) {
        for (i = 0; i < this.newAttributes_.length; i++) {
          var attr = this.newAttributes_[i];
          name = attr.name_;
          var value = attr.value_;
          switch(attr.type_) {
            case jslayout.domdiff.VirtualNode.AttributeType.CLASS:
              goog.dom.classlist.add(this.physicalNode, name);
              null != previousClasses && delete previousClasses[name];
              break;
            case jslayout.domdiff.VirtualNode.AttributeType.REGULAR:
              if (null == previousRegular) {
                this.physicalNode.setAttribute(name, value);
              } else {
                var previousValue = previousRegular[name];
                value != previousValue && this.physicalNode.setAttribute(name, value);
                delete previousRegular[name];
              }
              break;
            case jslayout.domdiff.VirtualNode.AttributeType.STYLE:
              null == previousStyles ? this.physicalNode.style[name] = value : (previousValue = null == previousStyles ? null : previousStyles[name], value != previousValue && (this.physicalNode.style[name] = value), delete previousStyles[name]);
          }
        }
      }
      if (null != previousClasses) {
        for (name in previousClasses) {
          goog.dom.classlist.remove(this.physicalNode, name);
        }
      }
      if (null != previousStyles) {
        for (name in previousStyles) {
          this.physicalNode.style.removeProperty(name);
        }
      }
      if (null != previousRegular) {
        for (name in previousRegular) {
          this.physicalNode.removeAttribute(name);
        }
      }
      if (0 != this.attributesMatchTo_) {
        for (this.previousAttributes_.length = this.attributesMatchTo_, i = 0; i < this.newAttributes_.length; i++) {
          this.previousAttributes_.push(this.newAttributes_[i]);
        }
      } else {
        this.previousAttributes_ = this.newAttributes_;
      }
      this.attributesMatchTo_ = 0;
      this.newAttributes_ = null;
    }
  }
};
jslayout.domdiff.VirtualNode.prototype.getParent = function() {
  return this.parent_;
};
jslayout.domdiff.VirtualNode.prototype.getPhysicalNode = function() {
  return null != this.physicalNode ? this.physicalNode : null != this.parent_ ? this.parent_.getPhysicalNode() : null;
};
jslayout.domdiff.VirtualNode.prototype.getNextPhysicalNode = function(index) {
  for (; index < this.getChildCount();) {
    var child = this.children_[index];
    if (null != child.physicalNode) {
      return child.physicalNode;
    }
    index++;
  }
  return null != this.physicalNode || null == this.parent_ ? null : this.parent_.getNextPhysicalNode(this.parent_.children_.indexOf(this) + 1);
};
jslayout.domdiff.VirtualNode.Attribute = function(type, name, value) {
  this.type_ = type;
  this.name_ = name;
  this.value_ = value;
};
jslayout.domdiff.VirtualNode.Attribute.prototype.equals = function(type, name, value) {
  return this.type_ == type && this.name_ == name && this.value_ == value;
};
jslayout.domdiff.VirtualNode.Attribute.prototype.isDuplicate = function(type, name) {
  return this.type_ == type && this.name_ == name;
};
jslayout.domdiff.RebindingTreeBuilder = function(root) {
  this.current_ = null;
  this.tentative_ = null;
  this.root_ = root;
  this.isNewElement_ = !1;
  this.currentIndex_ = 0;
  this.currentExtraDataIndex_ = 0;
  this.indexStack_ = [];
  this.physicalRoot_ = null != root ? root.getPhysicalNode() : null;
};
jslayout.domdiff.RebindingTreeBuilder.Flags = {NO_TAG:1};
jslayout.domdiff.RebindingTreeBuilder.CLOSE_CHILD_INDEX_ = "9999999999";
jslayout.domdiff.comparePreorderIndex_ = function(s, t) {
  var sPos = 0;
  for (var tPos = 0; sPos < s.length && tPos < t.length;) {
    var sDot = s.indexOf(".", sPos);
    var tDot = t.indexOf(".", tPos);
    -1 == sDot && (sDot = s.length);
    -1 == tDot && (tDot = t.length);
    var sLen = sDot - sPos;
    var tLen = tDot - tPos;
    if (sLen != tLen) {
      return sLen > tLen ? 1 : -1;
    }
    for (; sPos < sDot;) {
      if (s.charCodeAt(sPos) != t.charCodeAt(tPos)) {
        return s.charCodeAt(sPos) > t.charCodeAt(tPos) ? 1 : -1;
      }
      sPos++;
      tPos++;
    }
    sPos++;
    tPos++;
  }
  return s.length - t.length;
};
jslayout.domdiff.RebindingTreeBuilder.prototype.confirmOpenElement = function() {
  if (this.isNewElement_) {
    if (null == this.current_) {
      this.root_ = this.tentative_;
      var physicalParent = null;
      var physicalNext = null;
    } else {
      physicalParent = this.current_.getPhysicalNode(), physicalNext = this.current_.getNextPhysicalNode(this.currentIndex_), this.current_.addChild(this.currentIndex_, goog.asserts.assertObject(this.tentative_));
    }
    "jsl" == this.tentative_.value && (this.tentative_.type = jslayout.domdiff.VirtualNode.NodeType.VIRTUAL);
    this.tentative_.type != jslayout.domdiff.VirtualNode.NodeType.VIRTUAL && (this.tentative_.physicalNode = document.createElement(this.tentative_.value), null != physicalParent && physicalParent.insertBefore(this.tentative_.physicalNode, physicalNext), null != this.tentative_.extraDataArray && (this.tentative_.physicalNode[jslayout.Property.VDOM] = this.tentative_, this.tentative_.processJsaction(jslayout.String.IDL_CREATE_JSACTION_EVENT_TYPE, null)), null == this.physicalRoot_ && (this.physicalRoot_ = 
    this.tentative_.physicalNode));
  }
  this.current_ = this.tentative_;
  this.tentative_ = null;
  this.current_.updateAttributes();
  this.indexStack_.push(this.currentIndex_);
  this.currentIndex_ = 0;
};
jslayout.domdiff.RebindingTreeBuilder.prototype.setRegularAttribute = function(name, value) {
  this.tentative_.setAttribute(jslayout.domdiff.VirtualNode.AttributeType.REGULAR, name, value);
};
jslayout.domdiff.RebindingTreeBuilder.prototype.setClass = function(name) {
  this.tentative_.setAttribute(jslayout.domdiff.VirtualNode.AttributeType.CLASS, name, name);
};
jslayout.domdiff.RebindingTreeBuilder.prototype.closeElement = function() {
  this.advanceToChild_(jslayout.domdiff.RebindingTreeBuilder.CLOSE_CHILD_INDEX_);
  this.current_ = this.current_.getParent();
  var last = this.indexStack_.length - 1;
  this.currentIndex_ = this.indexStack_[last] + 1;
  this.indexStack_.length = last;
};
jslayout.domdiff.RebindingTreeBuilder.prototype.setStyle = function(name, value) {
  this.tentative_.setAttribute(jslayout.domdiff.VirtualNode.AttributeType.STYLE, name, value);
};
jslayout.domdiff.RebindingTreeBuilder.prototype.hideTag = function() {
  null != this.tentative_ && (this.tentative_.type = jslayout.domdiff.VirtualNode.NodeType.VIRTUAL);
};
jslayout.domdiff.RebindingTreeBuilder.prototype.openElement = function(preorderIndex, name, flags) {
  this.currentExtraDataIndex_ = 0;
  this.tentative_ = null == this.current_ ? this.root_ : this.advanceToChild_(preorderIndex);
  this.isNewElement_ = null == this.tentative_;
  this.isNewElement_ && (this.tentative_ = new jslayout.domdiff.VirtualNode(this.current_, 0 == (flags & jslayout.domdiff.RebindingTreeBuilder.Flags.NO_TAG) ? jslayout.domdiff.VirtualNode.NodeType.ELEMENT : jslayout.domdiff.VirtualNode.NodeType.VIRTUAL, preorderIndex, name));
};
jslayout.domdiff.RebindingTreeBuilder.prototype.transclusion = function(templateKey, elementName) {
  this.tentative_.setAttribute(jslayout.domdiff.VirtualNode.AttributeType.TRANSCLUSION_MARKER, templateKey, elementName);
  var array = this.tentative_.extraDataArray;
  null == array && (array = this.tentative_.extraDataArray = []);
  array[this.currentExtraDataIndex_ + 1] != templateKey && (array[this.currentExtraDataIndex_ + 1] = templateKey, this.tentative_.disposeExtraData(this.currentExtraDataIndex_ + 2));
  this.currentExtraDataIndex_ += 2;
};
jslayout.domdiff.RebindingTreeBuilder.prototype.addText = function(preorderIndex, text) {
  var node = this.advanceToChild_(preorderIndex);
  if (null == node) {
    var newNode = new jslayout.domdiff.VirtualNode(this.current_, jslayout.domdiff.VirtualNode.NodeType.TEXT, preorderIndex, text);
    newNode.physicalNode = document.createTextNode(text);
    this.current_.getPhysicalNode().insertBefore(newNode.physicalNode, this.current_.getNextPhysicalNode(this.currentIndex_));
    this.current_.addChild(this.currentIndex_, newNode);
  } else {
    text != node.value && (node.value = text, node.physicalNode.nodeValue = text);
  }
  this.currentIndex_++;
};
jslayout.domdiff.RebindingTreeBuilder.prototype.getRoot = function() {
  return this.root_;
};
jslayout.domdiff.RebindingTreeBuilder.prototype.getNodeExtraData = function(create) {
  var array = this.tentative_.extraDataArray;
  if (null == array) {
    if (!create) {
      return null;
    }
    this.tentative_.extraDataArray = array = [];
  }
  var result = array[this.currentExtraDataIndex_];
  null == result && create && (array[this.currentExtraDataIndex_] = result = {virtualNode:this.tentative_});
  return result;
};
jslayout.domdiff.RebindingTreeBuilder.prototype.reset = function() {
  this.current_ = null;
};
jslayout.domdiff.RebindingTreeBuilder.prototype.advanceToChild_ = function(preorderIndex) {
  null != this.tentative_ && (this.tentative_.dispose(), this.tentative_ = null);
  for (; this.currentIndex_ < this.current_.getChildCount();) {
    var child = this.current_.getChild(this.currentIndex_);
    var cmp = jslayout.domdiff.comparePreorderIndex_(preorderIndex, child.preorderIndex);
    if (0 == cmp) {
      return child;
    }
    if (0 > cmp) {
      break;
    }
    if (null != child.physicalNode) {
      var parent = child.physicalNode.parentNode;
      null != parent && parent.removeChild(child.physicalNode);
    }
    this.current_.removeChild(this.currentIndex_);
  }
  return null;
};
jslayout.NotificationOptions = {DEFAULT:0, CHANGE_SHALLOW:2, PROCESS_IMMEDIATELY:4, DEQUEUE_MANUALLY:8};
jslayout.Listener = function() {
};
jslayout.Listener.prototype.onChange = function() {
};
jslayout.Observable = function() {
};
jslayout.domdiff.ENABLED = !1;
jslayout.domdiff.render = function(templatePool, elementData, context, element) {
  var vdom = jslayout.domdiff.VirtualNode.wrapElement(element);
  var treeBuilder = new jslayout.domdiff.RebindingTreeBuilder(vdom);
  var treeRenderer = new jslayout.domdiff.TreeRenderer(templatePool, treeBuilder);
  treeRenderer.renderElement(elementData, 0, context, "0");
};
jslayout.domdiff.renderPlainText = function(templatePool, elementData, context) {
  var treeBuilder = new jslayout.domdiff.PlainTextTreeBuilder;
  var treeRenderer = new jslayout.domdiff.TreeRenderer(templatePool, treeBuilder);
  treeRenderer.renderElement(elementData, 0, context, "0");
  return treeBuilder.getText();
};
jslayout.domdiff.TreeRenderer = function(templatePool, treeBuilder) {
  this.templatePool_ = templatePool;
  this.treeBuilder_ = treeBuilder;
};
jslayout.domdiff.TreeRenderer.prototype.dirJscontentCmd_ = function(args, context) {
  var contentGetter = args[0];
  var isHtml = args[1];
  var rtl = context.getBidiDirIsRtl();
  var content = context.jsexec(contentGetter);
  var rtlContent = jslayout.builtin.bidiDirIsRtl(content, isHtml, rtl);
  var rtlExit = jslayout.builtin.bidiExitDirIsRtl(content, isHtml, rtl);
  rtl == rtlContent && rtl == rtlExit || this.treeBuilder_.setRegularAttribute("dir", jslayout.builtin.bidiDirValue(rtlContent));
  context.setBidiDirIsRtl(rtl);
};
jslayout.domdiff.TreeRenderer.prototype.idlJsactionCmd_ = function(args, context) {
  var actionType = args[0];
  var actionExpr = args[1];
  actionType == jslayout.String.IDL_LOAD_JSACTION_EVENT_TYPE && (actionType = jslayout.String.IDL_CREATE_JSACTION_EVENT_TYPE);
  var nodeData = this.treeBuilder_.getNodeExtraData(!0);
  if (null != nodeData) {
    var actionContext = nodeData.actionContext;
    null == actionContext && (nodeData.actionContext = actionContext = new jslayout.EvalContext);
    actionContext.copyFrom(context);
    var actionKey = jslayout.String.IDL_ACTION_KEY_PREFIX + actionType;
    if (null == nodeData[actionKey]) {
      var idlActionFunction = context.jsexec(actionExpr, null);
      nodeData[jslayout.String.IDL_ACTION_KEY_PREFIX + actionType] = idlActionFunction;
    }
  }
};
jslayout.domdiff.TreeRenderer.prototype.idlControllerCmd_ = function(args, context) {
  var varName = args[0];
  var varSetter = args[1];
  var initExpr = args[2];
  var updateExpr = args[3];
  var map = this.treeBuilder_.getNodeExtraData(!0);
  var key = jslayout.String.IDL_CONTROLLER_KEY_PREFIX + varName;
  var controller = null != map ? map[key] : null;
  null == controller ? (controller = context.jsexec(initExpr, null), null != map && (map[key] = controller)) : (context.jsexecSetter(varSetter, controller), updateExpr && context.jsexec(updateExpr, null));
};
jslayout.domdiff.TreeRenderer.prototype.observeCmd_ = function(args, context, elementData) {
  var varName = args[0];
  var varGetter = args[1];
  var nodeData = this.treeBuilder_.getNodeExtraData(!0);
  if (null != nodeData) {
    var key = jslayout.String.OBSERVER_KEY_PREFIX + varName;
    var oldListener = nodeData[key];
    var observable = context.jsexec(varGetter, null);
    null == nodeData.actionContext && (nodeData.actionContext = new jslayout.EvalContext);
    nodeData.actionContext.copyFrom(context);
    if (null != oldListener) {
      if (oldListener.observable_[0] == observable) {
        return;
      }
      oldListener.dispose();
    }
    var updateRequest = new jslayout.domdiff.UpdateRequest_(this.templatePool_, elementData, nodeData);
    updateRequest.observe(observable);
    nodeData[key] = updateRequest;
  }
};
jslayout.domdiff.TreeRenderer.prototype.setAttributeCmd_ = function(args, context) {
  var conditionFunction = args[jslayout.CmdOffset.ATTR_CONDITION];
  if (null == conditionFunction || context.jsexec(conditionFunction, void 0)) {
    var type = args[jslayout.CmdOffset.ATTR_TYPE];
    var name = args[jslayout.CmdOffset.ATTR_NAME];
    if (type == prototemplate.AttributeType.Type.CLASS_PROPERTY) {
      this.treeBuilder_.setClass(name);
    } else {
      var valueFunction = args[jslayout.CmdOffset.ATTR_VALUE_FUNCTION];
      var value = "function" === typeof valueFunction ? context.jsexec(valueFunction) : valueFunction;
      switch(type) {
        case prototemplate.AttributeType.Type.STYLE_PROPERTY:
          for (var dash; -1 != (dash = name.indexOf("-"));) {
            name = name.substr(0, dash) + name.charAt(dash + 1).toUpperCase() + name.substr(dash + 2);
          }
          this.treeBuilder_.setStyle(name, value);
          break;
        case prototemplate.AttributeType.Type.JSACTION:
        case prototemplate.AttributeType.Type.REGULAR:
        case prototemplate.AttributeType.Type.URL:
          this.treeBuilder_.setRegularAttribute(name, value);
          break;
        default:
          console.log("Unsupported attribute type:", type, args);
      }
    }
  }
};
jslayout.domdiff.TreeRenderer.prototype.renderElement = function(elementData, ip, context, index) {
  var commandList = elementData[jslayout.ElementDataIndex.COMMAND_LIST];
  if (null != commandList && commandList.length >= ip && (commandList[ip] == jslayout.Command.TEMPLATE && (ip += 2), commandList.length >= ip)) {
    var cmd = commandList[ip];
    if (cmd == jslayout.Command.IF) {
      context.jsexec(commandList[ip + 1]) && this.renderElement(elementData, ip + 2, context, index);
      return;
    }
    if (cmd == jslayout.Command.FOR) {
      var args = commandList[ip + 1];
      var valueSetter = args[0];
      var indexSetter = args[1];
      var countSetter = args[2];
      var rawValues = context.jsexec(args[3]);
      var values = goog.asserts.assertArray(rawValues);
      var count = values.length;
      context.jsexecSetter(countSetter, count);
      for (var i = 0; i < count; i++) {
        context.jsexecSetter(indexSetter, i), context.jsexecSetter(valueSetter, values[i]), this.renderElement(elementData, ip + 2, context, index + "." + i);
      }
      return;
    }
  }
  var elementName = elementData[jslayout.ElementDataIndex.NAME];
  this.treeBuilder_.openElement(index, elementName, 0);
  this.renderInner_(elementData, ip, context);
};
jslayout.domdiff.TreeRenderer.prototype.renderInner_ = function(elementData, ip, context) {
  var confirmed = !1;
  var commandList = elementData[jslayout.ElementDataIndex.COMMAND_LIST];
  for (var len = null == commandList ? 0 : commandList.length; ip < len;) {
    var args = commandList[ip + 1];
    switch(commandList[ip]) {
      case jslayout.Command.ATTR:
        this.setAttributeCmd_(args, context);
        break;
      case jslayout.Command.CONTENT:
        confirmed || (this.treeBuilder_.confirmOpenElement(), confirmed = !0);
        var value = context.jsexec(args[2]);
        this.treeBuilder_.addText(ip.toString(), value);
        break;
      case jslayout.Command.GLOBAL:
        context.inject(args[0], args[1]);
        break;
      case jslayout.Command.IDL_ACTION:
        this.idlJsactionCmd_(args, context);
        break;
      case jslayout.Command.IDL_CONTROLLER:
        this.idlControllerCmd_(args, context);
        break;
      case jslayout.Command.OBSERVE:
        this.observeCmd_(args, context, elementData);
        break;
      case jslayout.Command.USEPARAM:
        this.useParamCmd_(args, context);
        return;
      case jslayout.Command.USEEXPR:
        this.useExprCmd_(context.jsexec(args), context);
        return;
      case jslayout.Command.IF:
        if (!context.jsexec(args)) {
          return;
        }
        break;
      case jslayout.Command.TAG:
        context.jsexec(args) || this.treeBuilder_.hideTag();
        break;
      case jslayout.Command.VAR:
        context.jsexec(args);
        break;
      case jslayout.Command.TEMPLATE:
        break;
      case jslayout.Command.DIR_JSCONTENT:
        this.dirJscontentCmd_(args, context);
        break;
      default:
        console.error("Unsupported command: ", commandList[ip], args);
    }
    ip += 2;
  }
  confirmed || this.treeBuilder_.confirmOpenElement();
  var children = elementData[jslayout.ElementDataIndex.CHILDREN];
  if (null != children) {
    for (var i = 0; i < children.length; i++) {
      var child = children[i];
      goog.isArray(child) ? this.renderElement(child, 0, context, i.toString()) : this.treeBuilder_.addText(i.toString(), child);
    }
  }
  this.treeBuilder_.closeElement();
};
jslayout.domdiff.TreeRenderer.prototype.transclude_ = function(templateKey, subContext) {
  var entry = this.templatePool_.getEntry(templateKey);
  var elementData = entry.elements;
  null != elementData ? (this.treeBuilder_.transclusion(templateKey, elementData[jslayout.ElementDataIndex.NAME]), this.templatePool_.transcludeCss(subContext, entry.cssrules), this.renderInner_(elementData, 0, subContext)) : console.error("Can't instantiate template '" + templateKey + "'. ");
};
jslayout.domdiff.TreeRenderer.prototype.useParamCmd_ = function(args, context) {
  var subContext = new jslayout.EvalContext;
  subContext.copyFrom(context, []);
  var params = args[1];
  if (params) {
    for (var key in params) {
      subContext.setVariable(key, context.jsexec(params[key]));
    }
  }
  this.transclude_(args[0], subContext);
};
jslayout.domdiff.TreeRenderer.prototype.useExprCmd_ = function(entryPointData, context) {
  var subContext = new jslayout.EvalContext;
  subContext.copyFrom(context, []);
  var params = entryPointData.param_;
  for (var key in params) {
    subContext.setVariable(key, params[key]);
  }
  this.transclude_(entryPointData.getKey(), subContext);
};
jslayout.domdiff.UpdateRequest_ = function(templatePool, elementData, nodeExtraData) {
  this.templatePool_ = templatePool;
  this.elementData_ = elementData;
  this.nodeExtraData_ = nodeExtraData;
  this.observable_ = null;
};
jslayout.domdiff.UpdateRequest_.prototype.observe = function(observable) {
  null == this.observable_ ? this.observable_ = [observable] : this.observable_.push(observable);
};
jslayout.domdiff.UpdateRequest_.prototype.onChange = function() {
  var vdom = this.nodeExtraData_.virtualNode;
  var context = this.nodeExtraData_.actionContext;
  var treeBuilder = new jslayout.domdiff.RebindingTreeBuilder(vdom);
  var treeRenderer = new jslayout.domdiff.TreeRenderer(this.templatePool_, treeBuilder);
  treeRenderer.renderElement(this.elementData_, 0, context, "0");
};
prototemplate.ConstEscapingMode = function() {
};
prototemplate.EscapingMode = function(opt_data) {
  jsproto.MessageBaseJson.call(this, opt_data);
};
goog.inherits(prototemplate.EscapingMode, jsproto.MessageBaseJson);
prototemplate.EscapingMode.Escaping = {HTML_ESCAPE:0, HTML_SNIPPET:1, RAW:2, INFERRED_JAVASCRIPT_ESCAPE:3, CDATA:4, INFERRED_SCRIPT_CDATA:5, INFERRED_ATTRIBUTE_DOUBLE_QUOTED:6, SAFE:7, INFERRED_JSON_ESCAPE:8, JSON_OBJECT:9};
prototemplate.EscapingMode.getMessageDescriptor = function() {
  prototemplate.EscapingMode.messageDescriptor_ || prototemplate.EscapingMode.createMessageDescriptor_();
  return prototemplate.EscapingMode.messageDescriptor_;
};
prototemplate.EscapingMode.prototype.getMessageDescriptor = prototemplate.EscapingMode.getMessageDescriptor;
prototemplate.EscapingMode.createMessageDescriptor_ = function() {
  var fieldDescriptors = {};
  prototemplate.EscapingMode.messageDescriptor_ = {fieldDescriptor:fieldDescriptors};
};
goog.DEBUG && (prototemplate.EscapingMode.fromObject = function(obj) {
  return new prototemplate.EscapingMode(obj);
});
jslayout.ExpressionParser = {};
jslayout.ExpressionParser.REGEXP_SEMICOLONEND = /;$/;
jslayout.ExpressionParser.REGEXP_SEMICOLON = /\s*;\s*/;
jslayout.ExpressionParser.REGEXP_AMPERSANDALL = /&/g;
jslayout.ExpressionParser.REGEXP_FORMATTERNAME = /^[$a-z_]*$/i;
jslayout.ExpressionParser.REGEXP_TOKEN_IDENTIFIER = /^[\$_a-z][\$_0-9a-z]*$/i;
jslayout.ExpressionParser.REGEXP_TOKEN_WHITESPACE = /^\s*$/;
jslayout.ExpressionParser.REGEXP_TOKEN_NO_VAR = /^((de|en)codeURI(Component)?|is(Finite|NaN)|parse(Float|Int)|document|false|function|jslayout|null|this|true|undefined|window|Array|Boolean|Date|Error|JSON|Math|Number|Object|RegExp|String|__event)$/;
jslayout.ExpressionParser.REGEXP_TOKENIZE = /[\$_a-z][\$_0-9a-z]*|'(\\\\|\\'|\\?[^'\\])*'|"(\\\\|\\"|\\?[^"\\])*"|[0-9]*\.?[0-9]+([e][-+]?[0-9]+)?|0x[0-9a-f]+|\-|\+|\*|\/|\%|\=|\<|\>|\&\&?|\|\|?|\!|\^|\~|\(|\)|\{|\}|\[|\]|\,|\;|\.|\?|\:|\@|#[0-9]+|[\s]+/gi;
jslayout.ExpressionParser.VAR_NAME_GLOBALS = "g";
jslayout.ExpressionParser.VAR_NAME_VARS = "v";
jslayout.ExpressionParser.map_ = {};
jslayout.ExpressionParser.evalToFunctionCache_ = {};
jslayout.ExpressionParser.reset = function() {
  jslayout.ExpressionParser.evalToFunctionCache_ = {};
};
jslayout.ExpressionParser.evalToContent = function(expr) {
  var index = expr.indexOf(jslayout.Char.COLON);
  var escapingMode = null;
  if (-1 != index) {
    var formatter = goog.string.trim(expr.substr(0, index));
    jslayout.ExpressionParser.REGEXP_FORMATTERNAME.test(formatter) && (escapingMode = formatter == jslayout.String.HTML_SNIPPET ? prototemplate.EscapingMode.Escaping.HTML_SNIPPET : formatter == jslayout.String.RAW ? prototemplate.EscapingMode.Escaping.RAW : formatter == jslayout.String.SAFE ? prototemplate.EscapingMode.Escaping.SAFE : null, expr = goog.string.trim(expr.substr(index + 1)));
  }
  return [escapingMode, !1, jslayout.ExpressionParser.evalToFunction(expr)];
};
jslayout.ExpressionParser.tokenize = function(expr) {
  var result = expr.match(jslayout.ExpressionParser.REGEXP_TOKENIZE);
  null == result && (result = []);
  if (result.join("").length != expr.length) {
    var pos = 0;
    for (var i = 0; i < result.length && expr.substr(pos, result[i].length) == result[i]; i++) {
      pos += result[i].length;
    }
    throw Error("Parsing error at position " + pos + " of " + expr);
  }
  return result;
};
jslayout.ExpressionParser.enrichTokens_ = function(tokens, start, end) {
  var skipIdentifier = !1;
  var stack = [];
  for (var i = start; i < end; i++) {
    var t = tokens[i];
    if ("{" == t) {
      skipIdentifier = !0, stack.push("}");
    } else {
      if ("." == t || "new" == t || "," == t && "}" == stack[stack.length - 1]) {
        skipIdentifier = !0;
      } else {
        if (jslayout.ExpressionParser.REGEXP_TOKEN_WHITESPACE.test(t)) {
          tokens[i] = " ";
        } else {
          if (!skipIdentifier && jslayout.ExpressionParser.REGEXP_TOKEN_IDENTIFIER.test(t) && !jslayout.ExpressionParser.REGEXP_TOKEN_NO_VAR.test(t)) {
            if (tokens[i] = (jslayout.globals.isGlobal(t) ? jslayout.ExpressionParser.VAR_NAME_GLOBALS : jslayout.ExpressionParser.VAR_NAME_VARS) + "." + t, "has" == t || "size" == t) {
              i = jslayout.ExpressionParser.enrichMetaArgument_(tokens, i + 1);
            }
          } else {
            if ("(" == t) {
              stack.push(")");
            } else {
              if ("[" == t) {
                stack.push("]");
              } else {
                if (")" == t || "]" == t || "}" == t) {
                  if (0 == stack.length) {
                    throw Error('Unexpected "' + t + '".');
                  }
                  var expected = stack.pop();
                  if (t != expected) {
                    throw Error('Expected "' + expected + '" but found "' + t + '".');
                  }
                }
              }
            }
          }
          skipIdentifier = !1;
        }
      }
    }
  }
  if (0 != stack.length) {
    throw Error("Missing bracket(s): " + stack.join());
  }
};
jslayout.ExpressionParser.enrichMetaArgument_ = function(tokens, index) {
  for (; "(" != tokens[index] && index < tokens.length;) {
    index++;
  }
  tokens[index] = "(function(){return ";
  if (index == tokens.length) {
    throw Error('"(" missing for has() or size().');
  }
  index++;
  var startIndex = index;
  var level = 0;
  for (var stringLiteral = !0; index < tokens.length;) {
    var t = tokens[index];
    if ("(" == t) {
      level++;
    } else {
      if (")" == t) {
        if (0 == level) {
          break;
        }
        level--;
      } else {
        "" != t.trim() && '"' != t.charAt(0) && "'" != t.charAt(0) && "+" != t && (stringLiteral = !1);
      }
    }
    index++;
  }
  if (index == tokens.length) {
    throw Error('matching ")" missing for has() or size().');
  }
  tokens[index] = "})";
  var expr = tokens.slice(startIndex, index).join("").trim();
  if (stringLiteral) {
    var unquoted = "" + eval(expr);
    var subTokens = jslayout.ExpressionParser.tokenize(unquoted);
    jslayout.ExpressionParser.enrichTokens_(subTokens, 0, subTokens.length);
    tokens[startIndex] = subTokens.join("");
    for (var i = startIndex + 1; i < index; i++) {
      tokens[i] = "";
    }
  } else {
    jslayout.ExpressionParser.enrichTokens_(tokens, startIndex, index);
  }
  return index;
};
jslayout.ExpressionParser.findLabelEnd = function(tokens, start) {
  var len = tokens.length;
  for (var i = start; i < len; i++) {
    var t = tokens[i];
    if (":" == t) {
      return i;
    }
    if ("{" == t || "?" == t || ";" == t) {
      break;
    }
  }
  return -1;
};
jslayout.ExpressionParser.findSemicolonOrEnd = function(tokens, start) {
  var len = tokens.length;
  for (var i = start; i < len; i++) {
    if (";" == tokens[i]) {
      return i;
    }
  }
  return len;
};
jslayout.ExpressionParser.evalToFunction = function(expr) {
  var tokens = jslayout.ExpressionParser.tokenize(expr);
  return jslayout.ExpressionParser.buildFunction_(tokens);
};
jslayout.ExpressionParser.evalToSetter = function(name) {
  return function(scope, value) {
    scope[name] = value;
  };
};
jslayout.ExpressionParser.evalToSetterInArray = function(name) {
  return [jslayout.ExpressionParser.evalToSetter(name)];
};
jslayout.ExpressionParser.buildFunction_ = function(tokens, opt_name) {
  jslayout.ExpressionParser.enrichTokens_(tokens, 0, tokens.length);
  var expr = tokens.join("");
  opt_name && (expr = jslayout.ExpressionParser.VAR_NAME_VARS + '["' + opt_name + '"] = ' + expr);
  var exprFunc = jslayout.ExpressionParser.evalToFunctionCache_[expr];
  exprFunc || (exprFunc = new Function(jslayout.ExpressionParser.VAR_NAME_VARS, jslayout.ExpressionParser.VAR_NAME_GLOBALS, "return " + expr), jslayout.ExpressionParser.evalToFunctionCache_[expr] = exprFunc);
  return exprFunc;
};
jslayout.ExpressionParser.evalToSelf = function(expr) {
  return expr;
};
jslayout.ExpressionParser.evalToVars = function(expr) {
  var ret = [];
  var tokens = jslayout.ExpressionParser.tokenize(expr);
  var start = 0;
  for (var len = tokens.length; start < len;) {
    var colon = jslayout.ExpressionParser.findLabelEnd(tokens, start);
    if (-1 == colon) {
      break;
    }
    var next = jslayout.ExpressionParser.findSemicolonOrEnd(tokens, colon + 1);
    var name = goog.string.trim(tokens.slice(start, colon).join(""));
    var parsed = jslayout.ExpressionParser.buildFunction_(tokens.slice(colon + 1, next), name);
    ret.push(parsed);
    start = next + 1;
  }
  return ret;
};
jslayout.ExpressionParser.evalToIdlAction = function(expr) {
  var ret = [];
  var tokens = jslayout.ExpressionParser.tokenize(expr);
  var start = 0;
  for (var len = tokens.length; start < len;) {
    var colon = jslayout.ExpressionParser.findLabelEnd(tokens, start);
    if (-1 == colon) {
      break;
    }
    var next = jslayout.ExpressionParser.findSemicolonOrEnd(tokens, colon + 1);
    var name = goog.string.trim(tokens.slice(start, colon).join(""));
    var parsed = jslayout.ExpressionParser.buildFunction_(tokens.slice(colon + 1, next), name);
    ret.push([name, parsed]);
    start = next + 1;
  }
  return ret;
};
jslayout.ExpressionParser.evalToIdlController = function(expr) {
  var ret = [];
  var tokens = jslayout.ExpressionParser.tokenize(expr);
  var start = 0;
  for (var len = tokens.length; start < len;) {
    var colon = jslayout.ExpressionParser.findLabelEnd(tokens, start);
    if (-1 == colon) {
      break;
    }
    var next = jslayout.ExpressionParser.findSemicolonOrEnd(tokens, colon + 1);
    var name = goog.string.trim(tokens.slice(start, colon).join(""));
    var parsed = jslayout.ExpressionParser.buildFunction_(tokens.slice(colon + 1, next), name);
    ret.push([name, jslayout.ExpressionParser.evalToSetter(name), parsed]);
    start = next + 1;
  }
  return ret;
};
jslayout.ExpressionParser.labelComponentsEscaped_ = [];
jslayout.ExpressionParser.makeLabelKey_ = function(cmd) {
  var labelComponentsEscaped = jslayout.ExpressionParser.labelComponentsEscaped_;
  labelComponentsEscaped.length = 0;
  for (var i = 5; i < cmd.length; ++i) {
    var labelComponent = cmd[i];
    jslayout.ExpressionParser.REGEXP_AMPERSANDALL.test(labelComponent) ? labelComponentsEscaped.push(labelComponent.replace(jslayout.ExpressionParser.REGEXP_AMPERSANDALL, jslayout.String.AMPERSAND_DOUBLE)) : labelComponentsEscaped.push(labelComponent);
  }
  return labelComponentsEscaped.join(jslayout.Char.AMPERSAND);
};
jslayout.ExpressionParser.evalToAttrs = function(expr) {
  var ret = [];
  var labelPosition = jslayout.ExpressionParser.map_;
  for (var i in labelPosition) {
    delete labelPosition[i];
  }
  var tokens = jslayout.ExpressionParser.tokenize(expr);
  var start = 0;
  for (var len = tokens.length; start < len;) {
    var cmd = [null, null, null, null, null];
    var pending = "";
    var t = "";
    for (i = start; i < len; i++) {
      t = tokens[i];
      if ("?" == t || ":" == t) {
        "" != pending && cmd.push(pending);
        break;
      }
      jslayout.ExpressionParser.REGEXP_TOKEN_WHITESPACE.test(t) || ("." == t ? ("" != pending && cmd.push(pending), pending = "") : pending = '"' == t.charAt(0) || "'" == t.charAt(0) ? pending + eval(t) : pending + t);
    }
    if (i >= len) {
      break;
    }
    var next = jslayout.ExpressionParser.findSemicolonOrEnd(tokens, i + 1);
    var labelKey = jslayout.ExpressionParser.makeLabelKey_(cmd);
    var labelOffset = labelPosition[labelKey];
    var newEntry = typeof labelOffset == jslayout.Type.UNDEFINED;
    newEntry && (labelOffset = labelPosition[labelKey] = ret.length, ret.push(cmd));
    cmd = ret[labelOffset];
    cmd[jslayout.CmdOffset.ATTR_SANITIZATION_CONTEXT] = jslayout.attributesanitization.context(cmd);
    var valueFunction = jslayout.ExpressionParser.buildFunction_(tokens.slice(i + 1, next));
    ":" == t ? cmd[jslayout.CmdOffset.ATTR_VALUE_FUNCTION] = valueFunction : "?" == t && (cmd[jslayout.CmdOffset.ATTR_CONDITION] = valueFunction);
    if (newEntry) {
      var label = cmd[jslayout.CmdOffset.ATTR_NAME];
      if (label == jslayout.String.CLASS || "className" == label) {
        if (6 == cmd.length) {
          var type = prototemplate.AttributeType.Type.CLASS;
        } else {
          cmd.splice(jslayout.CmdOffset.ATTR_NAME, 1), type = prototemplate.AttributeType.Type.CLASS_PROPERTY;
        }
      } else {
        label == jslayout.String.STYLE ? 6 == cmd.length ? type = prototemplate.AttributeType.Type.STYLE : (cmd.splice(jslayout.CmdOffset.ATTR_NAME, 1), type = prototemplate.AttributeType.Type.STYLE_PROPERTY) : jslayout.dom.hasUrlValue(label) ? 6 == cmd.length ? type = prototemplate.AttributeType.Type.URL : "hash" == cmd[jslayout.CmdOffset.ATTR_NAME + 1] ? (type = prototemplate.AttributeType.Type.URL_HASH, cmd.length = 6) : "host" == cmd[jslayout.CmdOffset.ATTR_NAME + 1] ? (type = prototemplate.AttributeType.Type.URL_HOST, 
        cmd.length = 6) : "path" == cmd[jslayout.CmdOffset.ATTR_NAME + 1] ? (type = prototemplate.AttributeType.Type.URL_PATH, cmd.length = 6) : "param" == cmd[jslayout.CmdOffset.ATTR_NAME + 1] && 8 <= cmd.length ? (type = prototemplate.AttributeType.Type.URL_QUERY_COMPONENT, cmd.splice(jslayout.CmdOffset.ATTR_NAME + 1, 1)) : "port" == cmd[jslayout.CmdOffset.ATTR_NAME + 1] ? (type = prototemplate.AttributeType.Type.URL_PORT, cmd.length = 6) : "protocol" == cmd[jslayout.CmdOffset.ATTR_NAME + 1] ? 
        (type = prototemplate.AttributeType.Type.URL_PROTOCOL, cmd.length = 6) : ret.splice(labelOffset, 1) : type = prototemplate.AttributeType.Type.REGULAR;
      }
      cmd[jslayout.CmdOffset.ATTR_TYPE] = type;
    }
    start = next + 1;
  }
  return ret;
};
jslayout.ExpressionParser.evalToUseAttr = function(expr) {
  var index = expr.indexOf(jslayout.Char.COLON);
  return [expr.substr(0, index), expr.substr(index + 1)];
};
jslayout.ExpressionParser.evalToUseAttrExpr = function(expr) {
  var index = expr.indexOf(jslayout.Char.COLON);
  return [expr.substr(0, index), jslayout.ExpressionParser.evalToFunction(expr.substr(index + 1))];
};
jslayout.ExpressionParser.evalToFor = function(expr) {
  var ret = [];
  var tokens = jslayout.ExpressionParser.tokenize(expr);
  var start = 0;
  for (var len = tokens.length; start < len;) {
    var dim = [];
    var colon = jslayout.ExpressionParser.findLabelEnd(tokens, start);
    if (-1 == colon) {
      if (jslayout.ExpressionParser.REGEXP_TOKEN_WHITESPACE.test(tokens.slice(start, len).join(""))) {
        break;
      }
      colon = start - 1;
    } else {
      for (var labelStart = start; labelStart < colon;) {
        var comma = goog.array.indexOf(tokens, ",", labelStart);
        if (-1 == comma || comma > colon) {
          comma = colon;
        }
        dim.push(jslayout.ExpressionParser.evalToSetter(goog.string.trim(tokens.slice(labelStart, comma).join(""))));
        labelStart = comma + 1;
      }
    }
    0 == dim.length && dim.push(jslayout.ExpressionParser.evalToSetter(jslayout.Name.THIS));
    1 == dim.length && dim.push(jslayout.ExpressionParser.evalToSetter(jslayout.Name.INDEX));
    2 == dim.length && dim.push(jslayout.ExpressionParser.evalToSetter(jslayout.Name.COUNT));
    if (3 != dim.length) {
      throw Error("Max 3 vars for jsfor; got " + dim.length);
    }
    var next = jslayout.ExpressionParser.findSemicolonOrEnd(tokens, start);
    dim.push(jslayout.ExpressionParser.buildFunction_(tokens.slice(colon + 1, next)));
    ret.push(dim);
    start = next + 1;
  }
  return ret;
};
jslayout.ExpressionParser.evalToExpressions = function(expr) {
  var ret = [];
  var tokens = jslayout.ExpressionParser.tokenize(expr);
  var start = 0;
  for (var len = tokens.length; start < len;) {
    var next = jslayout.ExpressionParser.findSemicolonOrEnd(tokens, start);
    ret.push(jslayout.ExpressionParser.buildFunction_(tokens.slice(start, next)));
    start = next + 1;
  }
  return ret;
};
jslayout.ExpressionParser.evalToSetterList = function(expr) {
  var ret = [];
  var values = expr.split(jslayout.ExpressionParser.REGEXP_SEMICOLON);
  var i = 0;
  for (var I = jslayout.array.length(values); i < I; ++i) {
    var value = goog.string.trim(values[i]);
    if (value) {
      var colon = value.indexOf(jslayout.Char.COLON);
      if (-1 != colon) {
        var name = goog.string.trim(value.substring(0, colon));
        var type = goog.string.trim(value.substring(colon + 1));
        var space = type.indexOf(jslayout.Char.SPACE);
        -1 != space && (type = type.substring(space + 1));
        ret.push([jslayout.ExpressionParser.evalToSetter(name), type]);
      }
    }
  }
  return ret;
};
jslayout.ExpressionParser.makeVarSetter = function(name, expr) {
  var setter = jslayout.ExpressionParser.evalToSetter(name);
  return function(scope) {
    var value = expr(scope);
    setter(scope, value);
    return value;
  };
};
jslayout.GlobalVariablePool = function() {
  this.pool_ = {};
};
jslayout.GlobalVariablePool.prototype.add = function(type, value) {
  this.pool_[type] = value;
};
jslayout.GlobalVariablePool.prototype.getGlobal = function(key) {
  return this.pool_[key];
};
jslayout.Parser = {};
jslayout.Parser.preserveControlAttributes_ = !1;
jslayout.Parser.preserveControlAttributes = function(opt_value) {
  "undefined" != typeof opt_value && (jslayout.Parser.preserveControlAttributes_ = opt_value);
  return jslayout.Parser.preserveControlAttributes_;
};
jslayout.Parser.EXTERN_JSL_ONLY = !1;
jslayout.Parser.jstid_ = 0;
jslayout.Parser.jstcache_ = {};
jslayout.Parser.jstcache_[0] = [];
jslayout.Parser.jstcacheattributes_ = {};
jslayout.Parser.reset = function() {
  jslayout.Parser.jstcache_ = {};
  jslayout.Parser.jstcache_[0] = [];
  jslayout.Parser.jstid_ = 0;
  jslayout.Parser.jstcacheattributes_ = {};
};
jslayout.Parser.jslkey_ = function(templateKey, cid) {
  return templateKey + " " + cid;
};
jslayout.Parser.cacheInsert_ = function(jsl, jslkey) {
  var jstid = String(++jslayout.Parser.jstid_);
  jslayout.Parser.jstcacheattributes_[jslkey] = jstid;
  jslayout.Parser.jstcache_[jstid] = jsl;
  return jstid;
};
jslayout.Parser.addExternCommandList = function(tid, cid, jsl) {
  var jslkey = jslayout.Parser.jslkey_(tid, cid);
  jslayout.Parser.cacheInsert_(jsl, jslkey);
};
jslayout.Parser.getExternCommandList = function(tid, cid) {
  var jslkey = jslayout.Parser.jslkey_(tid, cid);
  var jstid = jslayout.Parser.jstcacheattributes_[jslkey];
  return jslayout.Parser.jstcache_[jstid] || null;
};
jslayout.Parser.cacheSet = function(element, id) {
  element.setAttribute(jslayout.Attribute.JSTCACHE, id);
  element[jslayout.Property.JSTCACHE] = jslayout.Parser.jstcache_[id];
};
jslayout.Parser.commandListPool_ = [];
jslayout.Parser.recycle_ = function(commandList) {
  commandList.length = 0;
  jslayout.Parser.commandListPool_.push(commandList);
};
jslayout.Parser.newArray_ = function() {
  return jslayout.Parser.commandListPool_.length ? jslayout.Parser.commandListPool_.pop() : [];
};
jslayout.Parser.JSL_STRIDE = 2;
jslayout.Parser.parseJsl_ = function(attr, jsl) {
  var tokens = jslayout.ExpressionParser.tokenize(attr);
  var len = tokens.length;
  var start = 0;
  for (var jsattrs = ""; start < len;) {
    var next = jslayout.ExpressionParser.findSemicolonOrEnd(tokens, start);
    jslayout.ExpressionParser.REGEXP_TOKEN_WHITESPACE.test(tokens[start]) && start++;
    if (!(start >= next)) {
      var commandName = tokens[start++];
      if (!jslayout.ExpressionParser.REGEXP_TOKEN_IDENTIFIER.test(commandName)) {
        throw Error('Cmd name expected; got "' + commandName + '" in "' + attr + '".');
      }
      if (start < next && !jslayout.ExpressionParser.REGEXP_TOKEN_WHITESPACE.test(tokens[start])) {
        throw Error('" " expected between cmd and param.');
      }
      var value = tokens.slice(start + 1, next).join("");
      commandName == jslayout.Command.ATTR ? jsattrs += value + ";" : (jsattrs && (jsl.push(jslayout.Command.ATTR), jsl.push(jsattrs), jsattrs = ""), jslayout.Parser.COMMANDS_[commandName] && (jsl.push(commandName), jsl.push(value)));
    }
    start = next + 1;
  }
  jsattrs && (jsl.push(jslayout.Command.ATTR), jsl.push(jsattrs));
};
jslayout.Parser.parseJsMatch_ = function(attr, jsl) {
  var tokens = jslayout.ExpressionParser.tokenize(attr);
  var len = tokens.length;
  for (var start = 0; start < len;) {
    var colon = jslayout.ExpressionParser.findLabelEnd(tokens, start);
    var next = jslayout.ExpressionParser.findSemicolonOrEnd(tokens, start);
    var fullArg = tokens.slice(start, next).join("");
    jslayout.ExpressionParser.REGEXP_TOKEN_WHITESPACE.test(fullArg) || (-1 !== colon ? (jsl.push(jslayout.Command.DISPLAY), jsl.push(tokens.slice(colon + 1, next).join("")), jsl.push(jslayout.Command.VAR)) : jsl.push(jslayout.Command.DISPLAY), jsl.push(fullArg));
    start = next + 1;
  }
};
jslayout.Parser.ATTRIBUTES_ = jslayout.Parser.EXTERN_JSL_ONLY ? [] : [[jslayout.Attribute.JSCASE, jslayout.ExpressionParser.evalToFunction, jslayout.Command.SWITCHCASE], [jslayout.Attribute.JSCASEDEFAULT, jslayout.ExpressionParser.evalToSelf, jslayout.Command.SWITCHDEFAULT], [jslayout.Attribute.JSL, null, null], [jslayout.Attribute.JSGLOBALS, jslayout.ExpressionParser.evalToSetterList, jslayout.Command.GLOBAL, !0], [jslayout.Attribute.JSFOR, jslayout.ExpressionParser.evalToFor, jslayout.Command.FOR, 
!0], [jslayout.Attribute.JSKEY, jslayout.ExpressionParser.evalToFunction, jslayout.Command.KEY], [jslayout.Attribute.JSDISPLAY, jslayout.ExpressionParser.evalToFunction, jslayout.Command.DISPLAY], [jslayout.Attribute.JSMATCH, null, null], [jslayout.Attribute.JSIF, jslayout.ExpressionParser.evalToFunction, jslayout.Command.DISPLAY], [null, jslayout.ExpressionParser.evalToFunction, jslayout.Command.IF], [jslayout.Attribute.JSVARS, jslayout.ExpressionParser.evalToVars, jslayout.Command.VAR, !0], [null, 
jslayout.ExpressionParser.evalToSetterInArray, jslayout.Command.VAR_SERVERONLY], [jslayout.Attribute.JSATTRS, jslayout.ExpressionParser.evalToAttrs, jslayout.Command.ATTR_LEGACY, !0], [null, jslayout.ExpressionParser.evalToAttrs, jslayout.Command.ATTR, !0], [null, jslayout.ExpressionParser.evalToUseAttr, jslayout.Command.USEATTR], [null, jslayout.ExpressionParser.evalToUseAttrExpr, jslayout.Command.USEATTREXPR], [null, jslayout.ExpressionParser.evalToIdlAction, jslayout.Command.IDL_ACTION, !0], [null, 
jslayout.ExpressionParser.evalToIdlController, jslayout.Command.IDL_CONTROLLER, !0], [null, jslayout.ExpressionParser.evalToSelf, jslayout.Command.REACTIVE_JSACTION], [jslayout.Attribute.JSEVAL, jslayout.ExpressionParser.evalToExpressions, jslayout.Command.EVAL, !0], [jslayout.Attribute.JSSKIP, jslayout.ExpressionParser.evalToFunction, jslayout.Command.SKIP], [jslayout.Attribute.JSSWITCH, jslayout.ExpressionParser.evalToFunction, jslayout.Command.SWITCH], [jslayout.Attribute.JSCONTENT, jslayout.ExpressionParser.evalToContent, 
jslayout.Command.CONTENT], [jslayout.Attribute.TRANSCLUDE, jslayout.ExpressionParser.evalToSelf, jslayout.Command.USE], [null, jslayout.ExpressionParser.evalToFunction, jslayout.Command.USEEXPR], [null, null, jslayout.Command.USEPARAM]];
jslayout.Parser.COMMANDS_ = function() {
  var result = {};
  for (var i = 0; i < jslayout.Parser.ATTRIBUTES_.length; ++i) {
    var attr = jslayout.Parser.ATTRIBUTES_[i];
    attr[2] && (result[attr[2]] = [attr[1], attr[3]]);
  }
  result[jslayout.Command.TEMPLATE] = [jslayout.ExpressionParser.evalToSelf, !1];
  result[jslayout.Command.SPLICE] = [jslayout.ExpressionParser.evalToSelf, !1];
  result[jslayout.Command.USE] = [jslayout.ExpressionParser.evalToSelf, !1];
  return result;
}();
jslayout.Parser.findTemplateId_ = function(doc, element) {
  if (!element || !element.getAttribute) {
    return null;
  }
  jslayout.Parser.prepareNode(doc, element, null);
  var rt = element[jslayout.Property.RESOLVED_TRANSCLUSIONS];
  return rt && rt.length ? rt[rt.length - 1] : jslayout.Parser.findTemplateId_(doc, element.parentNode);
};
jslayout.Parser.getTemplateRootCommands = function(templateKey) {
  var jsl = jslayout.Parser.getCachedCommands(jslayout.Parser.jslkey_(templateKey, "0"));
  jsl[0] != jslayout.Command.TEMPLATE && (jsl = [jslayout.Command.TEMPLATE, templateKey].concat(jsl));
  return jsl;
};
jslayout.Parser.getCachedCommands = function(jslkey) {
  var jstid = jslayout.Parser.jstcacheattributes_[jslkey] || "0";
  return jslayout.Parser.jstcache_[jstid];
};
jslayout.Parser.EXTERN_JSL_RE_ = /^\$x (\d+);?/;
jslayout.Parser.resolveExternCommandListId = function(cid, templateKey) {
  var jslkey = jslayout.Parser.jslkey_(templateKey, cid);
  var jstid = jslayout.Parser.jstcacheattributes_[jslkey];
  var itemCmdList = jslayout.Parser.jstcache_[jstid];
  return itemCmdList ? jstid : null;
};
jslayout.Parser.resolveExternCommandList = function(cid, templateKey) {
  var jstid = jslayout.Parser.resolveExternCommandListId(cid, templateKey);
  return null != jstid ? jslayout.Parser.jstcache_[jstid] : null;
};
jslayout.Parser.cacheCommandListPart_ = function(templateKey, jsl, rawCommandList, start, end) {
  if (start == end) {
    return jslayout.Parser.recycle_(jsl), "0";
  }
  if (jsl[0] == jslayout.Command.TEMPLATE) {
    var jslkey = jslayout.Parser.jslkey_(jsl[1], "0");
  } else {
    jslkey = templateKey + ":", jslkey = 0 == start && end == rawCommandList.length ? jslkey + rawCommandList.join(":") : jslkey + rawCommandList.slice(start, end).join(":");
  }
  var jstid = jslayout.Parser.jstcacheattributes_[jslkey];
  jstid ? jslayout.Parser.recycle_(jsl) : jstid = jslayout.Parser.cacheInsert_(jsl, jslkey);
  return jstid;
};
jslayout.Parser.RESOLVED_TRANSCLUSION_RE_ = /\$t ([^;]*)/g;
jslayout.Parser.getResolvedTransclusions = function(node) {
  var rt = node[jslayout.Property.RESOLVED_TRANSCLUSIONS];
  rt || (rt = node[jslayout.Property.RESOLVED_TRANSCLUSIONS] = []);
  return rt;
};
jslayout.Parser.calculateResolvedTransclusions_ = function(node, jslAttr) {
  jslayout.Parser.RESOLVED_TRANSCLUSION_RE_.lastIndex = 0;
  for (var m; m = jslayout.Parser.RESOLVED_TRANSCLUSION_RE_.exec(jslAttr);) {
    jslayout.Parser.getResolvedTransclusions(node).push(m[1]);
  }
};
jslayout.Parser.prepareNode = function(doc, node, templateKey) {
  if (!node[jslayout.Property.JSTCACHE]) {
    node.hasAttribute(jslayout.Attribute.JSTID) && (node.getAttribute(jslayout.Attribute.JSTID), node.removeAttribute(jslayout.Attribute.JSTID));
    var jstid = node.getAttribute(jslayout.Attribute.JSTCACHE);
    if (null != jstid && jslayout.Parser.jstcache_[jstid]) {
      node[jslayout.Property.JSTCACHE] = jslayout.Parser.jstcache_[jstid];
    } else {
      var jslAttr = node.getAttribute(jslayout.Attribute.JSL);
      jslayout.Parser.calculateResolvedTransclusions_(node, jslAttr);
      null == templateKey && (templateKey = String(jslayout.Parser.findTemplateId_(doc, node.parentNode)));
      var m = jslayout.Parser.EXTERN_JSL_RE_.exec(jslAttr);
      if (m) {
        var cid = m[1];
        jstid = jslayout.Parser.resolveExternCommandListId(cid, templateKey);
        if (null == jstid) {
          var commandList = jslayout.Parser.newArray_();
          commandList.push(jslayout.Command.SPLICE);
          commandList.push(cid);
          var jslkey = templateKey + ":" + commandList.join(":");
          jstid = jslayout.Parser.jstcacheattributes_[jslkey];
          jstid && jslayout.Parser.jstcache_[jstid] ? jslayout.Parser.recycle_(commandList) : jstid = jslayout.Parser.cacheInsert_(commandList, jslkey);
        }
        jslayout.Parser.cacheSet(node, jstid);
        jslayout.Parser.preserveControlAttributes_ || node.removeAttribute(jslayout.Attribute.JSL);
      } else {
        commandList = jslayout.Parser.newArray_();
        if (jslayout.Parser.EXTERN_JSL_ONLY) {
          null != jslAttr && (jslayout.Parser.parseJsl_(jslAttr, commandList), jslayout.Parser.preserveControlAttributes_ || node.removeAttribute(jslayout.Attribute.JSL));
        } else {
          var i = 0;
          for (var I = jslayout.Parser.ATTRIBUTES_.length; i < I; ++i) {
            var att = jslayout.Parser.ATTRIBUTES_[i];
            var name = att[0];
            if (name) {
              var value = node.getAttribute(name);
              if (value) {
                var command = att[2];
                name == jslayout.Attribute.JSL ? jslayout.Parser.parseJsl_(value, commandList) : name == jslayout.Attribute.JSMATCH ? jslayout.Parser.parseJsMatch_(value, commandList) : (commandList.push(command), commandList.push(value));
                jslayout.Parser.preserveControlAttributes_ || node.removeAttribute(name);
              }
            }
          }
        }
        if (0 == commandList.length) {
          jslayout.Parser.cacheSet(node, jslayout.String.ZERO);
        } else {
          if (commandList[0] == jslayout.Command.USE || commandList[0] == jslayout.Command.TEMPLATE) {
            templateKey = commandList[1];
          }
          jslkey = templateKey + ":" + commandList.join(":");
          jstid = jslayout.Parser.jstcacheattributes_[jslkey];
          jstid && jslayout.Parser.jstcache_[jstid] || (jstid = jslayout.Parser.buildJsl_(templateKey, commandList));
          jslayout.Parser.cacheSet(node, jstid);
        }
        jslayout.Parser.recycle_(commandList);
      }
    }
  }
};
jslayout.Parser.buildJsl_ = function(templateKey, commandList) {
  var jstid = "0";
  var jsl = jslayout.Parser.newArray_();
  var start = 0;
  var i = 0;
  for (var I = commandList.length; i < I; i += jslayout.Parser.JSL_STRIDE) {
    var name = commandList[i];
    var value = commandList[i + 1];
    var command = jslayout.Parser.COMMANDS_[name];
    var parse = command[0];
    var split = command[1];
    var parsed = parse(value);
    name == jslayout.Command.TEMPLATE && value && (templateKey = value);
    if (jslayout.Parser.EXTERN_JSL_ONLY || name != jslayout.Command.KEY) {
      if (name == jslayout.Command.TEMPLATE && commandList[i + jslayout.Parser.JSL_STRIDE] == jslayout.Command.SPLICE) {
        var id = jslayout.Parser.resolveExternCommandListId("0", templateKey);
        if (null != id) {
          return 0 == start && (jstid = id), jslayout.Parser.recycle_(jsl), jstid;
        }
        jsl.push(jslayout.Command.TEMPLATE);
        jsl.push(value);
      } else {
        if (!jslayout.Parser.EXTERN_JSL_ONLY && split) {
          var j = 0;
          for (var J = parsed.length; j < J; ++j) {
            var part = parsed[j];
            if (name == jslayout.Command.ATTR_LEGACY) {
              var type = part[jslayout.CmdOffset.ATTR_TYPE];
              var label = part[jslayout.CmdOffset.ATTR_NAME];
              var firstChar = label.charAt(0);
              firstChar == jslayout.Char.DOLLAR ? (jsl.push(jslayout.Command.VAR), jsl.push(jslayout.ExpressionParser.makeVarSetter(part[jslayout.CmdOffset.ATTR_NAME], part[jslayout.CmdOffset.ATTR_VALUE_FUNCTION]))) : firstChar == jslayout.Char.AT ? (jsl.push(jslayout.Command.ATTR), part[jslayout.CmdOffset.ATTR_NAME] = label.substr(1), jsl.push(part)) : type == prototemplate.AttributeType.Type.CLASS || type == prototemplate.AttributeType.Type.CLASS_PROPERTY || type == prototemplate.AttributeType.Type.STYLE || 
              type == prototemplate.AttributeType.Type.STYLE_PROPERTY || label == jsaction.Attribute.JSACTION || label == jsaction.Attribute.JSNAMESPACE || jslayout.dom.hasUrlValue(label) ? (jsl.push(jslayout.Command.ATTR), jsl.push(part)) : (jslayout.jsattrs.ATTNAME.hasOwnProperty(label) && (part[jslayout.CmdOffset.ATTR_NAME] = jslayout.jsattrs.ATTNAME[label]), 6 == part.length && (jsl.push(jslayout.Command.ATTR), jsl.push(part)));
            } else {
              jsl.push(name), jsl.push(part);
            }
          }
        } else {
          jsl.push(name), jsl.push(parsed);
        }
      }
    } else {
      var cmdName = jsl[jsl.length - jslayout.Parser.JSL_STRIDE];
      cmdName == jslayout.Command.FOR && (jsl[jsl.length - jslayout.Parser.JSL_STRIDE] = jslayout.Command.FORKEY, jsl[jsl.length - jslayout.Parser.JSL_STRIDE + 1].push(parsed));
    }
    if (name == jslayout.Command.USE || name == jslayout.Command.USEEXPR || name == jslayout.Command.USEPARAM || name == jslayout.Command.SPLICE) {
      var next = i + jslayout.Parser.JSL_STRIDE;
      id = jslayout.Parser.cacheCommandListPart_(templateKey, jsl, commandList, start, next);
      0 == start && (jstid = id);
      jsl = [];
      start = next;
    }
  }
  id = jslayout.Parser.cacheCommandListPart_(templateKey, jsl, commandList, start, commandList.length);
  0 == start && (jstid = id);
  return jstid;
};
jslayout.Parser.getServeronlyValues = function(element) {
  var values = element[jslayout.Property.SERVERONLY_VALUES];
  if (!values) {
    values = element[jslayout.Property.SERVERONLY_VALUES] = [1];
    var attr = element.getAttribute(jslayout.Attribute.JSVS);
    var tokens = jslayout.ExpressionParser.tokenize(attr);
    var start = 0;
    for (var len = tokens.length; start < len;) {
      var next = jslayout.ExpressionParser.findSemicolonOrEnd(tokens, start);
      var value = tokens.slice(start, next).join("");
      start = next + 1;
      values.push(jslayout.ExpressionParser.evalToFunction(value));
    }
  }
  return values;
};
jslayout.Parser.makeConstGetter = function(value) {
  return function() {
    return value;
  };
};
jslayout.Parser.makeElementData = function(templateKey, element) {
  return jslayout.Parser.makeElementData_(templateKey, !0, element, null);
};
jslayout.Parser.makeElementData_ = function(templateKey, top, element, id) {
  jslayout.Parser.prepareNode(goog.dom.getOwnerDocument(element), element, templateKey);
  var jsl = [];
  top && (jsl.push(jslayout.Command.TEMPLATE), jsl.push(templateKey));
  for (var i = 0; i < element.attributes.length; ++i) {
    var a = element.attributes[i];
    var name = a.nodeName;
    var type = "class" == name ? 6 : "style" == name ? 4 : "href" == name ? 8 : "src" == name ? 8 : 0;
    jsl.push(jslayout.Command.ATTR);
    jsl.push([type, null, null, null, a.nodeValue, a.nodeName, null, 1]);
  }
  Array.prototype.push.apply(jsl, element[jslayout.Property.JSTCACHE]);
  var ret = [element.nodeName, 0, 1, jsl];
  null == id && (id = {value:0});
  var index = top ? 0 : ++id.value;
  ret.__index = index;
  var jslkey = jslayout.Parser.jslkey_(templateKey, String(index));
  var jstid = jslayout.Parser.cacheInsert_(jsl, jslkey);
  jslayout.Parser.cacheSet(element, jstid);
  if (element.firstChild) {
    var children = [];
    ret.push(children);
    for (var c = element.firstChild; c; c = c.nextSibling) {
      c.nodeType == goog.dom.NodeType.TEXT ? children.push(c.nodeValue) : c.nodeType == goog.dom.NodeType.ELEMENT && children.push(jslayout.Parser.makeElementData_(templateKey, !1, c, id));
    }
  }
  return ret;
};
jslayout.reactive = {};
jslayout.reactive.ControllerData = function() {
  this.controller = null;
  this.error = null;
  this.resolver = null;
  this.controllerPool = null;
  this.context = null;
  this.model = null;
  this.dom = null;
  this.rootElement = null;
  this.instantiationId = null;
};
jslayout.reactive.TemplateParams = function() {
};
jslayout.reactive.TemplateParams.prototype.get = function() {
};
jslayout.reactive.ProtoCache = function() {
  this.cachedProtoWrappers_ = {};
};
jslayout.reactive.ProtoCache.prototype.get = function(paramName, currentValue, protoCtor) {
  if (!currentValue) {
    return null;
  }
  var proto = this.cachedProtoWrappers_[paramName];
  proto && proto.toArray() == currentValue || (proto = this.cachedProtoWrappers_[paramName] = new protoCtor(currentValue));
  return proto;
};
jslayout.reactive.EvalContextTemplateParams = function(evalContext, argNames) {
  this.evalContext_ = evalContext;
  this.argNames_ = argNames;
};
jslayout.reactive.EvalContextTemplateParams.prototype.get = function(paramName) {
  return this.evalContext_.getVariable(this.argNames_[paramName]) || null;
};
jslayout.stats = {};
jslayout.STATS = 0;
jslayout.StatsOptions = {TIME:1, COUNT:2, CONSOLE:4, DOM:8, DOMTRACE:16, PROFILE:32, TIMELINE:64, SOURCE_LOCATIONS:128};
jslayout.Stats = function() {
  this.jsuse = {};
  this.jsinstance = {};
  this.cmd = {};
  this.contexts = 0;
  this.lists = 0;
  this.rebind = 0;
  this.elements = 0;
  this.prepare = 0;
  this.process = 0;
  this.top = null;
  this.tagnew = 0;
  this.tagmapped = 0;
  this.tagreset = 0;
  this.shallowOverrides = 0;
};
jslayout.stats.CmdCount = function() {
  this.instances = 0;
  this.process = 0;
  this.rebind = 0;
  this.action = 0;
};
jslayout.Stats.prototype.command = function(key) {
  this.cmd[key] || (this.cmd[key] = new jslayout.stats.CmdCount);
  return this.cmd[key];
};
jslayout.stats.increment = function(counter, key) {
  counter[key] ? ++counter[key] : counter[key] = 1;
};
jslayout.reactive.debugApi = {};
jslayout.reactive.debugApi.isEnabled = function() {
  return !!goog.getObjectByName("google.cd");
};
jslayout.reactive.debugApi.withDebugger_ = function(callback) {
  var controllerDebugger = goog.getObjectByName("google.cd");
  controllerDebugger && callback(controllerDebugger);
};
jslayout.reactive.debugApi.frameworkLoaded = function() {
  jslayout.reactive.debugApi.withDebugger_(function(controllerDebugger) {
    controllerDebugger.f();
  });
};
jslayout.reactive.debugApi.controllerMetadataAdded = function(rawMetadata) {
  jslayout.reactive.debugApi.withDebugger_(function(controllerDebugger) {
    controllerDebugger.a(rawMetadata);
  });
};
jslayout.reactive.debugApi.controllerRegistered = function(templateKey) {
  jslayout.reactive.debugApi.withDebugger_(function(controllerDebugger) {
    controllerDebugger.r(templateKey);
  });
};
jslayout.reactive.debugApi.controllerCreated = function(templateKey, instantiationId, opt_controller, opt_model, opt_error) {
  jslayout.reactive.debugApi.withDebugger_(function(controllerDebugger) {
    controllerDebugger.c(templateKey, instantiationId, opt_controller, opt_model, opt_error);
  });
};
jslayout.reactive.debugApi.controllerDisposed = function(instantiationId) {
  jslayout.reactive.debugApi.withDebugger_(function(controllerDebugger) {
    controllerDebugger.d(instantiationId);
  });
};
jslayout.reactive.MigratedKey = function(encodedKey) {
  var split = encodedKey.split(jslayout.reactive.MigratedKey.SEPARATOR_);
  goog.asserts.assert(2 >= split.length);
  this.val_ = split[0];
  this.old_ = split[1] || null;
};
jslayout.reactive.MigratedKey.SEPARATOR_ = "$";
jslayout.reactive.MigratedKey.prototype.applyUntilReturn = function(f, opt_this) {
  var value = f.call(opt_this, this.val_);
  goog.isDef(value) || null == this.old_ || (value = f.call(opt_this, this.old_));
  return value;
};
jslayout.reactive.ControllerPool = function(options) {
  this.options_ = options;
  this.controllerCtors_ = {};
  this.controllerEmptyCtors_ = {};
  this.modelCtors_ = {};
  this.domCtors_ = {};
  this.controllerCreationFn_ = {};
  this.controllerNames_ = {};
  this.controllerDataInstances_ = {};
  this.controllerLifecycleCallback_ = goog.nullFunction;
};
jslayout.reactive.ControllerPool.UNOBFUSCATED_IDS_ENABLED = !1;
jslayout.reactive.ControllerPool.prototype.hasController = function(templateKey) {
  return this.isControllerRegistered(templateKey);
};
jslayout.reactive.ControllerPool.prototype.isControllerRegistered = function(encodedTemplateKey) {
  var migratedTemplateKey = new jslayout.reactive.MigratedKey(encodedTemplateKey);
  return !!migratedTemplateKey.applyUntilReturn(function(templateKey) {
    return this.controllerCtors_[templateKey];
  }, this);
};
jslayout.reactive.ControllerPool.prototype.isEmpty = function() {
  for (var prop in this.controllerCtors_) {
    if (this.controllerCtors_.hasOwnProperty(prop)) {
      return !1;
    }
  }
  return !0;
};
jslayout.reactive.ControllerPool.prototype.createController = function(encodedTemplateKey, reactiveData, templateParams) {
  goog.asserts.assert(!reactiveData.controller, "Controller already created");
  goog.asserts.assert(!reactiveData.error, "Controller creation already failed");
  var migratedTemplateKey = new jslayout.reactive.MigratedKey(encodedTemplateKey);
  var templateKey = migratedTemplateKey.applyUntilReturn(function(key) {
    return key in this.controllerCtors_ ? key : void 0;
  }, this);
  var tempCtor = this.controllerEmptyCtors_[templateKey];
  var controllerCtor = this.controllerCtors_[templateKey];
  var modelCtor = this.modelCtors_[templateKey];
  var domCtor = this.domCtors_[templateKey];
  var controllerCreationFn = this.controllerCreationFn_[templateKey];
  goog.asserts.assert(controllerCtor, "Controller not registered.");
  try {
    var controller = new tempCtor;
    reactiveData.controller = controller;
    controller.reactiveData__ = reactiveData;
    controller.controllerName = this.getControllerName(templateKey);
    reactiveData.controllerPool = this;
    var model = modelCtor ? new modelCtor(templateParams) : null;
    reactiveData.model = model;
    var dom = domCtor ? new domCtor(controller) : null;
    reactiveData.dom = dom;
    this.controllerLifecycleCallback_(jslayout.reactive.ControllerPool.ControllerEvent_.INIT, controller.controllerName);
    controllerCreationFn(controller, model, dom);
    this.controllerLifecycleCallback_(jslayout.reactive.ControllerPool.ControllerEvent_.INIT, controller.controllerName);
    reactiveData.instantiationId && jslayout.reactive.debugApi.controllerCreated(templateKey, reactiveData.instantiationId, controller, model);
    jslayout.reactive.ControllerPool.resolvePromise(reactiveData);
    return controller;
  } catch (e) {
    return reactiveData.controller = null, reactiveData.error = e, goog.log.error(jslayout.reactive.ControllerPool.logger_, "Exceptions occur while instantiating controllers for template id: " + templateKey, e), jslayout.reactive.debugApi.controllerCreated(templateKey, reactiveData.instantiationId, void 0, void 0, e), this.options_.reportError(e), jslayout.reactive.ControllerPool.resolvePromise(reactiveData), null;
  }
};
jslayout.reactive.ControllerPool.resolvePromise = function(controllerData) {
  controllerData.resolver && (controllerData.controller ? controllerData.resolver.resolve(controllerData.controller) : controllerData.error && controllerData.resolver.reject(controllerData.error));
};
jslayout.reactive.ControllerPool.prototype.disposeController = function(controllerData) {
  if (controllerData.controller) {
    goog.asserts.assert(controllerData.controller.reactiveData__, "Cannot dispose object: already disposed or not a controller");
    try {
      this.controllerLifecycleCallback_(jslayout.reactive.ControllerPool.ControllerEvent_.DISPOSE, controllerData.controller.controllerName), goog.dispose(controllerData.controller);
    } catch (e) {
      goog.log.error(jslayout.reactive.ControllerPool.logger_, "Exceptions occurs while disposing controllers with instance id: " + controllerData.instantiationId || "<none>", e), this.options_.reportError(e);
    } finally {
      this.controllerLifecycleCallback_(jslayout.reactive.ControllerPool.ControllerEvent_.DISPOSE, controllerData.controller.controllerName), controllerData.controller.reactiveData__ = null;
    }
  }
  controllerData.instantiationId && (delete this.controllerDataInstances_[controllerData.instantiationId], jslayout.reactive.debugApi.controllerDisposed(controllerData.instantiationId));
};
jslayout.reactive.ControllerPool.prototype.getControllerName = function(templateId) {
  return jslayout.reactive.ControllerPool.UNOBFUSCATED_IDS_ENABLED ? this.controllerNames_[templateId] : templateId;
};
jslayout.reactive.ControllerPool.logger_ = goog.log.getLogger("jslayout.reactive.ControllerPool");
jslayout.reactive.ControllerPool.ControllerEvent_ = {INIT:"controller_init", DISPOSE:"controller_dispose"};
jslayout.reactive.Options = function() {
  this.templatePool_ = null;
  this.errorHandler_ = goog.nullFunction;
};
jslayout.reactive.Options.prototype.setErrorHandler = function(errorHandler) {
  this.errorHandler_ = errorHandler;
};
jslayout.reactive.Options.prototype.reportError = function(error) {
  try {
    this.errorHandler_(error);
  } catch (e) {
  }
};
jslayout.TemplateContext = function(opt_document, opt_globalVariablePool) {
  this.document_ = goog.isDef(opt_document) ? opt_document : document;
  this.styleElement_ = null;
  this.addedStyles_ = {};
  this.pendingStyles_ = [];
  this.globalVariablePool_ = opt_globalVariablePool || new jslayout.GlobalVariablePool;
  this.preExistingStyle_ = this.document_ ? goog.array.map(this.document_.getElementsByTagName("style"), function(x) {
    return x.innerHTML;
  }).join() : "";
  this.freezeCss_ = !1;
  this.inlineCssForTests_ = !1;
  this.registry = {};
  goog.DEBUG && (this.clearName_ = {});
};
jslayout.TemplateContext.prototype.addStyles = function(rule) {
  rule in this.addedStyles_ || (this.addedStyles_[rule] = !0, -1 == this.preExistingStyle_.indexOf(rule) && this.pendingStyles_.push(rule));
};
jslayout.TemplateContext.prototype.document = function() {
  return this.document_;
};
jslayout.TemplateContext.prototype.getStyleElement_ = function() {
  if (!goog.userAgent.IE) {
    return this.buildStyleElement_();
  }
  this.styleElement_ || (this.styleElement_ = this.buildStyleElement_());
  return this.styleElement_;
};
jslayout.TemplateContext.prototype.buildStyleElement_ = function() {
  var styleEl = this.document_.createElement("STYLE");
  this.document_.head ? this.document_.head.appendChild(styleEl) : this.document_.body.appendChild(styleEl);
  return styleEl;
};
jslayout.TemplateContext.prototype.commitStyles = function() {
  if (this.freezeCss_ || !this.document_ || 0 == this.pendingStyles_.length) {
    return "";
  }
  var css = this.pendingStyles_.join("");
  if (this.inlineCssForTests_) {
    return css;
  }
  var styleEl = this.getStyleElement_();
  styleEl.styleSheet && !styleEl.sheet ? styleEl.styleSheet.cssText += css : styleEl.textContent += css;
  this.pendingStyles_.length = 0;
  return "";
};
jslayout.TemplateContext.invert = function(args) {
  if ("array" == goog.typeOf(args)) {
    return args;
  }
  var ret = [];
  for (var i in args) {
    ret[args[i]] = i;
  }
  return ret;
};
jslayout.TemplateContext.prototype.hasTemplate = function(key) {
  return key in this.registry && !this.registry[key].lazy;
};
jslayout.TemplateContext.prototype.getEntry = function(key) {
  var entry = this.registry[key];
  goog.DEBUG && null == entry && window.console && window.console.log && window.console.log("template key not found: " + key);
  return entry;
};
jslayout.TemplateContext.FAVA_SERVICE_ID = "__jsltc";
jslayout.TemplateContext.SOY_INJECTED_DATA_KEY_ = "__jslayout_soy_renderer";
jslayout.TemplateContext.getFromSoyInjectedData = function(ijData) {
  goog.asserts.assertBoolean(!!ijData, "ijData must not be null.");
  return goog.asserts.assertObject(ijData[jslayout.TemplateContext.SOY_INJECTED_DATA_KEY_], "Couldn't find templateContext in Soy injected data.");
};
goog.DEBUG && (jslayout.TemplateContext.prototype.mapClearName = function(key, name) {
  this.clearName_[key] = name;
}, jslayout.TemplateContext.prototype.getClearName = function(key) {
  return this.clearName_[key];
});
jslayout.TemplatePool = function(opt_document, opt_controllerPool, opt_globalVariablePool) {
  jslayout.TemplateContext.call(this, opt_document, opt_globalVariablePool);
  this.controllerPool_ = opt_controllerPool || new jslayout.reactive.ControllerPool(new jslayout.reactive.Options);
  this.pendingUpdates_ = [];
  this.htmlChangedCallback_ = null;
  this.templateLoader_ = function(templatePool, templateKey) {
    goog.DEBUG && window.console.error && window.console.error('Template loader required to load lazy template "' + templateKey + '"; see TemplatePool.setTemplateLoader()');
  };
};
goog.inherits(jslayout.TemplatePool, jslayout.TemplateContext);
jslayout.TemplatePool.globalPendingUpdates = [];
jslayout.TemplatePool.invertMap_ = function(argNames) {
  var ret = {};
  for (var i in argNames) {
    ret[argNames[i]] = i;
  }
  return ret;
};
jslayout.TemplatePool.NO_COMMAND_LIST = [];
jslayout.TemplatePool.resolveCommands_ = function(elements, commands) {
  if ("number" == typeof elements[jslayout.ElementDataIndex.COMMAND_LIST]) {
    var index = elements[jslayout.ElementDataIndex.COMMAND_LIST];
    elements[jslayout.ElementDataIndex.COMMAND_LIST] = commands[index];
    elements.__index = index;
  } else {
    "undefined" == typeof elements[jslayout.ElementDataIndex.COMMAND_LIST] && (elements[jslayout.ElementDataIndex.COMMAND_LIST] = jslayout.TemplatePool.NO_COMMAND_LIST, elements.__index = -1);
  }
  "number" != typeof elements[jslayout.ElementDataIndex.FLAGS] && (elements[jslayout.ElementDataIndex.FLAGS] = 0);
  var children = elements[jslayout.ElementDataIndex.CHILDREN];
  if (children && "string" != typeof children) {
    for (var i = 0; i < children.length; ++i) {
      children[i] && "string" != typeof children[i] && jslayout.TemplatePool.resolveCommands_(children[i], commands);
    }
  }
};
jslayout.TemplatePool.prototype.insertData = function(renderingMode, key, args, elements, cssrules, commands, opt_debugLocations) {
  this.insertCommands(key, commands, opt_debugLocations);
  jslayout.TemplatePool.resolveCommands_(elements, commands);
  this.registry[key] = {renderingMode:renderingMode, elements:elements, cssrules:cssrules, args:jslayout.TemplateContext.invert(args), argNames:null, async:!1, fingerprint:null};
};
jslayout.TemplatePool.prototype.getArgNames = function(key) {
  return this.registry[key] && this.registry[key].argNames ? this.registry[key].argNames : null;
};
jslayout.TemplatePool.prototype.insertCommands = function(id, cmdList, opt_debugLocations) {
  if (cmdList) {
    for (var i = 0; i < cmdList.length; ++i) {
      cmdList[i] && (goog.DEBUG && opt_debugLocations && (cmdList[i][jslayout.Property.SRC_POS] = opt_debugLocations[i]), jslayout.Parser.addExternCommandList(id, String(i), cmdList[i]));
    }
  }
};
jslayout.TemplatePool.prototype.getTemplateStub = function(key) {
  if (!this.document()) {
    return null;
  }
  var entry = this.registry[key];
  if (!entry || !entry.elements) {
    return null;
  }
  var name = entry.elements[jslayout.ElementDataIndex.NAME];
  var stub = this.document().createElement(name);
  entry.renderingMode != jslayout.JsRenderingMode.DOMDIFF && stub.setAttribute(jslayout.Attribute.JSL, jslayout.Command.USE + " " + key + ";");
  return stub;
};
jslayout.TemplatePool.prototype.transcludeCss = function(context, cssrules) {
  var ruleCount = null == cssrules ? 0 : cssrules.length;
  for (var i = 0; i < ruleCount; ++i) {
    var cmdList = cssrules[i];
    for (var ii = 0; ii < cmdList.length; ii += 2) {
      var cmd = cmdList[ii];
      var arg = cmdList[ii + 1];
      switch(cmd) {
        case jslayout.Command.CSS:
          var val = "string" == typeof arg ? arg : context.jsexec(arg, null);
          val && this.addStyles(val);
          break;
        case jslayout.Command.GLOBAL:
          context.inject(arg[0], arg[1]);
          break;
        case jslayout.Command.VAR:
          context.jsexec(arg, null);
      }
    }
  }
};
jslayout.TemplatePool.prototype.notifyHtmlChanged = function() {
  this.htmlChangedCallback_ && this.htmlChangedCallback_();
};
jslayout.vdom = {};
jslayout.vdom.UNRESOLVED_JSL = ["unresolved", null];
jslayout.vdom.ElementHandle = function(element) {
  this.element = element;
  this.next = null;
  this.tag = null;
  this.resolvedTransclusions = null;
  this.alias = null;
  this.initializers = null;
  this.displayNone = !1;
};
jslayout.vdom.CommandData = function() {
  this.expr = null;
  this.fp = String;
  this.fpValue = "";
  this.actionData = null;
};
jslayout.vdom.CommandDataNode = function(jsl, elementData, elementHandle, context, templateKey) {
  this.jsl = jsl;
  this.elementData = elementData;
  this.ip0 = 0;
  this.trDepth = 0;
  this.forDim = 0;
  this.jsinstance = "";
  this.cdl = [];
  this.resetTag = !1;
  this.elementHandle = elementHandle;
  this.context = context;
  this.descentType = jslayout.DescentType.NONE;
  this.descendants = null;
  this.transclude = null;
  this.templateKey = templateKey;
  this.idlMap = null;
};
jslayout.vdom.CommandDataNode.prototype.containsLocally = function(other) {
  return this == other || null != this.transclude && this.transclude.containsLocally(other) ? !0 : this.descentType == jslayout.DescentType.FOR && null != this.descendants && null != this.descendants[0] && this.descendants[0].containsLocally(other);
};
jslayout.vdom.CommandDataNode.prototype.forTemplateKey = function(templateKey, opt_entrypoints) {
  if (this.jsl == jslayout.vdom.UNRESOLVED_JSL && this.templateKey == templateKey) {
    return this;
  }
  if (null != this.cdl && 0 < this.cdl.length && this.jsl[this.ip0] == jslayout.Command.TEMPLATE) {
    if (this.jsl[this.ip0 + 1] == templateKey) {
      return this;
    }
    opt_entrypoints && opt_entrypoints.push(this.jsl[this.ip0 + 1]);
  }
  if (null != this.transclude) {
    var ret = this.transclude.forTemplateKey(templateKey, opt_entrypoints);
    if (ret) {
      return ret;
    }
  }
  return this.descentType == jslayout.DescentType.FOR && null != this.descendants && null != this.descendants[0] ? this.descendants[0].forTemplateKey(templateKey, opt_entrypoints) : null;
};
jslayout.vdom.CommandDataNode.prototype.triggerCreateActions = function() {
  var idlMap = this.idlMap;
  if (null != idlMap) {
    var loadKey = jslayout.String.IDL_ACTION_KEY_PREFIX + jslayout.String.IDL_LOAD_JSACTION_EVENT_TYPE;
    var loadFunction = idlMap[loadKey];
    null != loadFunction && (loadFunction.call(this.elementHandle.element), idlMap[loadKey] = null);
    var createKey = jslayout.String.IDL_ACTION_KEY_PREFIX + jslayout.String.IDL_CREATE_JSACTION_EVENT_TYPE;
    var createFunction = idlMap[createKey];
    null != createFunction && (createFunction.call(this.elementHandle.element), idlMap[createKey] = null);
  }
  null != this.transclude && this.transclude.triggerCreateActions();
  this.descentType == jslayout.DescentType.FOR && null != this.descendants && null != this.descendants[0] && this.descendants[0].triggerCreateActions();
};
jslayout.ProcessOptions = {SHALLOW:2};
jslayout.Processor = function(templatePool, opt_options, opt_timeout) {
  this.templatePool_ = templatePool;
  this.document_ = goog.asserts.assert(templatePool.document());
  this.epoch_ = jslayout.EvalContext.epoch();
  this.text_ = null;
  this.html_ = !1;
  this.elementMap_ = null;
  this.cdnMap_ = null;
  this.displayNone_ = !1;
  jslayout.STATS && (this.stats_ = new jslayout.Stats);
  this.shallow_ = (opt_options & jslayout.ProcessOptions.SHALLOW) == jslayout.ProcessOptions.SHALLOW;
  this.deadline_ = null == opt_timeout ? null : goog.now() + opt_timeout;
};
jslayout.Processor.NO_KEY = "no_key";
jslayout.Processor.logger_ = goog.log.getLogger("jslayout.Processor");
jslayout.Processor.EMPTY_ARRAY_ = [];
jslayout.Processor.checkSkew = function(templatePool, entry, element) {
  if (null == entry || null == entry.fingerprint) {
    return !1;
  }
  var combinedJssc = element.getAttribute(jslayout.Attribute.JSSC);
  if (!combinedJssc) {
    return !1;
  }
  element.removeAttribute(jslayout.Attribute.JSSC);
  var fingerprintMap = combinedJssc.split(" ");
  for (var i = 0; i < fingerprintMap.length; i++) {
    var templateKeyToFp = fingerprintMap[i].split(":");
    if (2 > templateKeyToFp.length) {
      return !0;
    }
    var templateKey = templateKeyToFp[0];
    var fingerprint = templateKeyToFp[1];
    entry = templatePool.getEntry(templateKey);
    if (entry && entry.fingerprint != fingerprint) {
      return !0;
    }
  }
  return !1;
};
jslayout.Processor.initCommandData_ = function(cdn, ip, cdata) {
  var cmd = cdn.jsl[ip];
  var arg = cdn.jsl[ip + 1];
  switch(cmd) {
    case jslayout.Command.USEEXPR:
      cdata.fp = jslayout.EntryPointData.fp;
      cdata.expr = arg;
      break;
    case jslayout.Command.FOR:
      cdata.fp = jslayout.Processor.fpfor_;
      cdata.expr = arg[3];
      break;
    case jslayout.Command.FORKEY:
      cdata.actionData = [];
      cdata.fp = jslayout.Processor.fpforkey_(cdn.context, cdn.elementHandle, arg, cdata.actionData);
      cdata.expr = arg[3];
      break;
    case jslayout.Command.DISPLAY:
    case jslayout.Command.IF:
    case jslayout.Command.SKIP:
    case jslayout.Command.SWITCH:
      cdata.expr = arg;
      break;
    case jslayout.Command.CONTENT:
      cdata.expr = arg[2];
  }
};
jslayout.Processor.containsTemplateKeys = function(cdn, outerTemplateKey, innerTemplateKey) {
  if (cdn.templateKey == outerTemplateKey) {
    outerTemplateKey = null;
  } else {
    if (cdn.templateKey == innerTemplateKey) {
      return null == outerTemplateKey;
    }
  }
  if (null != cdn.transclude) {
    return jslayout.Processor.containsTemplateKeys(cdn.transclude, outerTemplateKey, innerTemplateKey);
  }
  if (null != cdn.descendants) {
    for (var i = 0; i < cdn.descendants.length; i++) {
      var descendant = cdn.descendants[i];
      if (null != descendant) {
        if (descendant.elementHandle.element != cdn.elementHandle.element) {
          break;
        }
        var result = jslayout.Processor.containsTemplateKeys(descendant, outerTemplateKey, innerTemplateKey);
        if (null != result) {
          return result;
        }
      }
    }
  }
  return null;
};
jslayout.Processor.contains = function(outerElement, outerTemplateKey, innerElement, innerTemplateKey) {
  if (innerElement != outerElement) {
    return goog.dom.contains(outerElement, innerElement);
  }
  if (outerTemplateKey == innerTemplateKey) {
    return !0;
  }
  var cdn = outerElement[jslayout.Property.COMMAND_DATA_NODE];
  return null != cdn && 1 == jslayout.Processor.containsTemplateKeys(cdn, outerTemplateKey, innerTemplateKey);
};
jslayout.Processor.autoUpdate_ = function(templatePool, opt_timestamp) {
  if (-1 === opt_timestamp || 0 != jslayout.Processor.processPendingUpdates(templatePool, 50)) {
    var updateFn = function() {
      jslayout.Processor.autoUpdate_(templatePool);
    };
    null != window.requestAnimationFrame ? window.requestAnimationFrame(updateFn) : goog.Timer.callOnce(updateFn);
  }
};
jslayout.Processor.processPendingUpdates = function(templatePool, maxTime) {
  var t0 = goog.now();
  for (var pending = templatePool.pendingUpdates_; 0 < pending.length;) {
    var update = pending.splice(0, 1)[0];
    try {
      update.process_();
    } catch (e) {
      goog.log.error(jslayout.Processor.logger_, "Exception in update.process_(); update: " + update.debugString(), e), goog.DEBUG && window.console && window.console.log("Exception ", e, " in update.process_(); update: ", update);
    }
    if (goog.now() >= t0 + maxTime) {
      break;
    }
  }
  templatePool.notifyHtmlChanged();
  return pending.length;
};
jslayout.Processor.processIdlAction_ = function(flow) {
  var element = flow.node();
  if (null != element && null != flow.eventType()) {
    if (jslayout.domdiff.ENABLED) {
      var virtualNode = element[jslayout.Property.VDOM];
      null != virtualNode && virtualNode.processJsaction(flow.eventType(), flow.event());
    }
    var cdn = element[jslayout.Property.COMMAND_DATA_NODE];
    var invokeNarrowRendering = null == cdn;
    if (cdn) {
      for (var i = cdn.ip0; i < cdn.jsl.length; i += jslayout.Parser.JSL_STRIDE) {
        if (cdn.jsl[i] == jslayout.Command.FORKEY) {
          invokeNarrowRendering = !0;
          break;
        }
      }
    }
    invokeNarrowRendering && (element[jslayout.Property.NARROW_STRATEGY] = jslayout.Processor.NarrowStrategy_.NARROW_PATH, jslayout.Processor.renderNarrow_(element), cdn = element[jslayout.Property.COMMAND_DATA_NODE]);
    cdn && jslayout.Processor.processIdlActionCdn_(flow, cdn);
  }
};
jslayout.Processor.processIdlActionGws = function(unused1, unused2, unused3, flow) {
  jslayout.Processor.processIdlAction_(flow);
};
jslayout.Processor.processIdlActionCdn_ = function(flow, cdn) {
  var idlMap = cdn.idlMap;
  if (idlMap) {
    var functionKey = jslayout.String.IDL_ACTION_KEY_PREFIX + flow.eventType();
    var idlActionFunction = idlMap[functionKey];
    if (idlActionFunction) {
      return idlActionFunction.call(flow.node(), flow), !0;
    }
  }
  if (cdn.transclude && jslayout.Processor.processIdlActionCdn_(flow, cdn.transclude)) {
    return !0;
  }
  if (cdn.descentType == jslayout.DescentType.FOR && null != cdn.descendants) {
    var d = cdn.descendants[0];
    if (null != d) {
      return jslayout.Processor.processIdlActionCdn_(flow, d);
    }
  }
  return !1;
};
jslayout.Processor.addIdlActionHandler = function(dispatcher, opt_extraHandler) {
  var unqualifiedHandlerMap = {};
  unqualifiedHandlerMap[jslayout.String.IDL_ACTION] = opt_extraHandler ? function(flow) {
    jslayout.Processor.processIdlAction_(flow);
    opt_extraHandler(flow);
  } : jslayout.Processor.processIdlAction_;
  dispatcher.registerHandlers(jslayout.String.IDL_ACTION_NAMESPACE, null, unqualifiedHandlerMap);
};
jslayout.Processor.idlInterceptorActionFlowFactory = function(eventInfo) {
  var actionFlow = new jsaction.ActionFlow(eventInfo.action, eventInfo.actionElement, eventInfo.event, eventInfo.timeStamp, eventInfo.eventType);
  eventInfo.action == jslayout.String.IDL_ACTION_NAMESPACE + "." + jslayout.String.IDL_ACTION && jslayout.Processor.processIdlAction_(actionFlow);
  return actionFlow;
};
jslayout.Processor.preserveControlAttributes = function(opt_value) {
  return jslayout.Parser.preserveControlAttributes(opt_value);
};
jslayout.Processor.stats_ = function(stats, cdn) {
  var cdl = cdn.cdl;
  if (null != cdl) {
    cdl.__touch ? ++cdl.__touch : (++stats.lists, cdl.__touch = 1);
    var element = cdn.elementHandle.element;
    var context = cdn.context;
    var ip = cdn.ip0;
    for (var i = 0; i < cdl.length; ++i) {
      var cdata = cdl[i];
      var command = cdn.jsl[ip];
      ++stats.command("__total__").instances;
      ++stats.command(command).instances;
      stats.top || (stats.top = element);
      element.__touch ? ++element.__touch : (++stats.elements, element.__touch = 1);
      cdata && (context.__touch ? ++context.__touch : (++stats.contexts, context.__touch = 1));
      ip += jslayout.Parser.JSL_STRIDE;
    }
    null != cdn.transclude && jslayout.Processor.stats_(stats, cdn.transclude);
    if (null != cdn.descendants) {
      for (var j = 0; j < cdn.descendants.length; ++j) {
        var sub = cdn.descendants[j];
        sub && jslayout.Processor.stats_(stats, sub);
      }
    }
    --cdl.__touch;
    for (i = 0; i < cdl.length; ++i) {
      --element.__touch, --context.__touch;
    }
  }
};
jslayout.Processor.canUseConsole_ = function(window) {
  return !!(window && window.console && window.console.log && window.console.warn && window.console.info && window.console.table && window.console.groupCollapsed && window.console.groupEnd && window.console.group && window.console.trace);
};
jslayout.Processor.prototype.message_ = function(mode, key, t0, t1, cdn) {
  jslayout.STATS & jslayout.StatsOptions.COUNT && jslayout.Processor.stats_(this.stats_, cdn);
  var time = t1 - t0;
  if (!(jslayout.STATS & jslayout.StatsOptions.TIME && 5 > time) && jslayout.STATS & jslayout.StatsOptions.CONSOLE && jslayout.Processor.canUseConsole_(window)) {
    var label = goog.DEBUG ? this.templatePool_.getClearName(key) : key;
    window.console.groupCollapsed("%s %s %c%dms", mode, label, "color:" + (100 <= time ? "red" : 10 <= time ? "orange" : "black"), time);
    window.console.log("epoch %d", this.epoch_);
    window.console.log("%d contexts, %d shallow overrides", this.stats_.contexts, this.stats_.shallowOverrides);
    window.console.log("%d lists, %d rebound", this.stats_.lists, this.stats_.rebind);
    window.console.log("%d elements, %d prepared, %d processed", this.stats_.elements, this.stats_.prepare, this.stats_.process);
    window.console.log("tag: %d new, %d mapped, %d reset", this.stats_.tagnew, this.stats_.tagmapped, this.stats_.tagreset);
    var top = this.stats_.top;
    top && jslayout.Processor.messageWhereDom_(top);
    jslayout.Processor.messageWhereApp_();
    goog.object.isEmpty(this.stats_.cmd) || (window.console.groupCollapsed("commands"), window.console.table(this.stats_.cmd, ["instances", "process", "rebind", "action"]), window.console.groupEnd());
    if (!goog.object.isEmpty(this.stats_.jsuse)) {
      window.console.groupCollapsed("jsuse");
      var rows = {};
      for (var i in this.stats_.jsuse) {
        rows[i] = {count:this.stats_.jsuse[i]};
      }
      window.console.table(rows, ["count"]);
      window.console.groupEnd();
    }
    if (!goog.object.isEmpty(this.stats_.jsinstance)) {
      window.console.groupCollapsed("jsinstance");
      rows = {};
      for (i in this.stats_.jsinstance) {
        rows[i] = {count:this.stats_.jsinstance[i]};
      }
      window.console.table(rows, ["count"]);
      window.console.groupEnd();
    }
    window.console.groupEnd();
  }
};
jslayout.Processor.messageWhereDom_ = function(element) {
  var elementLabel = element.nodeName + (element.className ? "." + element.className : "");
  window.console.groupCollapsed("where in DOM: %s", elementLabel);
  window.console.log("%o", element);
  window.console.groupEnd();
};
jslayout.Processor.messageWhereApp_ = function() {
  window.console.groupCollapsed("where in app");
  window.console.trace();
  window.console.groupEnd();
};
jslayout.Processor.process = function(context, element, templatePool, templateKey, opt_options, opt_timeout) {
  jslayout.Processor.initOnce_();
  var label = "";
  if (jslayout.STATS || goog.DEBUG) {
    label = goog.DEBUG ? templatePool.getClearName(templateKey) : templateKey;
  }
  var t0 = 0;
  jslayout.STATS && (t0 = goog.now());
  jslayout.STATS & jslayout.StatsOptions.PROFILE && window && window.console && window.console.profile && window.console.profile(label);
  jslayout.STATS & jslayout.StatsOptions.TIMELINE && window && window.console && window.console.time && window.console.time("process" + label);
  if (jslayout.STATS & jslayout.StatsOptions.DOMTRACE) {
    var trace = element.getAttribute("trace");
    element.setAttribute("trace", (trace ? trace + ", " : "") + "PROCESS");
  }
  if (0 == (opt_options & jslayout.ProcessOptions.SHALLOW)) {
    var pending = templatePool.pendingUpdates_;
    for (var i = pending.length - 1; 0 <= i; --i) {
      var update = pending[i];
      jslayout.Processor.contains(element, templateKey, goog.asserts.assert(update.cdn_.elementHandle.element), update.cdn_.templateKey) && pending.splice(i, 1);
    }
  }
  context.setBidiDirIsRtl(jslayout.bidi.String.RTL == jslayout.bidi.inferContextDirection(element));
  context.setMarkupAllowed(!0);
  var messageLabel = null;
  var cdn = element[jslayout.Property.COMMAND_DATA_NODE];
  if (cdn && cdn.jsl != jslayout.vdom.UNRESOLVED_JSL && templateKey != jslayout.Processor.NO_KEY) {
    var entrypoints = null;
    goog.DEBUG && (entrypoints = []);
    var cdnFound = cdn.forTemplateKey(templateKey, entrypoints);
    if (cdnFound) {
      cdn = cdnFound;
      messageLabel = "rebind";
      var processor = new jslayout.Processor(templatePool, opt_options, opt_timeout);
      cdn.context.copyFrom(context);
      cdn.elementHandle.tag && !cdn.resetTag && element == cdn.elementHandle.element && cdn.elementHandle.tag.reset(templateKey);
      processor.rebind_(cdn);
    }
  }
  if (null == messageLabel) {
    messageLabel = "process";
    goog.asserts.assert(templatePool.document() == goog.dom.getOwnerDocument(element));
    processor = new jslayout.Processor(templatePool, opt_options, opt_timeout);
    var jsl = processor.commands_(element, null);
    var trDepth = jsl[0] == jslayout.Command.TEMPLATE ? 1 : 0;
    var startIndex = 0;
    if (templateKey != jslayout.Processor.NO_KEY && templateKey != element.getAttribute(jslayout.String.ID)) {
      var found = !1;
      var lastCmd = jsl.length - jslayout.Parser.JSL_STRIDE;
      if (jsl[0] == jslayout.Command.TEMPLATE && jsl[1] == templateKey) {
        startIndex = 0, found = !0;
      } else {
        if (jsl[lastCmd] == jslayout.Command.USE && jsl[lastCmd + 1] == templateKey) {
          startIndex = lastCmd, found = !0;
        } else {
          var rt = jslayout.Parser.getResolvedTransclusions(element);
          for (i = 0; i < rt.length; ++i) {
            if (rt[i] == templateKey) {
              jsl = jslayout.Parser.getTemplateRootCommands(templateKey);
              trDepth = i + 1;
              startIndex = 0;
              found = !0;
              break;
            }
          }
        }
      }
      goog.DEBUG && !found && jslayout.Processor.canUseConsole_(window) && (window.console.group("Entrypoint %s (%s)", label, templateKey), window.console.warn("Entrypoint is not found in command list at the element."), window.console.info("Template must be attached to the entrypoint element."), window.console.log(element), window.console.log(jsl), window.console.groupEnd());
    }
    var contextClone = new jslayout.EvalContext;
    contextClone.copyFrom(context);
    cdn = new jslayout.vdom.CommandDataNode(jsl, null, new jslayout.vdom.ElementHandle(element), contextClone, templateKey);
    cdn.ip0 = startIndex;
    cdn.trDepth = trDepth;
    cdn.elementHandle.resolvedTransclusions = jslayout.Parser.getResolvedTransclusions(element);
    goog.DEBUG && (element[jslayout.Property.DEBUG_TEMPLATE_POOL] = templatePool);
    var skew = !1;
    if (found && jsl[startIndex] == jslayout.Command.TEMPLATE) {
      processor.attachTag_(cdn.elementHandle, templateKey);
      var entry = processor.templatePool_.getEntry(templateKey);
      skew = jslayout.Processor.checkSkew(processor.templatePool_, entry, element);
    }
    skew ? processor.transclude_(null, cdn) : processor.processElement_(cdn);
  }
  jslayout.STATS & jslayout.StatsOptions.TIMELINE && window && window.console && window.console.timeEnd && window.console.timeEnd("process" + label);
  jslayout.STATS & jslayout.StatsOptions.PROFILE && window && window.console && window.console.profileEnd && window.console.profileEnd();
  if (jslayout.STATS) {
    var t1 = goog.now();
    processor.message_(messageLabel, templateKey, t0, t1, cdn);
  }
  templatePool.notifyHtmlChanged();
};
jslayout.Processor.instantiateHtml = function(context, templatePool, templateKey) {
  jslayout.Processor.initOnce_();
  var processor = new jslayout.Processor(templatePool);
  var entry = templatePool.getEntry(templateKey);
  var elementData = entry.elements;
  var jsl = elementData[jslayout.ElementDataIndex.COMMAND_LIST];
  var cdn = new jslayout.vdom.CommandDataNode(jsl, entry.elements, new jslayout.vdom.ElementHandle(null), context, templateKey);
  cdn.elementHandle.resolvedTransclusions = [];
  processor.text_ = "";
  processor.html_ = !0;
  var markupAllowed = context.vars_.__markup_allowed;
  null == markupAllowed && context.setMarkupAllowed(!0);
  processor.process_(cdn);
  return processor.text_;
};
jslayout.Processor.prototype.setEpoch_ = function(element, mark) {
  var value = String(this.epoch_) + mark;
  element.getAttribute("epoch") != value && element.setAttribute("epoch", value);
};
jslayout.Processor.prototype.rebind_ = function(cdn) {
  if (cdn.elementHandle.element && !cdn.elementHandle.element[jslayout.Property.COMMAND_DATA_NODE]) {
    this.processElement_(cdn);
  } else {
    if (jslayout.Processor.needsProcessing_(cdn)) {
      var templateKey = cdn.templateKey;
      if (cdn.elementHandle.element) {
        var element = goog.asserts.assert(cdn.elementHandle.element);
        if (jslayout.STATS & jslayout.StatsOptions.SOURCE_LOCATIONS) {
          var label = goog.DEBUG ? this.templatePool_.getClearName(templateKey) : templateKey;
          var location = cdn.jsl[jslayout.Property.SRC_POS];
          location && (label += ":" + location);
          cdn.elementHandle.element.setAttribute("title", label);
        }
        jslayout.STATS & jslayout.StatsOptions.COUNT && ++this.stats_.rebind;
        if (cdn.resetTag) {
          var tag = cdn.elementHandle.tag;
          null != tag && (tag.reset(templateKey || void 0), jslayout.STATS & jslayout.StatsOptions.COUNT && ++this.stats_.tagreset);
        }
        var cdl = goog.asserts.assert(cdn.cdl);
        var rtl = cdn.context.getBidiDirIsRtl();
        var len = cdl.length;
        var descend = cdn.descentType == jslayout.DescentType.DESCENDANT_ELEMENTS;
        var ip = cdn.ip0;
        for (var i = 0; i < len; ++i) {
          var cdata = cdl[i];
          var command = cdn.jsl[ip];
          var action = jslayout.Processor.action_[command];
          jslayout.STATS & jslayout.StatsOptions.DOM && this.setEpoch_(element, "!");
          jslayout.STATS & jslayout.StatsOptions.COUNT && (++this.stats_.command("__total__").rebind, ++this.stats_.command(command).rebind);
          if (null != cdata) {
            if (null == cdata.expr) {
              if (action.method.call(this, cdn, cdata, ip), jslayout.STATS & jslayout.StatsOptions.COUNT && (++this.stats_.command("__total__").action, ++this.stats_.command(command).action), jslayout.STATS & jslayout.StatsOptions.DOMTRACE) {
                var trace = element.getAttribute("trace");
                element.setAttribute("trace", (trace ? trace + ", " : "") + String(this.epoch_) + "! " + command);
              }
            } else {
              var value = cdn.context.jsexec(cdata.expr, element);
              var fpValue = cdata.fp(value);
              jslayout.STATS & jslayout.StatsOptions.DOMTRACE && (trace = element.getAttribute("trace"), element.setAttribute("trace", (trace ? trace + ", " : "") + String(this.epoch_) + "! " + command + (fpValue == cdata.fpValue ? " == " + fpValue : " " + cdata.fpValue + " != " + fpValue)));
              if (action.branch != jslayout.ActionType.NORMAL) {
                if (action.method.call(this, cdn, cdata, ip, value, cdata.fpValue != fpValue), cdata.fpValue = fpValue, jslayout.STATS & jslayout.StatsOptions.COUNT && (++this.stats_.command("__total__").action, ++this.stats_.command(command).action), (command == jslayout.Command.DISPLAY || command == jslayout.Command.IF) && !value || command == jslayout.Command.SKIP && value) {
                  descend = !1;
                  break;
                }
              } else {
                fpValue != cdata.fpValue && (cdata.fpValue = fpValue, action.method.call(this, cdn, cdata, ip, value), jslayout.STATS & jslayout.StatsOptions.COUNT && (++this.stats_.command("__total__").action, ++this.stats_.command(command).action));
              }
            }
          }
          ip += jslayout.Parser.JSL_STRIDE;
        }
        descend && (this.applyTag_(cdn.elementHandle, cdn), this.descend_(cdn));
        cdn.context.setBidiDirIsRtl(rtl);
      } else {
        this.descend_(cdn);
      }
    }
  }
};
jslayout.Processor.prototype.descend_ = function(cdn) {
  if (cdn.descentType == jslayout.DescentType.DESCENDANT_ELEMENTS) {
    var descendants = cdn.descendants;
    if (null != descendants) {
      for (var i = 0; i < descendants.length; ++i) {
        var d = descendants[i];
        null != d && this.rebind_(d);
      }
    }
  }
};
jslayout.Processor.linkCommandData_ = function(element, cdn) {
  var storedCdn = element[jslayout.Property.COMMAND_DATA_NODE];
  null != storedCdn && storedCdn.containsLocally(cdn) || (element[jslayout.Property.COMMAND_DATA_NODE] = cdn);
};
jslayout.Processor.prototype.processElement_ = function(cdn) {
  var element = goog.asserts.assert(cdn.elementHandle.element);
  if (!jslayout.Processor.needsProcessing_(cdn)) {
    return !1;
  }
  var templateKey = cdn.templateKey;
  jslayout.STATS & jslayout.StatsOptions.DOM && this.setEpoch_(element, "");
  if (jslayout.STATS & jslayout.StatsOptions.DOMTRACE) {
    var trace = element.getAttribute("trace");
    element.setAttribute("trace", (trace ? trace + ", " : "") + String(this.epoch_) + "#!");
  }
  jslayout.STATS & jslayout.StatsOptions.COUNT && ++this.stats_.process;
  element[jslayout.Property.SERVERONLY_VALUES] && (element[jslayout.Property.SERVERONLY_VALUES][0] = 1);
  jslayout.Processor.linkCommandData_(element, cdn);
  var rtl = cdn.context.getBidiDirIsRtl();
  if (!cdn.jsl.length) {
    return cdn.descendants = [], cdn.descentType = jslayout.DescentType.DESCENDANT_ELEMENTS, this.processChildren_(cdn, templateKey), cdn.context.setBidiDirIsRtl(rtl), !0;
  }
  cdn.resetTag = !0;
  this.process_(cdn);
  cdn.context.setBidiDirIsRtl(rtl);
  return !0;
};
jslayout.Processor.prototype.processChildren_ = function(cdn, templateKey) {
  var context = cdn.context;
  var element = cdn.elementHandle.element;
  for (var c = goog.dom.getFirstElementChild(element); c; c = goog.dom.getNextElementSibling(c)) {
    if (jslayout.STATS & jslayout.StatsOptions.DOMTRACE) {
      var trace = element.getAttribute("trace");
      element.setAttribute("trace", (trace ? trace + ", " : "") + "CHILD " + c.nodeName);
      trace = c.getAttribute("trace");
      c.setAttribute("trace", (trace ? trace + ", " : "") + "CHILD " + cdn.descendants.length + " OF " + element.nodeName);
    }
    var sub = new jslayout.vdom.CommandDataNode(this.commands_(c, templateKey), null, new jslayout.vdom.ElementHandle(c), context, templateKey);
    this.processElement_(sub);
    c = sub.elementHandle.next || sub.elementHandle.element;
    0 == sub.cdl.length && c[jslayout.Property.COMMAND_DATA_NODE] ? null != sub.descendants && goog.array.extend(cdn.descendants, sub.descendants) : cdn.descendants.push(sub);
  }
};
jslayout.Processor.prototype.instantiateElement_ = function(cdn) {
  if (0 == cdn.jsl.length) {
    var templateKey = cdn.templateKey;
    var elementHandle = cdn.elementHandle;
    cdn.descendants = [];
    cdn.descentType = jslayout.DescentType.DESCENDANT_ELEMENTS;
    this.makeTag_(cdn);
    this.applyTag_(elementHandle, cdn);
    if (elementHandle.tag.hasTextOnlyContent()) {
      var saveMarkupAllowed = cdn.context.vars_.__markup_allowed;
      cdn.context.setMarkupAllowed(!1);
      this.instantiateChildren_(cdn, templateKey);
      cdn.context.setMarkupAllowed(!1 !== saveMarkupAllowed);
    } else {
      this.instantiateChildren_(cdn, templateKey);
    }
    this.applyTagEnd_(elementHandle, cdn);
  } else {
    cdn.resetTag = !0, this.process_(cdn);
  }
};
jslayout.Processor.prototype.instantiateChildren_ = function(cdn, templateKey) {
  var context = cdn.context;
  var children = cdn.elementData[jslayout.ElementDataIndex.CHILDREN];
  if (children) {
    if ("string" == typeof children) {
      this.text_ += children;
    } else {
      var rtl = context.getBidiDirIsRtl();
      for (var i = 0; i < children.length; ++i) {
        var childElementData = children[i];
        if ("string" == typeof childElementData) {
          this.text_ += childElementData;
        } else {
          var sub = new jslayout.vdom.CommandDataNode(childElementData[jslayout.ElementDataIndex.COMMAND_LIST], childElementData, new jslayout.vdom.ElementHandle(null), context, templateKey);
          this.instantiateElement_(sub);
          0 != sub.cdl.length ? cdn.descendants.push(sub) : null != sub.descendants && goog.array.extend(cdn.descendants, sub.descendants);
          context.setBidiDirIsRtl(rtl);
        }
      }
    }
  }
};
jslayout.Processor.prototype.processDisplayNone_ = function(cdn, opt_ip0) {
  var elementHandle = cdn.elementHandle;
  elementHandle.displayNone = !0;
  if (!1 === cdn.context.vars_.__markup_allowed) {
    this.applyTag_(elementHandle, cdn), this.applyTagEnd_(elementHandle, cdn);
  } else {
    var displayNoneCurrent = this.displayNone_;
    this.displayNone_ = !0;
    this.process_(cdn, opt_ip0);
    this.displayNone_ = displayNoneCurrent;
  }
};
jslayout.Processor.prototype.process_ = function(cdn, opt_ip0) {
  var elementHandle = cdn.elementHandle;
  var templateKey = cdn.templateKey;
  var jsl = cdn.jsl;
  var ip0 = opt_ip0 || cdn.ip0;
  if (0 == ip0) {
    if (jsl[0] == jslayout.Command.TEMPLATE && jsl[jslayout.Parser.JSL_STRIDE] == jslayout.Command.SPLICE) {
      var cid = jsl[jslayout.Parser.JSL_STRIDE + 1];
      var cidTemplate = jsl[1];
      var jslResolved = jslayout.Parser.resolveExternCommandList(cid, cidTemplate);
      if (null != jslResolved) {
        cdn.jsl = jslResolved;
        cdn.templateKey = cidTemplate;
        this.process_(cdn);
        return;
      }
    } else {
      if (jsl[0] == jslayout.Command.SPLICE && (cid = jsl[1], jslResolved = jslayout.Parser.resolveExternCommandList(cid, templateKey), null != jslResolved)) {
        cdn.jsl = jslResolved;
        this.process_(cdn);
        return;
      }
    }
  }
  var ip1 = jsl.length;
  for (var ip = ip0; ip < ip1; ip += jslayout.Parser.JSL_STRIDE) {
    var cmd = jsl[ip];
    var arg = jsl[ip + 1];
    cmd == jslayout.Command.TEMPLATE && (templateKey = arg);
    elementHandle.tag || (null != this.text_ ? cmd != jslayout.Command.FOR && cmd != jslayout.Command.FORKEY && this.makeTag_(cdn) : (cmd == jslayout.Command.ATTR || cmd == jslayout.Command.USE || cmd == jslayout.Command.USEATTR || cmd == jslayout.Command.USEATTREXPR || cmd == jslayout.Command.USEEXPR || cmd == jslayout.Command.USEPARAM || cmd == jslayout.Command.DISPLAY || cmd == jslayout.Command.IF || cmd == jslayout.Command.DIR_JSDIR || cmd == jslayout.Command.DIR_JSCONTENT || cmd == jslayout.Command.DIR_HTML || 
    cmd == jslayout.Command.SKIP) && this.attachTag_(elementHandle, templateKey));
    var action = jslayout.Processor.action_[cmd];
    if (action) {
      var cdata = new jslayout.vdom.CommandData;
      jslayout.Processor.initCommandData_(cdn, ip, cdata);
      this.run_(cdn, ip, cdata);
      if (action.branch != jslayout.ActionType.NORMAL) {
        return;
      }
    } else {
      ip == cdn.ip0 ? cdn.ip0 += jslayout.Parser.JSL_STRIDE : cdn.cdl.push(null);
    }
  }
  if (null == this.text_ || "style" != elementHandle.tag.name()) {
    this.applyTag_(elementHandle, cdn), cdn.descendants = [], cdn.descentType = jslayout.DescentType.DESCENDANT_ELEMENTS, null != this.text_ ? this.instantiateChildren_(cdn, templateKey) : this.processChildren_(cdn, templateKey), 0 == cdn.descendants.length && (cdn.descendants = null), this.applyTagEnd_(elementHandle, cdn);
  }
};
jslayout.Processor.prototype.run_ = function(cdn, ip, cdata) {
  var elementHandle = cdn.elementHandle;
  var element = elementHandle.element;
  var command = cdn.jsl[ip];
  var context = cdn.context;
  jslayout.STATS & jslayout.StatsOptions.COUNT && (++this.stats_.command("__total__").process, ++this.stats_.command(command).process);
  if (jslayout.STATS & jslayout.StatsOptions.DOMTRACE) {
    var trace = element.getAttribute("trace");
    element.setAttribute("trace", (trace ? trace + ", " : "") + String(this.epoch_) + "#! " + command);
  }
  var value = null;
  cdata.expr && (value = this.displayNone_ ? jslayout.Processor.jsexecSafe_(context, cdata.expr, element, jslayout.Processor.defaultValue_(command)) : context.jsexec(cdata.expr, element));
  var fpValue = cdata.fp(value);
  cdata.fpValue = fpValue;
  var action = jslayout.Processor.action_[command];
  if (action.branch == jslayout.ActionType.DESCENDANTS) {
    cdn.descendants = [], cdn.descentType = action.descentType;
  } else {
    if (action.branch == jslayout.ActionType.TRANSCLUSION) {
      var subCdn = cdn.transclude = new jslayout.vdom.CommandDataNode(jslayout.vdom.UNRESOLVED_JSL, null, elementHandle, new jslayout.EvalContext, jslayout.String.NULL);
      subCdn.trDepth = cdn.trDepth + 1;
      subCdn.forDim = cdn.forDim;
    }
  }
  cdn.cdl.push(cdata);
  action.method.call(this, cdn, cdata, ip, value, !0);
};
jslayout.Processor.jsexecSafe_ = function(context, expr, element, defaultValue) {
  try {
    return context.jsexec(expr, element);
  } catch (e) {
    return defaultValue;
  }
};
jslayout.Processor.ENTRY_POINT_NULL_ = new jslayout.EntryPointData("null");
jslayout.Processor.defaultValue_ = function(command) {
  var value = "";
  switch(command) {
    case jslayout.Command.USEEXPR:
      value = jslayout.Processor.ENTRY_POINT_NULL_;
      break;
    case jslayout.Command.FOR:
    case jslayout.Command.FORKEY:
      value = jslayout.Processor.EMPTY_ARRAY_;
      break;
    case jslayout.Command.DISPLAY:
    case jslayout.Command.IF:
    case jslayout.Command.SKIP:
      value = !0;
      break;
    case jslayout.Command.SWITCH:
      value = 0;
      break;
    case jslayout.Command.CONTENT:
      value = "";
  }
  return value;
};
jslayout.Processor.fpfor_ = function(valuesRaw) {
  return String(jslayout.Processor.maybeWrapArray_(valuesRaw).length);
};
jslayout.Processor.prototype.switchCmd_ = function(cdn, cdata, ip, value, fpChanged) {
  this.applyTag_(cdn.elementHandle, cdn);
  var sub = goog.asserts.assert(cdn.descendants);
  if (fpChanged) {
    if (null != this.text_) {
      this.instantiateSwitch_(cdn, cdata, value);
    } else {
      var context = cdn.context;
      var element = goog.asserts.assert(cdn.elementHandle.element);
      var cases = [];
      select = -1;
      for (var c = goog.dom.getFirstElementChild(element); c; c = goog.dom.getNextElementSibling(c)) {
        var jsl = this.commands_(c, cdn.templateKey);
        jsl[0] == jslayout.Command.SWITCHCASE ? (cases.push(c), context.jsexec(jsl[1], c) === value && (select = cases.length - 1)) : jsl[0] == jslayout.Command.SWITCHDEFAULT && (cases.push(c), -1 == select && (select = cases.length - 1));
        c = jslayout.dom.skipInstances(c, 0);
      }
      var i = 0;
      for (var I = cases.length; i < I; ++i) {
        var match = i == select;
        var subCdn = sub[i];
        match || null == subCdn || this.disposeController_(subCdn, !0);
        var c0 = cases[i];
        var c1 = jslayout.dom.skipInstances(c0, 0);
        c = c0;
        for (var go = !0; go; c = c.nextSibling) {
          goog.style.setElementShown(c, match), c == c1 && (go = !1);
        }
      }
      cdata.actionData = select;
      if (-1 != select) {
        var subSelect = sub[select];
        if (null == subSelect) {
          var matchElement = cases[select];
          subCdn = sub[select] = new jslayout.vdom.CommandDataNode(this.commands_(matchElement, cdn.templateKey), null, new jslayout.vdom.ElementHandle(matchElement), context, cdn.templateKey);
          this.processElement_(subCdn);
        } else {
          this.rebind_(subSelect);
        }
      }
    }
  } else {
    if (-1 != cdata.actionData) {
      var select = cdata.actionData;
      this.rebind_(sub[select]);
    }
  }
};
jslayout.Processor.prototype.instantiateSwitch_ = function(cdn, cdata, value) {
  var sub = goog.asserts.assert(cdn.descendants);
  var context = cdn.context;
  var cases = cdn.elementData[jslayout.ElementDataIndex.CHILDREN];
  var select = -1;
  for (var i = 0; i < cases.length; ++i) {
    var jsl = cases[i][jslayout.ElementDataIndex.COMMAND_LIST];
    if (jsl[0] == jslayout.Command.SWITCHCASE) {
      if (context.jsexec(jsl[1], null) === value) {
        select = i;
        break;
      }
    } else {
      jsl[0] == jslayout.Command.SWITCHDEFAULT && (select = i);
    }
  }
  cdata.actionData = select;
  for (i = 0; i < cases.length; ++i) {
    var elementData = cases[i];
    var subCdn = sub[i] = new jslayout.vdom.CommandDataNode(elementData[jslayout.ElementDataIndex.COMMAND_LIST], elementData, new jslayout.vdom.ElementHandle(null), context, cdn.templateKey);
    this.displayNone_ && (subCdn.elementHandle.displayNone = !0);
    i == select ? this.process_(subCdn) : cdn.elementData[jslayout.ElementDataIndex.NEEDED_FOR_UPDATE] && this.processDisplayNone_(subCdn);
  }
  this.applyTagEnd_(cdn.elementHandle, cdn);
};
jslayout.Processor.setBindParams_ = function(value, context) {
  var params = value.param_;
  for (var key in params) {
    context.setVariable(key, params[key]);
  }
};
jslayout.Processor.UpdateRequest = function(templatePool, cdn) {
  this.templatePool_ = templatePool;
  this.cdn_ = cdn;
  this.observable_ = null;
};
jslayout.Processor.UpdateRequest.prototype.observe = function(observable) {
  null == this.observable_ ? this.observable_ = [observable] : this.observable_.push(observable);
};
jslayout.Processor.UpdateRequest.prototype.onChange = function(type, opt_timeout) {
  var immediately = (type & jslayout.NotificationOptions.PROCESS_IMMEDIATELY) == jslayout.NotificationOptions.PROCESS_IMMEDIATELY;
  var shallow = (type & jslayout.NotificationOptions.CHANGE_SHALLOW) == jslayout.NotificationOptions.CHANGE_SHALLOW;
  if (immediately || shallow) {
    this.process_(shallow ? jslayout.ProcessOptions.SHALLOW : 0, opt_timeout), this.templatePool_.notifyHtmlChanged();
  } else {
    var element = goog.asserts.assert(this.cdn_.elementHandle.element);
    var templateKey = this.cdn_.templateKey;
    var pending = this.templatePool_.pendingUpdates_;
    if (0 == pending.length) {
      (type & jslayout.NotificationOptions.DEQUEUE_MANUALLY) != jslayout.NotificationOptions.DEQUEUE_MANUALLY && jslayout.Processor.autoUpdate_(this.templatePool_, -1);
    } else {
      for (var i = pending.length - 1; 0 <= i; --i) {
        var other = pending[i];
        var otherElement = goog.asserts.assert(other.cdn_.elementHandle.element);
        var otherTemplateKey = other.cdn_.templateKey;
        if (jslayout.Processor.contains(otherElement, otherTemplateKey, element, templateKey)) {
          return;
        }
        jslayout.Processor.contains(element, templateKey, otherElement, otherTemplateKey) && pending.splice(i, 1);
      }
    }
    pending.push(this);
  }
};
jslayout.Processor.UpdateRequest.prototype.process_ = function(opt_options, opt_timeout) {
  var t0 = 0;
  jslayout.STATS && (t0 = goog.now());
  goog.asserts.assert(this.templatePool_.document() == goog.dom.getOwnerDocument(this.cdn_.elementHandle.element.ownerDocument));
  var processor = new jslayout.Processor(this.templatePool_, opt_options, opt_timeout);
  this.cdn_.elementHandle.tag && !this.cdn_.resetTag && this.cdn_.elementHandle.tag.reset(this.cdn_.templateKey);
  var entry = this.templatePool_.getEntry(this.cdn_.templateKey);
  processor.use_(null, this.cdn_, entry, null);
  if (jslayout.STATS) {
    var t1 = goog.now();
    processor.message_("update", this.cdn_.templateKey, t0, t1, this.cdn_);
  }
};
jslayout.Processor.UpdateRequest.prototype.dispose = function() {
  if (null != this.observable_) {
    for (var i = 0; i < this.observable_.length; ++i) {
    }
  }
};
jslayout.Processor.UpdateRequest.prototype.debugString = function() {
  return "UpdateRequest for element: " + this.cdn_.elementHandle.element + " templateKey: " + this.cdn_.templateKey + " context: " + this.cdn_.context.debugString();
};
jslayout.Processor.idlMap_ = function(cdn) {
  null == cdn.idlMap && (cdn.idlMap = {});
  return cdn.idlMap;
};
jslayout.Processor.prototype.observeCmd_ = function(cdn, cdata, ip) {
  var context = cdn.context;
  var element = cdn.elementHandle.element;
  var args = cdn.jsl[ip + 1];
  var varName = args[0];
  var varGetter = args[1];
  var map = jslayout.Processor.idlMap_(cdn);
  var key = jslayout.String.OBSERVER_KEY_PREFIX + varName;
  var oldListener = map[key];
  var observable = context.jsexec(varGetter, element);
  if (null != oldListener) {
    if (oldListener.observable_[0] == observable) {
      return;
    }
    oldListener.dispose();
  }
  var updateRequest = new jslayout.Processor.UpdateRequest(this.templatePool_, cdn);
  updateRequest.observe(observable);
  map[key] = updateRequest;
};
jslayout.Processor.prototype.useexprCmd_ = function(cdn, cdata, ip, value, fpChanged) {
  var subCdn = goog.asserts.assert(cdn.transclude);
  fpChanged && (subCdn.cdl.length = 0, subCdn.templateKey = value.getKey(), subCdn.jsl = jslayout.vdom.UNRESOLVED_JSL);
  if (!this.stop_(cdn, cdata)) {
    var elementHandle = cdn.elementHandle;
    var entry = this.templatePool_.getEntry(value.getKey());
    null != entry && (elementHandle.tag.setFlags(jslayout.Tag.REMOVE_ATTRIBUTES | jslayout.Tag.REMOVE_CLASSES), subCdn.context.copyFrom(cdn.context, jslayout.Processor.EMPTY_ARRAY_), jslayout.Processor.setBindParams_(value, subCdn.context), this.use_(cdn, subCdn, entry, cdata, value.param_));
  }
};
jslayout.Processor.prototype.timeout_ = function(subCdn, cdata, opt_params) {
  if (null != this.text_) {
    return !1;
  }
  if (null != this.deadline_ && this.deadline_ <= goog.now()) {
    var updateRequest = new jslayout.Processor.UpdateRequest(this.templatePool_, subCdn);
    updateRequest.onChange(jslayout.NotificationOptions.DEQUEUE_MANUALLY);
    return !0;
  }
  var context = cdata.actionData;
  if (null == context) {
    cdata.actionData = context = new jslayout.EvalContext;
    context.copyFrom(subCdn.context);
    var changed = !0;
  } else {
    changed = context.shallowUpdate(subCdn.context, opt_params);
  }
  0 != (jslayout.STATS & jslayout.StatsOptions.COUNT) && this.shallow_ && changed && this.stats_.shallowOverrides++;
  return this.shallow_ && !changed;
};
jslayout.Processor.prototype.skipIfDisplayNone_ = function(cdn, cdata) {
  return null != this.text_ && this.displayNone_ && cdn.elementData[jslayout.ElementDataIndex.NEEDED_FOR_UPDATE] ? (cdata.fpValue = "", !0) : !1;
};
jslayout.Processor.prototype.stop_ = function(cdn, cdata) {
  return this.skipIfDisplayNone_(cdn, cdata) ? (this.applyTag_(cdn.elementHandle, cdn), this.applyTagEnd_(cdn.elementHandle, cdn), !0) : !1;
};
jslayout.Processor.prototype.useCmd_ = function(cdn, cdata, ip) {
  if (!this.stop_(cdn, cdata)) {
    var subCdn = goog.asserts.assert(cdn.transclude);
    var value = cdn.jsl[ip + 1];
    subCdn.templateKey = value;
    var entry = this.templatePool_.getEntry(value);
    null != entry && (subCdn.context.copyFrom(cdn.context, entry.args), this.use_(cdn, subCdn, entry, cdata, entry.args));
  }
};
jslayout.Processor.prototype.use_ = function(cdn, subCdn, entry, cdata, opt_params) {
  if (null == cdata || null == entry || !entry.async || !this.timeout_(subCdn, cdata, opt_params)) {
    if (subCdn.jsl != jslayout.vdom.UNRESOLVED_JSL) {
      this.rebind_(subCdn);
    } else {
      var elementHandle = subCdn.elementHandle;
      var element = elementHandle.element;
      element && jslayout.Processor.linkCommandData_(element, subCdn);
      null == elementHandle.resolvedTransclusions && (elementHandle.resolvedTransclusions = element ? jslayout.Parser.getResolvedTransclusions(element) : []);
      var rt = elementHandle.resolvedTransclusions;
      var trDepth = subCdn.trDepth;
      rt.length < trDepth - 1 ? (subCdn.jsl = jslayout.Parser.getTemplateRootCommands(subCdn.templateKey), this.process_(subCdn)) : rt.length == trDepth - 1 ? this.transclude_(cdn, subCdn) : rt[trDepth - 1] != subCdn.templateKey ? (rt.length = trDepth - 1, null != cdn && this.disposeController_(cdn, !1), this.transclude_(cdn, subCdn)) : element && jslayout.Processor.checkSkew(this.templatePool_, entry, element) ? (rt.length = trDepth - 1, this.transclude_(cdn, subCdn)) : (subCdn.jsl = jslayout.Parser.getTemplateRootCommands(subCdn.templateKey), 
      this.process_(subCdn));
    }
  }
};
jslayout.Processor.prototype.useparamCmd_ = function(cdn, cdata, ip) {
  var args = cdn.jsl[ip + 1];
  if (args[2] || !this.stop_(cdn, cdata)) {
    var subCdn = goog.asserts.assert(cdn.transclude);
    subCdn.templateKey = args[0];
    var entry = this.templatePool_.getEntry(subCdn.templateKey);
    if (null != entry) {
      var subContext = subCdn.context;
      subContext.copyFrom(cdn.context, jslayout.Processor.EMPTY_ARRAY_);
      var element = cdn.elementHandle.element;
      var params = args[1];
      if (params) {
        for (var key in params) {
          subContext.setVariable(key, cdn.context.jsexec(params[key], element));
        }
      }
      if (entry.light) {
        this.applyTag_(cdn.elementHandle, cdn);
        var value = entry.instantiateFun(this.templatePool_, subContext.vars_);
        null != this.text_ ? this.text_ += value : (jslayout.dom.assignInnerHtml(element, value), "TEXTAREA" != element.nodeName && "textarea" != element.nodeName || element.value === value || (element.value = value));
        this.applyTagEnd_(cdn.elementHandle, cdn);
      } else {
        this.use_(cdn, subCdn, entry, cdata, params);
      }
    }
  }
};
jslayout.Processor.prototype.useattrCmd_ = function(cdn, cdata, ip) {
  var args = cdn.jsl[ip + 1];
  var attrName = args[0];
  var templateKey = args[1];
  var elementHandle = cdn.elementHandle;
  var tag = elementHandle.tag;
  if (!elementHandle.element || elementHandle.element[jslayout.Property.NARROW_STRATEGY] != jslayout.Processor.NarrowStrategy_.NARROW_PATH) {
    var entry = this.templatePool_.getEntry(templateKey);
    if (entry) {
      var conditionFunction = args[2];
      if (null == conditionFunction || cdn.context.jsexec(conditionFunction, null)) {
        var subContext = cdata.actionData;
        null == subContext && (cdata.actionData = subContext = new jslayout.EvalContext);
        subContext.copyFrom(cdn.context, entry.args);
        "*" == attrName ? this.useattrAll_(templateKey, entry, subContext, tag) : this.useattr_(templateKey, entry, attrName, subContext, tag);
      }
    }
  }
};
jslayout.Processor.prototype.useattrexprCmd_ = function(cdn, cdata, ip) {
  var args = cdn.jsl[ip + 1];
  var attrName = args[0];
  var element = cdn.elementHandle.element;
  if (!element || element[jslayout.Property.NARROW_STRATEGY] != jslayout.Processor.NarrowStrategy_.NARROW_PATH) {
    var tag = cdn.elementHandle.tag;
    var entryPointData = cdn.context.jsexec(args[1], element);
    var templateKey = entryPointData.getKey();
    var entry = this.templatePool_.getEntry(templateKey);
    if (entry) {
      var conditionFunction = args[2];
      if (null == conditionFunction || cdn.context.jsexec(conditionFunction, null)) {
        var subContext = cdata.actionData;
        null == subContext && (cdata.actionData = subContext = new jslayout.EvalContext);
        subContext.copyFrom(cdn.context, jslayout.Processor.EMPTY_ARRAY_);
        jslayout.Processor.setBindParams_(entryPointData, subContext);
        "*" == attrName ? this.useattrAll_(templateKey, entry, subContext, tag) : this.useattr_(templateKey, entry, attrName, subContext, tag);
      }
    }
  }
};
jslayout.Processor.prototype.useattr_ = function(templateKey, entry, attrName, subContext, tag) {
  subContext.setMarkupAllowed(!1);
  var rendered = "";
  if (entry.elements || entry.light) {
    rendered = this.instantiateText_(templateKey, entry, subContext);
  }
  rendered || (rendered = jslayout.Tag.defaultAttributeValue(tag.name(), attrName));
  rendered && tag.setAttributeValue(prototemplate.AttributeType.Type.REGULAR, attrName, rendered, !0, !1);
};
jslayout.Processor.prototype.useattrAll_ = function(templateKey, entry, subContext, tag) {
  if (entry.elements) {
    var elementData = entry.elements;
    var jsl = elementData[jslayout.ElementDataIndex.COMMAND_LIST];
    var cdn = new jslayout.vdom.CommandDataNode(jsl, elementData, new jslayout.vdom.ElementHandle(null), subContext, templateKey);
    cdn.elementHandle.resolvedTransclusions = [];
    cdn.elementHandle.tag = tag;
    tag.setFlags(elementData[jslayout.ElementDataIndex.FLAGS]);
    var currentText = this.text_;
    this.text_ = "";
    this.process_(cdn);
    this.text_ = currentText;
  }
};
jslayout.Processor.prototype.transclude_ = function(cdn, subCdn) {
  var templateKey = subCdn.templateKey;
  if (jslayout.STATS & jslayout.StatsOptions.COUNT) {
    if (goog.DEBUG) {
      var clearKey = this.templatePool_.getClearName(templateKey) || templateKey;
      jslayout.stats.increment(this.stats_.jsuse, clearKey);
    } else {
      jslayout.stats.increment(this.stats_.jsuse, templateKey);
    }
  }
  var elementHandle = subCdn.elementHandle;
  var rt = goog.asserts.assert(elementHandle.resolvedTransclusions || elementHandle.element[jslayout.Property.RESOLVED_TRANSCLUSIONS]);
  var entry = this.templatePool_.getEntry(templateKey);
  if (entry && entry.lazy) {
    var loader = this.templatePool_.templateLoader_;
    var processor = this;
    loader(this.templatePool_, templateKey, function() {
      processor.transclude_(cdn, subCdn);
    });
    if (null != this.text_) {
      var jstid = elementHandle.tag.id();
      this.text_ += elementHandle.tag.html(!1, !0) + elementHandle.tag.getEndTag();
      this.elementMap_[jstid] = elementHandle;
    }
  } else {
    entry && entry.elements && (elementHandle.element && elementHandle.tag.setAttributeValue(prototemplate.AttributeType.Type.REGULAR, jslayout.Attribute.JSTCACHE, elementHandle.element.getAttribute(jslayout.Attribute.JSTCACHE) || "0", !1, !0), null == elementHandle.element && cdn && cdn.elementData && cdn.elementData[jslayout.ElementDataIndex.NEEDED_FOR_UPDATE] && -1 != cdn.elementData.__index && 0 != cdn.elementData.__index && this.addCommandList_(goog.asserts.assert(elementHandle.tag), cdn.templateKey, 
    cdn.elementData.__index), rt.push(templateKey), this.templatePool_.transcludeCss(subCdn.context, entry.cssrules), null == elementHandle.element && elementHandle.tag && cdn && jslayout.Processor.applyTagCondition_(goog.asserts.assert(elementHandle.tag), cdn), entry.elements[jslayout.ElementDataIndex.NAME] == jslayout.Element.JSL && (elementHandle.tag.name() != jslayout.Element.JSL || cdn.elementData && cdn.elementData[jslayout.ElementDataIndex.NEEDED_FOR_UPDATE]) && elementHandle.tag.setJstag(!0), 
    subCdn.elementData = entry.elements, jslayout.domdiff.ENABLED && entry.renderingMode == jslayout.JsRenderingMode.DOMDIFF ? (this.applyTag_(elementHandle, goog.asserts.assertObject(subCdn)), null != elementHandle.element ? jslayout.domdiff.render(this.templatePool_, goog.asserts.assertObject(entry.elements), subCdn.context, goog.asserts.assertObject(elementHandle.element)) : (null == elementHandle.initializers && (elementHandle.initializers = []), elementHandle.initializers.push([goog.bind(function() {
      jslayout.domdiff.render(this.templatePool_, goog.asserts.assertObject(entry.elements), subCdn.context, goog.asserts.assertObject(elementHandle.element));
    }, this)]), this.applyTagEnd_(elementHandle, goog.asserts.assertObject(subCdn)))) : this.instantiateDom_(subCdn));
  }
};
jslayout.Processor.prototype.instantiateDom_ = function(subCdn, opt_ip) {
  var elementHandle = subCdn.elementHandle;
  var elementData = goog.asserts.assert(subCdn.elementData);
  var top = null == this.text_;
  top && (this.text_ = "", this.elementMap_ = {}, this.cdnMap_ = {});
  subCdn.jsl = elementData[jslayout.ElementDataIndex.COMMAND_LIST];
  elementHandle.tag.setFlags(elementData[jslayout.ElementDataIndex.FLAGS]);
  var currentText = this.text_;
  this.text_ = "";
  if (elementHandle.tag.hasTextOnlyContent()) {
    var saveMarkupAllowed = subCdn.context.vars_.__markup_allowed;
    subCdn.context.setMarkupAllowed(!1);
    this.process_(subCdn, opt_ip);
    subCdn.context.setMarkupAllowed(!1 !== saveMarkupAllowed);
  } else {
    this.process_(subCdn, opt_ip);
  }
  this.text_ = currentText + this.text_;
  if (top) {
    this.templatePool_.commitStyles();
    var element = goog.asserts.assert(elementHandle.element);
    jslayout.dom.loadInnerHtml(this.document_, element, this.text_);
    var elements = element.querySelectorAll ? element.querySelectorAll("[" + jslayout.Attribute.JSTID + "]") : [];
    for (var i = 0; i < elements.length; ++i) {
      var e = elements[i];
      var jstid = goog.asserts.assert(e.getAttribute(jslayout.Attribute.JSTID));
      var handle = goog.asserts.assert(this.elementMap_[jstid]);
      var cdn = goog.asserts.assert(this.cdnMap_[jstid]);
      e.removeAttribute(jslayout.Attribute.JSTID);
      for (var h = handle; h; h = h.alias) {
        h.element = e;
      }
      handle.resolvedTransclusions && (e[jslayout.Property.RESOLVED_TRANSCLUSIONS] = handle.resolvedTransclusions, handle.resolvedTransclusions = null);
      e[jslayout.Property.COMMAND_DATA_NODE] = cdn;
      cdn.triggerCreateActions();
      e[jslayout.Property.JSTCACHE] = cdn.jsl;
      if (handle.initializers) {
        for (var j = 0; j < handle.initializers.length; ++j) {
          var initializer = handle.initializers[j];
          var method = initializer.shift();
          method.apply(this, initializer);
        }
        handle.initializers = null;
      }
    }
    this.text_ = null;
    this.elementMap_ = null;
    this.cdnMap_ = null;
  }
};
jslayout.Processor.prototype.instantiateText_ = function(templateKey, entry, context) {
  if (entry.light) {
    return jslayout.string.htmlEscape(goog.string.trim(entry.instantiateFun(this.templatePool_, context.vars_)));
  }
  var elementData = entry.elements;
  var jsl = elementData[jslayout.ElementDataIndex.COMMAND_LIST];
  var cdn = new jslayout.vdom.CommandDataNode(jsl, elementData, new jslayout.vdom.ElementHandle(null), context, templateKey);
  cdn.elementHandle.resolvedTransclusions = [];
  var currentText = this.text_;
  this.text_ = "";
  this.process_(cdn);
  var ret = this.text_;
  this.text_ = currentText;
  return ret;
};
jslayout.Processor.prototype.cloneForFor_ = function(element, templateKey, opt_inChild) {
  var cloned = element.cloneNode(!1);
  var rt = element[jslayout.Property.RESOLVED_TRANSCLUSIONS];
  if (null == rt) {
    for (var c = element.firstChild; null != c; c = c.nextSibling) {
      1 == c.nodeType ? cloned.appendChild(this.cloneForFor_(c, templateKey, !0)) : cloned.appendChild(c.cloneNode(!0));
    }
  } else {
    cloned[jslayout.Property.RESOLVED_TRANSCLUSIONS] && delete cloned[jslayout.Property.RESOLVED_TRANSCLUSIONS];
  }
  cloned[jslayout.Property.COMMAND_DATA_NODE] && delete cloned[jslayout.Property.COMMAND_DATA_NODE];
  cloned[jslayout.Property.CONTEXT] && delete cloned[jslayout.Property.CONTEXT];
  cloned[jslayout.Property.REACTIVE_JSACTION_CONTEXT] && delete cloned[jslayout.Property.REACTIVE_JSACTION_CONTEXT];
  if (!opt_inChild && (goog.style.setElementShown(cloned, !0), jslayout.STATS & jslayout.StatsOptions.COUNT)) {
    var statsKey = goog.DEBUG ? this.templatePool_.getClearName(templateKey) || templateKey : templateKey;
    statsKey += " > " + element.nodeName;
    element.className && (statsKey += "." + element.className);
    element.__stats_key = statsKey;
    jslayout.stats.increment(this.stats_.jsinstance, statsKey);
  }
  return cloned;
};
jslayout.Processor.maybeWrapArray_ = function(values) {
  return null == values ? [] : goog.isArray(values) ? values : [values];
};
jslayout.Processor.fpforkey_ = function(context, elementHandle, jsfor, actionData) {
  var valueSetter = jsfor[0];
  var indexSetter = jsfor[1];
  var countSetter = jsfor[2];
  var jskey = jsfor[4];
  var fingerprintFn = function(valuesRaw) {
    var element = elementHandle.element;
    var values = jslayout.Processor.maybeWrapArray_(valuesRaw);
    var count = values.length;
    context.jsexecSetter(countSetter, count);
    var keys = actionData;
    keys.length = 0;
    for (var i = 0; i < count; ++i) {
      context.jsexecSetter(valueSetter, values[i]);
      context.jsexecSetter(indexSetter, i);
      var key = context.jsexec(jskey, element);
      keys.push(String(key));
    }
    return keys.join(",");
  };
  return fingerprintFn;
};
jslayout.Processor.prototype.forCmd_ = function(cdn, cdata, ip, valuesRaw, fpChanged) {
  var sub = cdn.descendants;
  var jsfor = cdn.jsl[ip + 1];
  var valueSetter = jsfor[0];
  var indexSetter = jsfor[1];
  var countSetter = jsfor[2];
  var context = cdn.context;
  var elementHandle = cdn.elementHandle;
  var values = jslayout.Processor.maybeWrapArray_(valuesRaw);
  var count = values.length;
  context.jsexecSetter(countSetter, count);
  if (fpChanged) {
    if (null != this.text_) {
      this.instantiateFor_(cdn, cdata, ip, values);
    } else {
      for (i = count; i < sub.length; ++i) {
        this.disposeController_(sub[i], !0);
      }
      0 < sub.length && (sub.length = Math.max(count, 1));
      var firstElement = goog.asserts.assert(elementHandle.element);
      var element = firstElement;
      var append = !1;
      var dim = cdn.forDim;
      var instance = jslayout.dom.getInstance(element);
      for (i = 0; i < count || 0 == i; ++i) {
        if (append) {
          var node = this.cloneForFor_(firstElement, cdn.templateKey);
          goog.dom.insertSiblingAfter(node, element);
          element = node;
          instance.length = dim + 1;
        } else {
          0 < i && (element = goog.dom.getNextElementSibling(element), instance = jslayout.dom.getInstance(element)), instance[dim] && instance[dim].charAt(0) != jslayout.Char.ASTERISK || (append = 0 < count);
        }
        jslayout.dom.setInstance(element, instance, dim, count, i);
        0 == i && goog.style.setElementShown(element, 0 < count);
        if (0 < count) {
          context.jsexecSetter(valueSetter, values[i]);
          context.jsexecSetter(indexSetter, i);
          this.commands_(element, null);
          var subCdn = sub[i];
          null == subCdn ? (subCdn = sub[i] = new jslayout.vdom.CommandDataNode(cdn.jsl, cdn.elementData, new jslayout.vdom.ElementHandle(element), context, cdn.templateKey), subCdn.ip0 = ip + jslayout.Parser.JSL_STRIDE, subCdn.trDepth = cdn.trDepth, subCdn.forDim = dim + 1, subCdn.resetTag = !0, this.processElement_(subCdn)) : this.rebind_(subCdn);
          element = goog.asserts.assert(subCdn.elementHandle.next || subCdn.elementHandle.element);
        }
      }
      if (!append) {
        for (var candidate = goog.dom.getNextElementSibling(element); candidate && jslayout.dom.instanceGreater(jslayout.dom.getInstance(candidate), instance, dim);) {
          var next = goog.dom.getNextElementSibling(candidate);
          goog.dom.removeNode(candidate);
          candidate = next;
        }
      }
      elementHandle.next = element;
    }
  } else {
    for (var i = 0; i < count; ++i) {
      context.jsexecSetter(valueSetter, values[i]), context.jsexecSetter(indexSetter, i), this.rebind_(sub[i]);
    }
  }
};
jslayout.Processor.prototype.forkeyCmd_ = function(cdn, cdata, ip, valuesRaw, fpChanged) {
  var sub = cdn.descendants;
  var context = cdn.context;
  var jsfor = cdn.jsl[ip + 1];
  var valueSetter = jsfor[0];
  var indexSetter = jsfor[1];
  var elementHandle = cdn.elementHandle;
  var values = jslayout.Processor.maybeWrapArray_(valuesRaw);
  if (fpChanged || !elementHandle.element || elementHandle.element[jslayout.Property.FORKEY_HAS_UNPROCESSED_ELEMENTS]) {
    var keys = cdata.actionData;
    var count = values.length;
    if (null != this.text_) {
      this.instantiateFor_(cdn, cdata, ip, values, keys);
    } else {
      var firstElement = goog.asserts.assert(elementHandle.element);
      var element = firstElement;
      var dim = cdn.forDim;
      var instance = jslayout.dom.getInstance(element);
      var node = [];
      var nodeMap = {};
      var active = null;
      var focus = goog.dom.getActiveElement(this.document_);
      var current = element;
      for (var currentInstance = instance; current;) {
        this.commands_(current, cdn.templateKey);
        var currentKey = jslayout.dom.getKey(current);
        currentKey && (nodeMap[currentKey] = node.length);
        node.push(current);
        !active && focus && goog.dom.contains(current, focus) && (active = current);
        var sibling = goog.dom.getNextElementSibling(current);
        if (sibling) {
          var siblingInstance = jslayout.dom.getInstance(sibling);
          var siblingIsInIteration = jslayout.dom.instanceGreater(siblingInstance, currentInstance, dim);
          siblingIsInIteration ? (current = sibling, currentInstance = siblingInstance) : current = null;
        } else {
          current = null;
        }
      }
      var anchor = element.previousSibling;
      anchor || (anchor = this.document_.createComment("jsfor"), goog.dom.insertSiblingBefore(anchor, element));
      var subNew = [];
      firstElement[jslayout.Property.FORKEY_HAS_UNPROCESSED_ELEMENTS] = !1;
      if (0 < count) {
        for (i = 0; i < count; ++i) {
          var key = keys[i];
          if (key in nodeMap) {
            var index = nodeMap[key];
            delete nodeMap[key];
            element = node[index];
            node[index] = null;
            if (anchor.nextSibling != element) {
              if (element != active) {
                goog.dom.insertSiblingAfter(element, anchor);
              } else {
                for (; anchor.nextSibling != element;) {
                  goog.dom.insertSiblingAfter(anchor.nextSibling, element);
                }
              }
            }
            subNew[i] = sub[index];
          } else {
            element = this.cloneForFor_(firstElement, cdn.templateKey), goog.dom.insertSiblingAfter(element, anchor);
          }
          context.jsexecSetter(valueSetter, values[i]);
          context.jsexecSetter(indexSetter, i);
          jslayout.dom.setInstance(element, instance, dim, count, i, key);
          0 == i && goog.style.setElementShown(element, !0);
          this.commands_(element, null);
          0 == i && firstElement != element && (firstElement = elementHandle.element = element);
          var subCdn = subNew[i];
          null == subCdn ? (subCdn = new jslayout.vdom.CommandDataNode(cdn.jsl, cdn.elementData, new jslayout.vdom.ElementHandle(element), context, cdn.templateKey), subCdn.ip0 = ip + jslayout.Parser.JSL_STRIDE, subCdn.trDepth = cdn.trDepth, subCdn.forDim = dim + 1, subCdn.resetTag = !0, this.processElement_(subCdn) ? subNew[i] = subCdn : firstElement[jslayout.Property.FORKEY_HAS_UNPROCESSED_ELEMENTS] = !0) : this.rebind_(subCdn);
          element = subCdn.elementHandle.next || subCdn.elementHandle.element;
          anchor = element;
        }
      } else {
        node[0] = null, sub[0] && (subNew[0] = sub[0]), goog.style.setElementShown(element, !1), jslayout.dom.setInstance(element, instance, dim, 0, 0, jslayout.dom.getKey(element));
      }
      for (key in nodeMap) {
        index = nodeMap[key];
        var cdl = sub[index];
        cdl && this.disposeController_(cdl, !0);
      }
      cdn.descendants = subNew;
      for (i = 0; i < node.length; ++i) {
        node[i] && goog.dom.removeNode(node[i]);
      }
      elementHandle.next = element;
    }
  } else {
    if (0 < values.length) {
      for (var i = 0; i < sub.length; ++i) {
        context.jsexecSetter(valueSetter, values[i]), context.jsexecSetter(indexSetter, i), this.rebind_(sub[i]);
      }
    }
  }
};
jslayout.Processor.prototype.instantiateFor_ = function(cdn, cdata, ip, values, opt_keys) {
  var sub = cdn.descendants;
  var args = cdn.jsl[ip + 1];
  var valueSetter = args[0];
  var indexSetter = args[1];
  var context = cdn.context;
  var forceEmptyForDisplayNone = this.skipIfDisplayNone_(cdn, cdata);
  var count = forceEmptyForDisplayNone ? 0 : values.length;
  var empty = 0 == count;
  var neededForUpdate = cdn.elementData[jslayout.ElementDataIndex.NEEDED_FOR_UPDATE];
  for (var i = 0; i < count || 0 == i && neededForUpdate; ++i) {
    empty || (context.jsexecSetter(valueSetter, values[i]), context.jsexecSetter(indexSetter, i));
    var subCdn = sub[i] = new jslayout.vdom.CommandDataNode(cdn.jsl, cdn.elementData, new jslayout.vdom.ElementHandle(null), context, cdn.templateKey);
    subCdn.ip0 = ip + jslayout.Parser.JSL_STRIDE;
    subCdn.trDepth = cdn.trDepth;
    subCdn.forDim = cdn.forDim + 1;
    subCdn.resetTag = !0;
    subCdn.jsinstance = (cdn.jsinstance ? cdn.jsinstance + "," : "") + (i == count - 1 || empty ? "*" : "") + String(i) + (opt_keys && !empty ? ";" + opt_keys[i] : "");
    var subTag = this.makeTag_(subCdn);
    neededForUpdate && 0 < count && subTag.setAttributeValue(prototemplate.AttributeType.Type.JSINSTANCE, jslayout.Attribute.JSINSTANCE, subCdn.jsinstance);
    0 == i && (subCdn.elementHandle.alias = cdn.elementHandle);
    empty ? this.processDisplayNone_(subCdn) : this.process_(subCdn);
  }
};
jslayout.Processor.prototype.varCmd_ = function(cdn, cdata, ip) {
  var context = cdn.context;
  var jsvar = cdn.jsl[ip + 1];
  var element = cdn.elementHandle.element;
  this.displayNone_ && cdn.elementData && cdn.elementData[jslayout.ElementDataIndex.NEEDED_FOR_UPDATE] ? jslayout.Processor.jsexecSafe_(context, jsvar, element, "") : context.jsexec(jsvar, element);
};
jslayout.Processor.prototype.varServeronlyCmd_ = function(cdn, cdata, ip) {
  var context = cdn.context;
  var args = cdn.jsl[ip + 1];
  var varSetter = args[0];
  if (null != this.text_) {
    var valueGetter = goog.asserts.assert(args[1]);
    var value = context.jsexec(valueGetter, null);
    context.jsexecSetter(varSetter, value);
    cdata.actionData = jslayout.Parser.makeConstGetter(value);
  } else {
    var element = goog.asserts.assert(cdn.elementHandle.element);
    if (null == cdata.actionData) {
      var values = jslayout.Parser.getServeronlyValues(element);
      var start = values[0]++;
      cdata.actionData = goog.asserts.assert(values[start]);
    }
    value = context.jsexec(cdata.actionData, element);
    context.jsexecSetter(varSetter, value);
  }
};
jslayout.Processor.prototype.evalCmd_ = function(cdn, cdata, ip) {
  var context = cdn.context;
  var arg = cdn.jsl[ip + 1];
  var element = cdn.elementHandle.element;
  context.jsexec(arg, element);
};
jslayout.Processor.prototype.globalsCmd_ = function(cdn, cdata, ip) {
  var context = cdn.context;
  var jsglobal = cdn.jsl[ip + 1];
  context.inject(jsglobal[0], jsglobal[1]);
};
jslayout.Processor.prototype.addCommandList_ = function(tag, templateKey, index) {
  if (this.html_ || jslayout.Parser.preserveControlAttributes()) {
    var jslValue = "";
    0 == index && (jslValue += "$t " + templateKey + ";");
    jslValue += "$x " + index + ";";
    tag.setAttributeValue(prototemplate.AttributeType.Type.COMMAND_LIST, jslayout.Attribute.JSL, jslValue);
  }
  if (!this.html_) {
    var cacheId = goog.asserts.assert(jslayout.Parser.resolveExternCommandListId(String(index), templateKey));
    tag.setAttributeValue(prototemplate.AttributeType.Type.REGULAR, jslayout.Attribute.JSTCACHE, cacheId, !1, !0);
  }
};
jslayout.Processor.prototype.templateCmd_ = function(cdn, cdata, ip) {
  var context = cdn.context;
  var elementHandle = cdn.elementHandle;
  var templateKey = cdn.jsl[ip + 1];
  if (null != this.text_) {
    var elementData = goog.asserts.assert(cdn.elementData);
    elementData[jslayout.ElementDataIndex.NEEDED_FOR_UPDATE] && this.addCommandList_(goog.asserts.assert(elementHandle.tag), cdn.templateKey, 0);
  }
  elementHandle.tag && elementHandle.tag.recordBrowsersideTransclusion(templateKey);
  var controllerPool = this.templatePool_.controllerPool_;
  if (controllerPool.hasController(templateKey)) {
    if (elementHandle.element) {
      this.initReactiveController_(elementHandle, templateKey, context);
    } else {
      var ini = elementHandle.initializers = elementHandle.initializers || [];
      ini.push([this.initReactiveController_, elementHandle, templateKey, context]);
    }
  }
};
jslayout.Processor.prototype.initReactiveController_ = function(elementHandle, templateKey, context) {
  var controllerPool = this.templatePool_.controllerPool_;
  if (!context.vars_.__controller) {
    var argNames = this.templatePool_.getArgNames(templateKey);
    goog.asserts.assert(argNames);
    var templateParams = new jslayout.reactive.EvalContextTemplateParams(context, argNames);
    var reactiveData = new jslayout.reactive.ControllerData;
    reactiveData.rootElement = elementHandle.element;
    var controller = controllerPool.createController(templateKey, reactiveData, templateParams);
    context.setController(controller);
    elementHandle.element[jslayout.Property.CONTEXT] || (elementHandle.element[jslayout.Property.CONTEXT] = context);
  }
};
jslayout.Processor.prototype.jsactionCmd_ = function(cdn, cdata) {
  if (!cdata.actionData) {
    var elementHandle = cdn.elementHandle;
    var context = cdn.context;
    if (elementHandle.element) {
      this.initReactiveJsaction_(elementHandle, context);
    } else {
      var ini = elementHandle.initializers = elementHandle.initializers || [];
      ini.push([this.initReactiveJsaction_, elementHandle, context]);
    }
    cdata.actionData = !0;
  }
};
jslayout.Processor.prototype.initReactiveJsaction_ = function(elementHandle, context) {
  var element = elementHandle.element;
  element[jslayout.Property.REACTIVE_JSACTION_CONTEXT] || (element[jslayout.Property.REACTIVE_JSACTION_CONTEXT] = context);
};
jslayout.Processor.prototype.disposeController_ = function(cdn, includeSelf) {
  jslayout.Processor.disposeControllerImpl_(this.templatePool_, cdn, includeSelf);
};
jslayout.Processor.disposeControllerImpl_ = function(templatePool, cdn, includeSelf) {
  if (cdn) {
    if (includeSelf) {
      var map = cdn.idlMap;
      if (null != map) {
        for (var key in map) {
          if (0 == key.indexOf(jslayout.String.IDL_CONTROLLER_KEY_PREFIX) || 0 == key.indexOf(jslayout.String.OBSERVER_KEY_PREFIX)) {
            var disposable = map[key];
            null != disposable && disposable.dispose && disposable.dispose();
          }
        }
        cdn.idlMap = null;
      }
      if (cdn.jsl[cdn.ip0] == jslayout.Command.TEMPLATE) {
        var context = cdn.context;
        var controller = context.vars_.__controller;
        if (controller) {
          var controllerPool = templatePool.controllerPool_;
          var reactiveData = controller.reactiveData__;
          goog.asserts.assert(reactiveData, "Cannot dispose object: already disposed or not a controller");
          controllerPool.disposeController(reactiveData);
          context.setController(null);
        }
        cdn.elementHandle.element && cdn.elementHandle.element[jslayout.Property.CONTEXT] && (cdn.elementHandle.element[jslayout.Property.CONTEXT] = null);
      }
    }
    null != cdn.transclude && jslayout.Processor.disposeControllerImpl_(templatePool, cdn.transclude, !0);
    if (null != cdn.descendants) {
      for (var i = 0; i < cdn.descendants.length; ++i) {
        var sub = cdn.descendants[i];
        sub && jslayout.Processor.disposeControllerImpl_(templatePool, sub, !0);
      }
    }
  }
};
jslayout.Processor.disposeAllControllers = function(templatePool, element, templateKey) {
  if (element) {
    var cdn = element[jslayout.Property.COMMAND_DATA_NODE];
    cdn && (cdn = cdn.forTemplateKey(templateKey), cdn && jslayout.Processor.disposeControllerImpl_(templatePool, cdn, !0));
  }
};
jslayout.Processor.prototype.displayCmd_ = function(cdn, cdata, ip, value, fpChanged) {
  var elementHandle = cdn.elementHandle;
  var jsif = cdn.jsl[ip] == jslayout.Command.IF;
  if (null != this.text_) {
    value && this.displayNone_ && (elementHandle.displayNone = !0, cdata.fpValue = "");
    var ip0 = ip + jslayout.Parser.JSL_STRIDE;
    jsif ? value ? this.process_(cdn, ip0) : cdn.elementData[jslayout.ElementDataIndex.NEEDED_FOR_UPDATE] && this.processDisplayNone_(cdn, ip0) : value ? this.process_(cdn, ip0) : this.processDisplayNone_(cdn, ip0);
    cdata.actionData = !0;
  } else {
    var element = goog.asserts.assert(elementHandle.element);
    jsif && elementHandle.tag && elementHandle.tag.setFlags(jslayout.Tag.REMOVE_ATTRIBUTES | jslayout.Tag.REMOVE_CLASSES);
    value || this.applyTag_(elementHandle, cdn);
    if (fpChanged) {
      if (goog.style.setElementShown(element, !!value), value) {
        cdata.actionData || (this.process_(cdn, ip + jslayout.Parser.JSL_STRIDE), cdata.actionData = !0);
      } else {
        if (cdata.actionData) {
          var includeSelf = cdn.jsl[cdn.ip0] != jslayout.Command.TEMPLATE;
          this.disposeController_(cdn, includeSelf);
        }
        if (jsif) {
          var prune = !1;
          for (var i = ip + jslayout.Parser.JSL_STRIDE; i < cdn.jsl.length; i += jslayout.Parser.JSL_STRIDE) {
            var cmd = cdn.jsl[i];
            if (cmd == jslayout.Command.USE || cmd == jslayout.Command.USEEXPR || cmd == jslayout.Command.USEPARAM) {
              prune = !0;
              break;
            }
          }
          if (prune) {
            for (var c; c = element.firstChild;) {
              element.removeChild(c);
            }
            var storedCdn = element[jslayout.Property.COMMAND_DATA_NODE];
            for (var transclude = cdn.transclude; null != transclude;) {
              if (storedCdn == transclude) {
                element[jslayout.Property.COMMAND_DATA_NODE] = null;
                break;
              }
              transclude = transclude.transclude;
            }
            cdata.actionData = !1;
            cdn.cdl.length = (ip - cdn.ip0) / jslayout.Parser.JSL_STRIDE + 1;
            cdn.descentType = jslayout.DescentType.NONE;
            cdn.transclude = null;
            cdn.descendants = null;
            var rt = jslayout.Parser.getResolvedTransclusions(element);
            rt.length > cdn.trDepth && (rt.length = cdn.trDepth);
          }
        }
      }
    }
  }
};
jslayout.Processor.prototype.renderCmd_ = function(cdn, cdata, ip) {
  var elementHandle = cdn.elementHandle;
  null != elementHandle && null != elementHandle.element && cdn.context.jsexec(cdn.jsl[ip + 1], elementHandle.element);
};
jslayout.Processor.prototype.skipCmd_ = function(cdn, cdata, ip, value, fpChanged) {
  null != this.text_ ? (this.process_(cdn, ip + jslayout.Parser.JSL_STRIDE), cdata.actionData = !0) : (value && this.applyTag_(cdn.elementHandle, cdn), !fpChanged || value || cdata.actionData || (this.process_(cdn, ip + jslayout.Parser.JSL_STRIDE), cdata.actionData = !0));
};
jslayout.Processor.prototype.idlactionCmd_ = function(cdn, cdata, ip) {
  var elementHandle = cdn.elementHandle;
  var element = elementHandle.element;
  var args = cdn.jsl[ip + 1];
  var actionType = args[0];
  var actionExpr = args[1];
  var context = cdata.actionData;
  var rebind = null != context;
  rebind || (cdata.actionData = context = new jslayout.EvalContext);
  context.copyFrom(cdn.context);
  var idlActionFunction = context.jsexec(actionExpr, element);
  if (actionType != jslayout.String.IDL_CREATE_JSACTION_EVENT_TYPE && actionType != jslayout.String.IDL_LOAD_JSACTION_EVENT_TYPE || !element) {
    var map = jslayout.Processor.idlMap_(cdn);
    map[jslayout.String.IDL_ACTION_KEY_PREFIX + actionType] = idlActionFunction;
  } else {
    rebind || (jslayout.Processor.linkCommandData_(element, cdn), idlActionFunction.call(element));
  }
};
jslayout.Processor.prototype.idlcontrollerCmd_ = function(cdn, cdata, ip) {
  var context = cdn.context;
  var args = cdn.jsl[ip + 1];
  var varName = args[0];
  var varSetter = args[1];
  var initExpr = args[2];
  var updateExpr = args[3];
  var elementHandle = cdn.elementHandle;
  var element = elementHandle.element;
  var map = jslayout.Processor.idlMap_(cdn);
  var key = jslayout.String.IDL_CONTROLLER_KEY_PREFIX + varName;
  var controller = map[key];
  null == controller ? map[key] = context.jsexec(initExpr, element) : (context.jsexecSetter(varSetter, controller), updateExpr && context.jsexec(updateExpr, element));
};
jslayout.Processor.prototype.attachTag_ = function(elementHandle, templateKey) {
  var element = goog.asserts.assert(elementHandle.element);
  var tag = element[jslayout.Property.TAG];
  null != tag ? (elementHandle.tag = tag, tag.reset(templateKey || void 0), jslayout.STATS & jslayout.StatsOptions.COUNT && ++this.stats_.tagmapped) : (tag = elementHandle.tag = element[jslayout.Property.TAG] = new jslayout.Tag(element.nodeName.toLowerCase()), tag.initializeFromDom(element, templateKey || void 0), jslayout.STATS & jslayout.StatsOptions.COUNT && ++this.stats_.tagnew);
};
jslayout.Processor.prototype.makeTag_ = function(cdn) {
  goog.asserts.assert(!cdn.elementHandle.tag);
  var elementHandle = cdn.elementHandle;
  var elementData = goog.asserts.assert(cdn.elementData);
  var tag = elementHandle.tag = new jslayout.Tag(elementData[jslayout.ElementDataIndex.NAME]);
  tag.setFlags(elementData[jslayout.ElementDataIndex.FLAGS]);
  !1 === cdn.context.vars_.__markup_allowed && tag.setFlags(jslayout.Tag.TEXT_ONLY);
  this.cdnMap_ && (this.cdnMap_[tag.id()] = cdn);
  cdn.resetTag = !0;
  return tag;
};
jslayout.Processor.prototype.attrCmd_ = function(cdn, cdata, ip) {
  var args = cdn.jsl[ip + 1];
  var tag = cdn.elementHandle.tag;
  var context = cdn.context;
  var element = cdn.elementHandle.element;
  if (!element || element[jslayout.Property.NARROW_STRATEGY] != jslayout.Processor.NarrowStrategy_.NARROW_PATH) {
    var type = args[jslayout.CmdOffset.ATTR_TYPE];
    var sanitizationContext = args[jslayout.CmdOffset.ATTR_SANITIZATION_CONTEXT];
    var conditionFunction = args[jslayout.CmdOffset.ATTR_CONDITION];
    var valueFunction = args[jslayout.CmdOffset.ATTR_VALUE_FUNCTION];
    var label = args[jslayout.CmdOffset.ATTR_NAME];
    var initOnly = !!args[jslayout.CmdOffset.ATTR_INIT_ONLY];
    if (!initOnly || null != this.text_) {
      var checkDisplayNone = !!args[jslayout.CmdOffset.ATTR_CHECK_DISPLAY_NONE];
      if (!checkDisplayNone || !this.displayNone_) {
        var condition = !0;
        null != conditionFunction && (condition = this.displayNone_ && "nonce" != label ? !0 : !!context.jsexec(conditionFunction, element));
        var rawValue = condition ? null == valueFunction ? void 0 : "string" == typeof valueFunction ? valueFunction : this.displayNone_ ? jslayout.Processor.jsexecSafe_(context, valueFunction, element, "") : context.jsexec(valueFunction, element) : null;
        if (null != conditionFunction || !0 !== rawValue && !1 !== rawValue) {
          var value = null === rawValue ? null : void 0 === rawValue ? label : String(rawValue);
        } else {
          condition = rawValue, value = condition ? label : null;
        }
        var needTagCall = null !== value || null == this.text_;
        switch(type) {
          case prototemplate.AttributeType.Type.CLASS:
            tag.setFlags(jslayout.Tag.REMOVE_CLASSES);
            needTagCall && tag.setAttributeValue(type, jslayout.String.CLASS, value, !1, initOnly);
            break;
          case prototemplate.AttributeType.Type.CLASS_PROPERTY:
            needTagCall && tag.setAttributePropertyValue(type, jslayout.String.CLASS, label, condition ? jslayout.String.EMPTY : null, initOnly);
            break;
          case prototemplate.AttributeType.Type.STYLE:
            needTagCall && tag.setAttributeValue(type, jslayout.String.STYLE, value, !1, initOnly);
            break;
          case prototemplate.AttributeType.Type.STYLE_PROPERTY:
            condition ? valueFunction && (sanitizationContext && null !== value ? tag.setSanitizedAttributePropertyValue(sanitizationContext, jslayout.String.STYLE, label, value, initOnly) : needTagCall && tag.setAttributePropertyValue(type, jslayout.String.STYLE, label, value, initOnly)) : needTagCall && tag.setAttributePropertyValue(type, jslayout.String.STYLE, label, null, initOnly);
            break;
          case prototemplate.AttributeType.Type.URL:
            sanitizationContext && null !== value ? tag.setSanitizedAttributeValue(sanitizationContext, label, value, initOnly) : needTagCall && tag.setAttributeValue(type, label, value, !1, initOnly);
            break;
          case prototemplate.AttributeType.Type.URL_QUERY_COMPONENT:
            var prop = args[jslayout.CmdOffset.ATTR_PROP_NAME];
            needTagCall && tag.setAttributePropertyValue(type, label, prop, value, initOnly);
            break;
          case prototemplate.AttributeType.Type.URL_HASH:
          case prototemplate.AttributeType.Type.URL_HOST:
          case prototemplate.AttributeType.Type.URL_PATH:
          case prototemplate.AttributeType.Type.URL_PORT:
          case prototemplate.AttributeType.Type.URL_PROTOCOL:
            needTagCall && tag.setAttributePropertyValue(type, label, "", value, initOnly);
            break;
          default:
            label == jsaction.Attribute.JSACTION ? (needTagCall && tag.setAttributeValue(type, label, value, !1, initOnly), element && jsaction.Cache.clear(element)) : label == jsaction.Attribute.JSNAMESPACE ? (needTagCall && tag.setAttributeValue(type, label, value, !1, initOnly), element && jsaction.Cache.clearNamespace(element)) : label && null == args[jslayout.CmdOffset.ATTR_PROP_NAME] && (sanitizationContext && null !== value ? tag.setSanitizedAttributeValue(sanitizationContext, label, value, 
            initOnly) : needTagCall && tag.setAttributeValue(type, label, value, !1, initOnly));
        }
      }
    }
  }
};
jslayout.Processor.FLAG_SUPPRESS_END_TAG = 8;
jslayout.Processor.FLAG_SELF_CLOSING_ELEMENT = 16;
jslayout.Processor.applyTagCondition_ = function(tag, cdn) {
  var jsl = cdn.jsl;
  for (var i = 0; jsl && i < jsl.length; i += jslayout.Parser.JSL_STRIDE) {
    if (jsl[i] == jslayout.Command.TAG) {
      var context = cdn.context;
      var tagCondition = jsl[i + 1];
      var val = context.jsexec(tagCondition, null);
      !1 === val && tag.setJstag(!1);
      break;
    }
  }
};
jslayout.Processor.prototype.applyTag_ = function(elementHandle, cdn) {
  var tag = elementHandle.tag;
  if (null != tag) {
    var element = elementHandle.element;
    if (null == element) {
      jslayout.Processor.applyTagCondition_(tag, cdn);
      -1 != cdn.elementData.__index && cdn.elementData[jslayout.ElementDataIndex.NEEDED_FOR_UPDATE] && cdn.elementData[jslayout.ElementDataIndex.COMMAND_LIST][0] != jslayout.Command.TEMPLATE && this.addCommandList_(tag, cdn.templateKey, cdn.elementData.__index);
      cdn.elementHandle.displayNone && tag.setAttributePropertyValue(prototemplate.AttributeType.Type.STYLE_PROPERTY, jslayout.String.STYLE, "display", "none", !0);
      var jstid = tag.id();
      var selfClosing = 0 != (cdn.elementData[jslayout.ElementDataIndex.FLAGS] & jslayout.Processor.FLAG_SELF_CLOSING_ELEMENT);
      this.elementMap_ ? (this.text_ += tag.html(selfClosing, !0), this.elementMap_[jstid] = elementHandle) : this.text_ += tag.html(selfClosing, !1);
    } else {
      element[jslayout.Property.NARROW_STRATEGY] != jslayout.Processor.NarrowStrategy_.NARROW_PATH && (cdn.elementHandle.displayNone && tag.setAttributePropertyValue(prototemplate.AttributeType.Type.STYLE_PROPERTY, jslayout.String.STYLE, "display", "none", !0), tag.apply(element));
    }
  }
};
jslayout.Processor.prototype.applyTagEnd_ = function(elementHandle, cdn) {
  var element = elementHandle.element;
  var tag = elementHandle.tag;
  if (null != tag && null != this.text_ && null == element) {
    var elementData = goog.asserts.assert(cdn.elementData);
    var selfClosing = 0 != (elementData[jslayout.ElementDataIndex.FLAGS] & jslayout.Processor.FLAG_SELF_CLOSING_ELEMENT);
    var endTag = !selfClosing && 0 == (elementData[jslayout.ElementDataIndex.FLAGS] & jslayout.Processor.FLAG_SUPPRESS_END_TAG);
    endTag && (this.text_ += tag.getEndTag());
  }
};
jslayout.Processor.prototype.dirJscontentCmd_ = function(cdn, cdata, ip) {
  if (!this.skipIfDisplayNone_(cdn, cdata)) {
    var args = cdn.jsl[ip + 1];
    var context = cdn.context;
    var element = cdn.elementHandle.element;
    var tag = cdn.elementHandle.tag;
    var contentGetter = args[0];
    var isHtml = args[1];
    var oldRtl = context.getBidiDirIsRtl();
    var content = context.jsexec(contentGetter, element);
    var newRtl = jslayout.builtin.setDirFromJscontent(tag, oldRtl, content, isHtml);
    context.setBidiDirIsRtl(newRtl);
  }
};
jslayout.Processor.prototype.dirJsdirCmd_ = function(cdn, cdata, ip) {
  if (!this.skipIfDisplayNone_(cdn, cdata)) {
    var args = cdn.jsl[ip + 1];
    var context = cdn.context;
    var element = cdn.elementHandle.element;
    if (!element || element[jslayout.Property.NARROW_STRATEGY] != jslayout.Processor.NarrowStrategy_.NARROW_PATH) {
      var tag = cdn.elementHandle.tag;
      var jsdirGetter = args[0];
      var contentGetter = args[1];
      var isHtml = args[2];
      var oldRtl = context.getBidiDirIsRtl();
      var content = contentGetter ? context.jsexec(contentGetter, element) : null;
      var jsdir = context.jsexec(jsdirGetter, element);
      var newRtl = jslayout.builtin.setDirFromJsdir(tag, oldRtl, jsdir, content, isHtml);
      context.setBidiDirIsRtl(newRtl);
    }
  }
};
jslayout.Processor.prototype.dirHtmlCmd_ = function(cdn, cdata) {
  if (!this.skipIfDisplayNone_(cdn, cdata)) {
    var context = cdn.context;
    var element = cdn.elementHandle.element;
    if (!element || element[jslayout.Property.NARROW_STRATEGY] != jslayout.Processor.NarrowStrategy_.NARROW_PATH) {
      var rtl = context.getBidiDirIsRtl();
      context.setBidiDirIsRtl(rtl);
    }
  }
};
jslayout.Processor.prototype.contentCmd_ = function(cdn, cdata, ip, valueRaw, fpChanged) {
  var command = cdn.jsl[ip + 1];
  var escaping = command[0];
  var context = cdn.context;
  var value = String(valueRaw);
  var elementHandle = cdn.elementHandle;
  var needsBidi = !1;
  var desiredRtl = !1;
  if (3 < command.length && null != elementHandle.tag && !this.skipIfDisplayNone_(cdn, cdata)) {
    var jsDirExpr = command[3];
    var contextRtl = !!context.jsexec(command[4], null);
    var isHtml = escaping == prototemplate.EscapingMode.Escaping.SAFE || escaping == prototemplate.EscapingMode.Escaping.RAW || escaping == prototemplate.EscapingMode.Escaping.HTML_SNIPPET;
    desiredRtl = null != jsDirExpr ? context.jsexec(jsDirExpr, null) : jslayout.builtin.bidiDirIsRtl(value, isHtml, contextRtl);
    needsBidi = desiredRtl != contextRtl || contextRtl != jslayout.builtin.bidiExitDirIsRtl(value, isHtml, contextRtl);
    needsBidi && (null == elementHandle.element && jslayout.Processor.applyTagCondition_(elementHandle.tag, cdn), null == this.text_ || elementHandle.tag.getJstag()) && (elementHandle.tag.setAttributeValue(prototemplate.AttributeType.Type.REGULAR, "dir", desiredRtl ? jslayout.bidi.String.RTL : jslayout.bidi.String.LTR), needsBidi = !1);
  }
  this.applyTag_(elementHandle, cdn);
  if (fpChanged) {
    if (null != this.text_) {
      if (!this.skipIfDisplayNone_(cdn, cdata)) {
        var suffix = null;
        if (needsBidi) {
          var markupAllowed = !1 !== context.vars_.__markup_allowed;
          markupAllowed ? (this.text_ += '<span dir="' + (desiredRtl ? jslayout.bidi.String.RTL : jslayout.bidi.String.LTR) + '">', suffix = "</span>") : (this.text_ += desiredRtl ? jslayout.bidi.Char.RLE : jslayout.bidi.Char.LRE, suffix = jslayout.bidi.Char.PDF + (desiredRtl ? jslayout.bidi.Char.LRM : jslayout.bidi.Char.RLM));
        }
        switch(escaping) {
          case prototemplate.EscapingMode.Escaping.SAFE:
          case prototemplate.EscapingMode.Escaping.RAW:
            this.text_ += value;
            break;
          case prototemplate.EscapingMode.Escaping.HTML_SNIPPET:
            this.text_ += jslayout.string.htmlSnippetEscape(value);
            break;
          default:
            this.text_ += jslayout.string.htmlEscape(value);
        }
        null != suffix && (this.text_ += suffix);
      }
    } else {
      var element = elementHandle.element;
      switch(escaping) {
        case prototemplate.EscapingMode.Escaping.SAFE:
        case prototemplate.EscapingMode.Escaping.RAW:
          jslayout.dom.assignInnerHtml(element, value);
          break;
        case prototemplate.EscapingMode.Escaping.HTML_SNIPPET:
          var text = jslayout.string.htmlSnippetEscape(value);
          jslayout.dom.assignInnerHtml(element, text);
          break;
        default:
          jslayout.dom.assignText(element, value);
      }
      "TEXTAREA" != element.nodeName && "textarea" != element.nodeName || element.value === value || (element.value = value);
    }
    this.applyTagEnd_(elementHandle, cdn);
  }
};
jslayout.Processor.prototype.commands_ = function(element, templateKey) {
  jslayout.STATS & jslayout.StatsOptions.COUNT && (element[jslayout.Property.JSTCACHE] || !element.hasAttribute || element.hasAttribute(jslayout.Attribute.JSTCACHE) || ++this.stats_.prepare);
  jslayout.Parser.prepareNode(this.document_, element, templateKey);
  return element[jslayout.Property.JSTCACHE];
};
jslayout.Action_ = function(method) {
  this.method = method;
  this.branch = jslayout.ActionType.NORMAL;
  this.descentType = jslayout.DescentType.NONE;
};
jslayout.Processor.action_ = {};
jslayout.Processor.init_ = !1;
jslayout.Processor.initOnce_ = function() {
  if (!jslayout.Processor.init_) {
    jslayout.Processor.init_ = !0;
    var a = jslayout.Processor.action_;
    var p = jslayout.Processor.prototype;
    var action = function(method) {
      return new jslayout.Action_(method);
    };
    a[jslayout.Command.ATTR] = action(p.attrCmd_);
    a[jslayout.Command.CONTENT] = action(p.contentCmd_);
    a[jslayout.Command.DIR_HTML] = action(p.dirHtmlCmd_);
    a[jslayout.Command.DIR_JSCONTENT] = action(p.dirJscontentCmd_);
    a[jslayout.Command.DIR_JSDIR] = action(p.dirJsdirCmd_);
    a[jslayout.Command.DISPLAY] = action(p.displayCmd_);
    a[jslayout.Command.EVAL] = action(p.evalCmd_);
    a[jslayout.Command.FOR] = action(p.forCmd_);
    a[jslayout.Command.FORKEY] = action(p.forkeyCmd_);
    a[jslayout.Command.GLOBAL] = action(p.globalsCmd_);
    a[jslayout.Command.IDL_ACTION] = action(p.idlactionCmd_);
    a[jslayout.Command.IDL_CONTROLLER] = action(p.idlcontrollerCmd_);
    a[jslayout.Command.IF] = action(p.displayCmd_);
    a[jslayout.Command.OBSERVE] = action(p.observeCmd_);
    a[jslayout.Command.REACTIVE_JSACTION] = action(p.jsactionCmd_);
    a[jslayout.Command.RENDER] = action(p.renderCmd_);
    a[jslayout.Command.SKIP] = action(p.skipCmd_);
    a[jslayout.Command.SWITCH] = action(p.switchCmd_);
    a[jslayout.Command.TEMPLATE] = action(p.templateCmd_);
    a[jslayout.Command.USE] = action(p.useCmd_);
    a[jslayout.Command.USEATTR] = action(p.useattrCmd_);
    a[jslayout.Command.USEATTREXPR] = action(p.useattrexprCmd_);
    a[jslayout.Command.USEEXPR] = action(p.useexprCmd_);
    a[jslayout.Command.USEPARAM] = action(p.useparamCmd_);
    a[jslayout.Command.VAR] = action(p.varCmd_);
    a[jslayout.Command.VAR_SERVERONLY] = action(p.varServeronlyCmd_);
    a[jslayout.Command.CONTENT].branch = jslayout.ActionType.SIMPLE;
    a[jslayout.Command.DISPLAY].branch = jslayout.ActionType.SIMPLE;
    a[jslayout.Command.IF].branch = jslayout.ActionType.SIMPLE;
    a[jslayout.Command.SKIP].branch = jslayout.ActionType.SIMPLE;
    a[jslayout.Command.FOR].branch = jslayout.ActionType.DESCENDANTS;
    a[jslayout.Command.FOR].descentType = jslayout.DescentType.FOR;
    a[jslayout.Command.FORKEY].branch = jslayout.ActionType.DESCENDANTS;
    a[jslayout.Command.FORKEY].descentType = jslayout.DescentType.FOR;
    a[jslayout.Command.SWITCH].branch = jslayout.ActionType.DESCENDANTS;
    a[jslayout.Command.SWITCH].descentType = jslayout.DescentType.SWITCH;
    a[jslayout.Command.USE].branch = jslayout.ActionType.TRANSCLUSION;
    a[jslayout.Command.USEEXPR].branch = jslayout.ActionType.TRANSCLUSION;
    a[jslayout.Command.USEPARAM].branch = jslayout.ActionType.TRANSCLUSION;
    jslayout.Parser.EXTERN_JSL_ONLY || (jslayout.globals.setGlobal(jslayout.Name.RUNTIME, jslayout.EvalContext.runtimeData), jslayout.globals.setGlobal("and", jslayout.builtin.and), jslayout.globals.setGlobal("bidiCssFlip", jslayout.builtin.bidiCssFlip), jslayout.globals.setGlobal("bidiDir", jslayout.builtin.bidiDir), jslayout.globals.setGlobal("bidiExitDir", jslayout.builtin.bidiExitDir), jslayout.globals.setGlobal("bidiLocaleDir", jslayout.builtin.bidiLocaleDir), jslayout.globals.setGlobal("url", 
    jslayout.builtin.url), jslayout.globals.setGlobal("urlToString", jslayout.builtin.urlToString), jslayout.globals.setGlobal("urlParam", jslayout.builtin.urlParam), jslayout.globals.setGlobal("hasUrlParam", jslayout.builtin.hasUrlParam), jslayout.globals.setGlobal("bind", jslayout.builtin.bind), jslayout.globals.setGlobal("debug", jslayout.builtin.debug), jslayout.globals.setGlobal("ge", jslayout.builtin.ge), jslayout.globals.setGlobal("gt", jslayout.builtin.gt), jslayout.globals.setGlobal("le", 
    jslayout.builtin.le), jslayout.globals.setGlobal("lt", jslayout.builtin.lt), jslayout.globals.setGlobal("has", jslayout.builtin.has), jslayout.globals.setGlobal("size", jslayout.builtin.size), jslayout.globals.setGlobal("range", jslayout.builtin.range), jslayout.globals.setGlobal("string", jslayout.builtin.string), jslayout.globals.setGlobal("int", jslayout.builtin.toInt));
  }
};
jslayout.Processor.NarrowStrategy_ = {NARROW_PATH:"NARROW_PATH", NARROW_PIVOT:"NARROW_PIVOT"};
jslayout.Processor.renderNarrow = function(element) {
  element[jslayout.Property.NARROW_STRATEGY] = jslayout.Processor.NarrowStrategy_.NARROW_PIVOT;
  jslayout.Processor.renderNarrow_(element);
};
jslayout.Processor.renderNarrow_ = function(element) {
  var elements = [element];
  for (var currentElement = element; currentElement != document;) {
    element != currentElement && (elements.push(currentElement), currentElement[jslayout.Property.NARROW_STRATEGY] = jslayout.Processor.NarrowStrategy_.NARROW_PATH);
    if (currentElement[jslayout.Property.ATTACHED_TEMPLATE]) {
      break;
    }
    currentElement = currentElement.parentNode;
  }
  if (currentElement[jslayout.Property.ATTACHED_TEMPLATE]) {
    var template = currentElement[jslayout.Property.ATTACHED_TEMPLATE];
    template.render();
  } else {
    goog.DEBUG && window.console && console.log("Error in narrow rendering: couldn't find the attached element. Have you called .attach() or .instantiate()?", currentElement);
  }
  for (var i = 0; i < elements.length; i++) {
    elements[i][jslayout.Property.NARROW_STRATEGY] = null;
  }
};
jslayout.Processor.needsProcessing_ = function(cdn) {
  var element = cdn.elementHandle.element;
  if (!element || !element.parentNode || element.parentNode[jslayout.Property.NARROW_STRATEGY] != jslayout.Processor.NarrowStrategy_.NARROW_PATH || element[jslayout.Property.NARROW_STRATEGY]) {
    return !0;
  }
  for (var i = 0; i < cdn.jsl.length; i += jslayout.Parser.JSL_STRIDE) {
    var jsl = cdn.jsl[i];
    if (jsl == jslayout.Command.FOR || jsl == jslayout.Command.FORKEY && i >= cdn.ip0) {
      return !0;
    }
  }
  return !1;
};
jslayout.Template = function(templatePool, templateKey) {
  this.templatePool = templatePool;
  this.evalContext = new jslayout.EvalContext;
  this.evalContext.setGlobalVariablePool(this.templatePool.globalVariablePool_);
  this.templateElement = null;
  this.templateKey = templateKey;
};
jslayout.Template.prototype.fillParam = function(pos, value) {
  var args = this.templatePool.getEntry(this.templateKey).args;
  this.evalContext.setVariable(args[pos], value);
};
jslayout.Template.prototype.render = function(opt_callback, opt_options, opt_timeout) {
  if (this.templateElement) {
    var entry = this.templatePool.getEntry(this.templateKey);
    jslayout.domdiff.ENABLED && entry.renderingMode == jslayout.JsRenderingMode.DOMDIFF ? (this.templatePool.transcludeCss(this.evalContext, entry.cssrules), jslayout.domdiff.render(this.templatePool, goog.asserts.assertObject(entry.elements), this.evalContext, this.templateElement), this.templatePool.commitStyles()) : (goog.DEBUG && entry.renderingMode == jslayout.JsRenderingMode.DOMDIFF && console.error("Please configure jslayout.domdiff.ENABLED"), jslayout.Processor.process(this.evalContext, this.templateElement, 
    this.templatePool, this.templateKey, opt_options, opt_timeout));
  }
  opt_callback && opt_callback();
  return this.templateElement;
};
jslayout.Template.prototype.remove = function() {
  var element = this.templateElement;
  if (null == element) {
    goog.DEBUG && window.console.error && window.console.error("jslayout.Template.remove(): attempt to remove unattached or uninstantiated template ignored.");
  } else {
    var parent = element.parentElement;
    null != parent && parent[jslayout.Property.COMMAND_DATA_NODE] ? goog.DEBUG && window.console.error && window.console.error("jslayout.Template.remove(): attempt to remove embedded template ignored.", element) : (jslayout.domdiff.ENABLED && jslayout.domdiff.VirtualNode.unWrapElement(element), jslayout.Processor.disposeAllControllers(this.templatePool, element, this.templateKey), null != element.parentNode && element.parentNode.removeChild(element), this.templateElement = null, this.evalContext = 
    new jslayout.EvalContext, this.evalContext.setGlobalVariablePool(this.templatePool.globalVariablePool_), this.templatePool.notifyHtmlChanged());
  }
};
jslayout.InstantiableTemplate = function(templatePool, templateKey) {
  jslayout.Template.call(this, templatePool, templateKey);
};
goog.inherits(jslayout.InstantiableTemplate, jslayout.Template);
jslayout.InstantiableTemplate.prototype.instantiate = function(parentElement) {
  this.templateElement = this.templatePool.getTemplateStub(this.templateKey);
  this.templateElement && (this.templateElement[jslayout.Property.ATTACHED_TEMPLATE] = this);
  parentElement && parentElement.appendChild(this.templateElement);
  this.evalContext.setBidiDirIsRtl(jslayout.bidi.String.RTL == jslayout.bidi.inferContextDirection(this.templateElement));
  return this.templateElement;
};
jslayout.InstantiableStrictModeTemplate = function(templatePool, templateKey) {
  jslayout.InstantiableTemplate.call(this, templatePool, templateKey);
};
goog.inherits(jslayout.InstantiableStrictModeTemplate, jslayout.InstantiableTemplate);
jslayout.InstantiableStrictModeTemplate.prototype.renderPlainText = function() {
  if (jslayout.domdiff.ENABLED) {
    var entry = this.templatePool.getEntry(this.templateKey);
    return jslayout.domdiff.renderPlainText(this.templatePool, goog.asserts.assertObject(entry.elements), this.evalContext);
  }
  throw Error("set jslayout.domdiff.ENABLED");
};
proto.TypedMessage = function() {
  goog.proto2.Message.call(this);
};
goog.inherits(proto.TypedMessage, goog.proto2.Message);
proto.TypedMessage.descriptor_ = null;
proto.TypedMessage.prototype.getMessage = function() {
  return this.get$Value(8);
};
proto.TypedMessage.prototype.getDescriptor = function() {
  var descriptor = proto.TypedMessage.descriptor_;
  if (!descriptor) {
    var descriptorObj = {0:{name:"TypedMessage", fullName:"proto.TypedMessage"}, 1:{name:"type_id", fieldType:goog.proto2.Message.FieldType.INT32, type:Number}, 8:{name:"message", required:!0, fieldType:goog.proto2.Message.FieldType.BYTES, type:String}};
    proto.TypedMessage.descriptor_ = descriptor = goog.proto2.Message.createDescriptor(proto.TypedMessage, descriptorObj);
  }
  return descriptor;
};
proto.TypedMessage.getDescriptor = proto.TypedMessage.prototype.getDescriptor;
var proto2 = {bridge:{}};
proto2.bridge.MessageSet = function() {
  goog.proto2.Message.call(this);
};
goog.inherits(proto2.bridge.MessageSet, goog.proto2.Message);
proto2.bridge.MessageSet.descriptor_ = null;
proto2.bridge.MessageSet.prototype.getDescriptor = function() {
  var descriptor = proto2.bridge.MessageSet.descriptor_;
  if (!descriptor) {
    var descriptorObj = {0:{name:"MessageSet", fullName:"proto2.bridge.MessageSet"}};
    proto2.bridge.MessageSet.descriptor_ = descriptor = goog.proto2.Message.createDescriptor(proto2.bridge.MessageSet, descriptorObj);
  }
  return descriptor;
};
proto2.bridge.MessageSet.getDescriptor = proto2.bridge.MessageSet.prototype.getDescriptor;
var speech = {unsupervised:{}};
speech.unsupervised.Metadata = function() {
  goog.proto2.Message.call(this);
};
goog.inherits(speech.unsupervised.Metadata, goog.proto2.Message);
speech.unsupervised.Metadata.descriptor_ = null;
speech.unsupervised.Metadata.RecognitionStats = function() {
  goog.proto2.Message.call(this);
};
goog.inherits(speech.unsupervised.Metadata.RecognitionStats, goog.proto2.Message);
speech.unsupervised.Metadata.RecognitionStats.descriptor_ = null;
speech.unsupervised.Metadata.RecognitionStatsEntry = function() {
  goog.proto2.Message.call(this);
};
goog.inherits(speech.unsupervised.Metadata.RecognitionStatsEntry, goog.proto2.Message);
speech.unsupervised.Metadata.RecognitionStatsEntry.descriptor_ = null;
speech.unsupervised.Metadata.RecognitionStatsEntry.prototype.getKey = function() {
  return this.get$Value(1);
};
speech.unsupervised.Metadata.RecognitionStatsEntry.prototype.setKey = function(value) {
  this.set$Value(1, value);
};
speech.unsupervised.Metadata.RecognitionStatsEntry.prototype.getValue = function() {
  return this.get$Value(2);
};
speech.unsupervised.Metadata.RecognitionStatsEntry.prototype.setValue = function(value) {
  this.set$Value(2, value);
};
speech.unsupervised.Metadata.prototype.getDescriptor = function() {
  var descriptor = speech.unsupervised.Metadata.descriptor_;
  if (!descriptor) {
    var descriptorObj = {0:{name:"Metadata", fullName:"speech.unsupervised.Metadata"}, 1:{name:"agreement_count", fieldType:goog.proto2.Message.FieldType.INT32, type:Number}, 2:{name:"confidence", fieldType:goog.proto2.Message.FieldType.FLOAT, type:Number}, 3:{name:"audio_length_secs", fieldType:goog.proto2.Message.FieldType.DOUBLE, type:Number}, 4:{name:"speech_length_secs", fieldType:goog.proto2.Message.FieldType.DOUBLE, type:Number}, 12:{name:"recognition_stats", repeated:!0, fieldType:goog.proto2.Message.FieldType.MESSAGE, 
    type:speech.unsupervised.Metadata.RecognitionStatsEntry}, 8:{name:"application_id", fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 9:{name:"trigger_application_id", fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 10:{name:"pitch_score", fieldType:goog.proto2.Message.FieldType.DOUBLE, type:Number}, 11:{name:"hardness_score", fieldType:goog.proto2.Message.FieldType.DOUBLE, type:Number}};
    speech.unsupervised.Metadata.descriptor_ = descriptor = goog.proto2.Message.createDescriptor(speech.unsupervised.Metadata, descriptorObj);
  }
  return descriptor;
};
speech.unsupervised.Metadata.getDescriptor = speech.unsupervised.Metadata.prototype.getDescriptor;
speech.unsupervised.Metadata.RecognitionStats.prototype.getDescriptor = function() {
  var descriptor = speech.unsupervised.Metadata.RecognitionStats.descriptor_;
  if (!descriptor) {
    var descriptorObj = {0:{name:"RecognitionStats", containingType:speech.unsupervised.Metadata, fullName:"speech.unsupervised.Metadata.RecognitionStats"}, 1:{name:"confidence", fieldType:goog.proto2.Message.FieldType.FLOAT, type:Number}, 2:{name:"num_words", fieldType:goog.proto2.Message.FieldType.INT32, type:Number}, 3:{name:"lm_cost", fieldType:goog.proto2.Message.FieldType.DOUBLE, type:Number}, 4:{name:"am_cost", fieldType:goog.proto2.Message.FieldType.DOUBLE, type:Number}};
    speech.unsupervised.Metadata.RecognitionStats.descriptor_ = descriptor = goog.proto2.Message.createDescriptor(speech.unsupervised.Metadata.RecognitionStats, descriptorObj);
  }
  return descriptor;
};
speech.unsupervised.Metadata.RecognitionStats.getDescriptor = speech.unsupervised.Metadata.RecognitionStats.prototype.getDescriptor;
speech.unsupervised.Metadata.RecognitionStatsEntry.prototype.getDescriptor = function() {
  var descriptor = speech.unsupervised.Metadata.RecognitionStatsEntry.descriptor_;
  if (!descriptor) {
    var descriptorObj = {0:{name:"RecognitionStatsEntry", containingType:speech.unsupervised.Metadata, fullName:"speech.unsupervised.Metadata.RecognitionStatsEntry"}, 1:{name:"key", fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 2:{name:"value", fieldType:goog.proto2.Message.FieldType.MESSAGE, type:speech.unsupervised.Metadata.RecognitionStats}};
    speech.unsupervised.Metadata.RecognitionStatsEntry.descriptor_ = descriptor = goog.proto2.Message.createDescriptor(speech.unsupervised.Metadata.RecognitionStatsEntry, descriptorObj);
  }
  return descriptor;
};
speech.unsupervised.Metadata.RecognitionStatsEntry.getDescriptor = speech.unsupervised.Metadata.RecognitionStatsEntry.prototype.getDescriptor;
speech.tools = {};
speech.tools.crowd_compute = {};
speech.tools.crowd_compute.ConfigEntry = function() {
  goog.proto2.Message.call(this);
};
goog.inherits(speech.tools.crowd_compute.ConfigEntry, goog.proto2.Message);
speech.tools.crowd_compute.ConfigEntry.descriptor_ = null;
speech.tools.crowd_compute.ConfigEntry.prototype.getId = function() {
  return this.get$Value(1);
};
speech.tools.crowd_compute.ConfigEntry.prototype.getAudioTranscriptionOrDefault = function() {
  return this.get$ValueOrDefault(2);
};
speech.tools.crowd_compute.AudioTranscriptionConfig = function() {
  goog.proto2.Message.call(this);
};
goog.inherits(speech.tools.crowd_compute.AudioTranscriptionConfig, goog.proto2.Message);
speech.tools.crowd_compute.AudioTranscriptionConfig.descriptor_ = null;
speech.tools.crowd_compute.AudioTranscriptionConfig.prototype.getGuideline = function() {
  return this.get$Value(1);
};
speech.tools.crowd_compute.AudioTranscriptionConfig.prototype.getSearchUrl = function() {
  return this.get$Value(2);
};
speech.tools.crowd_compute.AudioTranscriptionConfig.prototype.getValidatorLocale = function() {
  return this.get$Value(7);
};
speech.tools.crowd_compute.AudioTranscriptionConfig.prototype.getInstructionShortOrDefault = function() {
  return this.get$ValueOrDefault(4);
};
speech.tools.crowd_compute.AudioTranscriptionConfig.prototype.getAllowEmptyTranscriptionOrDefault = function() {
  return this.get$ValueOrDefault(5);
};
speech.tools.crowd_compute.AudioTranscriptionConfig.prototype.getCategoryTreeOrDefault = function() {
  return this.get$ValueOrDefault(3);
};
speech.tools.crowd_compute.AudioTranscriptionConfig.prototype.allowedTagArray = function() {
  return this.array$Values(8);
};
speech.tools.crowd_compute.AudioTranscriptionConfig.prototype.getAudioContents = function() {
  return this.get$Value(9);
};
speech.tools.crowd_compute.AudioTranscriptionConfig.AudioContents = {UNKNOWN:0, AUDIO_ONLY:1, PREAMBLE_ONLY:2, CONCAT_PREAMBLE_AND_AUDIO:3};
speech.tools.crowd_compute.WordTag = function() {
  goog.proto2.Message.call(this);
};
goog.inherits(speech.tools.crowd_compute.WordTag, goog.proto2.Message);
speech.tools.crowd_compute.WordTag.descriptor_ = null;
speech.tools.crowd_compute.WordTag.prototype.getTag = function() {
  return this.get$Value(1);
};
speech.tools.crowd_compute.CategoryTreeConfig = function() {
  goog.proto2.Message.call(this);
};
goog.inherits(speech.tools.crowd_compute.CategoryTreeConfig, goog.proto2.Message);
speech.tools.crowd_compute.CategoryTreeConfig.descriptor_ = null;
speech.tools.crowd_compute.CategoryTreeConfig.prototype.getMultiSelection = function() {
  return this.get$Value(1);
};
speech.tools.crowd_compute.CategoryTreeConfig.prototype.getMinSelectionOrDefault = function() {
  return this.get$ValueOrDefault(3);
};
speech.tools.crowd_compute.CategoryTreeConfig.prototype.getMaxSelectionOrDefault = function() {
  return this.get$ValueOrDefault(4);
};
speech.tools.crowd_compute.CategoryTreeConfig.prototype.addCategory = function(value) {
  this.add$Value(2, value);
};
speech.tools.crowd_compute.CategoryTreeConfig.prototype.categoryArray = function() {
  return this.array$Values(2);
};
speech.tools.crowd_compute.CategoryConfig = function() {
  goog.proto2.Message.call(this);
};
goog.inherits(speech.tools.crowd_compute.CategoryConfig, goog.proto2.Message);
speech.tools.crowd_compute.CategoryConfig.descriptor_ = null;
speech.tools.crowd_compute.CategoryConfig.prototype.getDisplayName = function() {
  return this.get$Value(1);
};
speech.tools.crowd_compute.CategoryConfig.prototype.setDisplayName = function(value) {
  this.set$Value(1, value);
};
speech.tools.crowd_compute.CategoryConfig.prototype.getLabel = function() {
  return this.get$Value(2);
};
speech.tools.crowd_compute.CategoryConfig.prototype.setLabel = function(value) {
  this.set$Value(2, value);
};
speech.tools.crowd_compute.CategoryConfig.prototype.addCategory = function(value) {
  this.add$Value(3, value);
};
speech.tools.crowd_compute.CategoryConfig.prototype.categoryArray = function() {
  return this.array$Values(3);
};
speech.tools.crowd_compute.ConfigEntry.prototype.getDescriptor = function() {
  var descriptor = speech.tools.crowd_compute.ConfigEntry.descriptor_;
  if (!descriptor) {
    var descriptorObj = {0:{name:"ConfigEntry", fullName:"speech.tools.crowd_compute.ConfigEntry"}, 1:{name:"id", fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 2:{name:"audio_transcription", fieldType:goog.proto2.Message.FieldType.MESSAGE, type:speech.tools.crowd_compute.AudioTranscriptionConfig}};
    speech.tools.crowd_compute.ConfigEntry.descriptor_ = descriptor = goog.proto2.Message.createDescriptor(speech.tools.crowd_compute.ConfigEntry, descriptorObj);
  }
  return descriptor;
};
speech.tools.crowd_compute.ConfigEntry.getDescriptor = speech.tools.crowd_compute.ConfigEntry.prototype.getDescriptor;
speech.tools.crowd_compute.AudioTranscriptionConfig.prototype.getDescriptor = function() {
  var descriptor = speech.tools.crowd_compute.AudioTranscriptionConfig.descriptor_;
  if (!descriptor) {
    var descriptorObj = {0:{name:"AudioTranscriptionConfig", fullName:"speech.tools.crowd_compute.AudioTranscriptionConfig"}, 1:{name:"guideline", fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 2:{name:"search_url", fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 7:{name:"validator_locale", fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 4:{name:"instruction_short", fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 5:{name:"allow_empty_transcription", 
    fieldType:goog.proto2.Message.FieldType.BOOL, type:Boolean}, 3:{name:"category_tree", fieldType:goog.proto2.Message.FieldType.MESSAGE, type:speech.tools.crowd_compute.CategoryTreeConfig}, 6:{name:"review_ratio", fieldType:goog.proto2.Message.FieldType.DOUBLE, type:Number}, 8:{name:"allowed_tag", repeated:!0, fieldType:goog.proto2.Message.FieldType.MESSAGE, type:speech.tools.crowd_compute.WordTag}, 9:{name:"audio_contents", fieldType:goog.proto2.Message.FieldType.ENUM, defaultValue:speech.tools.crowd_compute.AudioTranscriptionConfig.AudioContents.UNKNOWN, 
    type:speech.tools.crowd_compute.AudioTranscriptionConfig.AudioContents}};
    speech.tools.crowd_compute.AudioTranscriptionConfig.descriptor_ = descriptor = goog.proto2.Message.createDescriptor(speech.tools.crowd_compute.AudioTranscriptionConfig, descriptorObj);
  }
  return descriptor;
};
speech.tools.crowd_compute.AudioTranscriptionConfig.getDescriptor = speech.tools.crowd_compute.AudioTranscriptionConfig.prototype.getDescriptor;
speech.tools.crowd_compute.WordTag.prototype.getDescriptor = function() {
  var descriptor = speech.tools.crowd_compute.WordTag.descriptor_;
  if (!descriptor) {
    var descriptorObj = {0:{name:"WordTag", fullName:"speech.tools.crowd_compute.WordTag"}, 1:{name:"tag", fieldType:goog.proto2.Message.FieldType.STRING, type:String}};
    speech.tools.crowd_compute.WordTag.descriptor_ = descriptor = goog.proto2.Message.createDescriptor(speech.tools.crowd_compute.WordTag, descriptorObj);
  }
  return descriptor;
};
speech.tools.crowd_compute.WordTag.getDescriptor = speech.tools.crowd_compute.WordTag.prototype.getDescriptor;
speech.tools.crowd_compute.CategoryTreeConfig.prototype.getDescriptor = function() {
  var descriptor = speech.tools.crowd_compute.CategoryTreeConfig.descriptor_;
  if (!descriptor) {
    var descriptorObj = {0:{name:"CategoryTreeConfig", fullName:"speech.tools.crowd_compute.CategoryTreeConfig"}, 1:{name:"multi_selection", fieldType:goog.proto2.Message.FieldType.BOOL, type:Boolean}, 3:{name:"min_selection", fieldType:goog.proto2.Message.FieldType.INT32, type:Number}, 4:{name:"max_selection", fieldType:goog.proto2.Message.FieldType.INT32, type:Number}, 2:{name:"category", repeated:!0, fieldType:goog.proto2.Message.FieldType.MESSAGE, type:speech.tools.crowd_compute.CategoryConfig}};
    speech.tools.crowd_compute.CategoryTreeConfig.descriptor_ = descriptor = goog.proto2.Message.createDescriptor(speech.tools.crowd_compute.CategoryTreeConfig, descriptorObj);
  }
  return descriptor;
};
speech.tools.crowd_compute.CategoryTreeConfig.getDescriptor = speech.tools.crowd_compute.CategoryTreeConfig.prototype.getDescriptor;
speech.tools.crowd_compute.CategoryConfig.prototype.getDescriptor = function() {
  var descriptor = speech.tools.crowd_compute.CategoryConfig.descriptor_;
  if (!descriptor) {
    var descriptorObj = {0:{name:"CategoryConfig", fullName:"speech.tools.crowd_compute.CategoryConfig"}, 1:{name:"display_name", fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 2:{name:"label", fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 3:{name:"category", repeated:!0, fieldType:goog.proto2.Message.FieldType.MESSAGE, type:speech.tools.crowd_compute.CategoryConfig}};
    speech.tools.crowd_compute.CategoryConfig.descriptor_ = descriptor = goog.proto2.Message.createDescriptor(speech.tools.crowd_compute.CategoryConfig, descriptorObj);
  }
  return descriptor;
};
speech.tools.crowd_compute.CategoryConfig.getDescriptor = speech.tools.crowd_compute.CategoryConfig.prototype.getDescriptor;
speech.SpellCheck = {UNKNOWN_STATUS:0, NO_SPELL_CHECK:1, DOC_SPELL_CHECK_ONLY:2, SPELL_CHECK:3};
speech.Severity = {UNSPECIFIED:0, NIT:1, SUGGEST:2, INFO:3, WARNING:4, ERROR:5, DO_NOT_SUBMIT:6, SPELL_CHECKER:7};
speech.TransValRequest = function() {
  goog.proto2.Message.call(this);
};
goog.inherits(speech.TransValRequest, goog.proto2.Message);
speech.TransValRequest.descriptor_ = null;
speech.TransValRequest.prototype.getTranscription = function() {
  return this.get$Value(1);
};
speech.TransValRequest.prototype.transcriptionCount = function() {
  return this.count$Values(1);
};
speech.TransValError = function() {
  goog.proto2.Message.call(this);
};
goog.inherits(speech.TransValError, goog.proto2.Message);
speech.TransValError.descriptor_ = null;
speech.TransValError.prototype.getMessage = function() {
  return this.get$Value(1);
};
speech.TransValError.prototype.getOffset = function() {
  return this.get$Value(2);
};
speech.TransValError.prototype.hasOffset = function() {
  return this.has$Value(2);
};
speech.TransValError.prototype.getLength = function() {
  return this.get$Value(3);
};
speech.TransValError.prototype.setLength = function(value) {
  this.set$Value(3, value);
};
speech.TransValError.prototype.hasLength = function() {
  return this.has$Value(3);
};
speech.TransValError.prototype.getReplacement = function() {
  return this.get$Value(4);
};
speech.TransValError.prototype.setReplacement = function(value) {
  this.set$Value(4, value);
};
speech.TransValError.prototype.getSeverity = function() {
  return this.get$Value(5);
};
speech.TransValError.prototype.setSeverity = function(value) {
  this.set$Value(5, value);
};
speech.TransValError.prototype.getGuidelinesLink = function() {
  return this.get$Value(6);
};
speech.TransValResponse = function() {
  goog.proto2.Message.call(this);
};
goog.inherits(speech.TransValResponse, goog.proto2.Message);
speech.TransValResponse.descriptor_ = null;
speech.TransValResponse.prototype.getError = function(index) {
  return this.get$Value(1, index);
};
speech.TransValResponse.prototype.errorArray = function() {
  return this.array$Values(1);
};
speech.TransValRequest.prototype.getDescriptor = function() {
  var descriptor = speech.TransValRequest.descriptor_;
  if (!descriptor) {
    var descriptorObj = {0:{name:"TransValRequest", fullName:"speech.TransValRequest"}, 1:{name:"transcription", fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 2:{name:"client_data", fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 3:{name:"locale", fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 4:{name:"project", fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 5:{name:"project_type", fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 
    6:{name:"spell_check", fieldType:goog.proto2.Message.FieldType.ENUM, defaultValue:speech.SpellCheck.UNKNOWN_STATUS, type:speech.SpellCheck}};
    speech.TransValRequest.descriptor_ = descriptor = goog.proto2.Message.createDescriptor(speech.TransValRequest, descriptorObj);
  }
  return descriptor;
};
speech.TransValRequest.getDescriptor = speech.TransValRequest.prototype.getDescriptor;
speech.TransValError.prototype.getDescriptor = function() {
  var descriptor = speech.TransValError.descriptor_;
  if (!descriptor) {
    var descriptorObj = {0:{name:"TransValError", fullName:"speech.TransValError"}, 1:{name:"message", fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 2:{name:"offset", fieldType:goog.proto2.Message.FieldType.INT32, type:Number}, 3:{name:"length", fieldType:goog.proto2.Message.FieldType.INT32, type:Number}, 4:{name:"replacement", fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 5:{name:"severity", fieldType:goog.proto2.Message.FieldType.ENUM, defaultValue:speech.Severity.UNSPECIFIED, 
    type:speech.Severity}, 6:{name:"guidelines_link", fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 7:{name:"suggestion", repeated:!0, fieldType:goog.proto2.Message.FieldType.STRING, type:String}};
    speech.TransValError.descriptor_ = descriptor = goog.proto2.Message.createDescriptor(speech.TransValError, descriptorObj);
  }
  return descriptor;
};
speech.TransValError.getDescriptor = speech.TransValError.prototype.getDescriptor;
speech.TransValResponse.prototype.getDescriptor = function() {
  var descriptor = speech.TransValResponse.descriptor_;
  if (!descriptor) {
    var descriptorObj = {0:{name:"TransValResponse", fullName:"speech.TransValResponse"}, 1:{name:"error", repeated:!0, fieldType:goog.proto2.Message.FieldType.MESSAGE, type:speech.TransValError}, 2:{name:"client_data", fieldType:goog.proto2.Message.FieldType.STRING, type:String}};
    speech.TransValResponse.descriptor_ = descriptor = goog.proto2.Message.createDescriptor(speech.TransValResponse, descriptorObj);
  }
  return descriptor;
};
speech.TransValResponse.getDescriptor = speech.TransValResponse.prototype.getDescriptor;
speech.tools.proto = {};
speech.tools.proto.TimeRangeAnnotation = function() {
  goog.proto2.Message.call(this);
};
goog.inherits(speech.tools.proto.TimeRangeAnnotation, goog.proto2.Message);
speech.tools.proto.TimeRangeAnnotation.descriptor_ = null;
speech.tools.proto.TimeRangeAnnotation.prototype.setStart = function(value) {
  this.set$Value(1, value);
};
speech.tools.proto.TimeRangeAnnotation.prototype.getEnd = function() {
  return this.get$Value(2);
};
speech.tools.proto.TimeRangeAnnotation.prototype.setEnd = function(value) {
  this.set$Value(2, value);
};
speech.tools.proto.TimeRangeAnnotation.prototype.getTag = function() {
  return this.get$Value(3);
};
speech.tools.proto.TimeRangeAnnotation.prototype.getTranscription = function() {
  return this.get$Value(4);
};
speech.tools.proto.TimeRangeAnnotation.prototype.transcriptionCount = function() {
  return this.count$Values(4);
};
speech.tools.proto.TimeRangeAnnotation.prototype.getDescriptor = function() {
  var descriptor = speech.tools.proto.TimeRangeAnnotation.descriptor_;
  if (!descriptor) {
    var descriptorObj = {0:{name:"TimeRangeAnnotation", fullName:"speech.tools.proto.TimeRangeAnnotation"}, 1:{name:"start", fieldType:goog.proto2.Message.FieldType.FLOAT, type:Number}, 2:{name:"end", fieldType:goog.proto2.Message.FieldType.FLOAT, type:Number}, 3:{name:"tag", fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 4:{name:"transcription", fieldType:goog.proto2.Message.FieldType.STRING, type:String}};
    speech.tools.proto.TimeRangeAnnotation.descriptor_ = descriptor = goog.proto2.Message.createDescriptor(speech.tools.proto.TimeRangeAnnotation, descriptorObj);
  }
  return descriptor;
};
speech.tools.proto.TimeRangeAnnotation.getDescriptor = speech.tools.proto.TimeRangeAnnotation.prototype.getDescriptor;
var com = {google:{}};
com.google.net = {};
com.google.net.util = {};
com.google.net.util.StatusProto = function() {
  goog.proto2.Message.call(this);
};
goog.inherits(com.google.net.util.StatusProto, goog.proto2.Message);
com.google.net.util.StatusProto.descriptor_ = null;
com.google.net.util.StatusProto.prototype.getMessage = function() {
  return this.get$Value(3);
};
com.google.net.util.StatusProto.prototype.getDescriptor = function() {
  var descriptor = com.google.net.util.StatusProto.descriptor_;
  if (!descriptor) {
    var descriptorObj = {0:{name:"StatusProto", fullName:"util.StatusProto"}, 1:{name:"code", fieldType:goog.proto2.Message.FieldType.INT32, type:Number}, 2:{name:"space", fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 3:{name:"message", fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 6:{name:"canonical_code", fieldType:goog.proto2.Message.FieldType.INT32, type:Number}, 4:{name:"payload", fieldType:goog.proto2.Message.FieldType.MESSAGE, type:proto.TypedMessage}, 5:{name:"message_set", 
    fieldType:goog.proto2.Message.FieldType.MESSAGE, type:proto2.bridge.MessageSet}};
    com.google.net.util.StatusProto.descriptor_ = descriptor = goog.proto2.Message.createDescriptor(com.google.net.util.StatusProto, descriptorObj);
  }
  return descriptor;
};
com.google.net.util.StatusProto.getDescriptor = com.google.net.util.StatusProto.prototype.getDescriptor;
speech.tools.StSearchRequest = function() {
  goog.proto2.Message.call(this);
};
goog.inherits(speech.tools.StSearchRequest, goog.proto2.Message);
speech.tools.StSearchRequest.descriptor_ = null;
speech.tools.StSearchResponse = function() {
  goog.proto2.Message.call(this);
};
goog.inherits(speech.tools.StSearchResponse, goog.proto2.Message);
speech.tools.StSearchResponse.descriptor_ = null;
speech.tools.GetAnnotationRequest = function() {
  goog.proto2.Message.call(this);
};
goog.inherits(speech.tools.GetAnnotationRequest, goog.proto2.Message);
speech.tools.GetAnnotationRequest.descriptor_ = null;
speech.tools.GetAnnotationRequest.prototype.setUtteranceId = function(value) {
  this.set$Value(1, value);
};
speech.tools.GetAnnotationResponse = function() {
  goog.proto2.Message.call(this);
};
goog.inherits(speech.tools.GetAnnotationResponse, goog.proto2.Message);
speech.tools.GetAnnotationResponse.descriptor_ = null;
speech.tools.GetAnnotationResponse.prototype.getAnnotation = function(index) {
  return this.get$Value(1, index);
};
speech.tools.BatchGetAnnotationRequest = function() {
  goog.proto2.Message.call(this);
};
goog.inherits(speech.tools.BatchGetAnnotationRequest, goog.proto2.Message);
speech.tools.BatchGetAnnotationRequest.descriptor_ = null;
speech.tools.BatchGetAnnotationResponse = function() {
  goog.proto2.Message.call(this);
};
goog.inherits(speech.tools.BatchGetAnnotationResponse, goog.proto2.Message);
speech.tools.BatchGetAnnotationResponse.descriptor_ = null;
speech.tools.BatchGetAnnotationResponse.prototype.getAnnotation = function(index) {
  return this.get$Value(1, index);
};
speech.tools.GetAnnotationHistoryRequest = function() {
  goog.proto2.Message.call(this);
};
goog.inherits(speech.tools.GetAnnotationHistoryRequest, goog.proto2.Message);
speech.tools.GetAnnotationHistoryRequest.descriptor_ = null;
speech.tools.GetAnnotationHistoryRequest.prototype.setUtteranceId = function(value) {
  this.set$Value(1, value);
};
speech.tools.GetAnnotationHistoryResponse = function() {
  goog.proto2.Message.call(this);
};
goog.inherits(speech.tools.GetAnnotationHistoryResponse, goog.proto2.Message);
speech.tools.GetAnnotationHistoryResponse.descriptor_ = null;
speech.tools.AddAnnotationRequest = function() {
  goog.proto2.Message.call(this);
};
goog.inherits(speech.tools.AddAnnotationRequest, goog.proto2.Message);
speech.tools.AddAnnotationRequest.descriptor_ = null;
speech.tools.AddAnnotationRequest.prototype.getAnnotation = function() {
  return this.get$Value(1);
};
speech.tools.AddAnnotationRequest.prototype.setAnnotation = function(value) {
  this.set$Value(1, value);
};
speech.tools.AddAnnotationStatus = function() {
  goog.proto2.Message.call(this);
};
goog.inherits(speech.tools.AddAnnotationStatus, goog.proto2.Message);
speech.tools.AddAnnotationStatus.descriptor_ = null;
speech.tools.AddAnnotationStatus.prototype.setUtteranceId = function(value) {
  this.set$Value(1, value);
};
speech.tools.AddAnnotationStatus.prototype.getStatus = function() {
  return this.get$Value(2);
};
speech.tools.AddAnnotationResponse = function() {
  goog.proto2.Message.call(this);
};
goog.inherits(speech.tools.AddAnnotationResponse, goog.proto2.Message);
speech.tools.AddAnnotationResponse.descriptor_ = null;
speech.tools.AddAnnotationResponse.prototype.getStatus = function(index) {
  return this.get$Value(1, index);
};
speech.tools.TagKeyMatch = function() {
  goog.proto2.Message.call(this);
};
goog.inherits(speech.tools.TagKeyMatch, goog.proto2.Message);
speech.tools.TagKeyMatch.descriptor_ = null;
speech.tools.TagKeyMatch.prototype.getTag = function() {
  return this.get$Value(1);
};
speech.tools.TagKeyMatch.prototype.setUtteranceId = function(value) {
  this.set$Value(3, value);
};
speech.tools.DeleteAnnotationTagRequest = function() {
  goog.proto2.Message.call(this);
};
goog.inherits(speech.tools.DeleteAnnotationTagRequest, goog.proto2.Message);
speech.tools.DeleteAnnotationTagRequest.descriptor_ = null;
speech.tools.DeleteAnnotationTagResponse = function() {
  goog.proto2.Message.call(this);
};
goog.inherits(speech.tools.DeleteAnnotationTagResponse, goog.proto2.Message);
speech.tools.DeleteAnnotationTagResponse.descriptor_ = null;
speech.tools.BatchAddAnnotationsRequest = function() {
  goog.proto2.Message.call(this);
};
goog.inherits(speech.tools.BatchAddAnnotationsRequest, goog.proto2.Message);
speech.tools.BatchAddAnnotationsRequest.descriptor_ = null;
speech.tools.BatchAddAnnotationsRequest.prototype.getAnnotation = function(index) {
  return this.get$Value(1, index);
};
speech.tools.BatchUpdateAnnotationQualitiesRequest = function() {
  goog.proto2.Message.call(this);
};
goog.inherits(speech.tools.BatchUpdateAnnotationQualitiesRequest, goog.proto2.Message);
speech.tools.BatchUpdateAnnotationQualitiesRequest.descriptor_ = null;
speech.tools.BatchUpdateAnnotationQualitiesResponse = function() {
  goog.proto2.Message.call(this);
};
goog.inherits(speech.tools.BatchUpdateAnnotationQualitiesResponse, goog.proto2.Message);
speech.tools.BatchUpdateAnnotationQualitiesResponse.descriptor_ = null;
speech.tools.GetSessionListRequest = function() {
  goog.proto2.Message.call(this);
};
goog.inherits(speech.tools.GetSessionListRequest, goog.proto2.Message);
speech.tools.GetSessionListRequest.descriptor_ = null;
speech.tools.GetSessionListRequest.prototype.setProjectId = function(value) {
  this.set$Value(1, value);
};
speech.tools.GetSessionListResponse = function() {
  goog.proto2.Message.call(this);
};
goog.inherits(speech.tools.GetSessionListResponse, goog.proto2.Message);
speech.tools.GetSessionListResponse.descriptor_ = null;
speech.tools.GetSessionListResponse.prototype.setProjectId = function(value) {
  this.set$Value(1, value);
};
speech.tools.GetSessionListResponse.SpeakerBasedSession = function() {
  goog.proto2.Message.call(this);
};
goog.inherits(speech.tools.GetSessionListResponse.SpeakerBasedSession, goog.proto2.Message);
speech.tools.GetSessionListResponse.SpeakerBasedSession.descriptor_ = null;
speech.tools.GetSessionListResponse.PromptBasedSession = function() {
  goog.proto2.Message.call(this);
};
goog.inherits(speech.tools.GetSessionListResponse.PromptBasedSession, goog.proto2.Message);
speech.tools.GetSessionListResponse.PromptBasedSession.descriptor_ = null;
speech.tools.GetSessionAnnotationsRequest = function() {
  goog.proto2.Message.call(this);
};
goog.inherits(speech.tools.GetSessionAnnotationsRequest, goog.proto2.Message);
speech.tools.GetSessionAnnotationsRequest.descriptor_ = null;
speech.tools.GetSessionAnnotationsRequest.prototype.setProjectId = function(value) {
  this.set$Value(1, value);
};
speech.tools.GetSessionAnnotationsResponse = function() {
  goog.proto2.Message.call(this);
};
goog.inherits(speech.tools.GetSessionAnnotationsResponse, goog.proto2.Message);
speech.tools.GetSessionAnnotationsResponse.descriptor_ = null;
speech.tools.GetUsersRequest = function() {
  goog.proto2.Message.call(this);
};
goog.inherits(speech.tools.GetUsersRequest, goog.proto2.Message);
speech.tools.GetUsersRequest.descriptor_ = null;
speech.tools.GetUsersRequest.prototype.setProjectId = function(value) {
  this.set$Value(1, value);
};
speech.tools.GetUsersResponse = function() {
  goog.proto2.Message.call(this);
};
goog.inherits(speech.tools.GetUsersResponse, goog.proto2.Message);
speech.tools.GetUsersResponse.descriptor_ = null;
speech.tools.GetUsersResponse.prototype.setProjectId = function(value) {
  this.set$Value(1, value);
};
speech.tools.AddUsersRequest = function() {
  goog.proto2.Message.call(this);
};
goog.inherits(speech.tools.AddUsersRequest, goog.proto2.Message);
speech.tools.AddUsersRequest.descriptor_ = null;
speech.tools.AddUsersRequest.prototype.setProjectId = function(value) {
  this.set$Value(1, value);
};
speech.tools.AddUsersResponse = function() {
  goog.proto2.Message.call(this);
};
goog.inherits(speech.tools.AddUsersResponse, goog.proto2.Message);
speech.tools.AddUsersResponse.descriptor_ = null;
speech.tools.AddUsersResponse.prototype.setProjectId = function(value) {
  this.set$Value(1, value);
};
speech.tools.RemoveUsersRequest = function() {
  goog.proto2.Message.call(this);
};
goog.inherits(speech.tools.RemoveUsersRequest, goog.proto2.Message);
speech.tools.RemoveUsersRequest.descriptor_ = null;
speech.tools.RemoveUsersRequest.prototype.setProjectId = function(value) {
  this.set$Value(1, value);
};
speech.tools.RemoveUsersResponse = function() {
  goog.proto2.Message.call(this);
};
goog.inherits(speech.tools.RemoveUsersResponse, goog.proto2.Message);
speech.tools.RemoveUsersResponse.descriptor_ = null;
speech.tools.RemoveUsersResponse.prototype.setProjectId = function(value) {
  this.set$Value(1, value);
};
speech.tools.UserInfo = function() {
  goog.proto2.Message.call(this);
};
goog.inherits(speech.tools.UserInfo, goog.proto2.Message);
speech.tools.UserInfo.descriptor_ = null;
speech.tools.UserInfo.prototype.getRole = function() {
  return this.get$Value(2);
};
speech.tools.SessionStat = function() {
  goog.proto2.Message.call(this);
};
goog.inherits(speech.tools.SessionStat, goog.proto2.Message);
speech.tools.SessionStat.descriptor_ = null;
speech.tools.EventInfo = function() {
  goog.proto2.Message.call(this);
};
goog.inherits(speech.tools.EventInfo, goog.proto2.Message);
speech.tools.EventInfo.descriptor_ = null;
speech.tools.Transcription = function() {
  goog.proto2.Message.call(this);
};
goog.inherits(speech.tools.Transcription, goog.proto2.Message);
speech.tools.Transcription.descriptor_ = null;
speech.tools.Transcription.prototype.getText = function() {
  return this.get$Value(1);
};
speech.tools.Transcription.prototype.setText = function(value) {
  this.set$Value(1, value);
};
speech.tools.Transcription.prototype.getGuideline = function() {
  return this.get$Value(2);
};
speech.tools.Transcription.prototype.getContext = function() {
  return this.get$Value(5);
};
speech.tools.Transcription.prototype.addCategory = function(value) {
  this.add$Value(6, value);
};
speech.tools.Transcription.prototype.categoryArray = function() {
  return this.array$Values(6);
};
speech.tools.Transcription.prototype.setBatchLabel = function(value) {
  this.set$Value(9, value);
};
speech.tools.AnnotationHeader = function() {
  goog.proto2.Message.call(this);
};
goog.inherits(speech.tools.AnnotationHeader, goog.proto2.Message);
speech.tools.AnnotationHeader.descriptor_ = null;
speech.tools.AnnotationHeader.prototype.setUtteranceId = function(value) {
  this.set$Value(1, value);
};
speech.tools.AnnotationHeader.prototype.setProjectId = function(value) {
  this.set$Value(2, value);
};
speech.tools.AnnotationHeader.prototype.getMachineTranscriptionTextOrDefault = function() {
  return this.get$ValueOrDefault(6);
};
speech.tools.Annotation = function() {
  goog.proto2.Message.call(this);
};
goog.inherits(speech.tools.Annotation, goog.proto2.Message);
speech.tools.Annotation.descriptor_ = null;
speech.tools.Annotation.prototype.setUtteranceId = function(value) {
  this.set$Value(1, value);
};
speech.tools.Annotation.prototype.setProjectId = function(value) {
  this.set$Value(8, value);
};
speech.tools.Annotation.prototype.getMachineTranscriptionTextOrDefault = function() {
  return this.get$ValueOrDefault(12);
};
speech.tools.Annotation.prototype.getTranscription = function(index) {
  return this.get$Value(13, index);
};
speech.tools.Annotation.prototype.addTranscription = function(value) {
  this.add$Value(13, value);
};
speech.tools.Annotation.prototype.transcriptionCount = function() {
  return this.count$Values(13);
};
speech.tools.Annotation.prototype.getTag = function(index) {
  return this.get$Value(18, index);
};
speech.tools.Annotation.ReviewState = {NONE:0, NEW:1, REVIEWED_GOOD:2, REVIEWED_BAD:3};
speech.tools.SourceTagBag = function() {
  goog.proto2.Message.call(this);
};
goog.inherits(speech.tools.SourceTagBag, goog.proto2.Message);
speech.tools.SourceTagBag.descriptor_ = null;
speech.tools.SourceTagBag.prototype.getTag = function(index) {
  return this.get$Value(1, index);
};
speech.tools.AnnotationHistory = function() {
  goog.proto2.Message.call(this);
};
goog.inherits(speech.tools.AnnotationHistory, goog.proto2.Message);
speech.tools.AnnotationHistory.descriptor_ = null;
speech.tools.AnnotationHistory.prototype.getAnnotation = function(index) {
  return this.get$Value(1, index);
};
speech.tools.StSearchRequest.prototype.getDescriptor = function() {
  var descriptor = speech.tools.StSearchRequest.descriptor_;
  if (!descriptor) {
    var descriptorObj = {0:{name:"StSearchRequest", fullName:"speech.tools.StSearchRequest"}, 1:{name:"st_query", fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 2:{name:"max_results", fieldType:goog.proto2.Message.FieldType.INT32, type:Number}, 3:{name:"continuation_token", fieldType:goog.proto2.Message.FieldType.STRING, type:String}};
    speech.tools.StSearchRequest.descriptor_ = descriptor = goog.proto2.Message.createDescriptor(speech.tools.StSearchRequest, descriptorObj);
  }
  return descriptor;
};
speech.tools.StSearchRequest.getDescriptor = speech.tools.StSearchRequest.prototype.getDescriptor;
speech.tools.StSearchResponse.prototype.getDescriptor = function() {
  var descriptor = speech.tools.StSearchResponse.descriptor_;
  if (!descriptor) {
    var descriptorObj = {0:{name:"StSearchResponse", fullName:"speech.tools.StSearchResponse"}, 1:{name:"annotation_header", repeated:!0, fieldType:goog.proto2.Message.FieldType.MESSAGE, type:speech.tools.AnnotationHeader}, 2:{name:"continuation_token", fieldType:goog.proto2.Message.FieldType.STRING, type:String}};
    speech.tools.StSearchResponse.descriptor_ = descriptor = goog.proto2.Message.createDescriptor(speech.tools.StSearchResponse, descriptorObj);
  }
  return descriptor;
};
speech.tools.StSearchResponse.getDescriptor = speech.tools.StSearchResponse.prototype.getDescriptor;
speech.tools.GetAnnotationRequest.prototype.getDescriptor = function() {
  var descriptor = speech.tools.GetAnnotationRequest.descriptor_;
  if (!descriptor) {
    var descriptorObj = {0:{name:"GetAnnotationRequest", fullName:"speech.tools.GetAnnotationRequest"}, 1:{name:"utterance_id", fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 2:{name:"source", repeated:!0, fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 3:{name:"use_source_as_prefix", fieldType:goog.proto2.Message.FieldType.BOOL, defaultValue:!0, type:Boolean}, 4:{name:"include_prefilled_annotations", fieldType:goog.proto2.Message.FieldType.BOOL, type:Boolean}};
    speech.tools.GetAnnotationRequest.descriptor_ = descriptor = goog.proto2.Message.createDescriptor(speech.tools.GetAnnotationRequest, descriptorObj);
  }
  return descriptor;
};
speech.tools.GetAnnotationRequest.getDescriptor = speech.tools.GetAnnotationRequest.prototype.getDescriptor;
speech.tools.GetAnnotationResponse.prototype.getDescriptor = function() {
  var descriptor = speech.tools.GetAnnotationResponse.descriptor_;
  if (!descriptor) {
    var descriptorObj = {0:{name:"GetAnnotationResponse", fullName:"speech.tools.GetAnnotationResponse"}, 1:{name:"annotation", repeated:!0, fieldType:goog.proto2.Message.FieldType.MESSAGE, type:speech.tools.Annotation}};
    speech.tools.GetAnnotationResponse.descriptor_ = descriptor = goog.proto2.Message.createDescriptor(speech.tools.GetAnnotationResponse, descriptorObj);
  }
  return descriptor;
};
speech.tools.GetAnnotationResponse.getDescriptor = speech.tools.GetAnnotationResponse.prototype.getDescriptor;
speech.tools.BatchGetAnnotationRequest.prototype.getDescriptor = function() {
  var descriptor = speech.tools.BatchGetAnnotationRequest.descriptor_;
  if (!descriptor) {
    var descriptorObj = {0:{name:"BatchGetAnnotationRequest", fullName:"speech.tools.BatchGetAnnotationRequest"}, 1:{name:"utterance_id", repeated:!0, fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 2:{name:"source", repeated:!0, fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 3:{name:"use_source_as_prefix", fieldType:goog.proto2.Message.FieldType.BOOL, type:Boolean}, 4:{name:"include_prefilled_annotations", fieldType:goog.proto2.Message.FieldType.BOOL, type:Boolean}};
    speech.tools.BatchGetAnnotationRequest.descriptor_ = descriptor = goog.proto2.Message.createDescriptor(speech.tools.BatchGetAnnotationRequest, descriptorObj);
  }
  return descriptor;
};
speech.tools.BatchGetAnnotationRequest.getDescriptor = speech.tools.BatchGetAnnotationRequest.prototype.getDescriptor;
speech.tools.BatchGetAnnotationResponse.prototype.getDescriptor = function() {
  var descriptor = speech.tools.BatchGetAnnotationResponse.descriptor_;
  if (!descriptor) {
    var descriptorObj = {0:{name:"BatchGetAnnotationResponse", fullName:"speech.tools.BatchGetAnnotationResponse"}, 1:{name:"annotation", repeated:!0, fieldType:goog.proto2.Message.FieldType.MESSAGE, type:speech.tools.Annotation}, 2:{name:"failed_utterance_id", repeated:!0, fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 3:{name:"failed_utterance_message", repeated:!0, fieldType:goog.proto2.Message.FieldType.STRING, type:String}};
    speech.tools.BatchGetAnnotationResponse.descriptor_ = descriptor = goog.proto2.Message.createDescriptor(speech.tools.BatchGetAnnotationResponse, descriptorObj);
  }
  return descriptor;
};
speech.tools.BatchGetAnnotationResponse.getDescriptor = speech.tools.BatchGetAnnotationResponse.prototype.getDescriptor;
speech.tools.GetAnnotationHistoryRequest.prototype.getDescriptor = function() {
  var descriptor = speech.tools.GetAnnotationHistoryRequest.descriptor_;
  if (!descriptor) {
    var descriptorObj = {0:{name:"GetAnnotationHistoryRequest", fullName:"speech.tools.GetAnnotationHistoryRequest"}, 1:{name:"utterance_id", fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 2:{name:"source", repeated:!0, fieldType:goog.proto2.Message.FieldType.STRING, type:String}};
    speech.tools.GetAnnotationHistoryRequest.descriptor_ = descriptor = goog.proto2.Message.createDescriptor(speech.tools.GetAnnotationHistoryRequest, descriptorObj);
  }
  return descriptor;
};
speech.tools.GetAnnotationHistoryRequest.getDescriptor = speech.tools.GetAnnotationHistoryRequest.prototype.getDescriptor;
speech.tools.GetAnnotationHistoryResponse.prototype.getDescriptor = function() {
  var descriptor = speech.tools.GetAnnotationHistoryResponse.descriptor_;
  if (!descriptor) {
    var descriptorObj = {0:{name:"GetAnnotationHistoryResponse", fullName:"speech.tools.GetAnnotationHistoryResponse"}, 1:{name:"history", fieldType:goog.proto2.Message.FieldType.MESSAGE, type:speech.tools.AnnotationHistory}};
    speech.tools.GetAnnotationHistoryResponse.descriptor_ = descriptor = goog.proto2.Message.createDescriptor(speech.tools.GetAnnotationHistoryResponse, descriptorObj);
  }
  return descriptor;
};
speech.tools.GetAnnotationHistoryResponse.getDescriptor = speech.tools.GetAnnotationHistoryResponse.prototype.getDescriptor;
speech.tools.AddAnnotationRequest.prototype.getDescriptor = function() {
  var descriptor = speech.tools.AddAnnotationRequest.descriptor_;
  if (!descriptor) {
    var descriptorObj = {0:{name:"AddAnnotationRequest", fullName:"speech.tools.AddAnnotationRequest"}, 1:{name:"annotation", fieldType:goog.proto2.Message.FieldType.MESSAGE, type:speech.tools.Annotation}, 2:{name:"overwrite_existing", fieldType:goog.proto2.Message.FieldType.BOOL, defaultValue:!1, type:Boolean}, 3:{name:"source", fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 4:{name:"skip_utt_deletion_check", fieldType:goog.proto2.Message.FieldType.BOOL, type:Boolean}};
    speech.tools.AddAnnotationRequest.descriptor_ = descriptor = goog.proto2.Message.createDescriptor(speech.tools.AddAnnotationRequest, descriptorObj);
  }
  return descriptor;
};
speech.tools.AddAnnotationRequest.getDescriptor = speech.tools.AddAnnotationRequest.prototype.getDescriptor;
speech.tools.AddAnnotationStatus.prototype.getDescriptor = function() {
  var descriptor = speech.tools.AddAnnotationStatus.descriptor_;
  if (!descriptor) {
    var descriptorObj = {0:{name:"AddAnnotationStatus", fullName:"speech.tools.AddAnnotationStatus"}, 1:{name:"utterance_id", fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 2:{name:"status", fieldType:goog.proto2.Message.FieldType.MESSAGE, type:com.google.net.util.StatusProto}};
    speech.tools.AddAnnotationStatus.descriptor_ = descriptor = goog.proto2.Message.createDescriptor(speech.tools.AddAnnotationStatus, descriptorObj);
  }
  return descriptor;
};
speech.tools.AddAnnotationStatus.getDescriptor = speech.tools.AddAnnotationStatus.prototype.getDescriptor;
speech.tools.AddAnnotationResponse.prototype.getDescriptor = function() {
  var descriptor = speech.tools.AddAnnotationResponse.descriptor_;
  if (!descriptor) {
    var descriptorObj = {0:{name:"AddAnnotationResponse", fullName:"speech.tools.AddAnnotationResponse"}, 1:{name:"status", repeated:!0, fieldType:goog.proto2.Message.FieldType.MESSAGE, type:speech.tools.AddAnnotationStatus}};
    speech.tools.AddAnnotationResponse.descriptor_ = descriptor = goog.proto2.Message.createDescriptor(speech.tools.AddAnnotationResponse, descriptorObj);
  }
  return descriptor;
};
speech.tools.AddAnnotationResponse.getDescriptor = speech.tools.AddAnnotationResponse.prototype.getDescriptor;
speech.tools.TagKeyMatch.prototype.getDescriptor = function() {
  var descriptor = speech.tools.TagKeyMatch.descriptor_;
  if (!descriptor) {
    var descriptorObj = {0:{name:"TagKeyMatch", fullName:"speech.tools.TagKeyMatch"}, 1:{name:"tag", fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 3:{name:"utterance_id", fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 4:{name:"source", fieldType:goog.proto2.Message.FieldType.STRING, type:String}};
    speech.tools.TagKeyMatch.descriptor_ = descriptor = goog.proto2.Message.createDescriptor(speech.tools.TagKeyMatch, descriptorObj);
  }
  return descriptor;
};
speech.tools.TagKeyMatch.getDescriptor = speech.tools.TagKeyMatch.prototype.getDescriptor;
speech.tools.DeleteAnnotationTagRequest.prototype.getDescriptor = function() {
  var descriptor = speech.tools.DeleteAnnotationTagRequest.descriptor_;
  if (!descriptor) {
    var descriptorObj = {0:{name:"DeleteAnnotationTagRequest", fullName:"speech.tools.DeleteAnnotationTagRequest"}, 1:{name:"tag_to_remove", repeated:!0, fieldType:goog.proto2.Message.FieldType.MESSAGE, type:speech.tools.TagKeyMatch}, 5:{name:"permanent_delete", fieldType:goog.proto2.Message.FieldType.BOOL, type:Boolean}};
    speech.tools.DeleteAnnotationTagRequest.descriptor_ = descriptor = goog.proto2.Message.createDescriptor(speech.tools.DeleteAnnotationTagRequest, descriptorObj);
  }
  return descriptor;
};
speech.tools.DeleteAnnotationTagRequest.getDescriptor = speech.tools.DeleteAnnotationTagRequest.prototype.getDescriptor;
speech.tools.DeleteAnnotationTagResponse.prototype.getDescriptor = function() {
  var descriptor = speech.tools.DeleteAnnotationTagResponse.descriptor_;
  if (!descriptor) {
    var descriptorObj = {0:{name:"DeleteAnnotationTagResponse", fullName:"speech.tools.DeleteAnnotationTagResponse"}};
    speech.tools.DeleteAnnotationTagResponse.descriptor_ = descriptor = goog.proto2.Message.createDescriptor(speech.tools.DeleteAnnotationTagResponse, descriptorObj);
  }
  return descriptor;
};
speech.tools.DeleteAnnotationTagResponse.getDescriptor = speech.tools.DeleteAnnotationTagResponse.prototype.getDescriptor;
speech.tools.BatchAddAnnotationsRequest.prototype.getDescriptor = function() {
  var descriptor = speech.tools.BatchAddAnnotationsRequest.descriptor_;
  if (!descriptor) {
    var descriptorObj = {0:{name:"BatchAddAnnotationsRequest", fullName:"speech.tools.BatchAddAnnotationsRequest"}, 1:{name:"annotation", repeated:!0, fieldType:goog.proto2.Message.FieldType.MESSAGE, type:speech.tools.Annotation}, 2:{name:"overwrite_existing", fieldType:goog.proto2.Message.FieldType.BOOL, type:Boolean}, 3:{name:"source", fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 4:{name:"skip_utt_deletion_check", fieldType:goog.proto2.Message.FieldType.BOOL, type:Boolean}, 5:{name:"return_substatus", 
    fieldType:goog.proto2.Message.FieldType.BOOL, type:Boolean}};
    speech.tools.BatchAddAnnotationsRequest.descriptor_ = descriptor = goog.proto2.Message.createDescriptor(speech.tools.BatchAddAnnotationsRequest, descriptorObj);
  }
  return descriptor;
};
speech.tools.BatchAddAnnotationsRequest.getDescriptor = speech.tools.BatchAddAnnotationsRequest.prototype.getDescriptor;
speech.tools.BatchUpdateAnnotationQualitiesRequest.prototype.getDescriptor = function() {
  var descriptor = speech.tools.BatchUpdateAnnotationQualitiesRequest.descriptor_;
  if (!descriptor) {
    var descriptorObj = {0:{name:"BatchUpdateAnnotationQualitiesRequest", fullName:"speech.tools.BatchUpdateAnnotationQualitiesRequest"}, 1:{name:"utterance_id", repeated:!0, fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 2:{name:"quality", fieldType:goog.proto2.Message.FieldType.ENUM, defaultValue:speech.tools.Annotation.ReviewState.NONE, type:speech.tools.Annotation.ReviewState}};
    speech.tools.BatchUpdateAnnotationQualitiesRequest.descriptor_ = descriptor = goog.proto2.Message.createDescriptor(speech.tools.BatchUpdateAnnotationQualitiesRequest, descriptorObj);
  }
  return descriptor;
};
speech.tools.BatchUpdateAnnotationQualitiesRequest.getDescriptor = speech.tools.BatchUpdateAnnotationQualitiesRequest.prototype.getDescriptor;
speech.tools.BatchUpdateAnnotationQualitiesResponse.prototype.getDescriptor = function() {
  var descriptor = speech.tools.BatchUpdateAnnotationQualitiesResponse.descriptor_;
  if (!descriptor) {
    var descriptorObj = {0:{name:"BatchUpdateAnnotationQualitiesResponse", fullName:"speech.tools.BatchUpdateAnnotationQualitiesResponse"}, 1:{name:"utterance_id", repeated:!0, fieldType:goog.proto2.Message.FieldType.STRING, type:String}};
    speech.tools.BatchUpdateAnnotationQualitiesResponse.descriptor_ = descriptor = goog.proto2.Message.createDescriptor(speech.tools.BatchUpdateAnnotationQualitiesResponse, descriptorObj);
  }
  return descriptor;
};
speech.tools.BatchUpdateAnnotationQualitiesResponse.getDescriptor = speech.tools.BatchUpdateAnnotationQualitiesResponse.prototype.getDescriptor;
speech.tools.GetSessionListRequest.prototype.getDescriptor = function() {
  var descriptor = speech.tools.GetSessionListRequest.descriptor_;
  if (!descriptor) {
    var descriptorObj = {0:{name:"GetSessionListRequest", fullName:"speech.tools.GetSessionListRequest"}, 1:{name:"project_id", fieldType:goog.proto2.Message.FieldType.STRING, type:String}};
    speech.tools.GetSessionListRequest.descriptor_ = descriptor = goog.proto2.Message.createDescriptor(speech.tools.GetSessionListRequest, descriptorObj);
  }
  return descriptor;
};
speech.tools.GetSessionListRequest.getDescriptor = speech.tools.GetSessionListRequest.prototype.getDescriptor;
speech.tools.GetSessionListResponse.prototype.getDescriptor = function() {
  var descriptor = speech.tools.GetSessionListResponse.descriptor_;
  if (!descriptor) {
    var descriptorObj = {0:{name:"GetSessionListResponse", fullName:"speech.tools.GetSessionListResponse"}, 1:{name:"project_id", fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 2:{name:"speaker_session", repeated:!0, fieldType:goog.proto2.Message.FieldType.MESSAGE, type:speech.tools.GetSessionListResponse.SpeakerBasedSession}, 3:{name:"prompt_session", repeated:!0, fieldType:goog.proto2.Message.FieldType.MESSAGE, type:speech.tools.GetSessionListResponse.PromptBasedSession}};
    speech.tools.GetSessionListResponse.descriptor_ = descriptor = goog.proto2.Message.createDescriptor(speech.tools.GetSessionListResponse, descriptorObj);
  }
  return descriptor;
};
speech.tools.GetSessionListResponse.getDescriptor = speech.tools.GetSessionListResponse.prototype.getDescriptor;
speech.tools.GetSessionListResponse.SpeakerBasedSession.prototype.getDescriptor = function() {
  var descriptor = speech.tools.GetSessionListResponse.SpeakerBasedSession.descriptor_;
  if (!descriptor) {
    var descriptorObj = {0:{name:"SpeakerBasedSession", containingType:speech.tools.GetSessionListResponse, fullName:"speech.tools.GetSessionListResponse.SpeakerBasedSession"}, 1:{name:"speaker_id", fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 2:{name:"stat", fieldType:goog.proto2.Message.FieldType.MESSAGE, type:speech.tools.SessionStat}};
    speech.tools.GetSessionListResponse.SpeakerBasedSession.descriptor_ = descriptor = goog.proto2.Message.createDescriptor(speech.tools.GetSessionListResponse.SpeakerBasedSession, descriptorObj);
  }
  return descriptor;
};
speech.tools.GetSessionListResponse.SpeakerBasedSession.getDescriptor = speech.tools.GetSessionListResponse.SpeakerBasedSession.prototype.getDescriptor;
speech.tools.GetSessionListResponse.PromptBasedSession.prototype.getDescriptor = function() {
  var descriptor = speech.tools.GetSessionListResponse.PromptBasedSession.descriptor_;
  if (!descriptor) {
    var descriptorObj = {0:{name:"PromptBasedSession", containingType:speech.tools.GetSessionListResponse, fullName:"speech.tools.GetSessionListResponse.PromptBasedSession"}, 1:{name:"prompt_text", fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 2:{name:"stat", fieldType:goog.proto2.Message.FieldType.MESSAGE, type:speech.tools.SessionStat}};
    speech.tools.GetSessionListResponse.PromptBasedSession.descriptor_ = descriptor = goog.proto2.Message.createDescriptor(speech.tools.GetSessionListResponse.PromptBasedSession, descriptorObj);
  }
  return descriptor;
};
speech.tools.GetSessionListResponse.PromptBasedSession.getDescriptor = speech.tools.GetSessionListResponse.PromptBasedSession.prototype.getDescriptor;
speech.tools.GetSessionAnnotationsRequest.prototype.getDescriptor = function() {
  var descriptor = speech.tools.GetSessionAnnotationsRequest.descriptor_;
  if (!descriptor) {
    var descriptorObj = {0:{name:"GetSessionAnnotationsRequest", fullName:"speech.tools.GetSessionAnnotationsRequest"}, 1:{name:"project_id", fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 2:{name:"speaker_id", fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 3:{name:"prompt_text", fieldType:goog.proto2.Message.FieldType.STRING, type:String}};
    speech.tools.GetSessionAnnotationsRequest.descriptor_ = descriptor = goog.proto2.Message.createDescriptor(speech.tools.GetSessionAnnotationsRequest, descriptorObj);
  }
  return descriptor;
};
speech.tools.GetSessionAnnotationsRequest.getDescriptor = speech.tools.GetSessionAnnotationsRequest.prototype.getDescriptor;
speech.tools.GetSessionAnnotationsResponse.prototype.getDescriptor = function() {
  var descriptor = speech.tools.GetSessionAnnotationsResponse.descriptor_;
  if (!descriptor) {
    var descriptorObj = {0:{name:"GetSessionAnnotationsResponse", fullName:"speech.tools.GetSessionAnnotationsResponse"}, 1:{name:"annotation_header", repeated:!0, fieldType:goog.proto2.Message.FieldType.MESSAGE, type:speech.tools.AnnotationHeader}};
    speech.tools.GetSessionAnnotationsResponse.descriptor_ = descriptor = goog.proto2.Message.createDescriptor(speech.tools.GetSessionAnnotationsResponse, descriptorObj);
  }
  return descriptor;
};
speech.tools.GetSessionAnnotationsResponse.getDescriptor = speech.tools.GetSessionAnnotationsResponse.prototype.getDescriptor;
speech.tools.GetUsersRequest.prototype.getDescriptor = function() {
  var descriptor = speech.tools.GetUsersRequest.descriptor_;
  if (!descriptor) {
    var descriptorObj = {0:{name:"GetUsersRequest", fullName:"speech.tools.GetUsersRequest"}, 1:{name:"project_id", fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 2:{name:"zookie", fieldType:goog.proto2.Message.FieldType.BYTES, type:String}};
    speech.tools.GetUsersRequest.descriptor_ = descriptor = goog.proto2.Message.createDescriptor(speech.tools.GetUsersRequest, descriptorObj);
  }
  return descriptor;
};
speech.tools.GetUsersRequest.getDescriptor = speech.tools.GetUsersRequest.prototype.getDescriptor;
speech.tools.GetUsersResponse.prototype.getDescriptor = function() {
  var descriptor = speech.tools.GetUsersResponse.descriptor_;
  if (!descriptor) {
    var descriptorObj = {0:{name:"GetUsersResponse", fullName:"speech.tools.GetUsersResponse"}, 1:{name:"project_id", fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 2:{name:"user", repeated:!0, fieldType:goog.proto2.Message.FieldType.MESSAGE, type:speech.tools.UserInfo}, 3:{name:"zookie", fieldType:goog.proto2.Message.FieldType.BYTES, type:String}};
    speech.tools.GetUsersResponse.descriptor_ = descriptor = goog.proto2.Message.createDescriptor(speech.tools.GetUsersResponse, descriptorObj);
  }
  return descriptor;
};
speech.tools.GetUsersResponse.getDescriptor = speech.tools.GetUsersResponse.prototype.getDescriptor;
speech.tools.AddUsersRequest.prototype.getDescriptor = function() {
  var descriptor = speech.tools.AddUsersRequest.descriptor_;
  if (!descriptor) {
    var descriptorObj = {0:{name:"AddUsersRequest", fullName:"speech.tools.AddUsersRequest"}, 1:{name:"project_id", fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 2:{name:"user", repeated:!0, fieldType:goog.proto2.Message.FieldType.MESSAGE, type:speech.tools.UserInfo}};
    speech.tools.AddUsersRequest.descriptor_ = descriptor = goog.proto2.Message.createDescriptor(speech.tools.AddUsersRequest, descriptorObj);
  }
  return descriptor;
};
speech.tools.AddUsersRequest.getDescriptor = speech.tools.AddUsersRequest.prototype.getDescriptor;
speech.tools.AddUsersResponse.prototype.getDescriptor = function() {
  var descriptor = speech.tools.AddUsersResponse.descriptor_;
  if (!descriptor) {
    var descriptorObj = {0:{name:"AddUsersResponse", fullName:"speech.tools.AddUsersResponse"}, 1:{name:"project_id", fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 3:{name:"zookie", fieldType:goog.proto2.Message.FieldType.BYTES, type:String}};
    speech.tools.AddUsersResponse.descriptor_ = descriptor = goog.proto2.Message.createDescriptor(speech.tools.AddUsersResponse, descriptorObj);
  }
  return descriptor;
};
speech.tools.AddUsersResponse.getDescriptor = speech.tools.AddUsersResponse.prototype.getDescriptor;
speech.tools.RemoveUsersRequest.prototype.getDescriptor = function() {
  var descriptor = speech.tools.RemoveUsersRequest.descriptor_;
  if (!descriptor) {
    var descriptorObj = {0:{name:"RemoveUsersRequest", fullName:"speech.tools.RemoveUsersRequest"}, 1:{name:"project_id", fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 2:{name:"user", repeated:!0, fieldType:goog.proto2.Message.FieldType.MESSAGE, type:speech.tools.UserInfo}};
    speech.tools.RemoveUsersRequest.descriptor_ = descriptor = goog.proto2.Message.createDescriptor(speech.tools.RemoveUsersRequest, descriptorObj);
  }
  return descriptor;
};
speech.tools.RemoveUsersRequest.getDescriptor = speech.tools.RemoveUsersRequest.prototype.getDescriptor;
speech.tools.RemoveUsersResponse.prototype.getDescriptor = function() {
  var descriptor = speech.tools.RemoveUsersResponse.descriptor_;
  if (!descriptor) {
    var descriptorObj = {0:{name:"RemoveUsersResponse", fullName:"speech.tools.RemoveUsersResponse"}, 1:{name:"project_id", fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 3:{name:"zookie", fieldType:goog.proto2.Message.FieldType.BYTES, type:String}};
    speech.tools.RemoveUsersResponse.descriptor_ = descriptor = goog.proto2.Message.createDescriptor(speech.tools.RemoveUsersResponse, descriptorObj);
  }
  return descriptor;
};
speech.tools.RemoveUsersResponse.getDescriptor = speech.tools.RemoveUsersResponse.prototype.getDescriptor;
speech.tools.UserInfo.prototype.getDescriptor = function() {
  var descriptor = speech.tools.UserInfo.descriptor_;
  if (!descriptor) {
    var descriptorObj = {0:{name:"UserInfo", fullName:"speech.tools.UserInfo"}, 1:{name:"gaia_email", fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 2:{name:"role", fieldType:goog.proto2.Message.FieldType.INT32, type:Number}};
    speech.tools.UserInfo.descriptor_ = descriptor = goog.proto2.Message.createDescriptor(speech.tools.UserInfo, descriptorObj);
  }
  return descriptor;
};
speech.tools.UserInfo.getDescriptor = speech.tools.UserInfo.prototype.getDescriptor;
speech.tools.SessionStat.prototype.getDescriptor = function() {
  var descriptor = speech.tools.SessionStat.descriptor_;
  if (!descriptor) {
    var descriptorObj = {0:{name:"SessionStat", fullName:"speech.tools.SessionStat"}, 1:{name:"annotation_size", fieldType:goog.proto2.Message.FieldType.INT64, type:String}, 2:{name:"collection_info", fieldType:goog.proto2.Message.FieldType.MESSAGE, type:speech.tools.EventInfo}, 3:{name:"new_annotation_size", fieldType:goog.proto2.Message.FieldType.INT64, type:String}, 4:{name:"good_annotation_size", fieldType:goog.proto2.Message.FieldType.INT64, type:String}, 5:{name:"bad_annotation_size", fieldType:goog.proto2.Message.FieldType.INT64, 
    type:String}};
    speech.tools.SessionStat.descriptor_ = descriptor = goog.proto2.Message.createDescriptor(speech.tools.SessionStat, descriptorObj);
  }
  return descriptor;
};
speech.tools.SessionStat.getDescriptor = speech.tools.SessionStat.prototype.getDescriptor;
speech.tools.EventInfo.prototype.getDescriptor = function() {
  var descriptor = speech.tools.EventInfo.descriptor_;
  if (!descriptor) {
    var descriptorObj = {0:{name:"EventInfo", fullName:"speech.tools.EventInfo"}, 1:{name:"time_utc", fieldType:goog.proto2.Message.FieldType.INT64, type:String}, 2:{name:"user", fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 3:{name:"user_group", fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 4:{name:"application_id", fieldType:goog.proto2.Message.FieldType.STRING, type:String}};
    speech.tools.EventInfo.descriptor_ = descriptor = goog.proto2.Message.createDescriptor(speech.tools.EventInfo, descriptorObj);
  }
  return descriptor;
};
speech.tools.EventInfo.getDescriptor = speech.tools.EventInfo.prototype.getDescriptor;
speech.tools.Transcription.prototype.getDescriptor = function() {
  var descriptor = speech.tools.Transcription.descriptor_;
  if (!descriptor) {
    var descriptorObj = {0:{name:"Transcription", fullName:"speech.tools.Transcription"}, 1:{name:"text", fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 2:{name:"guideline", fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 3:{name:"creation_info", fieldType:goog.proto2.Message.FieldType.MESSAGE, type:speech.tools.EventInfo}, 4:{name:"time_range_annotation", repeated:!0, fieldType:goog.proto2.Message.FieldType.MESSAGE, type:speech.tools.proto.TimeRangeAnnotation}, 5:{name:"context", 
    fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 6:{name:"category", repeated:!0, fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 7:{name:"output_category", repeated:!0, fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 8:{name:"suggested_text", fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 9:{name:"batch_label", fieldType:goog.proto2.Message.FieldType.STRING, type:String}};
    speech.tools.Transcription.descriptor_ = descriptor = goog.proto2.Message.createDescriptor(speech.tools.Transcription, descriptorObj);
  }
  return descriptor;
};
speech.tools.Transcription.getDescriptor = speech.tools.Transcription.prototype.getDescriptor;
speech.tools.AnnotationHeader.prototype.getDescriptor = function() {
  var descriptor = speech.tools.AnnotationHeader.descriptor_;
  if (!descriptor) {
    var descriptorObj = {0:{name:"AnnotationHeader", fullName:"speech.tools.AnnotationHeader"}, 1:{name:"utterance_id", fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 2:{name:"project_id", fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 3:{name:"quality", fieldType:goog.proto2.Message.FieldType.ENUM, defaultValue:speech.tools.Annotation.ReviewState.NONE, type:speech.tools.Annotation.ReviewState}, 4:{name:"speaker_id", fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 
    5:{name:"prompt_text", fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 6:{name:"machine_transcription_text", fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 7:{name:"source", fieldType:goog.proto2.Message.FieldType.STRING, type:String}};
    speech.tools.AnnotationHeader.descriptor_ = descriptor = goog.proto2.Message.createDescriptor(speech.tools.AnnotationHeader, descriptorObj);
  }
  return descriptor;
};
speech.tools.AnnotationHeader.getDescriptor = speech.tools.AnnotationHeader.prototype.getDescriptor;
speech.tools.Annotation.prototype.getDescriptor = function() {
  var descriptor = speech.tools.Annotation.descriptor_;
  if (!descriptor) {
    var descriptorObj = {0:{name:"Annotation", fullName:"speech.tools.Annotation"}, 1:{name:"utterance_id", fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 17:{name:"source", fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 2:{name:"creation_info", fieldType:goog.proto2.Message.FieldType.MESSAGE, type:speech.tools.EventInfo}, 3:{name:"collection_info", fieldType:goog.proto2.Message.FieldType.MESSAGE, type:speech.tools.EventInfo}, 4:{name:"expiration_time_utc", fieldType:goog.proto2.Message.FieldType.INT64, 
    type:String}, 5:{name:"modification_info", fieldType:goog.proto2.Message.FieldType.MESSAGE, type:speech.tools.EventInfo}, 6:{name:"locale", fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 7:{name:"recording_length", fieldType:goog.proto2.Message.FieldType.INT32, type:Number}, 8:{name:"project_id", fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 9:{name:"speaker_id", fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 10:{name:"quality", fieldType:goog.proto2.Message.FieldType.ENUM, 
    defaultValue:speech.tools.Annotation.ReviewState.NONE, type:speech.tools.Annotation.ReviewState}, 11:{name:"prompt_text", fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 12:{name:"machine_transcription_text", fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 13:{name:"transcription", repeated:!0, fieldType:goog.proto2.Message.FieldType.MESSAGE, type:speech.tools.Transcription}, 14:{name:"comment", fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 15:{name:"perapera_item_key", 
    fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 22:{name:"unsupervised_metadata", fieldType:goog.proto2.Message.FieldType.MESSAGE, type:speech.unsupervised.Metadata}, 18:{name:"tag", repeated:!0, fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 19:{name:"deleted_tag", repeated:!0, fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 20:{name:"tag_with_source", repeated:!0, fieldType:goog.proto2.Message.FieldType.MESSAGE, type:speech.tools.SourceTagBag}};
    speech.tools.Annotation.descriptor_ = descriptor = goog.proto2.Message.createDescriptor(speech.tools.Annotation, descriptorObj);
  }
  return descriptor;
};
speech.tools.Annotation.getDescriptor = speech.tools.Annotation.prototype.getDescriptor;
speech.tools.SourceTagBag.prototype.getDescriptor = function() {
  var descriptor = speech.tools.SourceTagBag.descriptor_;
  if (!descriptor) {
    var descriptorObj = {0:{name:"SourceTagBag", fullName:"speech.tools.SourceTagBag"}, 1:{name:"tag", repeated:!0, fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 2:{name:"source", fieldType:goog.proto2.Message.FieldType.STRING, type:String}};
    speech.tools.SourceTagBag.descriptor_ = descriptor = goog.proto2.Message.createDescriptor(speech.tools.SourceTagBag, descriptorObj);
  }
  return descriptor;
};
speech.tools.SourceTagBag.getDescriptor = speech.tools.SourceTagBag.prototype.getDescriptor;
speech.tools.AnnotationHistory.prototype.getDescriptor = function() {
  var descriptor = speech.tools.AnnotationHistory.descriptor_;
  if (!descriptor) {
    var descriptorObj = {0:{name:"AnnotationHistory", fullName:"speech.tools.AnnotationHistory"}, 1:{name:"annotation", repeated:!0, fieldType:goog.proto2.Message.FieldType.MESSAGE, type:speech.tools.Annotation}};
    speech.tools.AnnotationHistory.descriptor_ = descriptor = goog.proto2.Message.createDescriptor(speech.tools.AnnotationHistory, descriptorObj);
  }
  return descriptor;
};
speech.tools.AnnotationHistory.getDescriptor = speech.tools.AnnotationHistory.prototype.getDescriptor;
speech.crowdcompute = {};
speech.crowdcompute.Api = function() {
  this.pb_ = new goog.proto2.ObjectSerializer(goog.proto2.ObjectSerializer.KeyOption.NAME);
  this.useSpudsQ32017_ = !1;
  this.notifyRetry_ = function() {
  };
};
goog.exportSymbol("speech.crowdcompute.Api", speech.crowdcompute.Api);
speech.crowdcompute.Api.BASE_URL_ = "https://speech.google.com/annotation/";
speech.crowdcompute.Api.TRANSANNO_URL_ = speech.crowdcompute.Api.BASE_URL_ + "v2/api/transanno";
speech.crowdcompute.Api.TRANSVAL_URL_ = speech.crowdcompute.Api.BASE_URL_ + "v2/api/transval";
speech.crowdcompute.Api.STATS_URL_ = speech.crowdcompute.Api.BASE_URL_ + "v2/api/stats";
speech.crowdcompute.Api.CONFIG_URL_ = speech.crowdcompute.Api.BASE_URL_ + "v2/api/config";
speech.crowdcompute.Api.XSSI_PREFIX = ")]}',\n";
speech.crowdcompute.Api.GAIA_DELETED_ERROR_MSG_ = "Gaia user account has been deleted";
speech.crowdcompute.Api.XHR_TIMEOUT_MS_ = 15000;
speech.crowdcompute.Api.MAX_RETRIES_ = 2;
speech.crowdcompute.ApiError = function() {
};
speech.crowdcompute.AudioResponse = function() {
};
speech.crowdcompute.Api.prototype.loadConfig = function(configId) {
  return this.sendJsonXhr_(speech.crowdcompute.Api.CONFIG_URL_, {config_id:configId}).then(function(resp) {
    var config = new speech.tools.crowd_compute.ConfigEntry;
    this.pb_.deserializeTo(config, resp);
    return config;
  }.bind(this));
};
goog.exportProperty(speech.crowdcompute.Api.prototype, "loadConfig", speech.crowdcompute.Api.prototype.loadConfig);
speech.crowdcompute.Api.prototype.setUseSpudsQ32017 = function(value) {
  this.useSpudsQ32017_ = value;
};
goog.exportProperty(speech.crowdcompute.Api.prototype, "setUseSpudsQ32017", speech.crowdcompute.Api.prototype.setUseSpudsQ32017);
speech.crowdcompute.Api.prototype.loadAudio = function(url) {
  var $jscomp$this = this;
  return this.callWithRetries_(function() {
    return $jscomp$this.loadAudioOnce_(url);
  });
};
goog.exportProperty(speech.crowdcompute.Api.prototype, "loadAudio", speech.crowdcompute.Api.prototype.loadAudio);
speech.crowdcompute.Api.prototype.loadAudioOnce_ = function(url) {
  var $jscomp$this = this;
  var promise = new Promise(function(resolve, reject) {
    var xhr = new goog.net.XhrIo;
    xhr.setResponseType(goog.net.XhrIo.ResponseType.ARRAY_BUFFER);
    xhr.setWithCredentials(!0);
    xhr.send(url);
    goog.events.listenOnce(xhr, goog.net.EventType.SUCCESS, function() {
      var audioArrayBuffer = xhr.getResponse();
      var preambleLengthHeader = xhr.getResponseHeader("Audio-Preamble-Length-Second") || "0.0";
      var preambleLength = parseFloat(preambleLengthHeader) || 0.0;
      resolve({data:audioArrayBuffer, preambleLength:preambleLength});
    });
    goog.events.listenOnce(xhr, goog.net.EventType.ERROR, function() {
      reject({code:xhr.getStatus(), details:$jscomp$this.getXhrErrorDetails(xhr)});
    });
  });
  return promise;
};
speech.crowdcompute.Api.prototype.getAnnotation = function(utteranceId, projectId, workerEmail) {
  return this.sendJsonXhr_(speech.crowdcompute.Api.TRANSANNO_URL_, {uttid:utteranceId, projectid:projectId, worker:workerEmail, use_spuds:this.useSpudsQ32017_}, "GET").then(function(resp) {
    var annotation = new speech.tools.Annotation;
    this.pb_.deserializeTo(annotation, resp);
    return annotation;
  }.bind(this));
};
goog.exportProperty(speech.crowdcompute.Api.prototype, "getAnnotation", speech.crowdcompute.Api.prototype.getAnnotation);
speech.crowdcompute.Api.prototype.setAnnotation = function(utteranceId, projectId, workerEmail, annotation) {
  var postBody = JSON.stringify(this.pb_.serialize(annotation));
  return this.sendJsonXhr_(speech.crowdcompute.Api.TRANSANNO_URL_, {uttid:utteranceId, projectid:projectId, worker:workerEmail, use_spuds:this.useSpudsQ32017_}, "POST", postBody, {"Content-Type":"text/plain"}).then(function() {
    return Promise.resolve();
  });
};
goog.exportProperty(speech.crowdcompute.Api.prototype, "setAnnotation", speech.crowdcompute.Api.prototype.setAnnotation);
speech.crowdcompute.Api.prototype.validateTranscription = function(transcription, locale, guidelineUrl) {
  var postBody = JSON.stringify({transcription:transcription, locale:locale, client_data:guidelineUrl});
  return this.sendJsonXhr_(speech.crowdcompute.Api.TRANSVAL_URL_, {}, "POST", postBody, {"Content-Type":"text/plain"}).then(function(resp) {
    var validationResponse = new speech.TransValResponse;
    this.pb_.deserializeTo(validationResponse, resp);
    return validationResponse.errorArray() || [];
  }.bind(this));
};
goog.exportProperty(speech.crowdcompute.Api.prototype, "validateTranscription", speech.crowdcompute.Api.prototype.validateTranscription);
speech.crowdcompute.Api.prototype.collectStats = function(logEntry) {
  var postBody = JSON.stringify(this.pb_.serialize(logEntry));
  return this.sendJsonXhr_(speech.crowdcompute.Api.STATS_URL_, {}, "POST", postBody, {"Content-Type":"text/plain"}).then(function() {
    return Promise.resolve();
  });
};
speech.crowdcompute.Api.prototype.sendJsonXhr_ = function(url, params, opt_method, opt_content, opt_headers) {
  var $jscomp$this = this;
  return this.callWithRetries_(function() {
    return $jscomp$this.sendJsonXhrOnce_(url, params, opt_method, opt_content, opt_headers);
  });
};
speech.crowdcompute.Api.prototype.sendJsonXhrOnce_ = function(url, params, opt_method, opt_content, opt_headers) {
  var uri = goog.Uri.parse(url);
  uri.setQueryData(goog.Uri.QueryData.createFromMap(params));
  return new Promise(function(resolve, reject) {
    goog.net.XhrIo.send(uri, function(evt) {
      var xhr = evt.target;
      if (xhr.isSuccess()) {
        xhr.getStatus() == goog.net.HttpStatus.NO_CONTENT && resolve();
        try {
          var obj = goog.asserts.assertObject(xhr.getResponseJson(speech.crowdcompute.Api.XSSI_PREFIX));
        } catch (err) {
          reject({code:-1, details:"Failed to parse response: " + err});
          return;
        }
        resolve(obj["default"]);
      } else {
        var errDetails = this.getXhrErrorDetails(xhr);
        if (xhr.lastErrorCode_ == goog.net.ErrorCode.HTTP_ERROR) {
          var errCode = xhr.getStatus();
          errDetails.includes(speech.crowdcompute.Api.GAIA_DELETED_ERROR_MSG_) && (errCode = goog.net.HttpStatus.NOT_FOUND);
          errCode == goog.net.HttpStatus.UNAUTHORIZED && (errDetails = "Unauthorized. Try logging out and loggin in using https://accounts.google.com/logout and/or use Chrome's Incognito window: " + errDetails);
          reject({code:errCode, details:errDetails});
        } else {
          reject({code:-1, details:"Something is wrong: " + errDetails});
        }
      }
    }.bind(this), opt_method, opt_content, opt_headers, 0, !0);
  }.bind(this));
};
speech.crowdcompute.Api.prototype.getXhrErrorDetails = function(xhr) {
  return goog.net.ErrorCode.getDebugMessage(xhr.lastErrorCode_) + ": " + xhr.getLastError() + "\n\n" + xhr.getResponseText();
};
goog.exportProperty(speech.crowdcompute.Api.prototype, "getXhrErrorDetails", speech.crowdcompute.Api.prototype.getXhrErrorDetails);
speech.crowdcompute.Api.prototype.callWithRetries_ = function(fn) {
  var $jscomp$this = this;
  var p = fn();
  for (var i = 1; i <= speech.crowdcompute.Api.MAX_RETRIES_; ++i) {
    p = p["catch"](function(err) {
      if (err.code == goog.net.HttpStatus.GATEWAY_TIMEOUT || err.code == goog.net.HttpStatus.SERVICE_UNAVAILABLE) {
        return $jscomp$this.notifyRetry_(), fn();
      }
      throw err;
    });
  }
  return p;
};
speech.crowdcompute.Api.prototype.registerRetryCallback = function(callback) {
  this.notifyRetry_ = callback;
};
goog.exportProperty(speech.crowdcompute.Api.prototype, "registerRetryCallback", speech.crowdcompute.Api.prototype.registerRetryCallback);
speech.crowdcompute.ValidationErrorData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(speech.crowdcompute.ValidationErrorData, jspb.Message);
jspb.Message.GENERATE_TO_OBJECT && (speech.crowdcompute.ValidationErrorData.prototype.toObject = function(opt_includeInstance) {
  return speech.crowdcompute.ValidationErrorData.toObject(opt_includeInstance, this);
}, speech.crowdcompute.ValidationErrorData.toObject = function(includeInstance, msg) {
  var obj = {text:jspb.Message.getField(msg, 1), original:jspb.Message.getField(msg, 2), replacement:jspb.Message.getField(msg, 3), severity:jspb.Message.getField(msg, 4), detailLink:jspb.Message.getField(msg, 5)};
  includeInstance && (obj.$jspbMessageInstance = msg);
  return obj;
});
speech.crowdcompute.ValidationErrorData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new speech.crowdcompute.ValidationErrorData;
  return speech.crowdcompute.ValidationErrorData.deserializeBinaryFromReader(msg, reader);
};
speech.crowdcompute.ValidationErrorData.deserializeBinaryFromReader = function(msg, reader) {
  for (; reader.nextField() && !reader.isEndGroup();) {
    var field = reader.nextField_;
    switch(field) {
      case 1:
        var value = reader.readString();
        msg.setText(value);
        break;
      case 2:
        value = reader.readString();
        msg.setOriginal(value);
        break;
      case 3:
        value = reader.readString();
        msg.setReplacement(value);
        break;
      case 4:
        value = reader.readEnum();
        msg.setSeverity(value);
        break;
      case 5:
        value = reader.readString();
        msg.setDetailLink(value);
        break;
      default:
        reader.skipField();
    }
  }
  return msg;
};
speech.crowdcompute.ValidationErrorData.serializeBinaryToWriter = function(message, writer) {
  var f = jspb.Message.getField(message, 1);
  null != f && writer.writeString(1, f);
  f = jspb.Message.getField(message, 2);
  null != f && writer.writeString(2, f);
  f = jspb.Message.getField(message, 3);
  null != f && writer.writeString(3, f);
  f = jspb.Message.getField(message, 4);
  null != f && writer.writeEnum(4, f);
  f = jspb.Message.getField(message, 5);
  null != f && writer.writeString(5, f);
};
speech.crowdcompute.ValidationErrorData.Level = {LEVEL_UNSPECIFIED:0, INFO:1, WARNING:2, FATAL:3};
speech.crowdcompute.ValidationErrorData.prototype.getText = function() {
  return jspb.Message.getField(this, 1);
};
speech.crowdcompute.ValidationErrorData.prototype.setText = function(value) {
  jspb.Message.setField(this, 1, value);
};
speech.crowdcompute.ValidationErrorData.prototype.setOriginal = function(value) {
  jspb.Message.setField(this, 2, value);
};
speech.crowdcompute.ValidationErrorData.prototype.getReplacement = function() {
  return jspb.Message.getField(this, 3);
};
speech.crowdcompute.ValidationErrorData.prototype.setReplacement = function(value) {
  jspb.Message.setField(this, 3, value);
};
speech.crowdcompute.ValidationErrorData.prototype.getSeverity = function() {
  return jspb.Message.getField(this, 4);
};
speech.crowdcompute.ValidationErrorData.prototype.setSeverity = function(value) {
  jspb.Message.setField(this, 4, value);
};
speech.crowdcompute.ValidationErrorData.prototype.setDetailLink = function(value) {
  jspb.Message.setField(this, 5, value);
};
speech.crowdcompute.ValidationErrorData.deserialize = function(data) {
  return jspb.Message.deserialize(speech.crowdcompute.ValidationErrorData, data);
};
speech.crowdcompute.CategoryData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, speech.crowdcompute.CategoryData.repeatedFields_, null);
};
goog.inherits(speech.crowdcompute.CategoryData, jspb.Message);
speech.crowdcompute.CategoryData.repeatedFields_ = [3];
jspb.Message.GENERATE_TO_OBJECT && (speech.crowdcompute.CategoryData.prototype.toObject = function(opt_includeInstance) {
  return speech.crowdcompute.CategoryData.toObject(opt_includeInstance, this);
}, speech.crowdcompute.CategoryData.toObject = function(includeInstance, msg) {
  var obj = {displayName:jspb.Message.getField(msg, 1), label:jspb.Message.getField(msg, 2), categoryList:jspb.Message.toObjectList(msg.getCategoryList(), speech.crowdcompute.CategoryData.toObject, includeInstance)};
  includeInstance && (obj.$jspbMessageInstance = msg);
  return obj;
});
speech.crowdcompute.CategoryData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new speech.crowdcompute.CategoryData;
  return speech.crowdcompute.CategoryData.deserializeBinaryFromReader(msg, reader);
};
speech.crowdcompute.CategoryData.deserializeBinaryFromReader = function(msg, reader) {
  for (; reader.nextField() && !reader.isEndGroup();) {
    var field = reader.nextField_;
    switch(field) {
      case 1:
        var value = reader.readString();
        msg.setDisplayName(value);
        break;
      case 2:
        value = reader.readString();
        msg.setLabel(value);
        break;
      case 3:
        value = new speech.crowdcompute.CategoryData;
        reader.readMessage(value, speech.crowdcompute.CategoryData.deserializeBinaryFromReader);
        msg.addCategory(value);
        break;
      default:
        reader.skipField();
    }
  }
  return msg;
};
speech.crowdcompute.CategoryData.serializeBinaryToWriter = function(message, writer) {
  var f = jspb.Message.getField(message, 1);
  null != f && writer.writeString(1, f);
  f = jspb.Message.getField(message, 2);
  null != f && writer.writeString(2, f);
  f = message.getCategoryList();
  0 < f.length && writer.writeRepeatedMessage(3, f, speech.crowdcompute.CategoryData.serializeBinaryToWriter);
};
speech.crowdcompute.CategoryData.prototype.getDisplayName = function() {
  return jspb.Message.getField(this, 1);
};
speech.crowdcompute.CategoryData.prototype.setDisplayName = function(value) {
  jspb.Message.setField(this, 1, value);
};
speech.crowdcompute.CategoryData.prototype.getLabel = function() {
  return jspb.Message.getField(this, 2);
};
speech.crowdcompute.CategoryData.prototype.setLabel = function(value) {
  jspb.Message.setField(this, 2, value);
};
speech.crowdcompute.CategoryData.prototype.getCategoryList = function() {
  return jspb.Message.getRepeatedWrapperField(this, speech.crowdcompute.CategoryData, 3);
};
speech.crowdcompute.CategoryData.prototype.addCategory = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, speech.crowdcompute.CategoryData, opt_index);
};
speech.crowdcompute.CategoryData.deserialize = function(data) {
  return jspb.Message.deserialize(speech.crowdcompute.CategoryData, data);
};
speech.crowdcompute.ValidationErrorTemplate = function(templatePool) {
  jslayout.InstantiableStrictModeTemplate.call(this, templatePool, speech.crowdcompute.ValidationErrorTemplate.templateKey_);
  speech.crowdcompute.ValidationErrorTemplate.registerTemplate(templatePool);
};
goog.inherits(speech.crowdcompute.ValidationErrorTemplate, jslayout.InstantiableStrictModeTemplate);
speech.crowdcompute.ValidationErrorTemplate.prototype.fill = function(data) {
  this.fillParam(0, jslayout.builtin.getProtoBackingData(data));
};
speech.crowdcompute.ValidationErrorTemplate.registerTemplate = function(pool) {
  if (!pool.hasTemplate(speech.crowdcompute.ValidationErrorTemplate.templateKey_)) {
    var args = {data:0};
    pool.insertData(jslayout.JsRenderingMode.TRADITIONAL, speech.crowdcompute.ValidationErrorTemplate.templateKey_, args, speech.crowdcompute.ValidationErrorTemplate.templateElements_(), speech.crowdcompute.ValidationErrorTemplate.templateCssRules_(), speech.crowdcompute.ValidationErrorTemplate.templateCommands_(), speech.crowdcompute.ValidationErrorTemplate.templateCommandPositions_);
    speech.crowdcompute.ValidationErrorJsif0Template.registerTemplate(pool);
    goog.DEBUG && pool.mapClearName(speech.crowdcompute.ValidationErrorTemplate.templateKey_, "speech.crowdcompute.ValidationErrorTemplate");
  }
};
speech.crowdcompute.ValidationErrorTemplate.templateKey_ = "t-Qoydx8QUkCg";
speech.crowdcompute.CategoryTreeTemplate = function(templatePool) {
  jslayout.InstantiableStrictModeTemplate.call(this, templatePool, speech.crowdcompute.CategoryTreeTemplate.templateKey_);
  speech.crowdcompute.CategoryTreeTemplate.registerTemplate(templatePool);
};
goog.inherits(speech.crowdcompute.CategoryTreeTemplate, jslayout.InstantiableStrictModeTemplate);
speech.crowdcompute.CategoryTreeTemplate.prototype.fill = function(categories) {
  categories = jslayout.builtin.listToArray(categories, 8);
  var categoriesArray = [];
  for (var i = 0; categories && i < categories.length; ++i) {
    categoriesArray.push(jslayout.builtin.getProtoBackingData(categories[i]));
  }
  this.fillParam(0, categoriesArray);
};
speech.crowdcompute.CategoryTreeTemplate.registerTemplate = function(pool) {
  if (!pool.hasTemplate(speech.crowdcompute.CategoryTreeTemplate.templateKey_)) {
    var args = {categories:0};
    pool.insertData(jslayout.JsRenderingMode.TRADITIONAL, speech.crowdcompute.CategoryTreeTemplate.templateKey_, args, speech.crowdcompute.CategoryTreeTemplate.templateElements_(), speech.crowdcompute.CategoryTreeTemplate.templateCssRules_(), speech.crowdcompute.CategoryTreeTemplate.templateCommands_(), speech.crowdcompute.CategoryTreeTemplate.templateCommandPositions_);
    speech.crowdcompute.CategoryListTemplate.registerTemplate(pool);
    goog.DEBUG && pool.mapClearName(speech.crowdcompute.CategoryTreeTemplate.templateKey_, "speech.crowdcompute.CategoryTreeTemplate");
  }
};
speech.crowdcompute.CategoryTreeTemplate.templateKey_ = "t-gRUTaAlolAo";
speech.crowdcompute.CategoryListTemplate = function(templatePool) {
  jslayout.InstantiableStrictModeTemplate.call(this, templatePool, speech.crowdcompute.CategoryListTemplate.templateKey_);
  speech.crowdcompute.CategoryListTemplate.registerTemplate(templatePool);
};
goog.inherits(speech.crowdcompute.CategoryListTemplate, jslayout.InstantiableStrictModeTemplate);
speech.crowdcompute.CategoryListTemplate.prototype.fill = function(label_prefix, display_prefix, categories) {
  this.fillParam(0, label_prefix);
  this.fillParam(1, display_prefix);
  categories = jslayout.builtin.listToArray(categories, 8);
  var categoriesArray = [];
  for (var i = 0; categories && i < categories.length; ++i) {
    categoriesArray.push(jslayout.builtin.getProtoBackingData(categories[i]));
  }
  this.fillParam(2, categoriesArray);
};
speech.crowdcompute.CategoryListTemplate.registerTemplate = function(pool) {
  if (!pool.hasTemplate(speech.crowdcompute.CategoryListTemplate.templateKey_)) {
    var args = {label_prefix:0, display_prefix:1, categories:2};
    pool.insertData(jslayout.JsRenderingMode.TRADITIONAL, speech.crowdcompute.CategoryListTemplate.templateKey_, args, speech.crowdcompute.CategoryListTemplate.templateElements_(), speech.crowdcompute.CategoryListTemplate.templateCssRules_(), speech.crowdcompute.CategoryListTemplate.templateCommands_(), speech.crowdcompute.CategoryListTemplate.templateCommandPositions_);
    speech.crowdcompute.CategoryListTemplate.registerTemplate(pool);
    goog.DEBUG && pool.mapClearName(speech.crowdcompute.CategoryListTemplate.templateKey_, "speech.crowdcompute.CategoryListTemplate");
  }
};
speech.crowdcompute.CategoryListTemplate.templateKey_ = "t-lRqpOmtihKU";
speech.crowdcompute.SelectLabelTemplate = function(templatePool) {
  jslayout.InstantiableStrictModeTemplate.call(this, templatePool, speech.crowdcompute.SelectLabelTemplate.templateKey_);
  speech.crowdcompute.SelectLabelTemplate.registerTemplate(templatePool);
};
goog.inherits(speech.crowdcompute.SelectLabelTemplate, jslayout.InstantiableStrictModeTemplate);
speech.crowdcompute.SelectLabelTemplate.prototype.fill = function(display_path, label_path) {
  this.fillParam(0, display_path);
  this.fillParam(1, label_path);
};
speech.crowdcompute.SelectLabelTemplate.registerTemplate = function(pool) {
  if (!pool.hasTemplate(speech.crowdcompute.SelectLabelTemplate.templateKey_)) {
    var args = {display_path:0, label_path:1};
    pool.insertData(jslayout.JsRenderingMode.TRADITIONAL, speech.crowdcompute.SelectLabelTemplate.templateKey_, args, speech.crowdcompute.SelectLabelTemplate.templateElements_(), speech.crowdcompute.SelectLabelTemplate.templateCssRules_(), speech.crowdcompute.SelectLabelTemplate.templateCommands_(), speech.crowdcompute.SelectLabelTemplate.templateCommandPositions_);
    goog.DEBUG && pool.mapClearName(speech.crowdcompute.SelectLabelTemplate.templateKey_, "speech.crowdcompute.SelectLabelTemplate");
  }
};
speech.crowdcompute.SelectLabelTemplate.templateKey_ = "t-uuUDx5qfHlw";
speech.crowdcompute.ValidationErrorJsif0Template = function(templatePool) {
  jslayout.InstantiableStrictModeTemplate.call(this, templatePool, speech.crowdcompute.ValidationErrorJsif0Template.templateKey_);
  speech.crowdcompute.ValidationErrorJsif0Template.registerTemplate(templatePool);
};
goog.inherits(speech.crowdcompute.ValidationErrorJsif0Template, jslayout.InstantiableStrictModeTemplate);
speech.crowdcompute.ValidationErrorJsif0Template.prototype.fill = function(data) {
  this.fillParam(0, jslayout.builtin.getProtoBackingData(data));
};
speech.crowdcompute.ValidationErrorJsif0Template.registerTemplate = function(pool) {
  if (!pool.hasTemplate(speech.crowdcompute.ValidationErrorJsif0Template.templateKey_)) {
    var args = {data:0};
    pool.insertData(jslayout.JsRenderingMode.TRADITIONAL, speech.crowdcompute.ValidationErrorJsif0Template.templateKey_, args, speech.crowdcompute.ValidationErrorJsif0Template.templateElements_(), speech.crowdcompute.ValidationErrorJsif0Template.templateCssRules_(), speech.crowdcompute.ValidationErrorJsif0Template.templateCommands_(), speech.crowdcompute.ValidationErrorJsif0Template.templateCommandPositions_);
    goog.DEBUG && pool.mapClearName(speech.crowdcompute.ValidationErrorJsif0Template.templateKey_, "speech.crowdcompute.ValidationErrorJsif0Template");
  }
};
speech.crowdcompute.ValidationErrorJsif0Template.templateKey_ = "t-b-aRwxQ1ppw";
speech.crowdcompute.ValidationErrorTemplate.LANGUAGE_INDEX = -1;
speech.crowdcompute.ValidationErrorTemplate.IS_RTL = !1;
speech.crowdcompute.ValidationErrorTemplate.args_ = {data:0, categories:0, label_prefix:0, display_prefix:0, display_path:0, label_path:0};
speech.crowdcompute.ValidationErrorTemplate.expr0 = function(_s) {
  return _s.__content;
};
speech.crowdcompute.ValidationErrorTemplate.expr1 = function(_s) {
  return jslayout.builtin.field(_s.data, "", -5);
};
speech.crowdcompute.ValidationErrorTemplate.expr2 = function() {
  return "";
};
speech.crowdcompute.ValidationErrorTemplate.expr3 = function(_s) {
  return _s.categories;
};
speech.crowdcompute.ValidationErrorTemplate.expr4 = function(_s) {
  return 0 == jslayout.builtin.fieldSize(_s.c, -3);
};
speech.crowdcompute.ValidationErrorTemplate.expr5 = function(_s) {
  return _s.__content__1;
};
speech.crowdcompute.ValidationErrorTemplate.expr6 = function(_s) {
  return _s.__content__2;
};
speech.crowdcompute.ValidationErrorTemplate.templateCommands_ = function() {
  return [["$t", "t-Qoydx8QUkCg", "$a", [7, , , function(_s) {
    return 1 == jslayout.builtin.field(_s.data, 0, -4);
  }, , "level-info"], "$a", [7, , , function(_s) {
    return 2 == jslayout.builtin.field(_s.data, 0, -4);
  }, , "level-warning"], "$a", [7, , , function(_s) {
    return 3 == jslayout.builtin.field(_s.data, 0, -4);
  }, , "level-fatal"]], ["$if", function(_s) {
    return jslayout.builtin.field(_s.data, "", -1);
  }, "var", function(_s) {
    return _s.__content = jslayout.builtin.field(_s.data, "", -1);
  }, "$dc", [speech.crowdcompute.ValidationErrorTemplate.expr0, !1], "$c", [, , speech.crowdcompute.ValidationErrorTemplate.expr0]], ["$if", function(_s) {
    return !jslayout.builtin.field(_s.data, "", -1);
  }, "$up", ["t-b-aRwxQ1ppw", {data:function(_s) {
    return _s.data;
  }}]], ["$if", speech.crowdcompute.ValidationErrorTemplate.expr1, "$a", [8, 1, , , speech.crowdcompute.ValidationErrorTemplate.expr1, "href", , , 1], "$a", [0, , , , "guideline", "target", , , 1]], ["$a", [8, , , , "https://docs.google.com/a/google.com/forms/d/e/1FAIpQLSfGIR6t_WC8sJyXzDDOQtVSUPtXV69jWJsM_3tyZS_WzhGqpQ/viewform", "href", , 1], "$a", [0, , , , "validation-report", "target", , 1]]];
};
goog.DEBUG && (speech.crowdcompute.ValidationErrorTemplate.templateCommandPositions_ = ["50:68", "55:22", "56:27", "61:5", "62:5"]);
speech.crowdcompute.CategoryTreeTemplate.templateCommands_ = function() {
  return [["$t", "t-gRUTaAlolAo", "$a", [7, , , , , "category-tree"]], ["$up", ["t-lRqpOmtihKU", {label_prefix:speech.crowdcompute.ValidationErrorTemplate.expr2, display_prefix:speech.crowdcompute.ValidationErrorTemplate.expr2, categories:speech.crowdcompute.ValidationErrorTemplate.expr3}]], ["$a", [7, , , , , "category-info-text", , 1]], ["$a", [7, , , , , "select-labels", , 1]]];
};
goog.DEBUG && (speech.crowdcompute.CategoryTreeTemplate.templateCommandPositions_ = ["0:0", "72:30", "0:0", "0:0"]);
speech.crowdcompute.CategoryListTemplate.templateCommands_ = function() {
  return [["$t", "t-lRqpOmtihKU"], ["for", [function(_s, value) {
    return _s.c = value;
  }, function(_s, value) {
    return _s.i = value;
  }, function(_s, value) {
    return _s.c__total = value;
  }, speech.crowdcompute.ValidationErrorTemplate.expr3], "$a", [7, , , , , "category-inactive", , 1]], ["$a", [7, , , , , "label"], "$a", [0, , , speech.crowdcompute.ValidationErrorTemplate.expr4, function(_s) {
    return _s.label_prefix + jslayout.builtin.field(_s.c, "", -2);
  }, "data-label-path", , , 1], "$a", [0, , , speech.crowdcompute.ValidationErrorTemplate.expr4, function(_s) {
    return _s.display_prefix + jslayout.builtin.field(_s.c, "", -1);
  }, "data-display-path", , , 1]], ["var", function(_s) {
    return _s.__content = String(_s.i + 1);
  }, "$dc", [speech.crowdcompute.ValidationErrorTemplate.expr0, !1], "$c", [, , speech.crowdcompute.ValidationErrorTemplate.expr0]], ["var", function(_s) {
    return _s.__content__1 = jslayout.builtin.field(_s.c, "", -1);
  }, "$dc", [speech.crowdcompute.ValidationErrorTemplate.expr5, !1], "$c", [, , speech.crowdcompute.ValidationErrorTemplate.expr5]], ["$up", ["t-lRqpOmtihKU", {label_prefix:function(_s) {
    return _s.label_prefix + jslayout.builtin.field(_s.c, "", -2) + "/";
  }, display_prefix:function(_s) {
    return _s.display_prefix + jslayout.builtin.field(_s.c, "", -1) + " / ";
  }, categories:function(_s) {
    return jslayout.builtin.field(_s.c, [], -3);
  }}]]];
};
goog.DEBUG && (speech.crowdcompute.CategoryListTemplate.templateCommandPositions_ = "0:0 0:0 86:87 88:33 88:63 91:22".split(" "));
speech.crowdcompute.SelectLabelTemplate.templateCommands_ = function() {
  return [["$t", "t-uuUDx5qfHlw", "$a", [0, , , , function(_s) {
    return _s.display_path;
  }, "data-label-path", , , 1]], ["var", function(_s) {
    return _s.__content = _s.display_path;
  }, "$dc", [speech.crowdcompute.ValidationErrorTemplate.expr0, !1], "$c", [, , speech.crowdcompute.ValidationErrorTemplate.expr0]], ["$a", [7, , , , , "mdl-button", , 1], "$a", [7, , , , , "mdl-js-button", , 1], "$a", [7, , , , , "mdl-button--icon", , 1], "$a", [7, , , , , "mdl-button--colored", , 1]], ["$a", [7, , , , , "material-icons", , 1]]];
};
goog.DEBUG && (speech.crowdcompute.SelectLabelTemplate.templateCommandPositions_ = ["102:34", "106:22", "0:0", "0:0"]);
speech.crowdcompute.ValidationErrorJsif0Template.templateCommands_ = function() {
  return [["$t", "t-b-aRwxQ1ppw"], ["$if", function(_s) {
    return jslayout.builtin.field(_s.data, "", -2);
  }, "var", function(_s) {
    return _s.__content__1 = jslayout.builtin.field(_s.data, "", -2);
  }, "$dc", [speech.crowdcompute.ValidationErrorTemplate.expr5, !1], "$c", [, , speech.crowdcompute.ValidationErrorTemplate.expr5]], ["$if", function(_s) {
    return jslayout.builtin.field(_s.data, "", -3);
  }, "var", function(_s) {
    return _s.__content__2 = jslayout.builtin.field(_s.data, "", -3);
  }, "$dc", [speech.crowdcompute.ValidationErrorTemplate.expr6, !1], "$c", [, , speech.crowdcompute.ValidationErrorTemplate.expr6]]];
};
goog.DEBUG && (speech.crowdcompute.ValidationErrorJsif0Template.templateCommandPositions_ = ["0:0", "57:27", "59:27"]);
speech.crowdcompute.ValidationErrorTemplate.templateCssRules_ = function() {
  return ["css,.level-fatal{color:#F44336},css,.level-warning{color:#FF9800},css,.level-info{color:#9E9E9E},css,.category-active>.label{background-color:#FAFAFA;color:#3F51B5;font-weight:bold},css,.category-tree li{background-color:#EEEEEE;border:1px solid #C0C0C0;height:45px}".split(",")];
};
speech.crowdcompute.ValidationErrorTemplate.templateElements_ = function() {
  return ["li", 576, 1, 0, [" ", ["span", 704, 1, 1], " ", ["span", 704, 1, 2], " ", ["a", 704, 1, 3, "Details"], " ", ["a", , , 4, "Not useful?"], " "]];
};
speech.crowdcompute.CategoryTreeTemplate.templateCssRules_ = function() {
  return [["css", ".category-tree ul" + (speech.crowdcompute.ValidationErrorTemplate.IS_RTL ? "{position:relative;list-style-type:none;width:auto;float:right;clear:both}" : "{position:relative;list-style-type:none;width:auto;float:left;clear:both}"), "css", ".category-tree ul ul" + (speech.crowdcompute.ValidationErrorTemplate.IS_RTL ? "{margin-right:180px;margin-top:-46px;position:absolute;top:50px}" : "{margin-left:180px;margin-top:-46px;position:absolute;top:50px}"), "css", ".category-inactive ul{display:none}", 
  "css", ".category-active>.label{background-color:#FAFAFA;color:#3F51B5;font-weight:bold}", "css", ".select-labels{clear:both}"]];
};
speech.crowdcompute.CategoryTreeTemplate.templateElements_ = function() {
  return ["div", , 1, 0, [" ", ["div", , , 2], " ", ["ul", , 1, 1, " This text will never be displayed."], " ", ["div", , , 3, " "], " "]];
};
speech.crowdcompute.CategoryListTemplate.templateCssRules_ = function() {
  return [["css", ".category-tree ul" + (speech.crowdcompute.ValidationErrorTemplate.IS_RTL ? "{position:relative;list-style-type:none;width:auto;float:right;clear:both}" : "{position:relative;list-style-type:none;width:auto;float:left;clear:both}"), "css", ".category-tree ul ul" + (speech.crowdcompute.ValidationErrorTemplate.IS_RTL ? "{margin-right:180px;margin-top:-46px;position:absolute;top:50px}" : "{margin-left:180px;margin-top:-46px;position:absolute;top:50px}"), "css", ".category-inactive ul{display:none}", 
  "css", ".category-active>.label{background-color:#FAFAFA;color:#3F51B5;font-weight:bold}", "css", ".category-tree li{background-color:#EEEEEE;border:1px solid #C0C0C0;height:45px}", "css", ".category-tree li .label" + (speech.crowdcompute.ValidationErrorTemplate.IS_RTL ? "{cursor:pointer;line-height:45px;padding-right:10px;padding-left:10px;user-select:none;white-space:nowrap}" : "{cursor:pointer;line-height:45px;padding-left:10px;padding-right:10px;user-select:none;white-space:nowrap}")]];
};
speech.crowdcompute.CategoryListTemplate.templateElements_ = function() {
  return ["ul", , 1, 0, [" ", ["li", , 1, 1, [" ", ["div", 576, 1, 2, [" ", ["span", 576, 1, 3], ": ", ["span", 576, 1, 4], " "]], " ", ["ul", , 1, 5, " This text will never be displayed"], " "]], " "]];
};
speech.crowdcompute.SelectLabelTemplate.templateCssRules_ = function() {
  return [["css", ".category-active>.label{background-color:#FAFAFA;color:#3F51B5;font-weight:bold}"]];
};
speech.crowdcompute.SelectLabelTemplate.templateElements_ = function() {
  return ["div", , 1, 0, [" ", ["button", , , 2, [" ", ["i", , , 3, "delete"], " "]], " ", ["span", 576, 1, 1], " "]];
};
speech.crowdcompute.ValidationErrorJsif0Template.templateCssRules_ = function() {
  return [];
};
speech.crowdcompute.ValidationErrorJsif0Template.templateElements_ = function() {
  return ["", , 1, 0, ['Replace "', ["strong", 704, 1, 1], '" with "', ["strong", 704, 1, 2], '" .']];
};
speech.crowdcompute.CategoryTree = function(config, opt_templatePool, opt_shortcutHandler) {
  this.config_ = config;
  this.templatePool_ = opt_templatePool || new jslayout.TemplatePool;
  this.selectLabelPaths_ = new goog.structs.Set;
  this.shortcutHandler_ = opt_shortcutHandler || new goog.ui.KeyboardShortcutHandler(document);
};
goog.exportSymbol("speech.crowdcompute.CategoryTree", speech.crowdcompute.CategoryTree);
speech.crowdcompute.CategoryTree.prototype.getSelectLabelPaths = function() {
  var paths = this.selectLabelPaths_.getValues();
  var min_selection = this.config_.getMinSelectionOrDefault();
  var max_selection = this.config_.getMaxSelectionOrDefault();
  if (0 != min_selection && paths.length < min_selection) {
    throw Error("Need at least " + min_selection + " categories selected");
  }
  if (0 != max_selection && paths.length > max_selection) {
    throw Error("Must not select more than " + max_selection + " categories");
  }
  return paths;
};
speech.crowdcompute.CategoryTree.prototype.init = function(parentElem) {
  var template = new speech.crowdcompute.CategoryTreeTemplate(this.templatePool_);
  var convertToJspb = function(messageNode) {
    var jspbNode = new speech.crowdcompute.CategoryData;
    jspbNode.setDisplayName(messageNode.getDisplayName());
    jspbNode.setLabel(messageNode.getLabel());
    messageNode.categoryArray().forEach(function(childNode) {
      jspbNode.addCategory(convertToJspb(childNode));
    });
    return jspbNode;
  };
  var categories = this.config_.categoryArray().map(convertToJspb);
  template.fill(categories);
  this.element_ = goog.asserts.assertElement(template.instantiate(parentElem));
  template.render();
  this.currentChoice_ = goog.asserts.assertElement(this.element_.querySelector("ul"));
  var labels = goog.dom.getElementsByClass("label");
  labels.forEach(this.initLabel_.bind(this));
  this.initShortcuts_();
  this.clearSelectedLabelPaths();
};
speech.crowdcompute.CategoryTree.prototype.initShortcuts_ = function() {
  var createShortcut = function(n) {
    return function() {
      var choiceListItems = goog.dom.getChildren(this.currentChoice_);
      if (n < choiceListItems.length) {
        var label = goog.asserts.assertElement(choiceListItems[n].querySelector(".label"));
        label.getAttribute("data-label-path") ? this.selectCategory_(label) : this.activateCategory_(label);
      }
    }.bind(this);
  }.bind(this);
  for (var i = 1; 9 >= i; ++i) {
    this.shortcutHandler_.registerShortcut("select-category-" + i, "ctrl+" + i), goog.events.listen(this.shortcutHandler_, this.shortcutHandler_.getEventType("select-category-" + i), createShortcut(i - 1));
  }
};
speech.crowdcompute.CategoryTree.prototype.initLabel_ = function(label) {
  goog.events.listen(label, goog.events.EventType.CLICK, this.activateCategory_.bind(this, label));
  goog.events.listen(label, goog.events.EventType.DBLCLICK, this.selectCategory_.bind(this, label));
};
speech.crowdcompute.CategoryTree.prototype.activateCategory_ = function(label) {
  var parentList = goog.asserts.assertElement(goog.dom.getAncestorByTagNameAndClass(label, "ul"));
  this.clearAllActiveCategories_(parentList);
  var currentListItem = goog.asserts.assertElement(goog.dom.getAncestorByTagNameAndClass(label, "li"));
  goog.dom.classlist.addRemove(currentListItem, "category-inactive", "category-active");
  this.currentChoice_ = label.getAttribute("data-label-path") ? parentList : goog.asserts.assertElement(currentListItem.querySelector("ul"));
};
speech.crowdcompute.CategoryTree.prototype.selectCategory_ = function(label) {
  var labelPath = label.getAttribute("data-label-path");
  if (labelPath) {
    var displayPath = label.getAttribute("data-display-path") || "";
    this.addLabelPath_(displayPath, labelPath);
    this.clearAllActiveCategories_(this.element_);
  }
  this.currentChoice_ = goog.asserts.assertElement(this.element_.querySelector("ul"));
};
speech.crowdcompute.CategoryTree.prototype.clearAllActiveCategories_ = function(elem) {
  var activeCategories = elem.querySelectorAll(".category-active");
  activeCategories.forEach(function(category) {
    goog.dom.classlist.addRemove(category, "category-active", "category-inactive");
  });
};
speech.crowdcompute.CategoryTree.prototype.addLabelPath_ = function(displayPath, labelPath) {
  this.config_.getMultiSelection() || this.clearSelectedLabelPaths();
  if (!this.selectLabelPaths_.contains(labelPath)) {
    this.selectLabelPaths_.add(labelPath);
    var container = this.element_.querySelector(".select-labels");
    var template = new speech.crowdcompute.SelectLabelTemplate(this.templatePool_);
    template.fill(displayPath, labelPath);
    var selectLabelElem = goog.asserts.assertElement(template.instantiate(container));
    template.render();
    var infoText = this.element_.querySelector(".category-info-text");
    var updateNumSelectedCategories = function() {
      goog.dom.setTextContent(infoText, this.selectLabelPaths_.getCount() + " categories selected");
    }.bind(this);
    var deleteButton = selectLabelElem.querySelector("button");
    goog.events.listen(deleteButton, goog.events.EventType.CLICK, function() {
      this.selectLabelPaths_.remove(labelPath);
      goog.dom.removeNode(selectLabelElem);
      updateNumSelectedCategories();
    }.bind(this));
    updateNumSelectedCategories();
  }
};
speech.crowdcompute.CategoryTree.prototype.restoreSelectedLabelPaths = function(labelPaths) {
  var labels = this.element_.querySelectorAll(".label[data-label-path][data-display-path]");
  var labelToDisplay = {};
  labels.forEach(function(label) {
    var labelPath = goog.asserts.assert(label.getAttribute("data-label-path"), "empty data-label-path");
    var displayPath = goog.asserts.assert(label.getAttribute("data-display-path"), "empty data-display-path");
    labelToDisplay[labelPath] = displayPath;
  });
  this.clearSelectedLabelPaths();
  labelPaths.sort();
  labelPaths.forEach(function(labelPath) {
    var displayPath = labelToDisplay[labelPath];
    this.addLabelPath_(displayPath || "(Can't find display name: " + labelPath + ")", labelPath);
  }.bind(this));
};
goog.exportProperty(speech.crowdcompute.CategoryTree.prototype, "restoreSelectedLabelPaths", speech.crowdcompute.CategoryTree.prototype.restoreSelectedLabelPaths);
speech.crowdcompute.CategoryTree.prototype.clearSelectedLabelPaths = function() {
  var container = this.element_.querySelector(".select-labels");
  this.selectLabelPaths_.clear();
  goog.dom.removeChildren(container);
  goog.dom.setTextContent(this.element_.querySelector(".category-info-text"), "Double-click to select a category.");
};
goog.exportProperty(speech.crowdcompute.CategoryTree.prototype, "clearSelectedLabelPaths", speech.crowdcompute.CategoryTree.prototype.clearSelectedLabelPaths);
speech.tools.crowd_compute.TranscriptionLogEntry = function() {
  goog.proto2.Message.call(this);
};
goog.inherits(speech.tools.crowd_compute.TranscriptionLogEntry, goog.proto2.Message);
speech.tools.crowd_compute.TranscriptionLogEntry.descriptor_ = null;
speech.tools.crowd_compute.TranscriptionLogEntry.prototype.setAction = function(value) {
  this.set$Value(1, value);
};
speech.tools.crowd_compute.TranscriptionLogEntry.prototype.setUtteranceId = function(value) {
  this.set$Value(2, value);
};
speech.tools.crowd_compute.TranscriptionLogEntry.prototype.getWorkerId = function() {
  return this.get$Value(3);
};
speech.tools.crowd_compute.TranscriptionLogEntry.prototype.setWorkerId = function(value) {
  this.set$Value(3, value);
};
speech.tools.crowd_compute.TranscriptionLogEntry.prototype.setQuestionId = function(value) {
  this.set$Value(4, value);
};
speech.tools.crowd_compute.TranscriptionLogEntry.prototype.setProjectId = function(value) {
  this.set$Value(8, value);
};
speech.tools.crowd_compute.TranscriptionLogEntry.prototype.setValidated = function(value) {
  this.set$Value(6, value);
};
speech.tools.crowd_compute.TranscriptionLogEntry.prototype.setTouched = function(value) {
  this.set$Value(7, value);
};
speech.tools.crowd_compute.TranscriptionLogEntry.prototype.setRejectReason = function(value) {
  this.set$Value(11, value);
};
speech.tools.crowd_compute.TranscriptionLogEntry.prototype.setCorrectionEditDistance = function(value) {
  this.set$Value(9, value);
};
speech.tools.crowd_compute.TranscriptionLogEntry.prototype.setReviewedWorkerEmail = function(value) {
  this.set$Value(10, value);
};
speech.tools.crowd_compute.TranscriptionLogEntry.Action = {ACTION_UNSPECIFIED:0, SUBMIT:1, REVIEW:2};
speech.tools.crowd_compute.WorkerPerformance = function() {
  goog.proto2.Message.call(this);
};
goog.inherits(speech.tools.crowd_compute.WorkerPerformance, goog.proto2.Message);
speech.tools.crowd_compute.WorkerPerformance.descriptor_ = null;
speech.tools.crowd_compute.WorkerPerformance.MatchScore = function() {
  goog.proto2.Message.call(this);
};
goog.inherits(speech.tools.crowd_compute.WorkerPerformance.MatchScore, goog.proto2.Message);
speech.tools.crowd_compute.WorkerPerformance.MatchScore.descriptor_ = null;
speech.tools.crowd_compute.WorkerPerformance.MinimumEditDistanceScore = function() {
  goog.proto2.Message.call(this);
};
goog.inherits(speech.tools.crowd_compute.WorkerPerformance.MinimumEditDistanceScore, goog.proto2.Message);
speech.tools.crowd_compute.WorkerPerformance.MinimumEditDistanceScore.descriptor_ = null;
speech.tools.crowd_compute.WorkerPerformance.MinimumEditDistanceScore.prototype.getLength = function() {
  return this.get$Value(2);
};
speech.tools.crowd_compute.WorkerPerformance.MinimumEditDistanceScore.prototype.setLength = function(value) {
  this.set$Value(2, value);
};
speech.tools.crowd_compute.WorkerPerformance.MinimumEditDistanceScore.prototype.hasLength = function() {
  return this.has$Value(2);
};
speech.tools.crowd_compute.TranscriptionStatsWorkerRow = function() {
  goog.proto2.Message.call(this);
};
goog.inherits(speech.tools.crowd_compute.TranscriptionStatsWorkerRow, goog.proto2.Message);
speech.tools.crowd_compute.TranscriptionStatsWorkerRow.descriptor_ = null;
speech.tools.crowd_compute.TranscriptionStatsResult = function() {
  goog.proto2.Message.call(this);
};
goog.inherits(speech.tools.crowd_compute.TranscriptionStatsResult, goog.proto2.Message);
speech.tools.crowd_compute.TranscriptionStatsResult.descriptor_ = null;
speech.tools.crowd_compute.TranscriptionItemRow = function() {
  goog.proto2.Message.call(this);
};
goog.inherits(speech.tools.crowd_compute.TranscriptionItemRow, goog.proto2.Message);
speech.tools.crowd_compute.TranscriptionItemRow.descriptor_ = null;
speech.tools.crowd_compute.TranscriptionItemRow.prototype.setQuestionId = function(value) {
  this.set$Value(1, value);
};
speech.tools.crowd_compute.TranscriptionItemRow.prototype.setUtteranceId = function(value) {
  this.set$Value(2, value);
};
speech.tools.crowd_compute.TranscriptionItemRow.DisplayType = {DISPLAY_TYPE_UNSPECIFIED:0, ERROR:1, SUBMIT:2};
speech.tools.crowd_compute.AudioCollectionHistoryItem = function() {
  goog.proto2.Message.call(this);
};
goog.inherits(speech.tools.crowd_compute.AudioCollectionHistoryItem, goog.proto2.Message);
speech.tools.crowd_compute.AudioCollectionHistoryItem.descriptor_ = null;
speech.tools.crowd_compute.AudioCollectionHistoryItem.prototype.setUtteranceId = function(value) {
  this.set$Value(1, value);
};
speech.tools.crowd_compute.AudioCollectionWorkerHistory = function() {
  goog.proto2.Message.call(this);
};
goog.inherits(speech.tools.crowd_compute.AudioCollectionWorkerHistory, goog.proto2.Message);
speech.tools.crowd_compute.AudioCollectionWorkerHistory.descriptor_ = null;
speech.tools.crowd_compute.AudioCollectionProjectHistory = function() {
  goog.proto2.Message.call(this);
};
goog.inherits(speech.tools.crowd_compute.AudioCollectionProjectHistory, goog.proto2.Message);
speech.tools.crowd_compute.AudioCollectionProjectHistory.descriptor_ = null;
speech.tools.crowd_compute.AudioCollectionStatsWorkerRow = function() {
  goog.proto2.Message.call(this);
};
goog.inherits(speech.tools.crowd_compute.AudioCollectionStatsWorkerRow, goog.proto2.Message);
speech.tools.crowd_compute.AudioCollectionStatsWorkerRow.descriptor_ = null;
speech.tools.crowd_compute.AudioCollectionStatsWorkerRow.prototype.getLanguage = function() {
  return this.get$Value(4);
};
speech.tools.crowd_compute.AudioCollectionStatsResult = function() {
  goog.proto2.Message.call(this);
};
goog.inherits(speech.tools.crowd_compute.AudioCollectionStatsResult, goog.proto2.Message);
speech.tools.crowd_compute.AudioCollectionStatsResult.descriptor_ = null;
speech.tools.crowd_compute.TranscriptionLogEntry.prototype.getDescriptor = function() {
  var descriptor = speech.tools.crowd_compute.TranscriptionLogEntry.descriptor_;
  if (!descriptor) {
    var descriptorObj = {0:{name:"TranscriptionLogEntry", fullName:"speech.tools.crowd_compute.TranscriptionLogEntry"}, 1:{name:"action", fieldType:goog.proto2.Message.FieldType.ENUM, defaultValue:speech.tools.crowd_compute.TranscriptionLogEntry.Action.ACTION_UNSPECIFIED, type:speech.tools.crowd_compute.TranscriptionLogEntry.Action}, 2:{name:"utterance_id", fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 3:{name:"worker_id", fieldType:goog.proto2.Message.FieldType.INT64, type:String}, 
    4:{name:"question_id", fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 8:{name:"project_id", fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 5:{name:"worker_email", fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 6:{name:"validated", fieldType:goog.proto2.Message.FieldType.BOOL, type:Boolean}, 7:{name:"touched", fieldType:goog.proto2.Message.FieldType.BOOL, type:Boolean}, 11:{name:"reject_reason", fieldType:goog.proto2.Message.FieldType.INT32, type:Number}, 
    9:{name:"correction_edit_distance", fieldType:goog.proto2.Message.FieldType.INT32, type:Number}, 10:{name:"reviewed_worker_email", fieldType:goog.proto2.Message.FieldType.STRING, type:String}};
    speech.tools.crowd_compute.TranscriptionLogEntry.descriptor_ = descriptor = goog.proto2.Message.createDescriptor(speech.tools.crowd_compute.TranscriptionLogEntry, descriptorObj);
  }
  return descriptor;
};
speech.tools.crowd_compute.TranscriptionLogEntry.getDescriptor = speech.tools.crowd_compute.TranscriptionLogEntry.prototype.getDescriptor;
speech.tools.crowd_compute.WorkerPerformance.prototype.getDescriptor = function() {
  var descriptor = speech.tools.crowd_compute.WorkerPerformance.descriptor_;
  if (!descriptor) {
    var descriptorObj = {0:{name:"WorkerPerformance", fullName:"speech.tools.crowd_compute.WorkerPerformance"}, 1:{name:"match_score", fieldType:goog.proto2.Message.FieldType.MESSAGE, type:speech.tools.crowd_compute.WorkerPerformance.MatchScore}, 2:{name:"min_edit_distance_score", fieldType:goog.proto2.Message.FieldType.MESSAGE, type:speech.tools.crowd_compute.WorkerPerformance.MinimumEditDistanceScore}};
    speech.tools.crowd_compute.WorkerPerformance.descriptor_ = descriptor = goog.proto2.Message.createDescriptor(speech.tools.crowd_compute.WorkerPerformance, descriptorObj);
  }
  return descriptor;
};
speech.tools.crowd_compute.WorkerPerformance.getDescriptor = speech.tools.crowd_compute.WorkerPerformance.prototype.getDescriptor;
speech.tools.crowd_compute.WorkerPerformance.MatchScore.prototype.getDescriptor = function() {
  var descriptor = speech.tools.crowd_compute.WorkerPerformance.MatchScore.descriptor_;
  if (!descriptor) {
    var descriptorObj = {0:{name:"MatchScore", containingType:speech.tools.crowd_compute.WorkerPerformance, fullName:"speech.tools.crowd_compute.WorkerPerformance.MatchScore"}, 1:{name:"matched", fieldType:goog.proto2.Message.FieldType.BOOL, type:Boolean}};
    speech.tools.crowd_compute.WorkerPerformance.MatchScore.descriptor_ = descriptor = goog.proto2.Message.createDescriptor(speech.tools.crowd_compute.WorkerPerformance.MatchScore, descriptorObj);
  }
  return descriptor;
};
speech.tools.crowd_compute.WorkerPerformance.MatchScore.getDescriptor = speech.tools.crowd_compute.WorkerPerformance.MatchScore.prototype.getDescriptor;
speech.tools.crowd_compute.WorkerPerformance.MinimumEditDistanceScore.prototype.getDescriptor = function() {
  var descriptor = speech.tools.crowd_compute.WorkerPerformance.MinimumEditDistanceScore.descriptor_;
  if (!descriptor) {
    var descriptorObj = {0:{name:"MinimumEditDistanceScore", containingType:speech.tools.crowd_compute.WorkerPerformance, fullName:"speech.tools.crowd_compute.WorkerPerformance.MinimumEditDistanceScore"}, 1:{name:"edit_distance", fieldType:goog.proto2.Message.FieldType.INT32, type:Number}, 2:{name:"length", fieldType:goog.proto2.Message.FieldType.INT32, type:Number}};
    speech.tools.crowd_compute.WorkerPerformance.MinimumEditDistanceScore.descriptor_ = descriptor = goog.proto2.Message.createDescriptor(speech.tools.crowd_compute.WorkerPerformance.MinimumEditDistanceScore, descriptorObj);
  }
  return descriptor;
};
speech.tools.crowd_compute.WorkerPerformance.MinimumEditDistanceScore.getDescriptor = speech.tools.crowd_compute.WorkerPerformance.MinimumEditDistanceScore.prototype.getDescriptor;
speech.tools.crowd_compute.TranscriptionStatsWorkerRow.prototype.getDescriptor = function() {
  var descriptor = speech.tools.crowd_compute.TranscriptionStatsWorkerRow.descriptor_;
  if (!descriptor) {
    var descriptorObj = {0:{name:"TranscriptionStatsWorkerRow", fullName:"speech.tools.crowd_compute.TranscriptionStatsWorkerRow"}, 8:{name:"question_type", fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 1:{name:"worker_email", fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 2:{name:"total_action_count", fieldType:goog.proto2.Message.FieldType.INT32, type:Number}, 3:{name:"validated_count", fieldType:goog.proto2.Message.FieldType.INT32, type:Number}, 4:{name:"touched_count", 
    fieldType:goog.proto2.Message.FieldType.INT32, type:Number}, 5:{name:"last_modified", fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 6:{name:"corrected_count", fieldType:goog.proto2.Message.FieldType.INT32, type:Number}, 7:{name:"approved_count", fieldType:goog.proto2.Message.FieldType.INT32, type:Number}};
    speech.tools.crowd_compute.TranscriptionStatsWorkerRow.descriptor_ = descriptor = goog.proto2.Message.createDescriptor(speech.tools.crowd_compute.TranscriptionStatsWorkerRow, descriptorObj);
  }
  return descriptor;
};
speech.tools.crowd_compute.TranscriptionStatsWorkerRow.getDescriptor = speech.tools.crowd_compute.TranscriptionStatsWorkerRow.prototype.getDescriptor;
speech.tools.crowd_compute.TranscriptionStatsResult.prototype.getDescriptor = function() {
  var descriptor = speech.tools.crowd_compute.TranscriptionStatsResult.descriptor_;
  if (!descriptor) {
    var descriptorObj = {0:{name:"TranscriptionStatsResult", fullName:"speech.tools.crowd_compute.TranscriptionStatsResult"}, 1:{name:"by_question_type_row", repeated:!0, fieldType:goog.proto2.Message.FieldType.MESSAGE, type:speech.tools.crowd_compute.TranscriptionStatsWorkerRow}, 2:{name:"by_question_type_worker_row", repeated:!0, fieldType:goog.proto2.Message.FieldType.MESSAGE, type:speech.tools.crowd_compute.TranscriptionStatsWorkerRow}, 3:{name:"by_question_type_reviewer_row", repeated:!0, fieldType:goog.proto2.Message.FieldType.MESSAGE, 
    type:speech.tools.crowd_compute.TranscriptionStatsWorkerRow}};
    speech.tools.crowd_compute.TranscriptionStatsResult.descriptor_ = descriptor = goog.proto2.Message.createDescriptor(speech.tools.crowd_compute.TranscriptionStatsResult, descriptorObj);
  }
  return descriptor;
};
speech.tools.crowd_compute.TranscriptionStatsResult.getDescriptor = speech.tools.crowd_compute.TranscriptionStatsResult.prototype.getDescriptor;
speech.tools.crowd_compute.TranscriptionItemRow.prototype.getDescriptor = function() {
  var descriptor = speech.tools.crowd_compute.TranscriptionItemRow.descriptor_;
  if (!descriptor) {
    var descriptorObj = {0:{name:"TranscriptionItemRow", fullName:"speech.tools.crowd_compute.TranscriptionItemRow"}, 1:{name:"question_id", fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 2:{name:"utterance_id", fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 3:{name:"question_type", fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 4:{name:"worker_email", fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 5:{name:"last_modified", fieldType:goog.proto2.Message.FieldType.STRING, 
    type:String}, 6:{name:"primary_text", fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 8:{name:"secondary_text", fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 7:{name:"display_type", fieldType:goog.proto2.Message.FieldType.ENUM, defaultValue:speech.tools.crowd_compute.TranscriptionItemRow.DisplayType.DISPLAY_TYPE_UNSPECIFIED, type:speech.tools.crowd_compute.TranscriptionItemRow.DisplayType}};
    speech.tools.crowd_compute.TranscriptionItemRow.descriptor_ = descriptor = goog.proto2.Message.createDescriptor(speech.tools.crowd_compute.TranscriptionItemRow, descriptorObj);
  }
  return descriptor;
};
speech.tools.crowd_compute.TranscriptionItemRow.getDescriptor = speech.tools.crowd_compute.TranscriptionItemRow.prototype.getDescriptor;
speech.tools.crowd_compute.AudioCollectionHistoryItem.prototype.getDescriptor = function() {
  var descriptor = speech.tools.crowd_compute.AudioCollectionHistoryItem.descriptor_;
  if (!descriptor) {
    var descriptorObj = {0:{name:"AudioCollectionHistoryItem", fullName:"speech.tools.crowd_compute.AudioCollectionHistoryItem"}, 1:{name:"utterance_id", fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 2:{name:"transcript", fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 3:{name:"timestamp", fieldType:goog.proto2.Message.FieldType.INT64, type:String}};
    speech.tools.crowd_compute.AudioCollectionHistoryItem.descriptor_ = descriptor = goog.proto2.Message.createDescriptor(speech.tools.crowd_compute.AudioCollectionHistoryItem, descriptorObj);
  }
  return descriptor;
};
speech.tools.crowd_compute.AudioCollectionHistoryItem.getDescriptor = speech.tools.crowd_compute.AudioCollectionHistoryItem.prototype.getDescriptor;
speech.tools.crowd_compute.AudioCollectionWorkerHistory.prototype.getDescriptor = function() {
  var descriptor = speech.tools.crowd_compute.AudioCollectionWorkerHistory.descriptor_;
  if (!descriptor) {
    var descriptorObj = {0:{name:"AudioCollectionWorkerHistory", fullName:"speech.tools.crowd_compute.AudioCollectionWorkerHistory"}, 1:{name:"worker", fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 2:{name:"recorded_item", repeated:!0, fieldType:goog.proto2.Message.FieldType.MESSAGE, type:speech.tools.crowd_compute.AudioCollectionHistoryItem}};
    speech.tools.crowd_compute.AudioCollectionWorkerHistory.descriptor_ = descriptor = goog.proto2.Message.createDescriptor(speech.tools.crowd_compute.AudioCollectionWorkerHistory, descriptorObj);
  }
  return descriptor;
};
speech.tools.crowd_compute.AudioCollectionWorkerHistory.getDescriptor = speech.tools.crowd_compute.AudioCollectionWorkerHistory.prototype.getDescriptor;
speech.tools.crowd_compute.AudioCollectionProjectHistory.prototype.getDescriptor = function() {
  var descriptor = speech.tools.crowd_compute.AudioCollectionProjectHistory.descriptor_;
  if (!descriptor) {
    var descriptorObj = {0:{name:"AudioCollectionProjectHistory", fullName:"speech.tools.crowd_compute.AudioCollectionProjectHistory"}, 1:{name:"worker_history", repeated:!0, fieldType:goog.proto2.Message.FieldType.MESSAGE, type:speech.tools.crowd_compute.AudioCollectionWorkerHistory}};
    speech.tools.crowd_compute.AudioCollectionProjectHistory.descriptor_ = descriptor = goog.proto2.Message.createDescriptor(speech.tools.crowd_compute.AudioCollectionProjectHistory, descriptorObj);
  }
  return descriptor;
};
speech.tools.crowd_compute.AudioCollectionProjectHistory.getDescriptor = speech.tools.crowd_compute.AudioCollectionProjectHistory.prototype.getDescriptor;
speech.tools.crowd_compute.AudioCollectionStatsWorkerRow.prototype.getDescriptor = function() {
  var descriptor = speech.tools.crowd_compute.AudioCollectionStatsWorkerRow.descriptor_;
  if (!descriptor) {
    var descriptorObj = {0:{name:"AudioCollectionStatsWorkerRow", fullName:"speech.tools.crowd_compute.AudioCollectionStatsWorkerRow"}, 1:{name:"user", fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 2:{name:"project", fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 3:{name:"total_recorded", fieldType:goog.proto2.Message.FieldType.INT64, type:String}, 4:{name:"language", fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 5:{name:"num_unique_speakers", fieldType:goog.proto2.Message.FieldType.INT32, 
    type:Number}};
    speech.tools.crowd_compute.AudioCollectionStatsWorkerRow.descriptor_ = descriptor = goog.proto2.Message.createDescriptor(speech.tools.crowd_compute.AudioCollectionStatsWorkerRow, descriptorObj);
  }
  return descriptor;
};
speech.tools.crowd_compute.AudioCollectionStatsWorkerRow.getDescriptor = speech.tools.crowd_compute.AudioCollectionStatsWorkerRow.prototype.getDescriptor;
speech.tools.crowd_compute.AudioCollectionStatsResult.prototype.getDescriptor = function() {
  var descriptor = speech.tools.crowd_compute.AudioCollectionStatsResult.descriptor_;
  if (!descriptor) {
    var descriptorObj = {0:{name:"AudioCollectionStatsResult", fullName:"speech.tools.crowd_compute.AudioCollectionStatsResult"}, 1:{name:"by_user_row", repeated:!0, fieldType:goog.proto2.Message.FieldType.MESSAGE, type:speech.tools.crowd_compute.AudioCollectionStatsWorkerRow}, 2:{name:"by_project_row", repeated:!0, fieldType:goog.proto2.Message.FieldType.MESSAGE, type:speech.tools.crowd_compute.AudioCollectionStatsWorkerRow}};
    speech.tools.crowd_compute.AudioCollectionStatsResult.descriptor_ = descriptor = goog.proto2.Message.createDescriptor(speech.tools.crowd_compute.AudioCollectionStatsResult, descriptorObj);
  }
  return descriptor;
};
speech.tools.crowd_compute.AudioCollectionStatsResult.getDescriptor = speech.tools.crowd_compute.AudioCollectionStatsResult.prototype.getDescriptor;
speech.crowdcompute.AudioTranscription = function(opt_cclib, opt_waveSurfer, opt_api) {
  this.cc_ = opt_cclib || new CcLib;
  this.wavesurfer_ = opt_waveSurfer || Object.create(WaveSurfer);
  this.api_ = opt_api || new speech.crowdcompute.Api;
  this.preambleLength_ = 0.0;
  this.reviewedWorkerEmail_ = "";
  this.transcriptionStatus_ = "";
  this.prefilledText_ = "";
  this.savedTranscription_ = "";
  this.lastValidationState_ = !1;
  this.visible_ = !1;
  this.audioArrayBuffer_ = null;
  this.prefillIsGolden_ = !1;
  this.config_ = new speech.tools.crowd_compute.AudioTranscriptionConfig;
  this.pb_ = new goog.proto2.ObjectSerializer(goog.proto2.ObjectSerializer.KeyOption.NAME);
  this.templatePool_ = new jslayout.TemplatePool;
  this.lastValidationCallId_ = -1;
  this.shortcutHandler_ = new goog.ui.KeyboardShortcutHandler(document);
};
goog.exportSymbol("speech.crowdcompute.AudioTranscription", speech.crowdcompute.AudioTranscription);
speech.crowdcompute.Question = function() {
};
speech.crowdcompute.Answer = function() {
};
speech.crowdcompute.AudioTranscription.BASE_URL_ = "https://speech.google.com/annotation/";
speech.crowdcompute.AudioTranscription.AUDIO_URL_ = speech.crowdcompute.AudioTranscription.BASE_URL_ + "audio";
speech.crowdcompute.AudioTranscription.HISTORY_URL_ = speech.crowdcompute.AudioTranscription.BASE_URL_ + "v2/history";
speech.crowdcompute.AudioTranscription.GUIDELINE_URL_ = speech.crowdcompute.AudioTranscription.BASE_URL_ + "guidelines/";
speech.crowdcompute.AudioTranscription.VALIDATION_DELAY_MS_ = 500;
speech.crowdcompute.AudioTranscription.REJECT_REASON_TO_VALUE_ = {0:"[skip]", 1:"[empty]", 2:"[unintended]", 3:"[other_locale]", 4:"[unclear]", 5:"[noise]"};
speech.crowdcompute.AudioTranscription.REJECT_REASON_TO_LABEL_ = {0:"Other reason", 1:"Audio is empty", 2:"Speech wasn't intended for the device", 3:"Other locale", 4:"Unclear speech", 5:"Noise"};
speech.crowdcompute.AudioTranscription.VALUE_TO_REJECT_REASON = {"[skip]":0, "[empty]":1, "[unintended]":2, "[other_locale]":3, "[unclear]":4, "[noise]":5};
speech.crowdcompute.AudioTranscription.PREAMBLE_QUERY_SPLITTER_ = "[end_preamble]";
speech.crowdcompute.AudioTranscription.prototype.onload = function() {
  var $jscomp$this = this;
  if (window.parent && window.parent.document) {
    var skipButton = window.parent.document.getElementById("skip-button");
    skipButton && goog.style.setElementShown(skipButton.parentElement, !1);
  }
  this.errorDialog_ = goog.dom.getRequiredElement("error-dialog");
  if (!this.setUpDialog_(this.errorDialog_)) {
    return Promise.resolve();
  }
  this.rejectReasonDialog_ = goog.dom.getRequiredElement("reject-reason-dialog");
  if (!this.setUpDialog_(this.rejectReasonDialog_, this.submitSelectedRejectReason.bind(this))) {
    return Promise.resolve();
  }
  this.toast_ = goog.dom.getRequiredElement("toast");
  this.setUpShortcuts_();
  this.unsetRejectReason_();
  return new Promise(function(resolve) {
    $jscomp$this.cc_.init(function(questionData) {
      $jscomp$this.init_(questionData).then(function() {
        return resolve();
      }, function() {
        return resolve();
      });
    });
  });
};
goog.exportProperty(speech.crowdcompute.AudioTranscription.prototype, "onload", speech.crowdcompute.AudioTranscription.prototype.onload);
speech.crowdcompute.AudioTranscription.prototype.submitSelectedRejectReason = function() {
  var rejectReason = this.getRejectReason_();
  0 <= rejectReason ? this.setRejectReason_(rejectReason) : this.unsetRejectReason_();
  this.rejectReasonDialog_.close();
  return this.submitAnswer();
};
goog.exportProperty(speech.crowdcompute.AudioTranscription.prototype, "submitSelectedRejectReason", speech.crowdcompute.AudioTranscription.prototype.submitSelectedRejectReason);
speech.crowdcompute.AudioTranscription.prototype.init_ = function(questionData) {
  var $jscomp$this = this;
  var doneButton = goog.dom.getRequiredElement("done-button");
  goog.events.removeAll(doneButton);
  goog.events.listen(doneButton, goog.events.EventType.CLICK, this.submitAnswer.bind(this));
  var rejectButton = goog.dom.getRequiredElement("reject-button");
  goog.events.removeAll(rejectButton);
  goog.events.listen(rejectButton, goog.events.EventType.CLICK, function() {
    $jscomp$this.rejectReasonDialog_.showModal();
  });
  var preambleText = goog.dom.getRequiredElement("preamble-text");
  goog.events.removeAll(preambleText);
  goog.events.listen(preambleText, goog.events.EventType.KEYDOWN, function() {
    $jscomp$this.unsetRejectReason_();
  });
  var transcriptionText = goog.dom.getRequiredElement("transcription-text");
  goog.events.removeAll(transcriptionText);
  goog.events.listen(transcriptionText, goog.events.EventType.KEYDOWN, function(e) {
    $jscomp$this.unsetRejectReason_();
    e.keyCode != goog.events.KeyCodes.ENTER || doneButton.disabled || ($jscomp$this.submitAnswer(), e.preventDefault());
  });
  var validateOnType = function() {
    0 <= $jscomp$this.lastValidationCallId_ && goog.Timer.clear($jscomp$this.lastValidationCallId_);
    $jscomp$this.lastValidationCallId_ = goog.Timer.callOnce($jscomp$this.validateEnteredTranscriptions_.bind($jscomp$this), speech.crowdcompute.AudioTranscription.VALIDATION_DELAY_MS_);
  };
  goog.events.listen(preambleText, goog.events.EventType.INPUT, validateOnType);
  goog.events.listen(transcriptionText, goog.events.EventType.INPUT, validateOnType);
  this.api_.registerRetryCallback(function() {
    $jscomp$this.showToast_("Server is slow or unavailable. Retrying...");
  });
  this.cc_.registerGetAnswerDataCallback(goog.bind(this.getAnswer_, this));
  this.cc_.registerSetAnswerDataCallback(goog.bind(this.setAnswer_, this));
  this.cc_.registerOnShowCallback(function() {
    $jscomp$this.audioArrayBuffer_ && $jscomp$this.initWavesurferAndPlay_()["catch"](function(reason) {
      window.console.log("Failed to initialize Wavesurfer: " + reason);
    });
    var preambleText = goog.dom.getRequiredElement("preamble-text");
    preambleText.value ? preambleText.focus() : goog.dom.getRequiredElement("transcription-text").focus();
    $jscomp$this.visible_ = !0;
  });
  this.cc_.registerOnHideCallback(function() {
    $jscomp$this.visible_ = !1;
    $jscomp$this.wavesurfer_.isPlaying() && $jscomp$this.wavesurfer_.stop();
    $jscomp$this.wavesurfer_.destroy();
  });
  return this.loadQuestion_(questionData);
};
speech.crowdcompute.AudioTranscription.prototype.initWavesurferAndPlay_ = function() {
  var $jscomp$this = this;
  this.wavesurfer_.init({container:"#waveform", fillParent:!0, normalize:!0, height:60, splitChannels:!0, pixelRatio:1});
  var playPauseButton = goog.dom.getRequiredElement("playpause-button");
  goog.events.removeAll(playPauseButton);
  goog.events.listen(playPauseButton, goog.events.EventType.CLICK, this.wavesurfer_.playPause.bind(this.wavesurfer_));
  var waveformPosLabel = goog.dom.getRequiredElement("waveform-pos");
  var updatePosition = function() {
    goog.dom.setTextContent(waveformPosLabel, $jscomp$this.wavesurfer_.getCurrentTime().toFixed(2) + "s");
  };
  this.wavesurfer_.on("seek", updatePosition);
  return new Promise(function(resolve, reject) {
    $jscomp$this.wavesurfer_.on("ready", function() {
      $jscomp$this.setPreambleLength_($jscomp$this.preambleLength_);
      $jscomp$this.wavesurfer_.play();
      resolve();
    });
    $jscomp$this.wavesurfer_.on("error", function(reason) {
      reject(reason);
    });
    $jscomp$this.wavesurfer_.empty();
    $jscomp$this.wavesurfer_.loadArrayBuffer($jscomp$this.audioArrayBuffer_.slice(0));
  });
};
speech.crowdcompute.AudioTranscription.prototype.setPreambleLength_ = function(length) {
  this.wavesurfer_.clearRegions();
  var preambleText = goog.dom.getRequiredElement("preamble-text");
  0 < length ? (preambleText.disabled = !1, this.wavesurfer_.addRegion({id:"preamble", start:0.0, end:length, drag:!1, resize:!1, color:"rgba(48, 153, 0, 0.1)"})) : (preambleText.value = "", preambleText.disabled = !0);
};
speech.crowdcompute.AudioTranscription.prototype.setUpDialog_ = function(elem, opt_okHandler) {
  if (!elem.showModal) {
    return alert("Browser not supported. Please use Chrome."), !1;
  }
  var closeButton = goog.asserts.assertElement(goog.dom.getElementByClass("close", elem));
  goog.events.removeAll(closeButton);
  goog.events.listen(closeButton, goog.events.EventType.CLICK, function() {
    elem.close();
  });
  if (opt_okHandler) {
    var okButton = goog.asserts.assertElement(goog.dom.getElementByClass("ok", elem));
    goog.events.removeAll(okButton);
    goog.events.listen(okButton, goog.events.EventType.CLICK, opt_okHandler);
  }
  return !0;
};
speech.crowdcompute.AudioTranscription.prototype.showToast_ = function(message) {
  this.toast_.MaterialSnackbar && this.toast_.MaterialSnackbar.showSnackbar({message:message});
};
speech.crowdcompute.AudioTranscription.prototype.loadQuestion_ = function(questionData) {
  var $jscomp$this = this;
  this.utteranceId_ = questionData.uttid;
  this.projectId_ = questionData.project_id;
  this.batchLabel_ = questionData.batch_label || "";
  if (!this.utteranceId_) {
    return this.showModalDialog_(this.errorDialog_, 'Question broken: Missing utterance ID. Use [CANNOT TRANSCRIBE] button to select "Other reason" and notify your manager.'), Promise.resolve();
  }
  var instruction = questionData.instruction_short;
  if (instruction) {
    var taskInstruction = goog.dom.getRequiredElement("task-instruction");
    goog.dom.setTextContent(taskInstruction, instruction);
  }
  this.reviewedWorkerEmail_ = questionData.worker_email || "";
  var taskNameElement = goog.dom.getRequiredElement("task-name");
  if (this.reviewedWorkerEmail_) {
    goog.dom.setTextContent(taskNameElement, "Reviewing");
    goog.dom.setTextContent(goog.dom.getRequiredElement("author-email"), this.reviewedWorkerEmail_);
    var url = new goog.Uri(speech.crowdcompute.AudioTranscription.HISTORY_URL_);
    url.setParameterValue("project_id", this.projectId_);
    url.setParameterValue("worker_email", this.reviewedWorkerEmail_);
    goog.dom.safe.setAnchorHref(goog.dom.asserts.assertIsHTMLAnchorElement(goog.dom.getRequiredElement("see-past-work")), url.toString());
  } else {
    goog.dom.setTextContent(taskNameElement, "Transcribing"), goog.style.setElementShown(goog.dom.getRequiredElement("author"), !1);
  }
  goog.style.setElementShown(goog.dom.getRequiredElement("training-feedback"), !1);
  this.prefillIsGolden_ = questionData.prefill_is_golden || !1;
  this.api_.setUseSpudsQ32017(questionData.use_spuds_q32017 || !1);
  goog.style.setElementShown(goog.dom.getRequiredElement("transcription-panel"), !0);
  var loadConfigResult = this.api_.loadConfig(this.projectId_).then(function(config) {
    $jscomp$this.setConfig_(config);
  }, function(error) {
    $jscomp$this.showModalDialog_($jscomp$this.errorDialog_, "Cannot read configuration. Reload the page to retry.\n\n" + error.details);
    goog.dom.getRequiredElement("done-button").disabled = !0;
  });
  var loadAudioIndicator = goog.dom.getElementByClass("audio-spinner");
  loadConfigResult.then(function() {
    goog.dom.classlist.add(loadAudioIndicator, "is-active");
    return $jscomp$this.api_.loadAudio($jscomp$this.getAudioUrl_());
  }).then(function(resp) {
    goog.dom.classlist.remove(loadAudioIndicator, "is-active");
    $jscomp$this.audioArrayBuffer_ = resp.data;
    $jscomp$this.preambleLength_ = resp.preambleLength;
    if ($jscomp$this.visible_) {
      return $jscomp$this.initWavesurferAndPlay_();
    }
  }, function(err) {
    goog.dom.classlist.remove(loadAudioIndicator, "is-active");
    $jscomp$this.handleAudioError_(err);
  })["catch"](function(reason) {
    window.console.log("Failed to initialize Wavesurfer: " + reason);
  });
  var getAnnotationResult = this.api_.getAnnotation(this.utteranceId_, this.projectId_, this.reviewedWorkerEmail_).then(function(annotation) {
    $jscomp$this.prefillIsGolden_ && !annotation.getMachineTranscriptionTextOrDefault() ? ($jscomp$this.prefillIsGolden_ = !1, $jscomp$this.showModalDialog_($jscomp$this.errorDialog_, "Missing correct transcription for this training question. Use [CANNOT TRANSCRIBE] button to skip."), goog.dom.getRequiredElement("done-button").disabled = !0) : $jscomp$this.loadExistingTranscription_(annotation);
  }, function(error) {
    if (error.code == goog.net.HttpStatus.NOT_FOUND) {
      $jscomp$this.showToast_("No prefilled text for this question.");
    } else {
      var msg = "Cannot load question. Try reloading the page. If it doesn't work, use [CANNOT TRANSCRIBE] button:\n\n" + error.details;
      $jscomp$this.showModalDialog_($jscomp$this.errorDialog_, msg);
      goog.dom.getRequiredElement("done-button").disabled = !0;
    }
  });
  return Promise.all([loadConfigResult, getAnnotationResult]).then(function() {
    return Promise.resolve();
  });
};
speech.crowdcompute.AudioTranscription.prototype.getAudioUrl_ = function() {
  var url = new goog.Uri(speech.crowdcompute.AudioTranscription.AUDIO_URL_);
  url.setParameterValue("uttid", this.utteranceId_);
  switch(this.config_.getAudioContents()) {
    case speech.tools.crowd_compute.AudioTranscriptionConfig.AudioContents.AUDIO_ONLY:
      url.setParameterValue("content", "AUDIO_ONLY");
      break;
    case speech.tools.crowd_compute.AudioTranscriptionConfig.AudioContents.PREAMBLE_ONLY:
      url.setParameterValue("content", "PREAMBLE_ONLY");
  }
  return url.toString();
};
speech.crowdcompute.AudioTranscription.prototype.handleAudioError_ = function(error) {
  if (error.code == goog.net.HttpStatus.NOT_FOUND) {
    var errorMessage = "No audio for this question. Use [CANNOT TRANSCRIBE] button to skip";
    this.setRejectReason_(1);
  } else {
    errorMessage = "Cannot load audio. Try using reload button. If it doesn't work, use [CANNOT TRANSCRIBE] button:\n\n" + error.details;
  }
  this.showModalDialog_(this.errorDialog_, errorMessage);
  goog.dom.getRequiredElement("done-button").disabled = !0;
};
speech.crowdcompute.AudioTranscription.prototype.setConfig_ = function(config) {
  this.config_ = config.getAudioTranscriptionOrDefault();
  goog.dom.safe.setAnchorHref(goog.dom.asserts.assertIsHTMLAnchorElement(goog.dom.getElement("guideline-link")), this.getGuidelineUrl_());
  var taskInstruction = goog.dom.getRequiredElement("task-instruction");
  var configInstructionShort = this.config_.getInstructionShortOrDefault();
  var perQuestionInstructionShort = goog.dom.getTextContent(taskInstruction);
  if (!perQuestionInstructionShort && configInstructionShort) {
    var safeInstructionShort = goog.html.sanitizer.HtmlSanitizer.sanitize(configInstructionShort);
    goog.dom.safe.setInnerHtml(goog.dom.getRequiredElement("task-instruction"), safeInstructionShort);
  }
  var categoryTreeConfig = this.config_.getCategoryTreeOrDefault();
  0 < categoryTreeConfig.categoryArray().length && (this.categoryTree_ = new speech.crowdcompute.CategoryTree(categoryTreeConfig, this.templatePool_, this.shortcutHandler_), this.categoryTree_.init(goog.dom.getRequiredElement("category-tree")), this.deferredCategoriesForLoading_ && (this.categoryTree_.restoreSelectedLabelPaths(this.deferredCategoriesForLoading_), this.deferredCategoriesForLoading_ = null));
  this.config_.getAllowEmptyTranscriptionOrDefault() && goog.style.setElementShown(goog.dom.getRequiredElement("transcription-group"), !1);
};
speech.crowdcompute.AudioTranscription.prototype.loadExistingTranscription_ = function(annotation) {
  this.prefilledText_ = annotation.getMachineTranscriptionTextOrDefault().trim().replace(/\v+/g, " ");
  var preambleTranscription = "";
  var transcription = "";
  if (0 == annotation.transcriptionCount()) {
    if (this.reviewedWorkerEmail_) {
      this.showModalDialog_(this.errorDialog_, "The worker didn't submit any transcription. Nothing to review. Use [CANNOT TRANSCRIBE] button to skip this question.");
      return;
    }
    transcription = this.prefilledText_;
  } else {
    if (1 == annotation.transcriptionCount()) {
      var transcriptionProto = annotation.getTranscription(0);
      var rawTranscription = transcriptionProto.getText() || this.prefilledText_;
      var parts = goog.string.splitLimit(rawTranscription, speech.crowdcompute.AudioTranscription.PREAMBLE_QUERY_SPLITTER_, 1);
      if (2 == parts.length) {
        preambleTranscription = parts[0].trim(), transcription = parts[1].trim();
      } else {
        if (goog.string.startsWith(rawTranscription, "[") && goog.string.endsWith(rawTranscription, "]")) {
          var rejectReason = speech.crowdcompute.AudioTranscription.VALUE_TO_REJECT_REASON[rawTranscription] || 0;
          this.setRejectReason_(rejectReason);
        } else {
          transcription = rawTranscription;
        }
      }
      this.savedTranscription_ = transcription;
      transcriptionProto.categoryArray() && (this.categoryTree_ ? this.categoryTree_.restoreSelectedLabelPaths(transcriptionProto.categoryArray()) : this.deferredCategoriesForLoading_ = transcriptionProto.categoryArray());
    } else {
      this.showModalDialog_(this.errorDialog_, "Expect to see at most one transcription. Found " + annotation.transcriptionCount());
      return;
    }
  }
  if (!this.prefillIsGolden_) {
    var setText = function(element, text) {
      element.value = text;
      element.parentElement.MaterialTextfield && element.parentElement.MaterialTextfield.checkDirty();
    };
    setText(goog.dom.getRequiredElement("transcription-text"), transcription);
    preambleTranscription && setText(goog.dom.getRequiredElement("preamble-text"), preambleTranscription);
  }
  this.validateEnteredTranscriptions_();
};
speech.crowdcompute.AudioTranscription.prototype.showModalDialog_ = function(dialog, text) {
  var dialogContent = goog.dom.getElementByClass("dialog-content", dialog);
  dialogContent && (dialogContent.textContent = text);
  dialog.open || dialog.showModal();
};
speech.crowdcompute.AudioTranscription.prototype.submitAnswer = function() {
  var $jscomp$this = this;
  if (this.getSubmitInProgress_()) {
    return this.showToast_("Cannot submit answer. Another submit is in progress."), Promise.resolve();
  }
  if (this.prefillIsGolden_) {
    var feedbackDiv = goog.dom.getRequiredElement("training-feedback");
    if (!goog.style.isElementShown(feedbackDiv)) {
      return this.checkAnswerAndGiveFeedback_(), Promise.resolve();
    }
  }
  var enteredPreambleTranscription = goog.dom.getRequiredElement("preamble-text").value.trim().replace(/\v+/g, " ");
  var enteredTranscription = goog.dom.getRequiredElement("transcription-text").value.trim().replace(/\v+/g, " ");
  try {
    this.validateWordTags_(enteredPreambleTranscription), this.validateWordTags_(enteredTranscription);
  } catch (errorMessage) {
    return this.showToast_(errorMessage), Promise.resolve();
  }
  var hasTranscription = enteredTranscription || enteredPreambleTranscription;
  var rejectReason = this.getRejectReason_();
  if (!this.config_.getAllowEmptyTranscriptionOrDefault() && !hasTranscription && 0 > rejectReason) {
    return this.showToast_("Must fill in a transcription or select a reject reason."), Promise.resolve();
  }
  var labelPaths = [];
  if (this.categoryTree_ && 0 > rejectReason) {
    try {
      labelPaths = this.categoryTree_.getSelectLabelPaths();
    } catch (error) {
      return this.showToast_(error), Promise.resolve();
    }
  }
  var annotation = new speech.tools.Annotation;
  annotation.setUtteranceId(this.utteranceId_);
  var transcription = new speech.tools.Transcription;
  transcription.setBatchLabel(this.batchLabel_);
  labelPaths.forEach(function(labelPath) {
    transcription.addCategory(labelPath);
  });
  if (hasTranscription) {
    var preambleEncodedTranscriptionText = (enteredPreambleTranscription ? enteredPreambleTranscription + " " + speech.crowdcompute.AudioTranscription.PREAMBLE_QUERY_SPLITTER_ + " " : "") + enteredTranscription;
    transcription.setText(preambleEncodedTranscriptionText.trim());
  } else {
    if (0 <= rejectReason) {
      var marker = goog.asserts.assert(speech.crowdcompute.AudioTranscription.REJECT_REASON_TO_VALUE_[rejectReason], "Cannot find mapping to marker for " + rejectReason);
      transcription.setText(marker);
    } else {
      transcription.setText("");
    }
  }
  annotation.addTranscription(transcription);
  this.setSubmitInProgress_(!0);
  var setAnnotationResult = this.api_.setAnnotation(this.utteranceId_, this.projectId_, this.reviewedWorkerEmail_, annotation)["catch"](function(error) {
    if (error.code == goog.net.HttpStatus.NOT_FOUND || 0 == rejectReason || 1 == rejectReason) {
      $jscomp$this.transcriptionStatus_ = "DONE";
    } else {
      var msg = "Cannot save transcription. Use [DONE] button to try again. If it doesn't work, use [SKIP] button to skip this question:\n\n" + error.details;
      $jscomp$this.showModalDialog_($jscomp$this.errorDialog_, msg);
      throw error;
    }
  });
  var logEntry = this.getBaseLogEntry_();
  logEntry.setRejectReason(rejectReason);
  this.reviewedWorkerEmail_ ? (logEntry.setAction(speech.tools.crowd_compute.TranscriptionLogEntry.Action.REVIEW), logEntry.setReviewedWorkerEmail(this.reviewedWorkerEmail_), logEntry.setCorrectionEditDistance(goog.string.editDistance(enteredTranscription, this.savedTranscription_))) : (logEntry.setAction(speech.tools.crowd_compute.TranscriptionLogEntry.Action.SUBMIT), logEntry.setTouched(enteredTranscription !== this.prefilledText_), logEntry.setValidated(this.lastValidationState_));
  var collectStatsResult = this.api_.collectStats(logEntry)["catch"](function(error) {
    $jscomp$this.showModalDialog_($jscomp$this.errorDialog_, "Failed to collect stats: " + error.details);
    throw error;
  });
  return Promise.all([collectStatsResult, setAnnotationResult]).then(function() {
    $jscomp$this.transcriptionStatus_ = "DONE";
    $jscomp$this.cc_.doSubmit();
    $jscomp$this.setSubmitInProgress_(!1);
  }, function() {
    $jscomp$this.setSubmitInProgress_(!1);
  });
};
goog.exportProperty(speech.crowdcompute.AudioTranscription.prototype, "submitAnswer", speech.crowdcompute.AudioTranscription.prototype.submitAnswer);
speech.crowdcompute.AudioTranscription.prototype.checkAnswerAndGiveFeedback_ = function() {
  var entered = goog.dom.getRequiredElement("transcription-text").value.trim().replace(/\v+/g, " ");
  var expected = this.prefilledText_;
  var editDistance = goog.string.editDistance(entered, expected);
  var feedbackDiv = goog.dom.getRequiredElement("training-feedback");
  this.showToast_("Please check the feedback box.");
  goog.style.setElementShown(feedbackDiv, !0);
  goog.dom.setTextContent(goog.dom.getRequiredElement("entered-transcription"), entered);
  goog.dom.setTextContent(goog.dom.getRequiredElement("expected-transcription"), expected);
  goog.dom.setTextContent(goog.dom.getRequiredElement("training-feedback-text"), "Differences=" + editDistance);
  var doneButton = goog.dom.getRequiredElement("done-button");
  0 < editDistance ? (doneButton.disabled = !0, goog.dom.setTextContent(doneButton, "Wait..."), goog.Timer.callOnce(function() {
    goog.dom.setTextContent(doneButton, "Next");
    doneButton.disabled = !1;
  }, 6000)) : goog.dom.setTextContent(doneButton, "Next");
};
speech.crowdcompute.AudioTranscription.prototype.getSubmitInProgress_ = function() {
  return goog.dom.classlist.contains(goog.dom.getElementByClass("main-spinner"), "is-active");
};
speech.crowdcompute.AudioTranscription.prototype.setSubmitInProgress_ = function(submitting) {
  var indicator = goog.dom.getElementByClass("main-spinner");
  submitting ? goog.dom.classlist.add(indicator, "is-active") : goog.dom.classlist.remove(indicator, "is-active");
  goog.dom.getRequiredElement("done-button").disabled = submitting;
  goog.dom.getRequiredElement("reject-button").disabled = submitting;
};
speech.crowdcompute.AudioTranscription.prototype.getRejectReason_ = function() {
  var checkedRadio = document.querySelector('input[name="reject-reason"]:checked');
  return checkedRadio ? goog.string.parseInt(checkedRadio.value) : -1;
};
speech.crowdcompute.AudioTranscription.prototype.setRejectReason_ = function(rejectReason) {
  var radioToCheck = goog.dom.getElement("reject-" + rejectReason);
  radioToCheck && (radioToCheck.checked = !0);
  goog.dom.setTextContent(goog.dom.getRequiredElement("reject-reason-label"), speech.crowdcompute.AudioTranscription.REJECT_REASON_TO_LABEL_[rejectReason]);
  goog.style.setElementShown(goog.dom.getRequiredElement("reject-status"), !0);
  goog.dom.getRequiredElement("preamble-text").value = "";
  goog.dom.getRequiredElement("transcription-text").value = "";
  this.categoryTree_ && this.categoryTree_.clearSelectedLabelPaths();
};
speech.crowdcompute.AudioTranscription.prototype.unsetRejectReason_ = function() {
  goog.style.setElementShown(goog.dom.getRequiredElement("reject-status"), !1);
  if (0 <= this.getRejectReason_()) {
    var checkedRadio = document.querySelector('input[name="reject-reason"]:checked');
    checkedRadio.checked = !1;
  }
};
speech.crowdcompute.AudioTranscription.prototype.getBaseLogEntry_ = function() {
  var logEntry = new speech.tools.crowd_compute.TranscriptionLogEntry;
  logEntry.setUtteranceId(this.utteranceId_);
  logEntry.setQuestionId(this.cc_.getQid());
  this.cc_.getWorkerId && logEntry.setWorkerId(this.cc_.getWorkerId().toString());
  logEntry.setProjectId(this.projectId_ || "");
  return logEntry;
};
speech.crowdcompute.AudioTranscription.prototype.getAnswer_ = function() {
  return "" == this.transcriptionStatus_ ? null : {uttid:this.utteranceId_, status:"DONE", client_timestamp_utc:Date.now()};
};
speech.crowdcompute.AudioTranscription.prototype.setAnswer_ = function() {
  var transcriptionText = goog.dom.getElement("transcription-text");
  transcriptionText.disabled = !0;
  var doneButton = goog.dom.getElement("done-button");
  doneButton.disabled = !0;
};
speech.crowdcompute.AudioTranscription.prototype.validateEnteredTranscriptions_ = function() {
  var $jscomp$this = this;
  var validationErrorList = goog.dom.getRequiredElement("validation-error-list");
  goog.dom.removeChildren(validationErrorList);
  var getErrorItems = function(transcription) {
    return $jscomp$this.api_.validateTranscription(transcription, $jscomp$this.config_.getValidatorLocale() || "en-US", $jscomp$this.getGuidelineUrl_()).then(function(errorArray) {
      return errorArray.map(function(error) {
        return $jscomp$this.createValidationErrorDom_(error, transcription);
      });
    });
  };
  var premableValidationResult = getErrorItems(goog.dom.getRequiredElement("preamble-text").value);
  var queryValidationResult = getErrorItems(goog.dom.getRequiredElement("transcription-text").value);
  Promise.all([premableValidationResult, queryValidationResult]).then(function(errorItemArrays) {
    goog.asserts.assert(2 == errorItemArrays.length);
    var allItems = errorItemArrays[0].concat(errorItemArrays[1]);
    allItems.forEach(function(errorListItem) {
      validationErrorList.appendChild(errorListItem);
    });
    $jscomp$this.lastValidationState_ = 0 == allItems.length;
  }, function(error) {
    $jscomp$this.showToast_("Cannot validate transcription: " + error.details);
    $jscomp$this.lastValidationState_ = !1;
  });
};
speech.crowdcompute.AudioTranscription.prototype.createValidationErrorDom_ = function(error, transcription) {
  var errorData = new speech.crowdcompute.ValidationErrorData;
  errorData.setText(error.getMessage());
  errorData.setSeverity(this.convertSeverity_(error.getSeverity()));
  errorData.setDetailLink(error.getGuidelinesLink());
  if (error.getReplacement() && error.hasOffset() && error.hasLength()) {
    var original = transcription.substr(goog.asserts.assertNumber(error.getOffset()), goog.asserts.assertNumber(error.getLength()));
    errorData.setOriginal(original);
    errorData.setReplacement(error.getReplacement());
  }
  var template = new speech.crowdcompute.ValidationErrorTemplate(this.templatePool_);
  template.fill(errorData);
  var elem = goog.asserts.assertElement(template.instantiate(null));
  template.render();
  return elem;
};
speech.crowdcompute.AudioTranscription.prototype.setUpShortcuts_ = function() {
  var $jscomp$this = this;
  this.shortcutHandler_.setAllShortcutsAreGlobal(!0);
  var wavesurfer = this.wavesurfer_;
  this.addShortcut_("rewind5sec", "Ctrl+r", function() {
    wavesurfer.play();
    wavesurfer.skipBackward(5);
  });
  this.addShortcut_("replay", "Ctrl+Alt+r", function() {
    wavesurfer.play(0);
  });
  this.addShortcut_("playpause", "Ctrl+p", function() {
    wavesurfer.playPause();
  });
  this.addShortcut_("search", "Ctrl+g", function() {
    var input = goog.dom.getElement("transcription-text");
    var query = input.selectionStart == input.selectionEnd ? input.value : input.value.slice(input.selectionStart, input.selectionEnd);
    window.open(($jscomp$this.config_.getSearchUrl() || "http://google.com/search?q=") + encodeURIComponent(query), "googlesearch");
  });
  this.addShortcut_("guideline", "Ctrl+Alt+g", function() {
    window.open($jscomp$this.getGuidelineUrl_(), "guideline");
  });
  this.addShortcut_("done", "Ctrl+Enter", function() {
    $jscomp$this.unsetRejectReason_();
    goog.dom.getRequiredElement("done-button").disabled || $jscomp$this.submitAnswer();
  });
};
speech.crowdcompute.AudioTranscription.prototype.getGuidelineUrl_ = function() {
  return speech.crowdcompute.AudioTranscription.GUIDELINE_URL_ + (this.config_.getGuideline() || "en_us_test_set") + "/index.html";
};
speech.crowdcompute.AudioTranscription.prototype.addShortcut_ = function(identifier, shortcut, handler) {
  this.shortcutHandler_.registerShortcut(identifier, shortcut);
  goog.events.listen(this.shortcutHandler_, this.shortcutHandler_.getEventType(identifier), handler);
};
speech.crowdcompute.AudioTranscription.prototype.convertSeverity_ = function(severity) {
  switch(severity) {
    case speech.Severity.SPELL_CHECKER:
      return speech.crowdcompute.ValidationErrorData.Level.INFO;
    case speech.Severity.DO_NOT_SUBMIT:
    case speech.Severity.ERROR:
      return speech.crowdcompute.ValidationErrorData.Level.FATAL;
    default:
      return speech.crowdcompute.ValidationErrorData.Level.WARNING;
  }
};
speech.crowdcompute.AudioTranscription.prototype.validateWordTags_ = function(transcription) {
  if (0 <= transcription.indexOf("[") || 0 <= transcription.indexOf("]")) {
    throw "Square bracket ([, ]) are not allowed in the transcription.";
  }
  var wordTags = transcription.match(/{[^{}]*}/g) || [];
  var allowedTags = new Set(this.config_.allowedTagArray().map(function(t) {
    return t.getTag();
  }));
  0 != allowedTags.size && wordTags.forEach(function(wt) {
    var wordTag = wt.replace(/[{}]/g, "");
    if (!allowedTags.has(wordTag)) {
      throw "Tag not allowed! " + wt;
    }
  });
};
/*

 BSD 3-Clause License

 Copyright (c) 2012-2017, katspaugh and contributors
 All rights reserved.

 Redistribution and use in source and binary forms, with or without
 modification, are permitted provided that the following conditions are met:

 * Redistributions of source code must retain the above copyright notice, this
   list of conditions and the following disclaimer.

 * Redistributions in binary form must reproduce the above copyright notice,
   this list of conditions and the following disclaimer in the documentation
   and/or other materials provided with the distribution.

 * Neither the name of the copyright holder nor the names of its
   contributors may be used to endorse or promote products derived from
   this software without specific prior written permission.

 THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 POSSIBILITY OF SUCH DAMAGE.
*/
var WaveSurfer = {defaultParams:{audioContext:null, audioRate:1, autoCenter:!0, backend:"WebAudio", barHeight:1, closeAudioContext:!1, container:null, cursorColor:"#333", cursorWidth:1, dragSelection:!0, fillParent:!0, forceDecode:!1, height:128, hideScrollbar:!1, interact:!0, loopSelection:!0, mediaContainer:null, mediaControls:!1, mediaType:"audio", minPxPerSec:20, partialRender:!1, pixelRatio:window.devicePixelRatio || screen.deviceXDPI / screen.logicalXDPI, progressColor:"#555", normalize:!1, 
renderer:"MultiCanvas", scrollParent:!1, skipLength:2, splitChannels:!1, waveColor:"#999"}, init:function(params) {
  this.params = WaveSurfer.util.extend({}, this.defaultParams, params);
  this.container = "string" == typeof params.container ? document.querySelector(this.params.container) : this.params.container;
  if (!this.container) {
    throw Error("Container element not found");
  }
  this.mediaContainer = null == this.params.mediaContainer ? this.container : "string" == typeof this.params.mediaContainer ? document.querySelector(this.params.mediaContainer) : this.params.mediaContainer;
  if (!this.mediaContainer) {
    throw Error("Media Container element not found");
  }
  this.savedVolume = 0;
  this.isMuted = !1;
  this.tmpEvents = [];
  this.currentAjax = null;
  this.createDrawer();
  this.createBackend();
  this.createPeakCache();
  this.isDestroyed = !1;
}, createDrawer:function() {
  var my = this;
  this.drawer = Object.create(WaveSurfer.Drawer[this.params.renderer]);
  this.drawer.init(this.container, this.params);
  this.drawer.on("redraw", function() {
    my.drawBuffer();
    my.drawer.progress(my.backend.getPlayedPercents());
  });
  this.drawer.on("click", function(e, progress) {
    setTimeout(function() {
      my.seekTo(progress);
    }, 0);
  });
  this.drawer.on("scroll", function(e) {
    my.params.partialRender && my.drawBuffer();
    my.fireEvent("scroll", e);
  });
}, createBackend:function() {
  var my = this;
  this.backend && this.backend.destroy();
  "AudioElement" == this.params.backend && (this.params.backend = "MediaElement");
  "WebAudio" != this.params.backend || WaveSurfer.WebAudio.supportsWebAudio() || (this.params.backend = "MediaElement");
  this.backend = Object.create(WaveSurfer[this.params.backend]);
  this.backend.init(this.params);
  this.backend.on("finish", function() {
    my.fireEvent("finish");
  });
  this.backend.on("play", function() {
    my.fireEvent("play");
  });
  this.backend.on("pause", function() {
    my.fireEvent("pause");
  });
  this.backend.on("audioprocess", function(time) {
    my.drawer.progress(my.backend.getPlayedPercents());
    my.fireEvent("audioprocess", time);
  });
}, createPeakCache:function() {
  this.params.partialRender && (this.peakCache = Object.create(WaveSurfer.PeakCache), this.peakCache.init());
}, getDuration:function() {
  return this.backend.getDuration();
}, play:function(start, end) {
  this.fireEvent("interaction", this.play.bind(this, start, end));
  this.backend.play(start, end);
}, pause:function() {
  this.backend.isPaused() || this.backend.pause();
}, playPause:function() {
  this.backend.isPaused() ? this.play() : this.pause();
}, isPlaying:function() {
  return !this.backend.isPaused();
}, skipBackward:function(seconds) {
  this.skip(-seconds || -this.params.skipLength);
}, skipForward:function(seconds) {
  this.skip(seconds || this.params.skipLength);
}, skip:function(offset) {
  var position = this.getCurrentTime() || 0;
  var duration = this.getDuration() || 1;
  position = Math.max(0, Math.min(duration, position + (offset || 0)));
  this.seekAndCenter(position / duration);
}, seekAndCenter:function(progress) {
  this.seekTo(progress);
  this.drawer.recenter(progress);
}, seekTo:function(progress) {
  this.fireEvent("interaction", this.seekTo.bind(this, progress));
  var paused = this.backend.isPaused();
  paused || this.backend.pause();
  var oldScrollParent = this.params.scrollParent;
  this.params.scrollParent = !1;
  this.backend.seekTo(progress * this.getDuration());
  this.drawer.progress(this.backend.getPlayedPercents());
  paused || this.backend.play();
  this.params.scrollParent = oldScrollParent;
  this.fireEvent("seek", progress);
}, stop:function() {
  this.pause();
  this.seekTo(0);
  this.drawer.progress(0);
}, setVolume:function(newVolume) {
  this.backend.setVolume(newVolume);
}, getVolume:function() {
  return this.backend.getVolume();
}, getCurrentTime:function() {
  return this.backend.getCurrentTime();
}, setCurrentTime:function(seconds) {
  this.getDuration() >= seconds ? this.seekTo(1) : this.seekTo(seconds / this.getDuration());
}, setPlaybackRate:function(rate) {
  this.backend.setPlaybackRate(rate);
}, getPlaybackRate:function() {
  return this.backend.getPlaybackRate();
}, toggleMute:function() {
  this.setMute(!this.isMuted);
}, setMute:function(mute) {
  mute !== this.isMuted && (mute ? (this.savedVolume = this.backend.getVolume(), this.backend.setVolume(0), this.isMuted = !0) : (this.backend.setVolume(this.savedVolume), this.isMuted = !1));
}, getMute:function() {
  return this.isMuted;
}, getFilters:function() {
  return this.backend.filters || [];
}, toggleScroll:function() {
  this.params.scrollParent = !this.params.scrollParent;
  this.drawBuffer();
}, toggleInteraction:function() {
  this.params.interact = !this.params.interact;
}, drawBuffer:function() {
  var nominalWidth = Math.round(this.getDuration() * this.params.minPxPerSec * this.params.pixelRatio);
  var parentWidth = this.drawer.getWidth();
  var width = nominalWidth;
  var start = this.drawer.getScrollX();
  var end = Math.min(start + parentWidth, width);
  this.params.fillParent && (!this.params.scrollParent || nominalWidth < parentWidth) && (width = parentWidth, start = 0, end = width);
  if (this.params.partialRender) {
    var newRanges = this.peakCache.addRangeToPeakCache(width, start, end);
    for (var i = 0; i < newRanges.length; i++) {
      var peaks = this.backend.getPeaks(width, newRanges[i][0], newRanges[i][1]);
      this.drawer.drawPeaks(peaks, width, newRanges[i][0], newRanges[i][1]);
    }
  } else {
    start = 0, end = width, peaks = this.backend.getPeaks(width, start, end), this.drawer.drawPeaks(peaks, width, start, end);
  }
  this.fireEvent("redraw", peaks, width);
}, zoom:function(pxPerSec) {
  this.params.minPxPerSec = pxPerSec;
  this.params.scrollParent = !0;
  this.drawBuffer();
  this.drawer.progress(this.backend.getPlayedPercents());
  this.drawer.recenter(this.getCurrentTime() / this.getDuration());
  this.fireEvent("zoom", pxPerSec);
}, loadArrayBuffer:function(arraybuffer) {
  this.decodeArrayBuffer(arraybuffer, function(data) {
    this.isDestroyed || this.loadDecodedBuffer(data);
  }.bind(this));
}, loadDecodedBuffer:function(buffer) {
  this.backend.load(buffer);
  this.drawBuffer();
  this.fireEvent("ready");
}, loadBlob:function(blob) {
  var my = this;
  var reader = new FileReader;
  reader.addEventListener("progress", function(e) {
    my.onProgress(e);
  });
  reader.addEventListener("load", function(e) {
    my.loadArrayBuffer(e.target.result);
  });
  reader.addEventListener("error", function() {
    my.fireEvent("error", "Error reading file");
  });
  reader.readAsArrayBuffer(blob);
  this.empty();
}, load:function(url, peaks, preload) {
  this.empty();
  this.isMuted = !1;
  switch(this.params.backend) {
    case "WebAudio":
      return this.loadBuffer(url, peaks);
    case "MediaElement":
      return this.loadMediaElement(url, peaks, preload);
  }
}, loadBuffer:function(url, peaks) {
  var load = function(action) {
    action && this.tmpEvents.push(this.once("ready", action));
    return this.getArrayBuffer(url, this.loadArrayBuffer.bind(this));
  }.bind(this);
  if (peaks) {
    this.backend.setPeaks(peaks), this.drawBuffer(), this.tmpEvents.push(this.once("interaction", load));
  } else {
    return load();
  }
}, loadMediaElement:function(urlOrElt, peaks, preload) {
  var url = urlOrElt;
  if ("string" === typeof urlOrElt) {
    this.backend.load(url, this.mediaContainer, peaks, preload);
  } else {
    var elt = urlOrElt;
    this.backend.loadElt(elt, peaks);
    url = elt.src;
  }
  this.tmpEvents.push(this.backend.once("canplay", function() {
    this.drawBuffer();
    this.fireEvent("ready");
  }.bind(this)), this.backend.once("error", function(err) {
    this.fireEvent("error", err);
  }.bind(this)));
  peaks && this.backend.setPeaks(peaks);
  peaks && !this.params.forceDecode || !this.backend.supportsWebAudio() || this.getArrayBuffer(url, function(arraybuffer) {
    this.decodeArrayBuffer(arraybuffer, function(buffer) {
      this.backend.buffer = buffer;
      this.backend.setPeaks(null);
      this.drawBuffer();
      this.fireEvent("waveform-ready");
    }.bind(this));
  }.bind(this));
}, decodeArrayBuffer:function(arraybuffer, callback) {
  this.arraybuffer = arraybuffer;
  this.backend.decodeArrayBuffer(arraybuffer, function(data) {
    this.isDestroyed || this.arraybuffer != arraybuffer || (callback(data), this.arraybuffer = null);
  }.bind(this), this.fireEvent.bind(this, "error", "Error decoding audiobuffer"));
}, getArrayBuffer:function(url, callback) {
  var my = this;
  var ajax = WaveSurfer.util.ajax({url:url, responseType:"arraybuffer"});
  this.currentAjax = ajax;
  this.tmpEvents.push(ajax.on("progress", function(e) {
    my.onProgress(e);
  }), ajax.on("success", function(data) {
    callback(data);
    my.currentAjax = null;
  }), ajax.on("error", function(e) {
    my.fireEvent("error", "XHR error: " + e.target.statusText);
    my.currentAjax = null;
  }));
  return ajax;
}, onProgress:function(e) {
  var percentComplete = e.lengthComputable ? e.loaded / e.total : e.loaded / (e.loaded + 1000000);
  this.fireEvent("loading", Math.round(100 * percentComplete), e.target);
}, exportPCM:function(length, accuracy, noWindow, start) {
  length = length || 1024;
  start = start || 0;
  accuracy = accuracy || 10000;
  noWindow = noWindow || !1;
  var peaks = this.backend.getPeaks(length, start);
  var arr = [].map.call(peaks, function(val) {
    return Math.round(val * accuracy) / accuracy;
  });
  var json = JSON.stringify(arr);
  noWindow || window.open("data:application/json;charset=utf-8," + encodeURIComponent(json));
  return json;
}, exportImage:function(format, quality) {
  format || (format = "image/png");
  quality || (quality = 1);
  return this.drawer.getImage(format, quality);
}, cancelAjax:function() {
  this.currentAjax && (this.currentAjax.xhr.abort(), this.currentAjax = null);
}, clearTmpEvents:function() {
  this.tmpEvents.forEach(function(e) {
    e.un();
  });
}, empty:function() {
  this.backend.isPaused() || (this.stop(), this.backend.disconnectSource());
  this.cancelAjax();
  this.clearTmpEvents();
  this.drawer.progress(0);
  this.drawer.setWidth(0);
  this.drawer.drawPeaks({length:this.drawer.getWidth()}, 0);
}, destroy:function() {
  this.fireEvent("destroy");
  this.cancelAjax();
  this.clearTmpEvents();
  this.unAll();
  this.backend.destroy();
  this.drawer.destroy();
  this.isDestroyed = !0;
}, create:function(params) {
  var wavesurfer = Object.create(WaveSurfer);
  wavesurfer.init(params);
  return wavesurfer;
}};
WaveSurfer.util = {requestAnimationFrame:(window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function(callback) {
  setTimeout(callback, 1000 / 60);
}).bind(window), frame:function(func) {
  return function() {
    var my = this;
    var args = arguments;
    WaveSurfer.util.requestAnimationFrame(function() {
      func.apply(my, args);
    });
  };
}, extend:function(dest) {
  var sources = Array.prototype.slice.call(arguments, 1);
  sources.forEach(function(source) {
    Object.keys(source).forEach(function(key) {
      dest[key] = source[key];
    });
  });
  return dest;
}, debounce:function(func, wait, immediate) {
  var args;
  var context;
  var timeout;
  var later = function() {
    timeout = null;
    immediate || func.apply(context, args);
  };
  return function() {
    context = this;
    args = arguments;
    var callNow = immediate && !timeout;
    clearTimeout(timeout);
    timeout = setTimeout(later, wait);
    timeout || (timeout = setTimeout(later, wait));
    callNow && func.apply(context, args);
  };
}, min:function(values) {
  var min = Infinity;
  for (var i in values) {
    values[i] < min && (min = values[i]);
  }
  return min;
}, max:function(values) {
  var max = -Infinity;
  for (var i in values) {
    values[i] > max && (max = values[i]);
  }
  return max;
}, getId:function() {
  return "wavesurfer_" + Math.random().toString(32).substring(2);
}, ajax:function(options) {
  var ajax = Object.create(WaveSurfer.Observer);
  var xhr = new XMLHttpRequest;
  var fired100 = !1;
  xhr.open(options.method || "GET", options.url, !0);
  xhr.responseType = options.responseType || "json";
  xhr.addEventListener("progress", function(e) {
    ajax.fireEvent("progress", e);
    e.lengthComputable && e.loaded == e.total && (fired100 = !0);
  });
  xhr.addEventListener("load", function(e) {
    fired100 || ajax.fireEvent("progress", e);
    ajax.fireEvent("load", e);
    200 == xhr.status || 206 == xhr.status ? ajax.fireEvent("success", xhr.response, e) : ajax.fireEvent("error", e);
  });
  xhr.addEventListener("error", function(e) {
    ajax.fireEvent("error", e);
  });
  xhr.send();
  ajax.xhr = xhr;
  return ajax;
}};
WaveSurfer.Observer = {on:function(event, fn) {
  this.handlers || (this.handlers = {});
  var handlers = this.handlers[event];
  handlers || (handlers = this.handlers[event] = []);
  handlers.push(fn);
  return {name:event, callback:fn, un:this.un.bind(this, event, fn)};
}, un:function(event, fn) {
  if (this.handlers) {
    var handlers = this.handlers[event];
    if (handlers) {
      if (fn) {
        for (var i = handlers.length - 1; 0 <= i; i--) {
          handlers[i] == fn && handlers.splice(i, 1);
        }
      } else {
        handlers.length = 0;
      }
    }
  }
}, unAll:function() {
  this.handlers = null;
}, once:function(event, handler) {
  var my = this;
  var fn = function() {
    handler.apply(this, arguments);
    setTimeout(function() {
      my.un(event, fn);
    }, 0);
  };
  return this.on(event, fn);
}, fireEvent:function(event) {
  if (this.handlers) {
    var handlers = this.handlers[event];
    var args = Array.prototype.slice.call(arguments, 1);
    handlers && handlers.forEach(function(fn) {
      fn.apply(null, args);
    });
  }
}};
WaveSurfer.util.extend(WaveSurfer, WaveSurfer.Observer);
WaveSurfer.WebAudio = {scriptBufferSize:256, PLAYING_STATE:0, PAUSED_STATE:1, FINISHED_STATE:2, supportsWebAudio:function() {
  return !(!window.AudioContext && !window.webkitAudioContext);
}, getAudioContext:function() {
  WaveSurfer.WebAudio.audioContext || (WaveSurfer.WebAudio.audioContext = new (window.AudioContext || window.webkitAudioContext));
  return WaveSurfer.WebAudio.audioContext;
}, getOfflineAudioContext:function(sampleRate) {
  WaveSurfer.WebAudio.offlineAudioContext || (WaveSurfer.WebAudio.offlineAudioContext = new (window.OfflineAudioContext || window.webkitOfflineAudioContext)(1, 2, sampleRate));
  return WaveSurfer.WebAudio.offlineAudioContext;
}, init:function(params) {
  this.params = params;
  this.ac = params.audioContext || this.getAudioContext();
  this.lastPlay = this.ac.currentTime;
  this.startPosition = 0;
  this.scheduledPause = null;
  this.states = [Object.create(WaveSurfer.WebAudio.state.playing), Object.create(WaveSurfer.WebAudio.state.paused), Object.create(WaveSurfer.WebAudio.state.finished)];
  this.createVolumeNode();
  this.createScriptNode();
  this.createAnalyserNode();
  this.setState(this.PAUSED_STATE);
  this.setPlaybackRate(this.params.audioRate);
  this.setLength(0);
}, disconnectFilters:function() {
  this.filters && (this.filters.forEach(function(filter) {
    filter && filter.disconnect();
  }), this.filters = null, this.analyser.connect(this.gainNode));
}, setState:function(state) {
  this.state !== this.states[state] && (this.state = this.states[state], this.state.init.call(this));
}, setFilter:function() {
  this.setFilters([].slice.call(arguments));
}, setFilters:function(filters) {
  this.disconnectFilters();
  filters && filters.length && (this.filters = filters, this.analyser.disconnect(), filters.reduce(function(prev, curr) {
    prev.connect(curr);
    return curr;
  }, this.analyser).connect(this.gainNode));
}, createScriptNode:function() {
  this.scriptNode = this.ac.createScriptProcessor ? this.ac.createScriptProcessor(this.scriptBufferSize) : this.ac.createJavaScriptNode(this.scriptBufferSize);
  this.scriptNode.connect(this.ac.destination);
}, addOnAudioProcess:function() {
  var my = this;
  this.scriptNode.onaudioprocess = function() {
    var time = my.getCurrentTime();
    time >= my.getDuration() ? (my.setState(my.FINISHED_STATE), my.fireEvent("pause")) : time >= my.scheduledPause ? my.pause() : my.state === my.states[my.PLAYING_STATE] && my.fireEvent("audioprocess", time);
  };
}, removeOnAudioProcess:function() {
  this.scriptNode.onaudioprocess = null;
}, createAnalyserNode:function() {
  this.analyser = this.ac.createAnalyser();
  this.analyser.connect(this.gainNode);
}, createVolumeNode:function() {
  this.gainNode = this.ac.createGain ? this.ac.createGain() : this.ac.createGainNode();
  this.gainNode.connect(this.ac.destination);
}, setVolume:function(newGain) {
  this.gainNode.gain.value = newGain;
}, getVolume:function() {
  return this.gainNode.gain.value;
}, decodeArrayBuffer:function(arraybuffer, callback, errback) {
  this.offlineAc || (this.offlineAc = this.getOfflineAudioContext(this.ac ? this.ac.sampleRate : 44100));
  this.offlineAc.decodeAudioData(arraybuffer, function(data) {
    callback(data);
  }.bind(this), errback);
}, setPeaks:function(peaks) {
  this.peaks = peaks;
}, setLength:function(length) {
  if (!this.mergedPeaks || length != 2 * this.mergedPeaks.length - 1 + 2) {
    this.splitPeaks = [];
    this.mergedPeaks = [];
    var channels = this.buffer ? this.buffer.numberOfChannels : 1;
    for (var c = 0; c < channels; c++) {
      this.splitPeaks[c] = [], this.splitPeaks[c][2 * (length - 1)] = 0, this.splitPeaks[c][2 * (length - 1) + 1] = 0;
    }
    this.mergedPeaks[2 * (length - 1)] = 0;
    this.mergedPeaks[2 * (length - 1) + 1] = 0;
  }
}, getPeaks:function(length, first, last) {
  if (this.peaks) {
    return this.peaks;
  }
  first = first || 0;
  last = last || length - 1;
  this.setLength(length);
  if (!this.buffer.length) {
    var newBuffer = this.createBuffer(1, 4096, this.sampleRate);
    this.buffer = newBuffer.buffer;
  }
  var sampleSize = this.buffer.length / length;
  var sampleStep = ~~(sampleSize / 10) || 1;
  var channels = this.buffer.numberOfChannels;
  for (var c = 0; c < channels; c++) {
    var peaks = this.splitPeaks[c];
    var chan = this.buffer.getChannelData(c);
    for (var i = first; i <= last; i++) {
      var start = ~~(i * sampleSize);
      var end = ~~(start + sampleSize);
      var min = 0;
      var max = 0;
      for (var j = start; j < end; j += sampleStep) {
        var value = chan[j];
        value > max && (max = value);
        value < min && (min = value);
      }
      peaks[2 * i] = max;
      peaks[2 * i + 1] = min;
      if (0 == c || max > this.mergedPeaks[2 * i]) {
        this.mergedPeaks[2 * i] = max;
      }
      if (0 == c || min < this.mergedPeaks[2 * i + 1]) {
        this.mergedPeaks[2 * i + 1] = min;
      }
    }
  }
  return this.params.splitChannels ? this.splitPeaks : this.mergedPeaks;
}, getPlayedPercents:function() {
  return this.state.getPlayedPercents.call(this);
}, disconnectSource:function() {
  this.source && this.source.disconnect();
}, destroy:function() {
  this.isPaused() || this.pause();
  this.unAll();
  this.buffer = null;
  this.disconnectFilters();
  this.disconnectSource();
  this.gainNode.disconnect();
  this.scriptNode.disconnect();
  this.analyser.disconnect();
  this.params.closeAudioContext && ("function" === typeof this.ac.close && "closed" != this.ac.state && this.ac.close(), this.ac = null, this.params.audioContext ? this.params.audioContext = null : WaveSurfer.WebAudio.audioContext = null, WaveSurfer.WebAudio.offlineAudioContext = null);
}, load:function(buffer) {
  this.startPosition = 0;
  this.lastPlay = this.ac.currentTime;
  this.buffer = buffer;
  this.createSource();
}, createSource:function() {
  this.disconnectSource();
  this.source = this.ac.createBufferSource();
  this.source.start = this.source.start || this.source.noteGrainOn;
  this.source.stop = this.source.stop || this.source.noteOff;
  this.source.playbackRate.value = this.playbackRate;
  this.source.buffer = this.buffer;
  this.source.connect(this.analyser);
}, isPaused:function() {
  return this.state !== this.states[this.PLAYING_STATE];
}, getDuration:function() {
  return this.buffer ? this.buffer.duration : 0;
}, seekTo:function(start, end) {
  if (this.buffer) {
    return this.scheduledPause = null, null == start && (start = this.getCurrentTime(), start >= this.getDuration() && (start = 0)), null == end && (end = this.getDuration()), this.startPosition = start, this.lastPlay = this.ac.currentTime, this.state === this.states[this.FINISHED_STATE] && this.setState(this.PAUSED_STATE), {start:start, end:end};
  }
}, getPlayedTime:function() {
  return (this.ac.currentTime - this.lastPlay) * this.playbackRate;
}, play:function(start, end) {
  if (this.buffer) {
    this.createSource();
    var adjustedTime = this.seekTo(start, end);
    start = adjustedTime.start;
    end = adjustedTime.end;
    this.scheduledPause = end;
    this.source.start(0, start, end - start);
    "suspended" == this.ac.state && this.ac.resume && this.ac.resume();
    this.setState(this.PLAYING_STATE);
    this.fireEvent("play");
  }
}, pause:function() {
  this.scheduledPause = null;
  this.startPosition += this.getPlayedTime();
  this.source && this.source.stop(0);
  this.setState(this.PAUSED_STATE);
  this.fireEvent("pause");
}, getCurrentTime:function() {
  return this.state.getCurrentTime.call(this);
}, getPlaybackRate:function() {
  return this.playbackRate;
}, setPlaybackRate:function(value) {
  value = value || 1;
  this.isPaused() ? this.playbackRate = value : (this.pause(), this.playbackRate = value, this.play());
}};
WaveSurfer.WebAudio.state = {};
WaveSurfer.WebAudio.state.playing = {init:function() {
  this.addOnAudioProcess();
}, getPlayedPercents:function() {
  var duration = this.getDuration();
  return this.getCurrentTime() / duration || 0;
}, getCurrentTime:function() {
  return this.startPosition + this.getPlayedTime();
}};
WaveSurfer.WebAudio.state.paused = {init:function() {
  this.removeOnAudioProcess();
}, getPlayedPercents:function() {
  var duration = this.getDuration();
  return this.getCurrentTime() / duration || 0;
}, getCurrentTime:function() {
  return this.startPosition;
}};
WaveSurfer.WebAudio.state.finished = {init:function() {
  this.removeOnAudioProcess();
  this.fireEvent("finish");
}, getPlayedPercents:function() {
  return 1;
}, getCurrentTime:function() {
  return this.getDuration();
}};
WaveSurfer.util.extend(WaveSurfer.WebAudio, WaveSurfer.Observer);
WaveSurfer.MediaElement = Object.create(WaveSurfer.WebAudio);
WaveSurfer.util.extend(WaveSurfer.MediaElement, {init:function(params) {
  this.params = params;
  this.media = {currentTime:0, duration:0, paused:!0, playbackRate:1, play:function() {
  }, pause:function() {
  }};
  this.mediaType = params.mediaType.toLowerCase();
  this.elementPosition = params.elementPosition;
  this.setPlaybackRate(this.params.audioRate);
  this.createTimer();
}, createTimer:function() {
  var my = this;
  var onAudioProcess = function() {
    if (!my.isPaused()) {
      my.fireEvent("audioprocess", my.getCurrentTime());
      var requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame;
      requestAnimationFrame(onAudioProcess);
    }
  };
  this.on("play", onAudioProcess);
}, load:function(url, container, peaks, preload) {
  var media = document.createElement(this.mediaType);
  media.controls = this.params.mediaControls;
  media.autoplay = this.params.autoplay || !1;
  media.preload = null == preload ? "auto" : preload;
  media.src = url;
  media.style.width = "100%";
  var prevMedia = container.querySelector(this.mediaType);
  prevMedia && container.removeChild(prevMedia);
  container.appendChild(media);
  this._load(media, peaks);
}, loadElt:function(elt, peaks) {
  var media = elt;
  media.controls = this.params.mediaControls;
  media.autoplay = this.params.autoplay || !1;
  this._load(media, peaks);
}, _load:function(media, peaks) {
  var my = this;
  "function" == typeof media.load && media.load();
  media.addEventListener("error", function() {
    my.fireEvent("error", "Error loading media element");
  });
  media.addEventListener("canplay", function() {
    my.fireEvent("canplay");
  });
  media.addEventListener("ended", function() {
    my.fireEvent("finish");
  });
  media.addEventListener("play", function() {
    my.fireEvent("play");
  });
  media.addEventListener("pause", function() {
    my.fireEvent("pause");
  });
  this.media = media;
  this.peaks = peaks;
  this.onPlayEnd = null;
  this.buffer = null;
  this.setPlaybackRate(this.playbackRate);
}, isPaused:function() {
  return !this.media || this.media.paused;
}, getDuration:function() {
  var duration = (this.buffer || this.media).duration;
  Infinity <= duration && (duration = this.media.seekable.end(0));
  return duration;
}, getCurrentTime:function() {
  return this.media && this.media.currentTime;
}, getPlayedPercents:function() {
  return this.getCurrentTime() / this.getDuration() || 0;
}, getPlaybackRate:function() {
  return this.playbackRate || this.media.playbackRate;
}, setPlaybackRate:function(value) {
  this.playbackRate = value || 1;
  this.media.playbackRate = this.playbackRate;
}, seekTo:function(start) {
  null != start && (this.media.currentTime = start);
  this.clearPlayEnd();
}, play:function(start, end) {
  this.seekTo(start);
  this.media.play();
  end && this.setPlayEnd(end);
}, pause:function() {
  this.media && this.media.pause();
  this.clearPlayEnd();
}, setPlayEnd:function(end) {
  var my = this;
  this.onPlayEnd = function(time) {
    time >= end && (my.pause(), my.seekTo(end));
  };
  this.on("audioprocess", this.onPlayEnd);
}, clearPlayEnd:function() {
  this.onPlayEnd && (this.un("audioprocess", this.onPlayEnd), this.onPlayEnd = null);
}, getPeaks:function(length, start, end) {
  return this.buffer ? WaveSurfer.WebAudio.getPeaks.call(this, length, start, end) : this.peaks || [];
}, getVolume:function() {
  return this.media.volume;
}, setVolume:function(val) {
  this.media.volume = val;
}, destroy:function() {
  this.pause();
  this.unAll();
  this.media && this.media.parentNode && this.media.parentNode.removeChild(this.media);
  this.media = null;
}});
WaveSurfer.AudioElement = WaveSurfer.MediaElement;
WaveSurfer.Drawer = {init:function(container, params) {
  this.container = container;
  this.params = params;
  this.width = 0;
  this.height = params.height * this.params.pixelRatio;
  this.lastPos = 0;
  this.initDrawer(params);
  this.createWrapper();
  this.createElements();
}, createWrapper:function() {
  this.wrapper = this.container.appendChild(document.createElement("wave"));
  this.style(this.wrapper, {display:"block", position:"relative", userSelect:"none", webkitUserSelect:"none", height:this.params.height + "px"});
  (this.params.fillParent || this.params.scrollParent) && this.style(this.wrapper, {width:"100%", overflowX:this.params.hideScrollbar ? "hidden" : "auto", overflowY:"hidden"});
  this.setupWrapperEvents();
}, handleEvent:function(e, noPrevent) {
  !noPrevent && e.preventDefault();
  var clientX = e.targetTouches ? e.targetTouches[0].clientX : e.clientX;
  var bbox = this.wrapper.getBoundingClientRect();
  var nominalWidth = this.width;
  var parentWidth = this.getWidth();
  if (!this.params.fillParent && nominalWidth < parentWidth) {
    var progress = (clientX - bbox.left) * this.params.pixelRatio / nominalWidth || 0;
    1 < progress && (progress = 1);
  } else {
    progress = (clientX - bbox.left + this.wrapper.scrollLeft) / this.wrapper.scrollWidth || 0;
  }
  return progress;
}, setupWrapperEvents:function() {
  var my = this;
  this.wrapper.addEventListener("click", function(e) {
    var scrollbarHeight = my.wrapper.offsetHeight - my.wrapper.clientHeight;
    if (0 != scrollbarHeight) {
      var bbox = my.wrapper.getBoundingClientRect();
      if (e.clientY >= bbox.bottom - scrollbarHeight) {
        return;
      }
    }
    my.params.interact && my.fireEvent("click", e, my.handleEvent(e));
  });
  this.wrapper.addEventListener("scroll", function(e) {
    my.fireEvent("scroll", e);
  });
}, drawPeaks:function(peaks, length, start, end) {
  this.setWidth(length) || this.clearWave();
  this.params.barWidth ? this.drawBars(peaks, 0, start, end) : this.drawWave(peaks, 0, start, end);
}, style:function(el, styles) {
  Object.keys(styles).forEach(function(prop) {
    el.style[prop] !== styles[prop] && (el.style[prop] = styles[prop]);
  });
  return el;
}, resetScroll:function() {
  null !== this.wrapper && (this.wrapper.scrollLeft = 0);
}, recenter:function(percent) {
  var position = this.wrapper.scrollWidth * percent;
  this.recenterOnPosition(position, !0);
}, recenterOnPosition:function(position, immediate) {
  var scrollLeft = this.wrapper.scrollLeft;
  var half = ~~(this.wrapper.clientWidth / 2);
  var target = position - half;
  var offset = target - scrollLeft;
  var maxScroll = this.wrapper.scrollWidth - this.wrapper.clientWidth;
  0 != maxScroll && (!immediate && -half <= offset && offset < half && (offset = Math.max(-5, Math.min(5, offset)), target = scrollLeft + offset), target = Math.max(0, Math.min(maxScroll, target)), target != scrollLeft && (this.wrapper.scrollLeft = target));
}, getScrollX:function() {
  return Math.round(this.wrapper.scrollLeft * this.params.pixelRatio);
}, getWidth:function() {
  return Math.round(this.container.clientWidth * this.params.pixelRatio);
}, setWidth:function(width) {
  if (this.width == width) {
    return !1;
  }
  this.width = width;
  this.params.fillParent || this.params.scrollParent ? this.style(this.wrapper, {width:""}) : this.style(this.wrapper, {width:~~(this.width / this.params.pixelRatio) + "px"});
  this.updateSize();
  return !0;
}, setHeight:function(height) {
  if (height == this.height) {
    return !1;
  }
  this.height = height;
  this.style(this.wrapper, {height:~~(this.height / this.params.pixelRatio) + "px"});
  this.updateSize();
  return !0;
}, progress:function(progress) {
  var minPxDelta = 1 / this.params.pixelRatio;
  var pos = Math.round(progress * this.width) * minPxDelta;
  if (pos < this.lastPos || pos - this.lastPos >= minPxDelta) {
    this.lastPos = pos;
    if (this.params.scrollParent && this.params.autoCenter) {
      var newPos = ~~(this.wrapper.scrollWidth * progress);
      this.recenterOnPosition(newPos);
    }
    this.updateProgress(pos);
  }
}, destroy:function() {
  this.unAll();
  this.wrapper && (this.wrapper.parentNode == this.container && this.container.removeChild(this.wrapper), this.wrapper = null);
}, initDrawer:function() {
}, createElements:function() {
}, updateSize:function() {
}, drawWave:function() {
}, clearWave:function() {
}, updateProgress:function() {
}};
WaveSurfer.util.extend(WaveSurfer.Drawer, WaveSurfer.Observer);
WaveSurfer.Drawer.Canvas = Object.create(WaveSurfer.Drawer);
WaveSurfer.util.extend(WaveSurfer.Drawer.Canvas, {createElements:function() {
  var waveCanvas = this.wrapper.appendChild(this.style(document.createElement("canvas"), {position:"absolute", zIndex:1, left:0, top:0, bottom:0, pointerEvents:"none"}));
  this.waveCc = waveCanvas.getContext("2d");
  this.progressWave = this.wrapper.appendChild(this.style(document.createElement("wave"), {position:"absolute", zIndex:2, left:0, top:0, bottom:0, overflow:"hidden", width:"0", display:"none", boxSizing:"border-box", borderRightStyle:"solid", borderRightWidth:this.params.cursorWidth + "px", borderRightColor:this.params.cursorColor, pointerEvents:"none"}));
  if (this.params.waveColor != this.params.progressColor) {
    var progressCanvas = this.progressWave.appendChild(document.createElement("canvas"));
    this.progressCc = progressCanvas.getContext("2d");
  }
}, updateSize:function() {
  var width = Math.round(this.width / this.params.pixelRatio);
  this.waveCc.canvas.width = this.width;
  this.waveCc.canvas.height = this.height;
  this.style(this.waveCc.canvas, {width:width + "px"});
  this.style(this.progressWave, {display:"block"});
  this.progressCc && (this.progressCc.canvas.width = this.width, this.progressCc.canvas.height = this.height, this.style(this.progressCc.canvas, {width:width + "px"}));
  this.clearWave();
}, clearWave:function() {
  this.waveCc.clearRect(0, 0, this.width, this.height);
  this.progressCc && this.progressCc.clearRect(0, 0, this.width, this.height);
}, drawBars:WaveSurfer.util.frame(function(peaks, channelIndex, start, end) {
  var my = this;
  if (peaks[0] instanceof Array) {
    var channels = peaks;
    if (this.params.splitChannels) {
      this.setHeight(channels.length * this.params.height * this.params.pixelRatio);
      channels.forEach(function(channelPeaks, i) {
        my.drawBars(channelPeaks, i, start, end);
      });
      return;
    }
    peaks = channels[0];
  }
  var hasMinVals = [].some.call(peaks, function(val) {
    return 0 > val;
  });
  var peakIndexScale = 1;
  hasMinVals && (peakIndexScale = 2);
  var $ = 0.5 / this.params.pixelRatio;
  var width = this.width;
  var height = this.params.height * this.params.pixelRatio;
  var offsetY = height * channelIndex || 0;
  var halfH = height / 2;
  var length = peaks.length / peakIndexScale;
  var bar = this.params.barWidth * this.params.pixelRatio;
  var gap = Math.max(this.params.pixelRatio, ~~(bar / 2));
  var step = bar + gap;
  var absmax = 1 / this.params.barHeight;
  if (this.params.normalize) {
    var max = WaveSurfer.util.max(peaks);
    var min = WaveSurfer.util.min(peaks);
    absmax = -min > max ? -min : max;
  }
  var scale = length / width;
  this.waveCc.fillStyle = this.params.waveColor;
  this.progressCc && (this.progressCc.fillStyle = this.params.progressColor);
  [this.waveCc, this.progressCc].forEach(function(cc) {
    if (cc) {
      for (var i = start / scale; i < end / scale; i += step) {
        var peak = peaks[Math.floor(i * scale * peakIndexScale)] || 0;
        var h = Math.round(peak / absmax * halfH);
        cc.fillRect(i + $, halfH - h + offsetY, bar + $, 2 * h);
      }
    }
  }, this);
}), drawWave:WaveSurfer.util.frame(function(peaks, channelIndex, start, end) {
  var my = this;
  if (peaks[0] instanceof Array) {
    var channels = peaks;
    if (this.params.splitChannels) {
      this.setHeight(channels.length * this.params.height * this.params.pixelRatio);
      channels.forEach(function(channelPeaks, i) {
        my.drawWave(channelPeaks, i, start, end);
      });
      return;
    }
    peaks = channels[0];
  }
  var hasMinValues = [].some.call(peaks, function(val) {
    return 0 > val;
  });
  if (!hasMinValues) {
    var reflectedPeaks = [];
    var i$jscomp$0 = 0;
    for (var len = peaks.length; i$jscomp$0 < len; i$jscomp$0++) {
      reflectedPeaks[2 * i$jscomp$0] = peaks[i$jscomp$0], reflectedPeaks[2 * i$jscomp$0 + 1] = -peaks[i$jscomp$0];
    }
    peaks = reflectedPeaks;
  }
  var $ = 0.5 / this.params.pixelRatio;
  var height = this.params.height * this.params.pixelRatio;
  var offsetY = height * channelIndex || 0;
  var halfH = height / 2;
  var length = ~~(peaks.length / 2);
  var scale = 1;
  this.params.fillParent && this.width != length && (scale = this.width / length);
  var absmax = 1 / this.params.barHeight;
  if (this.params.normalize) {
    var max = WaveSurfer.util.max(peaks);
    var min = WaveSurfer.util.min(peaks);
    absmax = -min > max ? -min : max;
  }
  this.waveCc.fillStyle = this.params.waveColor;
  this.progressCc && (this.progressCc.fillStyle = this.params.progressColor);
  [this.waveCc, this.progressCc].forEach(function(cc) {
    if (cc) {
      cc.beginPath();
      cc.moveTo(start * scale + $, halfH + offsetY);
      for (var i = start; i < end; i++) {
        var h = Math.round(peaks[2 * i] / absmax * halfH);
        cc.lineTo(i * scale + $, halfH - h + offsetY);
      }
      for (i = end - 1; i >= start; i--) {
        h = Math.round(peaks[2 * i + 1] / absmax * halfH), cc.lineTo(i * scale + $, halfH - h + offsetY);
      }
      cc.closePath();
      cc.fill();
      cc.fillRect(0, halfH + offsetY - $, this.width, $);
    }
  }, this);
}), updateProgress:function(pos) {
  this.style(this.progressWave, {width:pos + "px"});
}, getImage:function(type, quality) {
  return this.waveCc.canvas.toDataURL(type, quality);
}});
WaveSurfer.Drawer.MultiCanvas = Object.create(WaveSurfer.Drawer);
WaveSurfer.util.extend(WaveSurfer.Drawer.MultiCanvas, {initDrawer:function(params) {
  this.maxCanvasWidth = null != params.maxCanvasWidth ? params.maxCanvasWidth : 4000;
  this.maxCanvasElementWidth = Math.round(this.maxCanvasWidth / this.params.pixelRatio);
  if (1 >= this.maxCanvasWidth) {
    throw "maxCanvasWidth must be greater than 1.";
  }
  if (1 == this.maxCanvasWidth % 2) {
    throw "maxCanvasWidth must be an even number.";
  }
  this.hasProgressCanvas = this.params.waveColor != this.params.progressColor;
  this.halfPixel = 0.5 / this.params.pixelRatio;
  this.canvases = [];
}, createElements:function() {
  this.progressWave = this.wrapper.appendChild(this.style(document.createElement("wave"), {position:"absolute", zIndex:2, left:0, top:0, bottom:0, overflow:"hidden", width:"0", display:"none", boxSizing:"border-box", borderRightStyle:"solid", borderRightWidth:this.params.cursorWidth + "px", borderRightColor:this.params.cursorColor, pointerEvents:"none"}));
  this.addCanvas();
}, updateSize:function() {
  var totalWidth = Math.round(this.width / this.params.pixelRatio);
  for (var requiredCanvases = Math.ceil(totalWidth / this.maxCanvasElementWidth); this.canvases.length < requiredCanvases;) {
    this.addCanvas();
  }
  for (; this.canvases.length > requiredCanvases;) {
    this.removeCanvas();
  }
  this.canvases.forEach(function(entry, i) {
    var canvasWidth = this.maxCanvasWidth + 2 * Math.ceil(this.params.pixelRatio / 2);
    i == this.canvases.length - 1 && (canvasWidth = this.width - this.maxCanvasWidth * (this.canvases.length - 1));
    this.updateDimensions(entry, canvasWidth, this.height);
    this.clearWaveForEntry(entry);
  }, this);
}, addCanvas:function() {
  var entry = {};
  var leftOffset = this.maxCanvasElementWidth * this.canvases.length;
  entry.wave = this.wrapper.appendChild(this.style(document.createElement("canvas"), {position:"absolute", zIndex:1, left:leftOffset + "px", top:0, bottom:0, height:"100%", pointerEvents:"none"}));
  entry.waveCtx = entry.wave.getContext("2d");
  this.hasProgressCanvas && (entry.progress = this.progressWave.appendChild(this.style(document.createElement("canvas"), {position:"absolute", left:leftOffset + "px", top:0, bottom:0, height:"100%"})), entry.progressCtx = entry.progress.getContext("2d"));
  this.canvases.push(entry);
}, removeCanvas:function() {
  var lastEntry = this.canvases.pop();
  lastEntry.wave.parentElement.removeChild(lastEntry.wave);
  this.hasProgressCanvas && lastEntry.progress.parentElement.removeChild(lastEntry.progress);
}, updateDimensions:function(entry, width, height) {
  var elementWidth = Math.round(width / this.params.pixelRatio);
  var totalWidth = Math.round(this.width / this.params.pixelRatio);
  entry.start = entry.waveCtx.canvas.offsetLeft / totalWidth || 0;
  entry.end = entry.start + elementWidth / totalWidth;
  entry.waveCtx.canvas.width = width;
  entry.waveCtx.canvas.height = height;
  this.style(entry.waveCtx.canvas, {width:elementWidth + "px"});
  this.style(this.progressWave, {display:"block"});
  this.hasProgressCanvas && (entry.progressCtx.canvas.width = width, entry.progressCtx.canvas.height = height, this.style(entry.progressCtx.canvas, {width:elementWidth + "px"}));
}, clearWave:function() {
  this.canvases.forEach(function(entry) {
    this.clearWaveForEntry(entry);
  }, this);
}, clearWaveForEntry:function(entry) {
  entry.waveCtx.clearRect(0, 0, entry.waveCtx.canvas.width, entry.waveCtx.canvas.height);
  this.hasProgressCanvas && entry.progressCtx.clearRect(0, 0, entry.progressCtx.canvas.width, entry.progressCtx.canvas.height);
}, drawBars:WaveSurfer.util.frame(function(peaks, channelIndex, start, end) {
  if (peaks[0] instanceof Array) {
    var channels = peaks;
    if (this.params.splitChannels) {
      this.setHeight(channels.length * this.params.height * this.params.pixelRatio);
      channels.forEach(function(channelPeaks, i) {
        this.drawBars(channelPeaks, i, start, end);
      }, this);
      return;
    }
    peaks = channels[0];
  }
  var hasMinVals = [].some.call(peaks, function(val) {
    return 0 > val;
  });
  var peakIndexScale = 1;
  hasMinVals && (peakIndexScale = 2);
  var width = this.width;
  var height = this.params.height * this.params.pixelRatio;
  var offsetY = height * channelIndex || 0;
  var halfH = height / 2;
  var length = peaks.length / peakIndexScale;
  var bar = this.params.barWidth * this.params.pixelRatio;
  var gap = Math.max(this.params.pixelRatio, ~~(bar / 2));
  var step = bar + gap;
  var absmax = 1 / this.params.barHeight;
  if (this.params.normalize) {
    var max = WaveSurfer.util.max(peaks);
    var min = WaveSurfer.util.min(peaks);
    absmax = -min > max ? -min : max;
  }
  var scale = length / width;
  for (var i$jscomp$0 = start / scale; i$jscomp$0 < end / scale; i$jscomp$0 += step) {
    var peak = peaks[Math.floor(i$jscomp$0 * scale * peakIndexScale)] || 0;
    var h = Math.round(peak / absmax * halfH);
    this.fillRect(i$jscomp$0 + this.halfPixel, halfH - h + offsetY, bar + this.halfPixel, 2 * h);
  }
}), drawWave:WaveSurfer.util.frame(function(peaks, channelIndex, start, end) {
  if (peaks[0] instanceof Array) {
    var channels = peaks;
    if (this.params.splitChannels) {
      this.setHeight(channels.length * this.params.height * this.params.pixelRatio);
      channels.forEach(function(channelPeaks, i) {
        this.drawWave(channelPeaks, i, start, end);
      }, this);
      return;
    }
    peaks = channels[0];
  }
  var hasMinValues = [].some.call(peaks, function(val) {
    return 0 > val;
  });
  if (!hasMinValues) {
    var reflectedPeaks = [];
    var i$jscomp$0 = 0;
    for (var len = peaks.length; i$jscomp$0 < len; i$jscomp$0++) {
      reflectedPeaks[2 * i$jscomp$0] = peaks[i$jscomp$0], reflectedPeaks[2 * i$jscomp$0 + 1] = -peaks[i$jscomp$0];
    }
    peaks = reflectedPeaks;
  }
  var height = this.params.height * this.params.pixelRatio;
  var offsetY = height * channelIndex || 0;
  var halfH = height / 2;
  var absmax = 1 / this.params.barHeight;
  if (this.params.normalize) {
    var max = WaveSurfer.util.max(peaks);
    var min = WaveSurfer.util.min(peaks);
    absmax = -min > max ? -min : max;
  }
  this.drawLine(peaks, absmax, halfH, offsetY, start, end);
  this.fillRect(0, halfH + offsetY - this.halfPixel, this.width, this.halfPixel);
}), drawLine:function(peaks, absmax, halfH, offsetY, start, end) {
  this.canvases.forEach(function(entry) {
    this.setFillStyles(entry);
    this.drawLineToContext(entry, entry.waveCtx, peaks, absmax, halfH, offsetY, start, end);
    this.drawLineToContext(entry, entry.progressCtx, peaks, absmax, halfH, offsetY, start, end);
  }, this);
}, drawLineToContext:function(entry, ctx, peaks, absmax, halfH, offsetY, start, end) {
  if (ctx) {
    var length = peaks.length / 2;
    var scale = this.params.fillParent && this.width != length ? this.width / length : 1;
    var first = Math.round(length * entry.start);
    var last = Math.round(length * entry.end) + 1;
    if (!(first > end || last < start)) {
      var canvasStart = Math.max(first, start);
      var canvasEnd = Math.min(last, end);
      ctx.beginPath();
      ctx.moveTo((canvasStart - first) * scale + this.halfPixel, halfH + offsetY);
      for (var i = canvasStart; i < canvasEnd; i++) {
        var peak = peaks[2 * i] || 0;
        var h = Math.round(peak / absmax * halfH);
        ctx.lineTo((i - first) * scale + this.halfPixel, halfH - h + offsetY);
      }
      for (i = canvasEnd - 1; i >= canvasStart; i--) {
        peak = peaks[2 * i + 1] || 0, h = Math.round(peak / absmax * halfH), ctx.lineTo((i - first) * scale + this.halfPixel, halfH - h + offsetY);
      }
      ctx.closePath();
      ctx.fill();
    }
  }
}, fillRect:function(x, y, width, height) {
  var startCanvas = Math.floor(x / this.maxCanvasWidth);
  var endCanvas = Math.min(Math.ceil((x + width) / this.maxCanvasWidth) + 1, this.canvases.length);
  for (var i = startCanvas; i < endCanvas; i++) {
    var entry = this.canvases[i];
    var leftOffset = i * this.maxCanvasWidth;
    var intersection = {x1:Math.max(x, i * this.maxCanvasWidth), y1:y, x2:Math.min(x + width, i * this.maxCanvasWidth + entry.waveCtx.canvas.width), y2:y + height};
    intersection.x1 < intersection.x2 && (this.setFillStyles(entry), this.fillRectToContext(entry.waveCtx, intersection.x1 - leftOffset, intersection.y1, intersection.x2 - intersection.x1, intersection.y2 - intersection.y1), this.fillRectToContext(entry.progressCtx, intersection.x1 - leftOffset, intersection.y1, intersection.x2 - intersection.x1, intersection.y2 - intersection.y1));
  }
}, fillRectToContext:function(ctx, x, y, width, height) {
  ctx && ctx.fillRect(x, y, width, height);
}, setFillStyles:function(entry) {
  entry.waveCtx.fillStyle = this.params.waveColor;
  this.hasProgressCanvas && (entry.progressCtx.fillStyle = this.params.progressColor);
}, updateProgress:function(pos) {
  this.style(this.progressWave, {width:pos + "px"});
}, getImage:function(type, quality) {
  var availableCanvas = [];
  this.canvases.forEach(function(entry) {
    availableCanvas.push(entry.wave.toDataURL(type, quality));
  });
  return 1 < availableCanvas.length ? availableCanvas : availableCanvas[0];
}});
WaveSurfer.Drawer.SplitWavePointPlot = Object.create(WaveSurfer.Drawer.Canvas);
WaveSurfer.util.extend(WaveSurfer.Drawer.SplitWavePointPlot, {defaultPlotParams:{plotNormalizeTo:"whole", plotTimeStart:0, plotMin:0, plotMax:1, plotColor:"#f63", plotProgressColor:"#F00", plotPointHeight:2, plotPointWidth:2, plotSeparator:!0, plotSeparatorColor:"black", plotRangeDisplay:!1, plotRangeUnits:"", plotRangePrecision:4, plotRangeIgnoreOutliers:!1, plotRangeFontSize:12, plotRangeFontType:"Ariel", waveDrawMedianLine:!0, plotFileDelimiter:"\t"}, plotTimeStart:0, plotTimeEnd:-1, plotArrayLoaded:!1, 
plotArray:[], plotPoints:[], plotMin:0, plotMax:1, initDrawer:function(params) {
  var my = this;
  for (var paramName in this.defaultPlotParams) {
    void 0 === this.params[paramName] && (this.params[paramName] = this.defaultPlotParams[paramName]);
  }
  this.plotTimeStart = this.params.plotTimeStart;
  void 0 !== this.params.plotTimeEnd && (this.plotTimeEnd = this.params.plotTimeEnd);
  if (Array.isArray(params.plotArray)) {
    this.plotArray = params.plotArray, this.plotArrayLoaded = !0;
  } else {
    var onPlotArrayLoaded = function(plotArray) {
      my.plotArray = plotArray;
      my.plotArrayLoaded = !0;
      my.fireEvent("plot_array_loaded");
    };
    this.loadPlotArrayFromFile(params.plotFileUrl, onPlotArrayLoaded, this.params.plotFileDelimiter);
  }
}, drawPeaks:function(peaks, length, start, end) {
  if (1 == this.plotArrayLoaded) {
    this.setWidth(length), this.splitChannels = !0, this.params.height /= 2, peaks[0] instanceof Array && (peaks = peaks[0]), this.params.barWidth ? this.drawBars(peaks, 1, start, end) : this.drawWave(peaks, 1, start, end), this.params.height *= 2, this.calculatePlots(), this.drawPlots();
  } else {
    var my = this;
    my.on("plot-array-loaded", function() {
      my.drawPeaks(peaks, length, start, end);
    });
  }
}, drawPlots:function() {
  var height = this.params.height * this.params.pixelRatio / 2;
  var $ = 0.5 / this.params.pixelRatio;
  this.waveCc.fillStyle = this.params.plotColor;
  this.progressCc && (this.progressCc.fillStyle = this.params.plotProgressColor);
  for (var i in this.plotPoints) {
    var x = parseInt(i);
    var y = height - this.params.plotPointHeight - this.plotPoints[i] * (height - this.params.plotPointHeight);
    var pointHeight = this.params.plotPointHeight;
    this.waveCc.fillRect(x, y, this.params.plotPointWidth, pointHeight);
    this.progressCc && this.progressCc.fillRect(x, y, this.params.plotPointWidth, pointHeight);
  }
  this.params.plotSeparator && (this.waveCc.fillStyle = this.params.plotSeparatorColor, this.waveCc.fillRect(0, height, this.width, $));
  this.params.plotRangeDisplay && this.displayPlotRange();
}, displayPlotRange:function() {
  var fontSize = this.params.plotRangeFontSize * this.params.pixelRatio;
  var maxRange = this.plotMax.toPrecision(this.params.plotRangePrecision) + " " + this.params.plotRangeUnits;
  var minRange = this.plotMin.toPrecision(this.params.plotRangePrecision) + " " + this.params.plotRangeUnits;
  this.waveCc.font = fontSize.toString() + "px " + this.params.plotRangeFontType;
  this.waveCc.fillText(maxRange, 3, fontSize);
  this.waveCc.fillText(minRange, 3, this.height / 2);
}, calculatePlots:function() {
  this.plotPoints = {};
  this.calculatePlotTimeEnd();
  var pointsForAverage = [];
  var previousWaveIndex = -1;
  var maxPlot = 0;
  var minPlot = 99999999999999;
  var maxSegmentPlot = 0;
  var minSegmentPlot = 99999999999999;
  var duration = this.plotTimeEnd - this.plotTimeStart;
  for (var i = 0; i < this.plotArray.length; i++) {
    var dataPoint = this.plotArray[i];
    dataPoint.value > maxPlot && (maxPlot = dataPoint.value);
    dataPoint.value < minPlot && (minPlot = dataPoint.value);
    if (dataPoint.time >= this.plotTimeStart && dataPoint.time <= this.plotTimeEnd) {
      var waveIndex = Math.round(this.width * (dataPoint.time - this.plotTimeStart) / duration);
      pointsForAverage.push(dataPoint.value);
      if (waveIndex !== previousWaveIndex && 0 < pointsForAverage.length) {
        var avgPlot = this.avg(pointsForAverage);
        avgPlot > maxSegmentPlot && (maxSegmentPlot = avgPlot);
        avgPlot < minSegmentPlot && (minSegmentPlot = avgPlot);
        this.plotPoints[previousWaveIndex] = avgPlot;
        pointsForAverage = [];
      }
      previousWaveIndex = waveIndex;
    }
  }
  "whole" == this.params.plotNormalizeTo ? (this.plotMin = minPlot, this.plotMax = maxPlot) : "values" == this.params.plotNormalizeTo ? (this.plotMin = this.params.plotMin, this.plotMax = this.params.plotMax) : (this.plotMin = minSegmentPlot, this.plotMax = maxSegmentPlot);
  this.normalizeValues();
}, normalizeValues:function() {
  var normalizedValues = {};
  if ("none" !== this.params.plotNormalizeTo) {
    for (var i in this.plotPoints) {
      var normalizedValue = (this.plotPoints[i] - this.plotMin) / (this.plotMax - this.plotMin);
      1 < normalizedValue ? this.params.plotRangeIgnoreOutliers || (normalizedValues[i] = 1) : 0 > normalizedValue ? this.params.plotRangeIgnoreOutliers || (normalizedValues[i] = 0) : normalizedValues[i] = normalizedValue;
    }
    this.plotPoints = normalizedValues;
  }
}, loadPlotArrayFromFile:function(plotFileUrl, onSuccess, delimiter) {
  void 0 === delimiter && (delimiter = "\t");
  var plotArray = [];
  var options = {url:plotFileUrl, responseType:"text"};
  var fileAjax = WaveSurfer.util.ajax(options);
  fileAjax.on("load", function(data) {
    if (200 == data.currentTarget.status) {
      var plotLines = data.currentTarget.responseText.split("\n");
      for (var i = 0; i < plotLines.length; i++) {
        var plotParts = plotLines[i].split(delimiter);
        2 == plotParts.length && plotArray.push({time:parseFloat(plotParts[0]), value:parseFloat(plotParts[1])});
      }
      onSuccess(plotArray);
    }
  });
}, calculatePlotTimeEnd:function() {
  this.plotTimeEnd = void 0 !== this.params.plotTimeEnd ? this.params.plotTimeEnd : this.plotArray[this.plotArray.length - 1].time;
}, avg:function(values) {
  var sum = values.reduce(function(a, b) {
    return a + b;
  });
  return sum / values.length;
}});
WaveSurfer.util.extend(WaveSurfer.Drawer.SplitWavePointPlot, WaveSurfer.Observer);
WaveSurfer.PeakCache = {init:function() {
  this.clearPeakCache();
}, clearPeakCache:function() {
  this.peakCacheRanges = [];
  this.peakCacheLength = -1;
}, addRangeToPeakCache:function(length, start, end) {
  length != this.peakCacheLength && (this.clearPeakCache(), this.peakCacheLength = length);
  var uncachedRanges = [];
  for (var i = 0; i < this.peakCacheRanges.length && this.peakCacheRanges[i] < start;) {
    i++;
  }
  for (0 == i % 2 && uncachedRanges.push(start); i < this.peakCacheRanges.length && this.peakCacheRanges[i] <= end;) {
    uncachedRanges.push(this.peakCacheRanges[i]), i++;
  }
  0 == i % 2 && uncachedRanges.push(end);
  uncachedRanges = uncachedRanges.filter(function(item, pos, arr) {
    return 0 == pos ? item != arr[pos + 1] : pos == arr.length - 1 ? item != arr[pos - 1] : item != arr[pos - 1] && item != arr[pos + 1];
  });
  this.peakCacheRanges = this.peakCacheRanges.concat(uncachedRanges);
  this.peakCacheRanges = this.peakCacheRanges.sort(function(a, b) {
    return a - b;
  }).filter(function(item, pos, arr) {
    return 0 == pos ? item != arr[pos + 1] : pos == arr.length - 1 ? item != arr[pos - 1] : item != arr[pos - 1] && item != arr[pos + 1];
  });
  var uncachedRangePairs = [];
  for (i = 0; i < uncachedRanges.length; i += 2) {
    uncachedRangePairs.push([uncachedRanges[i], uncachedRanges[i + 1]]);
  }
  return uncachedRangePairs;
}, getCacheRanges:function() {
  var peakCacheRangePairs = [];
  for (var i = 0; i < this.peakCacheRanges.length; i += 2) {
    peakCacheRangePairs.push([this.peakCacheRanges[i], this.peakCacheRanges[i + 1]]);
  }
  return peakCacheRangePairs;
}};
(function() {
  var init = function() {
    var containers = document.querySelectorAll("wavesurfer");
    Array.prototype.forEach.call(containers, function(el) {
      var params = WaveSurfer.util.extend({container:el, backend:"MediaElement", mediaControls:!0}, el.dataset);
      el.style.display = "block";
      var wavesurfer = WaveSurfer.create(params);
      if (el.dataset.peaks) {
        var peaks = JSON.parse(el.dataset.peaks);
      }
      wavesurfer.load(el.dataset.url, peaks);
    });
  };
  "complete" === document.readyState ? init() : window.addEventListener("load", init);
})();
WaveSurfer.Regions = {init:function(wavesurfer) {
  this.wavesurfer = wavesurfer;
  this.wrapper = this.wavesurfer.drawer.wrapper;
  this.list = {};
}, add:function(params) {
  var region = Object.create(WaveSurfer.Region);
  region.init(params, this.wavesurfer);
  this.list[region.id] = region;
  region.on("remove", function() {
    delete this.list[region.id];
  }.bind(this));
  return region;
}, clear:function() {
  Object.keys(this.list).forEach(function(id) {
    this.list[id].remove();
  }, this);
}, enableDragSelection:function(params) {
  var my = this;
  var drag;
  var start;
  var region;
  var touchId;
  var slop = params.slop || 2;
  var pxMove = 0;
  var eventDown = function(e) {
    e.touches && 1 < e.touches.length || 0 < e.target.childElementCount || (touchId = e.targetTouches ? e.targetTouches[0].identifier : null, drag = !0, start = my.wavesurfer.drawer.handleEvent(e, !0), region = null);
  };
  this.wrapper.addEventListener("mousedown", eventDown);
  this.wrapper.addEventListener("touchstart", eventDown);
  this.on("disable-drag-selection", function() {
    my.wrapper.removeEventListener("touchstart", eventDown);
    my.wrapper.removeEventListener("mousedown", eventDown);
  });
  var eventUp = function(e) {
    e.touches && 1 < e.touches.length || (drag = !1, pxMove = 0, region && (region.fireEvent("update-end", e), my.wavesurfer.fireEvent("region-update-end", region, e)), region = null);
  };
  this.wrapper.addEventListener("mouseup", eventUp);
  this.wrapper.addEventListener("touchend", eventUp);
  this.on("disable-drag-selection", function() {
    my.wrapper.removeEventListener("touchend", eventUp);
    my.wrapper.removeEventListener("mouseup", eventUp);
  });
  var eventMove = function(e) {
    if (drag && !(++pxMove <= slop || e.touches && 1 < e.touches.length || e.targetTouches && e.targetTouches[0].identifier != touchId)) {
      region || (region = my.add(params || {}));
      var duration = my.wavesurfer.getDuration();
      var end = my.wavesurfer.drawer.handleEvent(e);
      region.update({start:Math.min(end * duration, start * duration), end:Math.max(end * duration, start * duration)});
    }
  };
  this.wrapper.addEventListener("mousemove", eventMove);
  this.wrapper.addEventListener("touchmove", eventMove);
  this.on("disable-drag-selection", function() {
    my.wrapper.removeEventListener("touchmove", eventMove);
    my.wrapper.removeEventListener("mousemove", eventMove);
  });
}, disableDragSelection:function() {
  this.fireEvent("disable-drag-selection");
}};
WaveSurfer.util.extend(WaveSurfer.Regions, WaveSurfer.Observer);
WaveSurfer.Region = {style:WaveSurfer.Drawer.style, init:function(params, wavesurfer) {
  this.wavesurfer = wavesurfer;
  this.wrapper = wavesurfer.drawer.wrapper;
  this.id = null == params.id ? WaveSurfer.util.getId() : params.id;
  this.start = Number(params.start) || 0;
  this.end = null == params.end ? this.start : Number(params.end);
  this.resize = void 0 === params.resize ? !0 : !!params.resize;
  this.drag = void 0 === params.drag ? !0 : !!params.drag;
  this.loop = !!params.loop;
  this.color = params.color || "rgba(0, 0, 0, 0.1)";
  this.data = params.data || {};
  this.attributes = params.attributes || {};
  this.maxLength = params.maxLength;
  this.minLength = params.minLength;
  null == params.end && (this.instant = !0);
  this.markerWidth = params.markerWidth || 4;
  this.bindInOut();
  this.render();
  this.onZoom = this.updateRender.bind(this);
  this.wavesurfer.on("zoom", this.onZoom);
  this.wavesurfer.fireEvent("region-created", this);
}, update:function(params) {
  null != params.start && (this.start = Number(params.start));
  null != params.end && (this.end = Number(params.end), this.instant = !1);
  null != params.loop && (this.loop = !!params.loop);
  null != params.color && (this.color = params.color);
  null != params.data && (this.data = params.data);
  null != params.resize && (this.resize = !!params.resize);
  null != params.drag && (this.drag = !!params.drag);
  null != params.maxLength && (this.maxLength = Number(params.maxLength));
  null != params.minLength && (this.minLength = Number(params.minLength));
  null != params.attributes && (this.attributes = params.attributes);
  this.updateRender();
  this.fireEvent("update");
  this.wavesurfer.fireEvent("region-updated", this);
}, remove:function() {
  this.element && (this.wrapper.removeChild(this.element), this.element = null, this.wavesurfer.un("zoom", this.onZoom), this.fireEvent("remove"), this.wavesurfer.fireEvent("region-removed", this));
}, play:function() {
  this.wavesurfer.play(this.start, this.end);
  this.fireEvent("play");
  this.wavesurfer.fireEvent("region-play", this);
}, playLoop:function() {
  this.play();
  this.once("out", this.playLoop.bind(this));
}, render:function() {
  var regionEl = document.createElement("region");
  regionEl.className = "wavesurfer-region";
  regionEl.title = this.formatTime(this.start, this.end);
  regionEl.setAttribute("data-id", this.id);
  for (var attrname in this.attributes) {
    regionEl.setAttribute("data-region-" + attrname, this.attributes[attrname]);
  }
  this.style(regionEl, {position:"absolute", zIndex:2, height:"100%", top:"0px"});
  if (this.resize) {
    var handleLeft = regionEl.appendChild(document.createElement("handle"));
    var handleRight = regionEl.appendChild(document.createElement("handle"));
    handleLeft.className = "wavesurfer-handle wavesurfer-handle-start";
    handleRight.className = "wavesurfer-handle wavesurfer-handle-end";
    var css = {cursor:"col-resize", position:"absolute", left:"0px", top:"0px", width:"1%", maxWidth:"4px", height:"100%"};
    this.style(handleLeft, css);
    this.style(handleRight, css);
    this.style(handleRight, {left:"100%"});
  }
  this.element = this.wrapper.appendChild(regionEl);
  this.updateRender();
  this.bindEvents(regionEl);
}, formatTime:function(start, end) {
  return (start == end ? [start] : [start, end]).map(function(time) {
    return [Math.floor(time % 3600 / 60), ("00" + Math.floor(time % 60)).slice(-2)].join(":");
  }).join("-");
}, getWidth:function() {
  return this.wavesurfer.drawer.width / this.wavesurfer.params.pixelRatio;
}, updateRender:function() {
  var dur = this.wavesurfer.getDuration();
  var width = this.getWidth();
  0 > this.start && (this.start = 0, this.end -= this.start);
  this.end > dur && (this.end = dur, this.start = dur - (this.end - this.start));
  null != this.minLength && (this.end = Math.max(this.start + this.minLength, this.end));
  null != this.maxLength && (this.end = Math.min(this.start + this.maxLength, this.end));
  if (null != this.element) {
    var left = this.start / dur * width;
    this.instant && (left -= this.markerWidth / 2, left = Math.max(left, 0), left = Math.min(left, width - this.markerWidth));
    left = Math.round(left);
    var regionWidth = this.instant ? this.markerWidth : Math.round(this.end / dur * width) - left;
    this.style(this.element, {left:left + "px", width:regionWidth + "px", backgroundColor:this.color, cursor:this.drag ? "move" : "default"});
    for (var attrname in this.attributes) {
      this.element.setAttribute("data-region-" + attrname, this.attributes[attrname]);
    }
    this.element.title = this.formatTime(this.start, this.end);
  }
}, bindInOut:function() {
  var my = this;
  my.firedIn = !1;
  my.firedOut = !1;
  var onProcess = function(time) {
    !my.firedOut && my.firedIn && (my.start >= Math.round(100 * time) / 100 || my.end <= Math.round(100 * time) / 100) && (my.firedOut = !0, my.firedIn = !1, my.fireEvent("out"), my.wavesurfer.fireEvent("region-out", my));
    !my.firedIn && my.start <= time && my.end > time && (my.firedIn = !0, my.firedOut = !1, my.fireEvent("in"), my.wavesurfer.fireEvent("region-in", my));
  };
  this.wavesurfer.backend.on("audioprocess", onProcess);
  this.on("remove", function() {
    my.wavesurfer.backend.un("audioprocess", onProcess);
  });
  this.on("out", function() {
    my.loop && my.wavesurfer.play(my.start);
  });
}, bindEvents:function() {
  var my = this;
  this.element.addEventListener("mouseenter", function(e) {
    my.fireEvent("mouseenter", e);
    my.wavesurfer.fireEvent("region-mouseenter", my, e);
  });
  this.element.addEventListener("mouseleave", function(e) {
    my.fireEvent("mouseleave", e);
    my.wavesurfer.fireEvent("region-mouseleave", my, e);
  });
  this.element.addEventListener("click", function(e) {
    e.preventDefault();
    my.fireEvent("click", e);
    my.wavesurfer.fireEvent("region-click", my, e);
  });
  this.element.addEventListener("dblclick", function(e) {
    e.stopPropagation();
    e.preventDefault();
    my.fireEvent("dblclick", e);
    my.wavesurfer.fireEvent("region-dblclick", my, e);
  });
  (this.drag || this.resize) && function() {
    var duration = my.wavesurfer.getDuration();
    var drag;
    var resize;
    var startTime;
    var touchId;
    var onDown = function(e) {
      e.touches && 1 < e.touches.length || (touchId = e.targetTouches ? e.targetTouches[0].identifier : null, e.stopPropagation(), startTime = my.wavesurfer.drawer.handleEvent(e, !0) * duration, "handle" == e.target.tagName.toLowerCase() ? resize = e.target.classList.contains("wavesurfer-handle-start") ? "start" : "end" : (drag = !0, resize = !1));
    };
    var onUp = function(e) {
      e.touches && 1 < e.touches.length || !drag && !resize || (drag = !1, resize = !1, my.fireEvent("update-end", e), my.wavesurfer.fireEvent("region-update-end", my, e));
    };
    var onMove = function(e) {
      if (!(e.touches && 1 < e.touches.length || e.targetTouches && e.targetTouches[0].identifier != touchId) && (drag || resize)) {
        var time = my.wavesurfer.drawer.handleEvent(e) * duration;
        var delta = time - startTime;
        startTime = time;
        if (my.drag && drag) {
          my.onDrag(delta);
        }
        if (my.resize && resize) {
          my.onResize(delta, resize);
        }
      }
    };
    my.element.addEventListener("mousedown", onDown);
    my.element.addEventListener("touchstart", onDown);
    my.wrapper.addEventListener("mousemove", onMove);
    my.wrapper.addEventListener("touchmove", onMove);
    document.body.addEventListener("mouseup", onUp);
    document.body.addEventListener("touchend", onUp);
    my.on("remove", function() {
      document.body.removeEventListener("mouseup", onUp);
      document.body.removeEventListener("touchend", onUp);
      my.wrapper.removeEventListener("mousemove", onMove);
      my.wrapper.removeEventListener("touchmove", onMove);
    });
    my.wavesurfer.on("destroy", function() {
      document.body.removeEventListener("mouseup", onUp);
      document.body.removeEventListener("touchend", onUp);
    });
  }();
}, onDrag:function(delta) {
  var maxEnd = this.wavesurfer.getDuration();
  this.end + delta > maxEnd || 0 > this.start + delta || this.update({start:this.start + delta, end:this.end + delta});
}, onResize:function(delta, direction) {
  "start" == direction ? this.update({start:Math.min(this.start + delta, this.end), end:Math.max(this.start + delta, this.end)}) : this.update({start:Math.min(this.end + delta, this.start), end:Math.max(this.end + delta, this.start)});
}};
WaveSurfer.util.extend(WaveSurfer.Region, WaveSurfer.Observer);
WaveSurfer.initRegions = function() {
  this.regions || (this.regions = Object.create(WaveSurfer.Regions), this.regions.init(this));
};
WaveSurfer.addRegion = function(options) {
  this.initRegions();
  return this.regions.add(options);
};
WaveSurfer.clearRegions = function() {
  this.regions && this.regions.clear();
};
WaveSurfer.enableDragSelection = function(options) {
  this.initRegions();
  this.regions.enableDragSelection(options);
};
WaveSurfer.disableDragSelection = function() {
  this.regions.disableDragSelection();
};

